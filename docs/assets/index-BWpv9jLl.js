(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity) fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy) fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous") fetchOpts.credentials = "omit";
    else fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
function getAugmentedNamespace(n) {
  if (n.__esModule) return n;
  var f = n.default;
  if (typeof f == "function") {
    var a2 = function a3() {
      if (this instanceof a3) {
        return Reflect.construct(f, arguments, this.constructor);
      }
      return f.apply(this, arguments);
    };
    a2.prototype = f.prototype;
  } else a2 = {};
  Object.defineProperty(a2, "__esModule", { value: true });
  Object.keys(n).forEach(function(k) {
    var d = Object.getOwnPropertyDescriptor(n, k);
    Object.defineProperty(a2, k, d.get ? d : {
      enumerable: true,
      get: function() {
        return n[k];
      }
    });
  });
  return a2;
}
var scrollToAnchor_1 = scrollToAnchor$1;
function scrollToAnchor$1(anchor, options) {
  if (anchor) {
    try {
      var el = document.querySelector(anchor);
      if (el) el.scrollIntoView(options);
    } catch (e2) {
    }
  }
}
var documentReady$1 = ready;
function ready(callback) {
  if (typeof document === "undefined") {
    throw new Error("document-ready only runs in the browser");
  }
  var state = document.readyState;
  if (state === "complete" || state === "interactive") {
    return setTimeout(callback, 0);
  }
  document.addEventListener("DOMContentLoaded", function onLoad2() {
    callback();
  });
}
assert$e.notEqual = notEqual;
assert$e.notOk = notOk;
assert$e.equal = equal;
assert$e.ok = assert$e;
var nanoassert$1 = assert$e;
function equal(a2, b, m) {
  assert$e(a2 == b, m);
}
function notEqual(a2, b, m) {
  assert$e(a2 != b, m);
}
function notOk(t, m) {
  assert$e(!t, m);
}
function assert$e(t, m) {
  if (!t) throw new Error(m || "AssertionError");
}
var assert$d = nanoassert$1;
var hasWindow = typeof window !== "undefined";
function createScheduler() {
  var scheduler2;
  if (hasWindow) {
    if (!window._nanoScheduler) window._nanoScheduler = new NanoScheduler(true);
    scheduler2 = window._nanoScheduler;
  } else {
    scheduler2 = new NanoScheduler();
  }
  return scheduler2;
}
function NanoScheduler(hasWindow2) {
  this.hasWindow = hasWindow2;
  this.hasIdle = this.hasWindow && window.requestIdleCallback;
  this.method = this.hasIdle ? window.requestIdleCallback.bind(window) : this.setTimeout;
  this.scheduled = false;
  this.queue = [];
}
NanoScheduler.prototype.push = function(cb) {
  assert$d.equal(typeof cb, "function", "nanoscheduler.push: cb should be type function");
  this.queue.push(cb);
  this.schedule();
};
NanoScheduler.prototype.schedule = function() {
  if (this.scheduled) return;
  this.scheduled = true;
  var self2 = this;
  this.method(function(idleDeadline) {
    var cb;
    while (self2.queue.length && idleDeadline.timeRemaining() > 0) {
      cb = self2.queue.shift();
      cb(idleDeadline);
    }
    self2.scheduled = false;
    if (self2.queue.length) self2.schedule();
  });
};
NanoScheduler.prototype.setTimeout = function(cb) {
  setTimeout(cb, 0, {
    timeRemaining: function() {
      return 1;
    }
  });
};
var nanoscheduler = createScheduler;
var scheduler = nanoscheduler();
var assert$c = nanoassert$1;
var perf;
nanotiming$3.disabled = true;
try {
  perf = window.performance;
  nanotiming$3.disabled = window.localStorage.DISABLE_NANOTIMING === "true" || !perf.mark;
} catch (e2) {
}
var browser$3 = nanotiming$3;
function nanotiming$3(name) {
  assert$c.equal(typeof name, "string", "nanotiming: name should be type string");
  if (nanotiming$3.disabled) return noop;
  var uuid = (perf.now() * 1e4).toFixed() % Number.MAX_SAFE_INTEGER;
  var startName = "start-" + uuid + "-" + name;
  perf.mark(startName);
  function end(cb) {
    var endName = "end-" + uuid + "-" + name;
    perf.mark(endName);
    scheduler.push(function() {
      var err = null;
      try {
        var measureName = name + " [" + uuid + "]";
        perf.measure(measureName, startName, endName);
        perf.clearMarks(startName);
        perf.clearMarks(endName);
      } catch (e2) {
        err = e2;
      }
      if (cb) cb(err, name);
    });
  }
  end.uuid = uuid;
  return end;
}
function noop(cb) {
  if (cb) {
    scheduler.push(function() {
      cb(new Error("nanotiming: performance API unavailable"));
    });
  }
}
var assert$b = nanoassert$1;
var trie$1 = Trie;
function Trie() {
  if (!(this instanceof Trie)) return new Trie();
  this.trie = { nodes: {} };
}
Trie.prototype.create = function(route) {
  assert$b.equal(typeof route, "string", "route should be a string");
  var routes = route.replace(/^\//, "").split("/");
  function createNode(index, trie2) {
    var thisRoute = has(routes, index) && routes[index];
    if (thisRoute === false) return trie2;
    var node = null;
    if (/^:|^\*/.test(thisRoute)) {
      if (!has(trie2.nodes, "$$")) {
        node = { nodes: {} };
        trie2.nodes.$$ = node;
      } else {
        node = trie2.nodes.$$;
      }
      if (thisRoute[0] === "*") {
        trie2.wildcard = true;
      }
      trie2.name = thisRoute.replace(/^:|^\*/, "");
    } else if (!has(trie2.nodes, thisRoute)) {
      node = { nodes: {} };
      trie2.nodes[thisRoute] = node;
    } else {
      node = trie2.nodes[thisRoute];
    }
    return createNode(index + 1, node);
  }
  return createNode(0, this.trie);
};
Trie.prototype.match = function(route) {
  assert$b.equal(typeof route, "string", "route should be a string");
  var routes = route.replace(/^\//, "").split("/");
  var params = {};
  function search(index, trie2) {
    if (trie2 === void 0) return void 0;
    var thisRoute = routes[index];
    if (thisRoute === void 0) return trie2;
    if (has(trie2.nodes, thisRoute)) {
      return search(index + 1, trie2.nodes[thisRoute]);
    } else if (trie2.name) {
      try {
        params[trie2.name] = decodeURIComponent(thisRoute);
      } catch (e2) {
        return search(index, void 0);
      }
      return search(index + 1, trie2.nodes.$$);
    } else if (trie2.wildcard) {
      try {
        params.wildcard = decodeURIComponent(routes.slice(index).join("/"));
      } catch (e2) {
        return search(index, void 0);
      }
      return trie2.nodes.$$;
    } else {
      return search(index + 1);
    }
  }
  var node = search(0, this.trie);
  if (!node) return void 0;
  node = Object.assign({}, node);
  node.params = params;
  return node;
};
Trie.prototype.mount = function(route, trie2) {
  assert$b.equal(typeof route, "string", "route should be a string");
  assert$b.equal(typeof trie2, "object", "trie should be a object");
  var split = route.replace(/^\//, "").split("/");
  var node = null;
  var key = null;
  if (split.length === 1) {
    key = split[0];
    node = this.create(key);
  } else {
    var head = split.join("/");
    key = split[0];
    node = this.create(head);
  }
  Object.assign(node.nodes, trie2.nodes);
  if (trie2.name) node.name = trie2.name;
  if (node.nodes[""]) {
    Object.keys(node.nodes[""]).forEach(function(key2) {
      if (key2 === "nodes") return;
      node[key2] = node.nodes[""][key2];
    });
    Object.assign(node.nodes, node.nodes[""].nodes);
    delete node.nodes[""].nodes;
  }
};
function has(object, property) {
  return Object.prototype.hasOwnProperty.call(object, property);
}
var assert$a = nanoassert$1;
var trie = trie$1;
var wayfarer$1 = Wayfarer;
function Wayfarer(dft) {
  if (!(this instanceof Wayfarer)) return new Wayfarer(dft);
  var _default = (dft || "").replace(/^\//, "");
  var _trie = trie();
  emit._trie = _trie;
  emit.on = on;
  emit.emit = emit;
  emit.match = match;
  emit._wayfarer = true;
  return emit;
  function on(route, cb) {
    assert$a.equal(typeof route, "string");
    assert$a.equal(typeof cb, "function");
    route = route || "/";
    if (cb._wayfarer && cb._trie) {
      _trie.mount(route, cb._trie.trie);
    } else {
      var node = _trie.create(route);
      node.cb = cb;
      node.route = route;
    }
    return emit;
  }
  function emit(route) {
    var matched = match(route);
    var args = new Array(arguments.length);
    args[0] = matched.params;
    for (var i = 1; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return matched.cb.apply(matched.cb, args);
  }
  function match(route) {
    assert$a.notEqual(route, void 0, "'route' must be defined");
    var matched = _trie.match(route);
    if (matched && matched.cb) return new Route(matched);
    var dft2 = _trie.match(_default);
    if (dft2 && dft2.cb) return new Route(dft2);
    throw new Error("route '" + route + "' did not match");
  }
  function Route(matched) {
    this.cb = matched.cb;
    this.route = matched.route;
    this.params = matched.params;
  }
}
var assert$9 = nanoassert$1;
var wayfarer = wayfarer$1;
var isLocalFile = /file:\/\//.test(
  typeof window === "object" && window.location && window.location.origin
);
var electron = "^(file://|/)(.*.html?/?)?";
var protocol = "^(http(s)?(://))?(www.)?";
var domain = "[a-zA-Z0-9-_.]+(:[0-9]{1,5})?(/{1})?";
var qs$1 = "[?].*$";
var stripElectron = new RegExp(electron);
var prefix = new RegExp(protocol + domain);
var normalize = new RegExp("#");
var suffix$1 = new RegExp(qs$1);
var nanorouter$1 = Nanorouter;
function Nanorouter(opts) {
  if (!(this instanceof Nanorouter)) return new Nanorouter(opts);
  opts = opts || {};
  this.router = wayfarer(opts.default || "/404");
}
Nanorouter.prototype.on = function(routename, listener) {
  assert$9.equal(typeof routename, "string");
  routename = routename.replace(/^[#/]/, "");
  this.router.on(routename, listener);
};
Nanorouter.prototype.emit = function(routename) {
  assert$9.equal(typeof routename, "string");
  routename = pathname(routename, isLocalFile);
  return this.router.emit(routename);
};
Nanorouter.prototype.match = function(routename) {
  assert$9.equal(typeof routename, "string");
  routename = pathname(routename, isLocalFile);
  return this.router.match(routename);
};
function pathname(routename, isElectron) {
  if (isElectron) routename = routename.replace(stripElectron, "");
  else routename = routename.replace(prefix, "");
  return decodeURI(routename.replace(suffix$1, "").replace(normalize, "/"));
}
var events$2 = [
  // attribute events (can be set with attributes)
  "onclick",
  "ondblclick",
  "onmousedown",
  "onmouseup",
  "onmouseover",
  "onmousemove",
  "onmouseout",
  "onmouseenter",
  "onmouseleave",
  "ontouchcancel",
  "ontouchend",
  "ontouchmove",
  "ontouchstart",
  "ondragstart",
  "ondrag",
  "ondragenter",
  "ondragleave",
  "ondragover",
  "ondrop",
  "ondragend",
  "onkeydown",
  "onkeypress",
  "onkeyup",
  "onunload",
  "onabort",
  "onerror",
  "onresize",
  "onscroll",
  "onselect",
  "onchange",
  "onsubmit",
  "onreset",
  "onfocus",
  "onblur",
  "oninput",
  "onanimationend",
  "onanimationiteration",
  "onanimationstart",
  // other common events
  "oncontextmenu",
  "onfocusin",
  "onfocusout"
];
var events$1 = events$2;
var eventsLength = events$1.length;
var ELEMENT_NODE = 1;
var TEXT_NODE$1 = 3;
var COMMENT_NODE = 8;
var morph_1 = morph$2;
function morph$2(newNode, oldNode) {
  var nodeType = newNode.nodeType;
  var nodeName = newNode.nodeName;
  if (nodeType === ELEMENT_NODE) {
    copyAttrs(newNode, oldNode);
  }
  if (nodeType === TEXT_NODE$1 || nodeType === COMMENT_NODE) {
    if (oldNode.nodeValue !== newNode.nodeValue) {
      oldNode.nodeValue = newNode.nodeValue;
    }
  }
  if (nodeName === "INPUT") updateInput(newNode, oldNode);
  else if (nodeName === "OPTION") updateOption(newNode, oldNode);
  else if (nodeName === "TEXTAREA") updateTextarea(newNode, oldNode);
  copyEvents(newNode, oldNode);
}
function copyAttrs(newNode, oldNode) {
  var oldAttrs = oldNode.attributes;
  var newAttrs = newNode.attributes;
  var attrNamespaceURI = null;
  var attrValue = null;
  var fromValue = null;
  var attrName = null;
  var attr = null;
  for (var i = newAttrs.length - 1; i >= 0; --i) {
    attr = newAttrs[i];
    attrName = attr.name;
    attrNamespaceURI = attr.namespaceURI;
    attrValue = attr.value;
    if (attrNamespaceURI) {
      attrName = attr.localName || attrName;
      fromValue = oldNode.getAttributeNS(attrNamespaceURI, attrName);
      if (fromValue !== attrValue) {
        oldNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);
      }
    } else {
      if (!oldNode.hasAttribute(attrName)) {
        oldNode.setAttribute(attrName, attrValue);
      } else {
        fromValue = oldNode.getAttribute(attrName);
        if (fromValue !== attrValue) {
          if (attrValue === "null" || attrValue === "undefined") {
            oldNode.removeAttribute(attrName);
          } else {
            oldNode.setAttribute(attrName, attrValue);
          }
        }
      }
    }
  }
  for (var j = oldAttrs.length - 1; j >= 0; --j) {
    attr = oldAttrs[j];
    if (attr.specified !== false) {
      attrName = attr.name;
      attrNamespaceURI = attr.namespaceURI;
      if (attrNamespaceURI) {
        attrName = attr.localName || attrName;
        if (!newNode.hasAttributeNS(attrNamespaceURI, attrName)) {
          oldNode.removeAttributeNS(attrNamespaceURI, attrName);
        }
      } else {
        if (!newNode.hasAttributeNS(null, attrName)) {
          oldNode.removeAttribute(attrName);
        }
      }
    }
  }
}
function copyEvents(newNode, oldNode) {
  for (var i = 0; i < eventsLength; i++) {
    var ev = events$1[i];
    if (newNode[ev]) {
      oldNode[ev] = newNode[ev];
    } else if (oldNode[ev]) {
      oldNode[ev] = void 0;
    }
  }
}
function updateOption(newNode, oldNode) {
  updateAttribute(newNode, oldNode, "selected");
}
function updateInput(newNode, oldNode) {
  var newValue = newNode.value;
  var oldValue = oldNode.value;
  updateAttribute(newNode, oldNode, "checked");
  updateAttribute(newNode, oldNode, "disabled");
  if (newNode.indeterminate !== oldNode.indeterminate) {
    oldNode.indeterminate = newNode.indeterminate;
  }
  if (oldNode.type === "file") return;
  if (newValue !== oldValue) {
    oldNode.setAttribute("value", newValue);
    oldNode.value = newValue;
  }
  if (newValue === "null") {
    oldNode.value = "";
    oldNode.removeAttribute("value");
  }
  if (!newNode.hasAttributeNS(null, "value")) {
    oldNode.removeAttribute("value");
  } else if (oldNode.type === "range") {
    oldNode.value = newValue;
  }
}
function updateTextarea(newNode, oldNode) {
  var newValue = newNode.value;
  if (newValue !== oldNode.value) {
    oldNode.value = newValue;
  }
  if (oldNode.firstChild && oldNode.firstChild.nodeValue !== newValue) {
    if (newValue === "" && oldNode.firstChild.nodeValue === oldNode.placeholder) {
      return;
    }
    oldNode.firstChild.nodeValue = newValue;
  }
}
function updateAttribute(newNode, oldNode, name) {
  if (newNode[name] !== oldNode[name]) {
    oldNode[name] = newNode[name];
    if (newNode[name]) {
      oldNode.setAttribute(name, "");
    } else {
      oldNode.removeAttribute(name);
    }
  }
}
var assert$8 = nanoassert$1;
var morph$1 = morph_1;
var TEXT_NODE = 3;
var nanomorph_1 = nanomorph$1;
function nanomorph$1(oldTree, newTree, options) {
  assert$8.equal(typeof oldTree, "object", "nanomorph: oldTree should be an object");
  assert$8.equal(typeof newTree, "object", "nanomorph: newTree should be an object");
  if (options && options.childrenOnly) {
    updateChildren(newTree, oldTree);
    return oldTree;
  }
  assert$8.notEqual(
    newTree.nodeType,
    11,
    "nanomorph: newTree should have one root node (which is not a DocumentFragment)"
  );
  return walk(newTree, oldTree);
}
function walk(newNode, oldNode) {
  if (!oldNode) {
    return newNode;
  } else if (!newNode) {
    return null;
  } else if (newNode.isSameNode && newNode.isSameNode(oldNode)) {
    return oldNode;
  } else if (newNode.tagName !== oldNode.tagName || getComponentId(newNode) !== getComponentId(oldNode)) {
    return newNode;
  } else {
    morph$1(newNode, oldNode);
    updateChildren(newNode, oldNode);
    return oldNode;
  }
}
function getComponentId(node) {
  return node.dataset ? node.dataset.nanomorphComponentId : void 0;
}
function updateChildren(newNode, oldNode) {
  var oldChild, newChild, morphed, oldMatch;
  var offset = 0;
  for (var i = 0; ; i++) {
    oldChild = oldNode.childNodes[i];
    newChild = newNode.childNodes[i - offset];
    if (!oldChild && !newChild) {
      break;
    } else if (!newChild) {
      oldNode.removeChild(oldChild);
      i--;
    } else if (!oldChild) {
      oldNode.appendChild(newChild);
      offset++;
    } else if (same(newChild, oldChild)) {
      morphed = walk(newChild, oldChild);
      if (morphed !== oldChild) {
        oldNode.replaceChild(morphed, oldChild);
        offset++;
      }
    } else {
      oldMatch = null;
      for (var j = i; j < oldNode.childNodes.length; j++) {
        if (same(oldNode.childNodes[j], newChild)) {
          oldMatch = oldNode.childNodes[j];
          break;
        }
      }
      if (oldMatch) {
        morphed = walk(newChild, oldMatch);
        if (morphed !== oldMatch) offset++;
        oldNode.insertBefore(morphed, oldChild);
      } else if (!newChild.id && !oldChild.id) {
        morphed = walk(newChild, oldChild);
        if (morphed !== oldChild) {
          oldNode.replaceChild(morphed, oldChild);
          offset++;
        }
      } else {
        oldNode.insertBefore(newChild, oldChild);
        offset++;
      }
    }
  }
}
function same(a2, b) {
  if (a2.id) return a2.id === b.id;
  if (a2.isSameNode) return a2.isSameNode(b);
  if (a2.tagName !== b.tagName) return false;
  if (a2.type === TEXT_NODE) return a2.nodeValue === b.nodeValue;
  return false;
}
var reg = /([^?=&]+)(=([^&]*))?/g;
var assert$7 = nanoassert$1;
var browser$2 = qs;
function qs(url) {
  assert$7.equal(typeof url, "string", "nanoquery: url should be type string");
  var obj = {};
  url.replace(/^.*\?/, "").replace(reg, function(a0, a1, a2, a3) {
    var value = decodeURIComponent(a3);
    var key = decodeURIComponent(a1);
    if (obj.hasOwnProperty(key)) {
      if (Array.isArray(obj[key])) obj[key].push(value);
      else obj[key] = [obj[key], value];
    } else {
      obj[key] = value;
    }
  });
  return obj;
}
var assert$6 = nanoassert$1;
var safeExternalLink = /(noopener|noreferrer) (noopener|noreferrer)/;
var protocolLink = /^[\w-_]+:/;
var nanohref$1 = href;
function href(cb, root2) {
  assert$6.notEqual(typeof window, "undefined", "nanohref: expected window to exist");
  root2 = root2 || window.document;
  assert$6.equal(typeof cb, "function", "nanohref: cb should be type function");
  assert$6.equal(typeof root2, "object", "nanohref: root should be type object");
  window.addEventListener("click", function(e2) {
    if (e2.button && e2.button !== 0 || e2.ctrlKey || e2.metaKey || e2.altKey || e2.shiftKey || e2.defaultPrevented) return;
    var anchor = function traverse(node) {
      if (!node || node === root2) return;
      if (node.localName !== "a" || node.href === void 0) {
        return traverse(node.parentNode);
      }
      return node;
    }(e2.target);
    if (!anchor) return;
    if (window.location.protocol !== anchor.protocol || window.location.hostname !== anchor.hostname || window.location.port !== anchor.port || anchor.hasAttribute("data-nanohref-ignore") || anchor.hasAttribute("download") || anchor.getAttribute("target") === "_blank" && safeExternalLink.test(anchor.getAttribute("rel")) || protocolLink.test(anchor.getAttribute("href"))) return;
    e2.preventDefault();
    cb(anchor);
  });
}
var assert$5 = nanoassert$1;
var nanoraf_1 = nanoraf$1;
function nanoraf$1(render, raf2) {
  assert$5.equal(typeof render, "function", "nanoraf: render should be a function");
  assert$5.ok(typeof raf2 === "function" || typeof raf2 === "undefined", "nanoraf: raf should be a function or undefined");
  if (!raf2) raf2 = window.requestAnimationFrame;
  var redrawScheduled = false;
  var args = null;
  return function frame() {
    if (args === null && !redrawScheduled) {
      redrawScheduled = true;
      raf2(function redraw() {
        redrawScheduled = false;
        var length = args.length;
        var _args = new Array(length);
        for (var i = 0; i < length; i++) _args[i] = args[i];
        render.apply(render, _args);
        args = null;
      });
    }
    args = arguments;
  };
}
var removeArrayItems = function removeItems(arr, startIdx, removeCount) {
  var i, length = arr.length;
  if (startIdx >= length || removeCount === 0) {
    return;
  }
  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;
  var len = length - removeCount;
  for (i = startIdx; i < len; ++i) {
    arr[i] = arr[i + removeCount];
  }
  arr.length = len;
};
var splice = removeArrayItems;
var nanotiming$2 = browser$3;
var assert$4 = nanoassert$1;
var nanobus$1 = Nanobus;
function Nanobus(name) {
  if (!(this instanceof Nanobus)) return new Nanobus(name);
  this._name = name || "nanobus";
  this._starListeners = [];
  this._listeners = {};
}
Nanobus.prototype.emit = function(eventName) {
  assert$4.ok(typeof eventName === "string" || typeof eventName === "symbol", "nanobus.emit: eventName should be type string or symbol");
  var data = [];
  for (var i = 1, len = arguments.length; i < len; i++) {
    data.push(arguments[i]);
  }
  var emitTiming = nanotiming$2(this._name + "('" + eventName.toString() + "')");
  var listeners = this._listeners[eventName];
  if (listeners && listeners.length > 0) {
    this._emit(this._listeners[eventName], data);
  }
  if (this._starListeners.length > 0) {
    this._emit(this._starListeners, eventName, data, emitTiming.uuid);
  }
  emitTiming();
  return this;
};
Nanobus.prototype.on = Nanobus.prototype.addListener = function(eventName, listener) {
  assert$4.ok(typeof eventName === "string" || typeof eventName === "symbol", "nanobus.on: eventName should be type string or symbol");
  assert$4.equal(typeof listener, "function", "nanobus.on: listener should be type function");
  if (eventName === "*") {
    this._starListeners.push(listener);
  } else {
    if (!this._listeners[eventName]) this._listeners[eventName] = [];
    this._listeners[eventName].push(listener);
  }
  return this;
};
Nanobus.prototype.prependListener = function(eventName, listener) {
  assert$4.ok(typeof eventName === "string" || typeof eventName === "symbol", "nanobus.prependListener: eventName should be type string or symbol");
  assert$4.equal(typeof listener, "function", "nanobus.prependListener: listener should be type function");
  if (eventName === "*") {
    this._starListeners.unshift(listener);
  } else {
    if (!this._listeners[eventName]) this._listeners[eventName] = [];
    this._listeners[eventName].unshift(listener);
  }
  return this;
};
Nanobus.prototype.once = function(eventName, listener) {
  assert$4.ok(typeof eventName === "string" || typeof eventName === "symbol", "nanobus.once: eventName should be type string or symbol");
  assert$4.equal(typeof listener, "function", "nanobus.once: listener should be type function");
  var self2 = this;
  this.on(eventName, once);
  function once() {
    listener.apply(self2, arguments);
    self2.removeListener(eventName, once);
  }
  return this;
};
Nanobus.prototype.prependOnceListener = function(eventName, listener) {
  assert$4.ok(typeof eventName === "string" || typeof eventName === "symbol", "nanobus.prependOnceListener: eventName should be type string or symbol");
  assert$4.equal(typeof listener, "function", "nanobus.prependOnceListener: listener should be type function");
  var self2 = this;
  this.prependListener(eventName, once);
  function once() {
    listener.apply(self2, arguments);
    self2.removeListener(eventName, once);
  }
  return this;
};
Nanobus.prototype.removeListener = function(eventName, listener) {
  assert$4.ok(typeof eventName === "string" || typeof eventName === "symbol", "nanobus.removeListener: eventName should be type string or symbol");
  assert$4.equal(typeof listener, "function", "nanobus.removeListener: listener should be type function");
  if (eventName === "*") {
    this._starListeners = this._starListeners.slice();
    return remove(this._starListeners, listener);
  } else {
    if (typeof this._listeners[eventName] !== "undefined") {
      this._listeners[eventName] = this._listeners[eventName].slice();
    }
    return remove(this._listeners[eventName], listener);
  }
  function remove(arr, listener2) {
    if (!arr) return;
    var index = arr.indexOf(listener2);
    if (index !== -1) {
      splice(arr, index, 1);
      return true;
    }
  }
};
Nanobus.prototype.removeAllListeners = function(eventName) {
  if (eventName) {
    if (eventName === "*") {
      this._starListeners = [];
    } else {
      this._listeners[eventName] = [];
    }
  } else {
    this._starListeners = [];
    this._listeners = {};
  }
  return this;
};
Nanobus.prototype.listeners = function(eventName) {
  var listeners = eventName !== "*" ? this._listeners[eventName] : this._starListeners;
  var ret = [];
  if (listeners) {
    var ilength = listeners.length;
    for (var i = 0; i < ilength; i++) ret.push(listeners[i]);
  }
  return ret;
};
Nanobus.prototype._emit = function(arr, eventName, data, uuid) {
  if (typeof arr === "undefined") return;
  if (arr.length === 0) return;
  if (data === void 0) {
    data = eventName;
    eventName = null;
  }
  if (eventName) {
    if (uuid !== void 0) {
      data = [eventName].concat(data, uuid);
    } else {
      data = [eventName].concat(data);
    }
  }
  var length = arr.length;
  for (var i = 0; i < length; i++) {
    var listener = arr[i];
    listener.apply(listener, data);
  }
};
var nanolru = LRU$1;
function LRU$1(opts) {
  if (!(this instanceof LRU$1)) return new LRU$1(opts);
  if (typeof opts === "number") opts = { max: opts };
  if (!opts) opts = {};
  this.cache = {};
  this.head = this.tail = null;
  this.length = 0;
  this.max = opts.max || 1e3;
  this.maxAge = opts.maxAge || 0;
}
Object.defineProperty(LRU$1.prototype, "keys", {
  get: function() {
    return Object.keys(this.cache);
  }
});
LRU$1.prototype.clear = function() {
  this.cache = {};
  this.head = this.tail = null;
  this.length = 0;
};
LRU$1.prototype.remove = function(key) {
  if (typeof key !== "string") key = "" + key;
  if (!this.cache.hasOwnProperty(key)) return;
  var element = this.cache[key];
  delete this.cache[key];
  this._unlink(key, element.prev, element.next);
  return element.value;
};
LRU$1.prototype._unlink = function(key, prev, next) {
  this.length--;
  if (this.length === 0) {
    this.head = this.tail = null;
  } else {
    if (this.head === key) {
      this.head = prev;
      this.cache[this.head].next = null;
    } else if (this.tail === key) {
      this.tail = next;
      this.cache[this.tail].prev = null;
    } else {
      this.cache[prev].next = next;
      this.cache[next].prev = prev;
    }
  }
};
LRU$1.prototype.peek = function(key) {
  if (!this.cache.hasOwnProperty(key)) return;
  var element = this.cache[key];
  if (!this._checkAge(key, element)) return;
  return element.value;
};
LRU$1.prototype.set = function(key, value) {
  if (typeof key !== "string") key = "" + key;
  var element;
  if (this.cache.hasOwnProperty(key)) {
    element = this.cache[key];
    element.value = value;
    if (this.maxAge) element.modified = Date.now();
    if (key === this.head) return value;
    this._unlink(key, element.prev, element.next);
  } else {
    element = { value, modified: 0, next: null, prev: null };
    if (this.maxAge) element.modified = Date.now();
    this.cache[key] = element;
    if (this.length === this.max) this.evict();
  }
  this.length++;
  element.next = null;
  element.prev = this.head;
  if (this.head) this.cache[this.head].next = key;
  this.head = key;
  if (!this.tail) this.tail = key;
  return value;
};
LRU$1.prototype._checkAge = function(key, element) {
  if (this.maxAge && Date.now() - element.modified > this.maxAge) {
    this.remove(key);
    return false;
  }
  return true;
};
LRU$1.prototype.get = function(key) {
  if (typeof key !== "string") key = "" + key;
  if (!this.cache.hasOwnProperty(key)) return;
  var element = this.cache[key];
  if (!this._checkAge(key, element)) return;
  if (this.head !== key) {
    if (key === this.tail) {
      this.tail = element.next;
      this.cache[this.tail].prev = null;
    } else {
      this.cache[element.prev].next = element.next;
    }
    this.cache[element.next].prev = element.prev;
    this.cache[this.head].next = key;
    element.prev = this.head;
    element.next = null;
    this.head = key;
  }
  return element.value;
};
LRU$1.prototype.evict = function() {
  if (!this.tail) return;
  this.remove(this.tail);
};
var assert$3 = nanoassert$1;
var LRU = nanolru;
var cache = ChooComponentCache;
function ChooComponentCache(state, emit, lru) {
  assert$3.ok(this instanceof ChooComponentCache, "ChooComponentCache should be created with `new`");
  assert$3.equal(typeof state, "object", "ChooComponentCache: state should be type object");
  assert$3.equal(typeof emit, "function", "ChooComponentCache: emit should be type function");
  if (typeof lru === "number") this.cache = new LRU(lru);
  else this.cache = lru || new LRU(100);
  this.state = state;
  this.emit = emit;
}
ChooComponentCache.prototype.render = function(Component2, id) {
  assert$3.equal(typeof Component2, "function", "ChooComponentCache.render: Component should be type function");
  assert$3.ok(typeof id === "string" || typeof id === "number", "ChooComponentCache.render: id should be type string or type number");
  var el = this.cache.get(id);
  if (!el) {
    var args = [];
    for (var i = 2, len = arguments.length; i < len; i++) {
      args.push(arguments[i]);
    }
    args.unshift(Component2, id, this.state, this.emit);
    el = newCall.apply(newCall, args);
    this.cache.set(id, el);
  }
  return el;
};
function newCall(Cls) {
  return new (Cls.bind.apply(Cls, arguments))();
}
var scrollToAnchor = scrollToAnchor_1;
var documentReady = documentReady$1;
var nanotiming$1 = browser$3;
var nanorouter = nanorouter$1;
var nanomorph = nanomorph_1;
var nanoquery = browser$2;
var nanohref = nanohref$1;
var nanoraf = nanoraf_1;
var nanobus = nanobus$1;
var assert$2 = nanoassert$1;
var Cache = cache;
var choo = Choo;
var HISTORY_OBJECT = {};
function Choo(opts) {
  var timing = nanotiming$1("choo.constructor");
  if (!(this instanceof Choo)) return new Choo(opts);
  opts = opts || {};
  assert$2.equal(typeof opts, "object", "choo: opts should be type object");
  var self2 = this;
  this._events = {
    DOMCONTENTLOADED: "DOMContentLoaded",
    DOMTITLECHANGE: "DOMTitleChange",
    REPLACESTATE: "replaceState",
    PUSHSTATE: "pushState",
    NAVIGATE: "navigate",
    POPSTATE: "popState",
    RENDER: "render"
  };
  this._historyEnabled = opts.history === void 0 ? true : opts.history;
  this._hrefEnabled = opts.href === void 0 ? true : opts.href;
  this._hashEnabled = opts.hash === void 0 ? false : opts.hash;
  this._hasWindow = typeof window !== "undefined";
  this._cache = opts.cache;
  this._loaded = false;
  this._stores = [ondomtitlechange];
  this._tree = null;
  var _state = {
    events: this._events,
    components: {}
  };
  if (this._hasWindow) {
    this.state = window.initialState ? Object.assign({}, window.initialState, _state) : _state;
    delete window.initialState;
  } else {
    this.state = _state;
  }
  this.router = nanorouter({ curry: true });
  this.emitter = nanobus("choo.emit");
  this.emit = this.emitter.emit.bind(this.emitter);
  if (this._hasWindow) this.state.title = document.title;
  function ondomtitlechange(state) {
    self2.emitter.prependListener(self2._events.DOMTITLECHANGE, function(title) {
      assert$2.equal(typeof title, "string", "events.DOMTitleChange: title should be type string");
      state.title = title;
      if (self2._hasWindow) document.title = title;
    });
  }
  timing();
}
Choo.prototype.route = function(route, handler) {
  var routeTiming = nanotiming$1("choo.route('" + route + "')");
  assert$2.equal(typeof route, "string", "choo.route: route should be type string");
  assert$2.equal(typeof handler, "function", "choo.handler: route should be type function");
  this.router.on(route, handler);
  routeTiming();
};
Choo.prototype.use = function(cb) {
  assert$2.equal(typeof cb, "function", "choo.use: cb should be type function");
  var self2 = this;
  this._stores.push(function(state) {
    var msg = "choo.use";
    msg = cb.storeName ? msg + "(" + cb.storeName + ")" : msg;
    var endTiming = nanotiming$1(msg);
    cb(state, self2.emitter, self2);
    endTiming();
  });
};
Choo.prototype.start = function() {
  assert$2.equal(typeof window, "object", "choo.start: window was not found. .start() must be called in a browser, use .toString() if running in Node");
  var startTiming = nanotiming$1("choo.start");
  var self2 = this;
  if (this._historyEnabled) {
    this.emitter.prependListener(this._events.NAVIGATE, function() {
      self2._matchRoute(self2.state);
      if (self2._loaded) {
        self2.emitter.emit(self2._events.RENDER);
        setTimeout(scrollToAnchor.bind(null, window.location.hash), 0);
      }
    });
    this.emitter.prependListener(this._events.POPSTATE, function() {
      self2.emitter.emit(self2._events.NAVIGATE);
    });
    this.emitter.prependListener(this._events.PUSHSTATE, function(href2) {
      assert$2.equal(typeof href2, "string", "events.pushState: href should be type string");
      window.history.pushState(HISTORY_OBJECT, null, href2);
      self2.emitter.emit(self2._events.NAVIGATE);
    });
    this.emitter.prependListener(this._events.REPLACESTATE, function(href2) {
      assert$2.equal(typeof href2, "string", "events.replaceState: href should be type string");
      window.history.replaceState(HISTORY_OBJECT, null, href2);
      self2.emitter.emit(self2._events.NAVIGATE);
    });
    window.onpopstate = function() {
      self2.emitter.emit(self2._events.POPSTATE);
    };
    if (self2._hrefEnabled) {
      nanohref(function(location2) {
        var href2 = location2.href;
        var hash = location2.hash;
        if (href2 === window.location.href) {
          if (!self2._hashEnabled && hash) scrollToAnchor(hash);
          return;
        }
        self2.emitter.emit(self2._events.PUSHSTATE, href2);
      });
    }
  }
  this._setCache(this.state);
  this._matchRoute(this.state);
  this._stores.forEach(function(initStore) {
    initStore(self2.state);
  });
  this._tree = this._prerender(this.state);
  assert$2.ok(this._tree, "choo.start: no valid DOM node returned for location " + this.state.href);
  this.emitter.prependListener(self2._events.RENDER, nanoraf(function() {
    var renderTiming = nanotiming$1("choo.render");
    var newTree = self2._prerender(self2.state);
    assert$2.ok(newTree, "choo.render: no valid DOM node returned for location " + self2.state.href);
    assert$2.equal(self2._tree.nodeName, newTree.nodeName, "choo.render: The target node <" + self2._tree.nodeName.toLowerCase() + "> is not the same type as the new node <" + newTree.nodeName.toLowerCase() + ">.");
    var morphTiming = nanotiming$1("choo.morph");
    nanomorph(self2._tree, newTree);
    morphTiming();
    renderTiming();
  }));
  documentReady(function() {
    self2.emitter.emit(self2._events.DOMCONTENTLOADED);
    self2._loaded = true;
  });
  startTiming();
  return this._tree;
};
Choo.prototype.mount = function mount(selector) {
  var mountTiming = nanotiming$1("choo.mount('" + selector + "')");
  if (typeof window !== "object") {
    assert$2.ok(typeof selector === "string", "choo.mount: selector should be type String");
    this.selector = selector;
    mountTiming();
    return this;
  }
  assert$2.ok(typeof selector === "string" || typeof selector === "object", "choo.mount: selector should be type String or HTMLElement");
  var self2 = this;
  documentReady(function() {
    var renderTiming = nanotiming$1("choo.render");
    var newTree = self2.start();
    if (typeof selector === "string") {
      self2._tree = document.querySelector(selector);
    } else {
      self2._tree = selector;
    }
    assert$2.ok(self2._tree, "choo.mount: could not query selector: " + selector);
    assert$2.equal(self2._tree.nodeName, newTree.nodeName, "choo.mount: The target node <" + self2._tree.nodeName.toLowerCase() + "> is not the same type as the new node <" + newTree.nodeName.toLowerCase() + ">.");
    var morphTiming = nanotiming$1("choo.morph");
    nanomorph(self2._tree, newTree);
    morphTiming();
    renderTiming();
  });
  mountTiming();
};
Choo.prototype.toString = function(location2, state) {
  state = state || {};
  state.components = state.components || {};
  state.events = Object.assign({}, state.events, this._events);
  assert$2.notEqual(typeof window, "object", "choo.mount: window was found. .toString() must be called in Node, use .start() or .mount() if running in the browser");
  assert$2.equal(typeof location2, "string", "choo.toString: location should be type string");
  assert$2.equal(typeof state, "object", "choo.toString: state should be type object");
  this._setCache(state);
  this._matchRoute(state, location2);
  this.emitter.removeAllListeners();
  this._stores.forEach(function(initStore) {
    initStore(state);
  });
  var html2 = this._prerender(state);
  assert$2.ok(html2, "choo.toString: no valid value returned for the route " + location2);
  assert$2(!Array.isArray(html2), "choo.toString: return value was an array for the route " + location2);
  return typeof html2.outerHTML === "string" ? html2.outerHTML : html2.toString();
};
Choo.prototype._matchRoute = function(state, locationOverride) {
  var location2, queryString;
  if (locationOverride) {
    location2 = locationOverride.replace(/\?.+$/, "").replace(/\/$/, "");
    if (!this._hashEnabled) location2 = location2.replace(/#.+$/, "");
    queryString = locationOverride;
  } else {
    location2 = window.location.pathname.replace(/\/$/, "");
    if (this._hashEnabled) location2 += window.location.hash.replace(/^#/, "/");
    queryString = window.location.search;
  }
  var matched = this.router.match(location2);
  this._handler = matched.cb;
  state.href = location2;
  state.query = nanoquery(queryString);
  state.route = matched.route;
  state.params = matched.params;
};
Choo.prototype._prerender = function(state) {
  var routeTiming = nanotiming$1("choo.prerender('" + state.route + "')");
  var res = this._handler(state, this.emit);
  routeTiming();
  return res;
};
Choo.prototype._setCache = function(state) {
  var cache2 = new Cache(state, this.emitter.emit.bind(this.emitter), this._cache);
  state.cache = renderComponent;
  function renderComponent(Component2, id) {
    assert$2.equal(typeof Component2, "function", "choo.state.cache: Component should be type function");
    var args = [];
    for (var i = 0, len = arguments.length; i < len; i++) {
      args.push(arguments[i]);
    }
    return cache2.render.apply(cache2, args);
  }
  renderComponent.toJSON = function() {
    return null;
  };
};
const choo$1 = /* @__PURE__ */ getDefaultExportFromCjs(choo);
var hyperscriptAttributeToProperty = attributeToProperty;
var transform = {
  "class": "className",
  "for": "htmlFor",
  "http-equiv": "httpEquiv"
};
function attributeToProperty(h) {
  return function(tagName, attrs, children) {
    for (var attr in attrs) {
      if (attr in transform) {
        attrs[transform[attr]] = attrs[attr];
        delete attrs[attr];
      }
    }
    return h(tagName, attrs, children);
  };
}
var attrToProp = hyperscriptAttributeToProperty;
var VAR = 0, TEXT = 1, OPEN = 2, CLOSE = 3, ATTR = 4;
var ATTR_KEY = 5, ATTR_KEY_W = 6;
var ATTR_VALUE_W = 7, ATTR_VALUE = 8;
var ATTR_VALUE_SQ = 9, ATTR_VALUE_DQ = 10;
var ATTR_EQ = 11, ATTR_BREAK = 12;
var COMMENT = 13;
var hyperx$1 = function(h, opts) {
  if (!opts) opts = {};
  var concat = opts.concat || function(a2, b) {
    return String(a2) + String(b);
  };
  if (opts.attrToProp !== false) {
    h = attrToProp(h);
  }
  return function(strings) {
    var state = TEXT, reg2 = "";
    var arglen = arguments.length;
    var parts = [];
    for (var i = 0; i < strings.length; i++) {
      if (i < arglen - 1) {
        var arg = arguments[i + 1];
        var p = parse(strings[i]);
        var xstate = state;
        if (xstate === ATTR_VALUE_DQ) xstate = ATTR_VALUE;
        if (xstate === ATTR_VALUE_SQ) xstate = ATTR_VALUE;
        if (xstate === ATTR_VALUE_W) xstate = ATTR_VALUE;
        if (xstate === ATTR) xstate = ATTR_KEY;
        if (xstate === OPEN) {
          if (reg2 === "/") {
            p.push([OPEN, "/", arg]);
            reg2 = "";
          } else {
            p.push([OPEN, arg]);
          }
        } else if (xstate === COMMENT && opts.comments) {
          reg2 += String(arg);
        } else if (xstate !== COMMENT) {
          p.push([VAR, xstate, arg]);
        }
        parts.push.apply(parts, p);
      } else parts.push.apply(parts, parse(strings[i]));
    }
    var tree = [null, {}, []];
    var stack = [[tree, -1]];
    for (var i = 0; i < parts.length; i++) {
      var cur = stack[stack.length - 1][0];
      var p = parts[i], s = p[0];
      if (s === OPEN && /^\//.test(p[1])) {
        var ix = stack[stack.length - 1][1];
        if (stack.length > 1) {
          stack.pop();
          stack[stack.length - 1][0][2][ix] = h(
            cur[0],
            cur[1],
            cur[2].length ? cur[2] : void 0
          );
        }
      } else if (s === OPEN) {
        var c = [p[1], {}, []];
        cur[2].push(c);
        stack.push([c, cur[2].length - 1]);
      } else if (s === ATTR_KEY || s === VAR && p[1] === ATTR_KEY) {
        var key = "";
        var copyKey;
        for (; i < parts.length; i++) {
          if (parts[i][0] === ATTR_KEY) {
            key = concat(key, parts[i][1]);
          } else if (parts[i][0] === VAR && parts[i][1] === ATTR_KEY) {
            if (typeof parts[i][2] === "object" && !key) {
              for (copyKey in parts[i][2]) {
                if (parts[i][2].hasOwnProperty(copyKey) && !cur[1][copyKey]) {
                  cur[1][copyKey] = parts[i][2][copyKey];
                }
              }
            } else {
              key = concat(key, parts[i][2]);
            }
          } else break;
        }
        if (parts[i][0] === ATTR_EQ) i++;
        var j = i;
        for (; i < parts.length; i++) {
          if (parts[i][0] === ATTR_VALUE || parts[i][0] === ATTR_KEY) {
            if (!cur[1][key]) cur[1][key] = strfn(parts[i][1]);
            else parts[i][1] === "" || (cur[1][key] = concat(cur[1][key], parts[i][1]));
          } else if (parts[i][0] === VAR && (parts[i][1] === ATTR_VALUE || parts[i][1] === ATTR_KEY)) {
            if (!cur[1][key]) cur[1][key] = strfn(parts[i][2]);
            else parts[i][2] === "" || (cur[1][key] = concat(cur[1][key], parts[i][2]));
          } else {
            if (key.length && !cur[1][key] && i === j && (parts[i][0] === CLOSE || parts[i][0] === ATTR_BREAK)) {
              cur[1][key] = key.toLowerCase();
            }
            if (parts[i][0] === CLOSE) {
              i--;
            }
            break;
          }
        }
      } else if (s === ATTR_KEY) {
        cur[1][p[1]] = true;
      } else if (s === VAR && p[1] === ATTR_KEY) {
        cur[1][p[2]] = true;
      } else if (s === CLOSE) {
        if (selfClosing(cur[0]) && stack.length) {
          var ix = stack[stack.length - 1][1];
          stack.pop();
          stack[stack.length - 1][0][2][ix] = h(
            cur[0],
            cur[1],
            cur[2].length ? cur[2] : void 0
          );
        }
      } else if (s === VAR && p[1] === TEXT) {
        if (p[2] === void 0 || p[2] === null) p[2] = "";
        else if (!p[2]) p[2] = concat("", p[2]);
        if (Array.isArray(p[2][0])) {
          cur[2].push.apply(cur[2], p[2]);
        } else {
          cur[2].push(p[2]);
        }
      } else if (s === TEXT) {
        cur[2].push(p[1]);
      } else if (s === ATTR_EQ || s === ATTR_BREAK) ;
      else {
        throw new Error("unhandled: " + s);
      }
    }
    if (tree[2].length > 1 && /^\s*$/.test(tree[2][0])) {
      tree[2].shift();
    }
    if (tree[2].length > 2 || tree[2].length === 2 && /\S/.test(tree[2][1])) {
      if (opts.createFragment) return opts.createFragment(tree[2]);
      throw new Error(
        "multiple root elements must be wrapped in an enclosing tag"
      );
    }
    if (Array.isArray(tree[2][0]) && typeof tree[2][0][0] === "string" && Array.isArray(tree[2][0][2])) {
      tree[2][0] = h(tree[2][0][0], tree[2][0][1], tree[2][0][2]);
    }
    return tree[2][0];
    function parse(str) {
      var res = [];
      if (state === ATTR_VALUE_W) state = ATTR;
      for (var i2 = 0; i2 < str.length; i2++) {
        var c2 = str.charAt(i2);
        if (state === TEXT && c2 === "<") {
          if (reg2.length) res.push([TEXT, reg2]);
          reg2 = "";
          state = OPEN;
        } else if (c2 === ">" && !quot(state) && state !== COMMENT) {
          if (state === OPEN && reg2.length) {
            res.push([OPEN, reg2]);
          } else if (state === ATTR_KEY) {
            res.push([ATTR_KEY, reg2]);
          } else if (state === ATTR_VALUE && reg2.length) {
            res.push([ATTR_VALUE, reg2]);
          }
          res.push([CLOSE]);
          reg2 = "";
          state = TEXT;
        } else if (state === COMMENT && /-$/.test(reg2) && c2 === "-") {
          if (opts.comments) {
            res.push([ATTR_VALUE, reg2.substr(0, reg2.length - 1)]);
          }
          reg2 = "";
          state = TEXT;
        } else if (state === OPEN && /^!--$/.test(reg2)) {
          if (opts.comments) {
            res.push([OPEN, reg2], [ATTR_KEY, "comment"], [ATTR_EQ]);
          }
          reg2 = c2;
          state = COMMENT;
        } else if (state === TEXT || state === COMMENT) {
          reg2 += c2;
        } else if (state === OPEN && c2 === "/" && reg2.length) ;
        else if (state === OPEN && /\s/.test(c2)) {
          if (reg2.length) {
            res.push([OPEN, reg2]);
          }
          reg2 = "";
          state = ATTR;
        } else if (state === OPEN) {
          reg2 += c2;
        } else if (state === ATTR && /[^\s"'=/]/.test(c2)) {
          state = ATTR_KEY;
          reg2 = c2;
        } else if (state === ATTR && /\s/.test(c2)) {
          if (reg2.length) res.push([ATTR_KEY, reg2]);
          res.push([ATTR_BREAK]);
        } else if (state === ATTR_KEY && /\s/.test(c2)) {
          res.push([ATTR_KEY, reg2]);
          reg2 = "";
          state = ATTR_KEY_W;
        } else if (state === ATTR_KEY && c2 === "=") {
          res.push([ATTR_KEY, reg2], [ATTR_EQ]);
          reg2 = "";
          state = ATTR_VALUE_W;
        } else if (state === ATTR_KEY) {
          reg2 += c2;
        } else if ((state === ATTR_KEY_W || state === ATTR) && c2 === "=") {
          res.push([ATTR_EQ]);
          state = ATTR_VALUE_W;
        } else if ((state === ATTR_KEY_W || state === ATTR) && !/\s/.test(c2)) {
          res.push([ATTR_BREAK]);
          if (/[\w-]/.test(c2)) {
            reg2 += c2;
            state = ATTR_KEY;
          } else state = ATTR;
        } else if (state === ATTR_VALUE_W && c2 === '"') {
          state = ATTR_VALUE_DQ;
        } else if (state === ATTR_VALUE_W && c2 === "'") {
          state = ATTR_VALUE_SQ;
        } else if (state === ATTR_VALUE_DQ && c2 === '"') {
          res.push([ATTR_VALUE, reg2], [ATTR_BREAK]);
          reg2 = "";
          state = ATTR;
        } else if (state === ATTR_VALUE_SQ && c2 === "'") {
          res.push([ATTR_VALUE, reg2], [ATTR_BREAK]);
          reg2 = "";
          state = ATTR;
        } else if (state === ATTR_VALUE_W && !/\s/.test(c2)) {
          state = ATTR_VALUE;
          i2--;
        } else if (state === ATTR_VALUE && /\s/.test(c2)) {
          res.push([ATTR_VALUE, reg2], [ATTR_BREAK]);
          reg2 = "";
          state = ATTR;
        } else if (state === ATTR_VALUE || state === ATTR_VALUE_SQ || state === ATTR_VALUE_DQ) {
          reg2 += c2;
        }
      }
      if (state === TEXT && reg2.length) {
        res.push([TEXT, reg2]);
        reg2 = "";
      } else if (state === ATTR_VALUE && reg2.length) {
        res.push([ATTR_VALUE, reg2]);
        reg2 = "";
      } else if (state === ATTR_VALUE_DQ && reg2.length) {
        res.push([ATTR_VALUE, reg2]);
        reg2 = "";
      } else if (state === ATTR_VALUE_SQ && reg2.length) {
        res.push([ATTR_VALUE, reg2]);
        reg2 = "";
      } else if (state === ATTR_KEY) {
        res.push([ATTR_KEY, reg2]);
        reg2 = "";
      }
      return res;
    }
  };
  function strfn(x2) {
    if (typeof x2 === "function") return x2;
    else if (typeof x2 === "string") return x2;
    else if (x2 && typeof x2 === "object") return x2;
    else if (x2 === null || x2 === void 0) return x2;
    else return concat("", x2);
  }
};
function quot(state) {
  return state === ATTR_VALUE_SQ || state === ATTR_VALUE_DQ;
}
var closeRE = RegExp("^(" + [
  "area",
  "base",
  "basefont",
  "bgsound",
  "br",
  "col",
  "command",
  "embed",
  "frame",
  "hr",
  "img",
  "input",
  "isindex",
  "keygen",
  "link",
  "meta",
  "param",
  "source",
  "track",
  "wbr",
  "!--",
  // SVG TAGS
  "animate",
  "animateTransform",
  "circle",
  "cursor",
  "desc",
  "ellipse",
  "feBlend",
  "feColorMatrix",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "font-face-format",
  "font-face-name",
  "font-face-uri",
  "glyph",
  "glyphRef",
  "hkern",
  "image",
  "line",
  "missing-glyph",
  "mpath",
  "path",
  "polygon",
  "polyline",
  "rect",
  "set",
  "stop",
  "tref",
  "use",
  "view",
  "vkern"
].join("|") + ")(?:[.#][a-zA-Z0-9-￿_:-]+)*$");
function selfClosing(tag) {
  return closeRE.test(tag);
}
var trailingNewlineRegex = /\n[\s]+$/;
var leadingNewlineRegex = /^\n[\s]+/;
var trailingSpaceRegex = /[\s]+$/;
var leadingSpaceRegex = /^[\s]+/;
var multiSpaceRegex = /[\n\s]+/g;
var TEXT_TAGS = [
  "a",
  "abbr",
  "b",
  "bdi",
  "bdo",
  "br",
  "cite",
  "data",
  "dfn",
  "em",
  "i",
  "kbd",
  "mark",
  "q",
  "rp",
  "rt",
  "rtc",
  "ruby",
  "s",
  "amp",
  "small",
  "span",
  "strong",
  "sub",
  "sup",
  "time",
  "u",
  "var",
  "wbr"
];
var VERBATIM_TAGS = [
  "code",
  "pre",
  "textarea"
];
var appendChild$1 = function appendChild(el, childs) {
  if (!Array.isArray(childs)) return;
  var nodeName = el.nodeName.toLowerCase();
  var hadText = false;
  var value, leader;
  for (var i = 0, len = childs.length; i < len; i++) {
    var node = childs[i];
    if (Array.isArray(node)) {
      appendChild(el, node);
      continue;
    }
    if (typeof node === "number" || typeof node === "boolean" || typeof node === "function" || node instanceof Date || node instanceof RegExp) {
      node = node.toString();
    }
    var lastChild = el.childNodes[el.childNodes.length - 1];
    if (typeof node === "string") {
      hadText = true;
      if (lastChild && lastChild.nodeName === "#text") {
        lastChild.nodeValue += node;
      } else {
        node = el.ownerDocument.createTextNode(node);
        el.appendChild(node);
        lastChild = node;
      }
      if (i === len - 1) {
        hadText = false;
        if (TEXT_TAGS.indexOf(nodeName) === -1 && VERBATIM_TAGS.indexOf(nodeName) === -1) {
          value = lastChild.nodeValue.replace(leadingNewlineRegex, "").replace(trailingSpaceRegex, "").replace(trailingNewlineRegex, "").replace(multiSpaceRegex, " ");
          if (value === "") {
            el.removeChild(lastChild);
          } else {
            lastChild.nodeValue = value;
          }
        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {
          leader = i === 0 ? "" : " ";
          value = lastChild.nodeValue.replace(leadingNewlineRegex, leader).replace(leadingSpaceRegex, " ").replace(trailingSpaceRegex, "").replace(trailingNewlineRegex, "").replace(multiSpaceRegex, " ");
          lastChild.nodeValue = value;
        }
      }
    } else if (node && node.nodeType) {
      if (hadText) {
        hadText = false;
        if (TEXT_TAGS.indexOf(nodeName) === -1 && VERBATIM_TAGS.indexOf(nodeName) === -1) {
          value = lastChild.nodeValue.replace(leadingNewlineRegex, "").replace(trailingNewlineRegex, " ").replace(multiSpaceRegex, " ");
          if (value === "") {
            el.removeChild(lastChild);
          } else {
            lastChild.nodeValue = value;
          }
        } else if (VERBATIM_TAGS.indexOf(nodeName) === -1) {
          value = lastChild.nodeValue.replace(leadingSpaceRegex, " ").replace(leadingNewlineRegex, "").replace(trailingNewlineRegex, " ").replace(multiSpaceRegex, " ");
          lastChild.nodeValue = value;
        }
      }
      var _nodeName = node.nodeName;
      if (_nodeName) nodeName = _nodeName.toLowerCase();
      el.appendChild(node);
    }
  }
};
var svgTags = [
  "svg",
  "altGlyph",
  "altGlyphDef",
  "altGlyphItem",
  "animate",
  "animateColor",
  "animateMotion",
  "animateTransform",
  "circle",
  "clipPath",
  "color-profile",
  "cursor",
  "defs",
  "desc",
  "ellipse",
  "feBlend",
  "feColorMatrix",
  "feComponentTransfer",
  "feComposite",
  "feConvolveMatrix",
  "feDiffuseLighting",
  "feDisplacementMap",
  "feDistantLight",
  "feFlood",
  "feFuncA",
  "feFuncB",
  "feFuncG",
  "feFuncR",
  "feGaussianBlur",
  "feImage",
  "feMerge",
  "feMergeNode",
  "feMorphology",
  "feOffset",
  "fePointLight",
  "feSpecularLighting",
  "feSpotLight",
  "feTile",
  "feTurbulence",
  "filter",
  "font",
  "font-face",
  "font-face-format",
  "font-face-name",
  "font-face-src",
  "font-face-uri",
  "foreignObject",
  "g",
  "glyph",
  "glyphRef",
  "hkern",
  "image",
  "line",
  "linearGradient",
  "marker",
  "mask",
  "metadata",
  "missing-glyph",
  "mpath",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "set",
  "stop",
  "switch",
  "symbol",
  "text",
  "textPath",
  "title",
  "tref",
  "tspan",
  "use",
  "view",
  "vkern"
];
var boolProps = [
  "async",
  "autofocus",
  "autoplay",
  "checked",
  "controls",
  "default",
  "defaultchecked",
  "defer",
  "disabled",
  "formnovalidate",
  "hidden",
  "ismap",
  "loop",
  "multiple",
  "muted",
  "novalidate",
  "open",
  "playsinline",
  "readonly",
  "required",
  "reversed",
  "selected"
];
var directProps = [
  "indeterminate"
];
var hyperx = hyperx$1;
var appendChild2 = appendChild$1;
var SVG_TAGS = svgTags;
var BOOL_PROPS = boolProps;
var DIRECT_PROPS = directProps;
var SVGNS = "http://www.w3.org/2000/svg";
var XLINKNS = "http://www.w3.org/1999/xlink";
var COMMENT_TAG = "!--";
var dom = function(document2) {
  function nanoHtmlCreateElement(tag, props, children) {
    var el;
    if (SVG_TAGS.indexOf(tag) !== -1) {
      props.namespace = SVGNS;
    }
    var ns = false;
    if (props.namespace) {
      ns = props.namespace;
      delete props.namespace;
    }
    var isCustomElement = false;
    if (props.is) {
      isCustomElement = props.is;
      delete props.is;
    }
    if (ns) {
      if (isCustomElement) {
        el = document2.createElementNS(ns, tag, { is: isCustomElement });
      } else {
        el = document2.createElementNS(ns, tag);
      }
    } else if (tag === COMMENT_TAG) {
      return document2.createComment(props.comment);
    } else if (isCustomElement) {
      el = document2.createElement(tag, { is: isCustomElement });
    } else {
      el = document2.createElement(tag);
    }
    for (var p in props) {
      if (props.hasOwnProperty(p)) {
        var key = p.toLowerCase();
        var val = props[p];
        if (key === "classname") {
          key = "class";
          p = "class";
        }
        if (p === "htmlFor") {
          p = "for";
        }
        if (BOOL_PROPS.indexOf(key) !== -1) {
          if (String(val) === "true") val = key;
          else if (String(val) === "false") continue;
        }
        if (key.slice(0, 2) === "on" || DIRECT_PROPS.indexOf(key) !== -1) {
          el[p] = val;
        } else {
          if (ns) {
            if (p === "xlink:href") {
              el.setAttributeNS(XLINKNS, p, val);
            } else if (/^xmlns($|:)/i.test(p)) ;
            else {
              el.setAttributeNS(null, p, val);
            }
          } else {
            el.setAttribute(p, val);
          }
        }
      }
    }
    appendChild2(el, children);
    return el;
  }
  function createFragment(nodes) {
    var fragment = document2.createDocumentFragment();
    for (var i = 0; i < nodes.length; i++) {
      if (nodes[i] == null) continue;
      if (Array.isArray(nodes[i])) {
        fragment.appendChild(createFragment(nodes[i]));
      } else {
        if (typeof nodes[i] === "string") nodes[i] = document2.createTextNode(nodes[i]);
        fragment.appendChild(nodes[i]);
      }
    }
    return fragment;
  }
  var exports = hyperx(nanoHtmlCreateElement, {
    comments: true,
    createFragment
  });
  exports.default = exports;
  exports.createComment = nanoHtmlCreateElement;
  return exports;
};
var browser$1 = dom(document);
var html = browser$1;
const html$1 = /* @__PURE__ */ getDefaultExportFromCjs(html);
const __viteBrowserExternal = {};
const __viteBrowserExternal$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: __viteBrowserExternal
}, Symbol.toStringTag, { value: "Module" }));
const require$$0 = /* @__PURE__ */ getAugmentedNamespace(__viteBrowserExternal$1);
var topLevel = typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof window !== "undefined" ? window : {};
var minDoc = require$$0;
var doccy;
if (typeof document !== "undefined") {
  doccy = document;
} else {
  doccy = topLevel["__GLOBAL_DOCUMENT_CACHE@4"];
  if (!doccy) {
    doccy = topLevel["__GLOBAL_DOCUMENT_CACHE@4"] = minDoc;
  }
}
var document_1 = doccy;
var onLoad = { exports: {} };
var win;
if (typeof window !== "undefined") {
  win = window;
} else if (typeof commonjsGlobal !== "undefined") {
  win = commonjsGlobal;
} else if (typeof self !== "undefined") {
  win = self;
} else {
  win = {};
}
var window_1 = win;
var document$2 = document_1;
var window$1 = window_1;
var watch = /* @__PURE__ */ Object.create(null);
var KEY_ID = "onloadid" + Math.random().toString(36).slice(2);
var KEY_ATTR = "data-" + KEY_ID;
var INDEX = 0;
if (window$1 && window$1.MutationObserver) {
  var observer = new MutationObserver(function(mutations) {
    if (Object.keys(watch).length < 1) return;
    for (var i = 0; i < mutations.length; i++) {
      if (mutations[i].attributeName === KEY_ATTR) {
        eachAttr(mutations[i], turnon, turnoff);
        continue;
      }
      eachMutation(mutations[i].removedNodes, function(index, el) {
        if (!document$2.documentElement.contains(el)) turnoff(index, el);
      });
      eachMutation(mutations[i].addedNodes, function(index, el) {
        if (document$2.documentElement.contains(el)) turnon(index, el);
      });
    }
  });
  observer.observe(document$2.documentElement, {
    childList: true,
    subtree: true,
    attributes: true,
    attributeOldValue: true,
    attributeFilter: [KEY_ATTR]
  });
}
onLoad.exports = function onload(el, on, off, caller) {
  on = on || function() {
  };
  off = off || function() {
  };
  el.setAttribute(KEY_ATTR, "o" + INDEX);
  watch["o" + INDEX] = [on, off, 0, caller || onload.caller];
  INDEX += 1;
  return el;
};
onLoad.exports.KEY_ATTR = KEY_ATTR;
onLoad.exports.KEY_ID = KEY_ID;
function turnon(index, el) {
  if (watch[index][0] && watch[index][2] === 0) {
    watch[index][0](el);
    watch[index][2] = 1;
  }
}
function turnoff(index, el) {
  if (watch[index][1] && watch[index][2] === 1) {
    watch[index][1](el);
    watch[index][2] = 0;
  }
}
function eachAttr(mutation, on, off) {
  var newValue = mutation.target.getAttribute(KEY_ATTR);
  if (sameOrigin(mutation.oldValue, newValue)) {
    watch[newValue] = watch[mutation.oldValue];
    return;
  }
  if (watch[mutation.oldValue]) {
    off(mutation.oldValue, mutation.target);
  }
  if (watch[newValue]) {
    on(newValue, mutation.target);
  }
}
function sameOrigin(oldValue, newValue) {
  if (!oldValue || !newValue) return false;
  return watch[oldValue][3] === watch[newValue][3];
}
function eachMutation(nodes, fn) {
  var keys = Object.keys(watch);
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i] && nodes[i].getAttribute && nodes[i].getAttribute(KEY_ATTR)) {
      var onloadid = nodes[i].getAttribute(KEY_ATTR);
      keys.forEach(function(k) {
        if (onloadid === k) {
          fn(k, nodes[i]);
        }
      });
    }
    if (nodes[i] && nodes[i].childNodes.length > 0) {
      eachMutation(nodes[i].childNodes, fn);
    }
  }
}
var onLoadExports = onLoad.exports;
var nanoassert = assert$1;
class AssertionError extends Error {
}
AssertionError.prototype.name = "AssertionError";
function assert$1(t, m) {
  if (!t) {
    var err = new AssertionError(m);
    if (Error.captureStackTrace) Error.captureStackTrace(err, assert$1);
    throw err;
  }
}
const document$1 = document_1;
const nanotiming = browser$3;
const morph = nanomorph_1;
const onload2 = onLoadExports;
const assert = nanoassert;
const OL_KEY_ID = onload2.KEY_ID;
const OL_ATTR_ID = onload2.KEY_ATTR;
var nanocomponent = Nanocomponent;
function makeID() {
  return "ncid-" + Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
}
Nanocomponent.makeID = makeID;
function Nanocomponent(name) {
  this._hasWindow = typeof window !== "undefined";
  this._id = null;
  this._ncID = null;
  this._olID = null;
  this._proxy = null;
  this._loaded = false;
  this._rootNodeName = null;
  this._name = name || "nanocomponent";
  this._rerender = false;
  this._handleLoad = this._handleLoad.bind(this);
  this._handleUnload = this._handleUnload.bind(this);
  this._arguments = [];
  const self2 = this;
  Object.defineProperty(this, "element", {
    get: function() {
      const el = document$1.getElementById(self2._id);
      if (el) return el.dataset.nanocomponent === self2._ncID ? el : void 0;
    }
  });
}
Nanocomponent.prototype.render = function() {
  const renderTiming = nanotiming(this._name + ".render");
  const self2 = this;
  const args = new Array(arguments.length);
  let el;
  for (let i = 0; i < arguments.length; i++) args[i] = arguments[i];
  if (!this._hasWindow) {
    const createTiming = nanotiming(this._name + ".create");
    el = this.createElement.apply(this, args);
    createTiming();
    renderTiming();
    return el;
  } else if (this.element) {
    el = this.element;
    const updateTiming = nanotiming(this._name + ".update");
    const shouldUpdate = this._rerender || this.update.apply(this, args);
    updateTiming();
    if (this._rerender) this._rerender = false;
    if (shouldUpdate) {
      const desiredHtml = this._handleRender(args);
      const morphTiming = nanotiming(this._name + ".morph");
      morph(el, desiredHtml);
      morphTiming();
      if (this.afterupdate) this.afterupdate(el);
    }
    if (!this._proxy) {
      this._proxy = this._createProxy();
    }
    renderTiming();
    return this._proxy;
  } else {
    this._reset();
    el = this._handleRender(args);
    if (this.beforerender) this.beforerender(el);
    if (this.load || this.unload || this.afterreorder) {
      onload2(el, self2._handleLoad, self2._handleUnload, self2._ncID);
      this._olID = el.dataset[OL_KEY_ID];
    }
    renderTiming();
    return el;
  }
};
Nanocomponent.prototype.rerender = function() {
  assert(this.element, "nanocomponent: cant rerender on an unmounted dom node");
  this._rerender = true;
  this.render.apply(this, this._arguments);
};
Nanocomponent.prototype._handleRender = function(args) {
  const createElementTiming = nanotiming(this._name + ".createElement");
  const el = this.createElement.apply(this, args);
  createElementTiming();
  if (!this._rootNodeName) this._rootNodeName = el.nodeName;
  assert(el instanceof window.Element, "nanocomponent: createElement should return a single DOM node");
  assert(this._rootNodeName === el.nodeName, "nanocomponent: root node types cannot differ between re-renders");
  this._arguments = args;
  return this._brandNode(this._ensureID(el));
};
Nanocomponent.prototype._createProxy = function() {
  const proxy = document$1.createElement(this._rootNodeName);
  const self2 = this;
  this._brandNode(proxy);
  proxy.id = this._id;
  proxy.setAttribute("data-proxy", "");
  proxy.isSameNode = function(el) {
    return el && el.dataset.nanocomponent === self2._ncID;
  };
  return proxy;
};
Nanocomponent.prototype._reset = function() {
  this._ncID = Nanocomponent.makeID();
  this._olID = null;
  this._id = null;
  this._proxy = null;
  this._rootNodeName = null;
};
Nanocomponent.prototype._brandNode = function(node) {
  node.setAttribute("data-nanocomponent", this._ncID);
  if (this._olID) node.setAttribute(OL_ATTR_ID, this._olID);
  return node;
};
Nanocomponent.prototype._ensureID = function(node) {
  if (node.id) this._id = node.id;
  else node.id = this._id = this._ncID;
  if (this._proxy && this._proxy.id !== this._id) this._proxy.id = this._id;
  return node;
};
Nanocomponent.prototype._handleLoad = function(el) {
  if (this._loaded) {
    if (this.afterreorder) this.afterreorder(el);
    return;
  }
  this._loaded = true;
  if (this.load) this.load(el);
};
Nanocomponent.prototype._handleUnload = function(el) {
  if (this.element) return;
  this._loaded = false;
  if (this.unload) this.unload(el);
};
Nanocomponent.prototype.createElement = function() {
  throw new Error("nanocomponent: createElement should be implemented!");
};
Nanocomponent.prototype.update = function() {
  throw new Error("nanocomponent: update should be implemented!");
};
var component = nanocomponent;
const Component = /* @__PURE__ */ getDefaultExportFromCjs(component);
class TextTweenElement extends Component {
  constructor(id, state, emit) {
    super(id);
    this.local = state.components[id] = {};
    this.state = state;
    this.emit = emit;
  }
  load(element) {
    this.span = element.querySelector("span");
  }
  update({ prompt, fontSize }) {
    return false;
  }
  createElement({ prompt, fontSize = "1em" } = {}) {
    this.prompt = prompt;
    return html$1`<div style="font-size: ${fontSize}">
    <span></span>
    </div>`;
  }
  textTween(target, { fontSize, fontFamily, rotate, posY } = {}) {
    let safetySwitch = false;
    if (this.tweening == true) {
      safetySwitch = true;
      this.state.killSwitch = true;
    }
    const org = this.span.innerText;
    let text = org;
    this.tweening = true;
    let state = "delete";
    const step = () => {
      if (safetySwitch != true && this.state.killSwitch) {
        this.state.killSwitch = false;
        this.tweening = false;
        return;
      }
      if (state === "delete") {
        text = text.substring(0, text.length - 1);
        if (text.length == 0) {
          if (fontSize) {
            this.span.style.fontSize = fontSize;
          }
          if (rotate) {
            if (posY == "bottom") {
              this.span.style.transform = `translate(0, 50vh) translate(0, -${fontSize}) translate(-50%, -50%) rotate(${rotate})`;
            } else if (posY == "top") {
              this.span.style.transform = `translate(0, -50vh) translate(0, ${fontSize}) translate(-50%, -50%) rotate(${rotate})`;
            } else {
              this.span.style.transform = `translate(-50%, -50%) rotate(${rotate})`;
            }
          }
          state = "type";
          if (target.length == 0) {
            state = "done";
            this.tweening = false;
            if (this.doneCallback) {
              this.doneCallback();
            }
          }
        }
      } else if (state === "type") {
        text = text + target[text.length];
        if (text.length == target.length) {
          state = "done";
          this.tweening = false;
          if (this.doneCallback) {
            this.doneCallback();
          }
        }
      }
      this.span.innerText = text;
      this.emit("DOMTitleChange", text.length ? text : "　");
      if (state !== "done") {
        setTimeout(step, state === "type" ? 50 : 20);
      }
    };
    setTimeout(step, 30);
  }
}
function machine(state, emitter) {
  state.prompt = "hola";
  state.centroid = { x: 0, y: 0 };
  state.showModal = true;
  state.assets = [
    {
      color: "/0_IMG_5996.JPG",
      edge: "/e0_IMG_5996.JPG",
      name: "pool tension"
    },
    {
      color: "/1_IMG_6022.JPG",
      edge: "/e1_IMG_6022.JPG",
      name: "quadruple tension"
    },
    {
      color: "/2_IMG_5991.JPG",
      edge: "/e2_IMG_5991.JPG",
      name: "disturbed tension"
    },
    {
      color: "/3_IMG_6010.JPG",
      edge: "/e3_IMG_6010.JPG",
      name: "grounded tension"
    },
    {
      color: "/5_IMG_6019.JPG",
      edge: "/e5_IMG_6019.JPG",
      name: "classic tension"
    },
    {
      color: "/4_IMG_6013.JPG",
      edge: "/e4_IMG_6013.JPG",
      name: "kinky tension"
    },
    {
      color: "/6_IMG_6005.JPG",
      edge: "/e6_IMG_6005.JPG",
      name: "clean double tension"
    },
    {
      color: "/7_IMG_6012.JPG",
      edge: "/e7_IMG_6012.JPG",
      name: "rubberband tension"
    },
    {
      color: "/8_IMG_6004.JPG",
      edge: "/e8_IMG_6004.JPG",
      name: "intension"
    }
  ];
  let curIndex = 0;
  state.currentAsset = state.assets[curIndex];
  emitter.on("next asset", () => {
    curIndex = (curIndex + 1) % state.assets.length;
    state.currentAsset = state.assets[curIndex];
    state.cache(TextTweenElement, "my-text").textTween(state.currentAsset.name);
    emitter.emit("render");
    renderHydra();
  });
  emitter.on("set asset", (i) => {
    curIndex = i % state.assets.length;
    state.currentAsset = state.assets[curIndex];
    state.cache(TextTweenElement, "my-text").textTween(state.currentAsset.name);
    emitter.emit("render");
    renderHydra();
  });
  function renderHydra() {
    s0.initImage(state.currentAsset.color);
    s1.initImage(state.currentAsset.edge);
    src(o1).blend(s0, 0.03).out(o1);
    src(o2).blend(s1, 0.03).out(o2);
    src(o1).layer(src(o2).saturate(0)).layer(
      src(s1).invert().luma(0.4).invert().mask(shape(4, 0, 0.7).modulate(solid(() => -state.centroid.x, () => -state.centroid.y), 1)).modulate(
        osc(6, 0, 1.6).modulate(noise(0.1, 0.01).sub(gradient()), 1).mult(osc(10, -0.1).thresh(0.5, 0.4).kaleid(999).modulate(solid(() => -state.centroid.x, () => -state.centroid.y), 1)),
        0.1
      )
    ).scale(1, () => window.innerHeight / window.innerWidth).out();
  }
  emitter.on("DOMContentLoaded", () => {
    renderHydra();
  });
}
var Output = function({ regl: regl2, precision, label = "", width, height }) {
  this.regl = regl2;
  this.precision = precision;
  this.label = label;
  this.positionBuffer = this.regl.buffer([
    [-2, 0],
    [0, -2],
    [2, 2]
  ]);
  this.draw = () => {
  };
  this.init();
  this.pingPongIndex = 0;
  this.fbos = Array(2).fill().map(() => this.regl.framebuffer({
    color: this.regl.texture({
      mag: "nearest",
      width,
      height,
      format: "rgba"
    }),
    depthStencil: false
  }));
};
Output.prototype.resize = function(width, height) {
  this.fbos.forEach((fbo) => {
    fbo.resize(width, height);
  });
};
Output.prototype.getCurrent = function() {
  return this.fbos[this.pingPongIndex];
};
Output.prototype.getTexture = function() {
  var index = this.pingPongIndex ? 0 : 1;
  return this.fbos[index];
};
Output.prototype.init = function() {
  this.transformIndex = 0;
  this.fragHeader = `
  precision ${this.precision} float;

  uniform float time;
  varying vec2 uv;
  `;
  this.fragBody = ``;
  this.vert = `
  precision ${this.precision} float;
  attribute vec2 position;
  varying vec2 uv;

  void main () {
    uv = position;
    gl_Position = vec4(2.0 * position - 1.0, 0, 1);
  }`;
  this.attributes = {
    position: this.positionBuffer
  };
  this.uniforms = {
    time: this.regl.prop("time"),
    resolution: this.regl.prop("resolution")
  };
  this.frag = `
       ${this.fragHeader}

      void main () {
        vec4 c = vec4(0, 0, 0, 0);
        vec2 st = uv;
        ${this.fragBody}
        gl_FragColor = c;
      }
  `;
  return this;
};
Output.prototype.render = function(passes) {
  let pass = passes[0];
  var self2 = this;
  var uniforms = Object.assign(pass.uniforms, {
    prevBuffer: () => {
      return self2.fbos[self2.pingPongIndex];
    }
  });
  self2.draw = self2.regl({
    frag: pass.frag,
    vert: self2.vert,
    attributes: self2.attributes,
    uniforms,
    count: 3,
    framebuffer: () => {
      self2.pingPongIndex = self2.pingPongIndex ? 0 : 1;
      return self2.fbos[self2.pingPongIndex];
    }
  });
};
Output.prototype.tick = function(props) {
  this.draw(props);
};
var inherits_browser = { exports: {} };
if (typeof Object.create === "function") {
  inherits_browser.exports = function inherits2(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  inherits_browser.exports = function inherits2(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function() {
      };
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
var inherits_browserExports = inherits_browser.exports;
function EventEmitter$1() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || void 0;
}
var events = EventEmitter$1;
EventEmitter$1.EventEmitter = EventEmitter$1;
EventEmitter$1.prototype._events = void 0;
EventEmitter$1.prototype._maxListeners = void 0;
EventEmitter$1.defaultMaxListeners = 10;
EventEmitter$1.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError("n must be a positive number");
  this._maxListeners = n;
  return this;
};
EventEmitter$1.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;
  if (!this._events)
    this._events = {};
  if (type === "error") {
    if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er;
      } else {
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
        err.context = er;
        throw err;
      }
    }
  }
  handler = this._events[type];
  if (isUndefined(handler))
    return false;
  if (isFunction(handler)) {
    switch (arguments.length) {
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }
  return true;
};
EventEmitter$1.prototype.addListener = function(type, listener) {
  var m;
  if (!isFunction(listener))
    throw TypeError("listener must be a function");
  if (!this._events)
    this._events = {};
  if (this._events.newListener)
    this.emit(
      "newListener",
      type,
      isFunction(listener.listener) ? listener.listener : listener
    );
  if (!this._events[type])
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    this._events[type].push(listener);
  else
    this._events[type] = [this._events[type], listener];
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter$1.defaultMaxListeners;
    }
    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error(
        "(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",
        this._events[type].length
      );
      if (typeof console.trace === "function") {
        console.trace();
      }
    }
  }
  return this;
};
EventEmitter$1.prototype.on = EventEmitter$1.prototype.addListener;
EventEmitter$1.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError("listener must be a function");
  var fired = false;
  function g() {
    this.removeListener(type, g);
    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }
  g.listener = listener;
  this.on(type, g);
  return this;
};
EventEmitter$1.prototype.removeListener = function(type, listener) {
  var list, position, length, i;
  if (!isFunction(listener))
    throw TypeError("listener must be a function");
  if (!this._events || !this._events[type])
    return this;
  list = this._events[type];
  length = list.length;
  position = -1;
  if (list === listener || isFunction(list.listener) && list.listener === listener) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit("removeListener", type, listener);
  } else if (isObject(list)) {
    for (i = length; i-- > 0; ) {
      if (list[i] === listener || list[i].listener && list[i].listener === listener) {
        position = i;
        break;
      }
    }
    if (position < 0)
      return this;
    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }
    if (this._events.removeListener)
      this.emit("removeListener", type, listener);
  }
  return this;
};
EventEmitter$1.prototype.removeAllListeners = function(type) {
  var key, listeners;
  if (!this._events)
    return this;
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === "removeListener") continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners("removeListener");
    this._events = {};
    return this;
  }
  listeners = this._events[type];
  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];
  return this;
};
EventEmitter$1.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};
EventEmitter$1.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];
    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};
EventEmitter$1.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};
function isFunction(arg) {
  return typeof arg === "function";
}
function isNumber(arg) {
  return typeof arg === "number";
}
function isObject(arg) {
  return typeof arg === "object" && arg !== null;
}
function isUndefined(arg) {
  return arg === void 0;
}
var browser = commonjsGlobal.performance && commonjsGlobal.performance.now ? function now() {
  return performance.now();
} : Date.now || function now2() {
  return +/* @__PURE__ */ new Date();
};
var raf$2 = { exports: {} };
var performanceNow = { exports: {} };
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;
  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    performanceNow.exports = function() {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    performanceNow.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    performanceNow.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    performanceNow.exports = function() {
      return (/* @__PURE__ */ new Date()).getTime() - loadTime;
    };
    loadTime = (/* @__PURE__ */ new Date()).getTime();
  }
}).call(commonjsGlobal);
var performanceNowExports = performanceNow.exports;
var now$1 = performanceNowExports, root = typeof window === "undefined" ? commonjsGlobal : window, vendors = ["moz", "webkit"], suffix = "AnimationFrame", raf$1 = root["request" + suffix], caf = root["cancel" + suffix] || root["cancelRequest" + suffix];
for (var i = 0; !raf$1 && i < vendors.length; i++) {
  raf$1 = root[vendors[i] + "Request" + suffix];
  caf = root[vendors[i] + "Cancel" + suffix] || root[vendors[i] + "CancelRequest" + suffix];
}
if (!raf$1 || !caf) {
  var last = 0, id = 0, queue = [], frameDuration = 1e3 / 60;
  raf$1 = function(callback) {
    if (queue.length === 0) {
      var _now = now$1(), next = Math.max(0, frameDuration - (_now - last));
      last = next + _now;
      setTimeout(function() {
        var cp = queue.slice(0);
        queue.length = 0;
        for (var i = 0; i < cp.length; i++) {
          if (!cp[i].cancelled) {
            try {
              cp[i].callback(last);
            } catch (e2) {
              setTimeout(function() {
                throw e2;
              }, 0);
            }
          }
        }
      }, Math.round(next));
    }
    queue.push({
      handle: ++id,
      callback,
      cancelled: false
    });
    return id;
  };
  caf = function(handle) {
    for (var i = 0; i < queue.length; i++) {
      if (queue[i].handle === handle) {
        queue[i].cancelled = true;
      }
    }
  };
}
raf$2.exports = function(fn) {
  return raf$1.call(root, fn);
};
raf$2.exports.cancel = function() {
  caf.apply(root, arguments);
};
raf$2.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf$1;
  object.cancelAnimationFrame = caf;
};
var rafExports = raf$2.exports;
var inherits = inherits_browserExports;
var EventEmitter = events.EventEmitter;
var now3 = browser;
var raf = rafExports;
var rafLoop = Engine;
function Engine(fn) {
  if (!(this instanceof Engine))
    return new Engine(fn);
  this.running = false;
  this.last = now3();
  this._frame = 0;
  this._tick = this.tick.bind(this);
  if (fn)
    this.on("tick", fn);
}
inherits(Engine, EventEmitter);
Engine.prototype.start = function() {
  if (this.running)
    return;
  this.running = true;
  this.last = now3();
  this._frame = raf(this._tick);
  return this;
};
Engine.prototype.stop = function() {
  this.running = false;
  if (this._frame !== 0)
    raf.cancel(this._frame);
  this._frame = 0;
  return this;
};
Engine.prototype.tick = function() {
  this._frame = raf(this._tick);
  var time = now3();
  var dt = time - this.last;
  this.emit("tick", dt);
  this.last = time;
};
const loop = /* @__PURE__ */ getDefaultExportFromCjs(rafLoop);
function Webcam(deviceId) {
  return navigator.mediaDevices.enumerateDevices().then((devices) => devices.filter((devices2) => devices2.kind === "videoinput")).then((cameras) => {
    let constraints = { audio: false, video: true };
    if (cameras[deviceId]) {
      constraints["video"] = {
        deviceId: { exact: cameras[deviceId].deviceId }
      };
    }
    return window.navigator.mediaDevices.getUserMedia(constraints);
  }).then((stream) => {
    const video = document.createElement("video");
    video.setAttribute("autoplay", "");
    video.setAttribute("muted", "");
    video.setAttribute("playsinline", "");
    video.srcObject = stream;
    return new Promise((resolve, reject) => {
      video.addEventListener("loadedmetadata", () => {
        video.play().then(() => resolve({ video }));
      });
    });
  }).catch(console.log.bind(console));
}
function Screen(options) {
  return new Promise(function(resolve, reject) {
    navigator.mediaDevices.getDisplayMedia(options).then((stream) => {
      const video = document.createElement("video");
      video.srcObject = stream;
      video.addEventListener("loadedmetadata", () => {
        video.play();
        resolve({ video });
      });
    }).catch((err) => reject(err));
  });
}
class HydraSource {
  constructor({ regl: regl2, width, height, pb, label = "" }) {
    this.label = label;
    this.regl = regl2;
    this.src = null;
    this.dynamic = true;
    this.width = width;
    this.height = height;
    this.tex = this.regl.texture({
      //  shape: [width, height]
      shape: [1, 1]
    });
    this.pb = pb;
  }
  init(opts, params) {
    if ("src" in opts) {
      this.src = opts.src;
      this.tex = this.regl.texture({ data: this.src, ...params });
    }
    if ("dynamic" in opts) this.dynamic = opts.dynamic;
  }
  initCam(index, params) {
    const self2 = this;
    Webcam(index).then((response) => {
      self2.src = response.video;
      self2.dynamic = true;
      self2.tex = self2.regl.texture({ data: self2.src, ...params });
    }).catch((err) => console.log("could not get camera", err));
  }
  initVideo(url = "", params) {
    const vid = document.createElement("video");
    vid.crossOrigin = "anonymous";
    vid.autoplay = true;
    vid.loop = true;
    vid.muted = true;
    vid.addEventListener("loadeddata", () => {
      this.src = vid;
      vid.play();
      this.tex = this.regl.texture({ data: this.src, ...params });
      this.dynamic = true;
    });
    vid.src = url;
  }
  initImage(url = "", params) {
    const img = document.createElement("img");
    img.crossOrigin = "anonymous";
    img.src = url;
    img.onload = () => {
      this.src = img;
      this.dynamic = false;
      this.tex = this.regl.texture({ data: this.src, ...params });
    };
  }
  initStream(streamName, params) {
    let self2 = this;
    if (streamName && this.pb) {
      this.pb.initSource(streamName);
      this.pb.on("got video", function(nick, video) {
        if (nick === streamName) {
          self2.src = video;
          self2.dynamic = true;
          self2.tex = self2.regl.texture({ data: self2.src, ...params });
        }
      });
    }
  }
  // index only relevant in atom-hydra + desktop apps
  initScreen(index = 0, params) {
    const self2 = this;
    Screen().then(function(response) {
      self2.src = response.video;
      self2.tex = self2.regl.texture({ data: self2.src, ...params });
      self2.dynamic = true;
    }).catch((err) => console.log("could not get screen", err));
  }
  resize(width, height) {
    this.width = width;
    this.height = height;
  }
  clear() {
    if (this.src && this.src.srcObject) {
      if (this.src.srcObject.getTracks) {
        this.src.srcObject.getTracks().forEach((track) => track.stop());
      }
    }
    this.src = null;
    this.tex = this.regl.texture({ shape: [1, 1] });
  }
  tick(time) {
    if (this.src !== null && this.dynamic === true) {
      if (this.src.videoWidth && this.src.videoWidth !== this.tex.width) {
        console.log(
          this.src.videoWidth,
          this.src.videoHeight,
          this.tex.width,
          this.tex.height
        );
        this.tex.resize(this.src.videoWidth, this.src.videoHeight);
      }
      if (this.src.width && this.src.width !== this.tex.width) {
        this.tex.resize(this.src.width, this.src.height);
      }
      this.tex.subimage(this.src);
    }
  }
  getTexture() {
    return this.tex;
  }
}
const mouse = {};
function mouseButtons(ev) {
  if (typeof ev === "object") {
    if ("buttons" in ev) {
      return ev.buttons;
    } else if ("which" in ev) {
      var b = ev.which;
      if (b === 2) {
        return 4;
      } else if (b === 3) {
        return 2;
      } else if (b > 0) {
        return 1 << b - 1;
      }
    } else if ("button" in ev) {
      var b = ev.button;
      if (b === 1) {
        return 4;
      } else if (b === 2) {
        return 2;
      } else if (b >= 0) {
        return 1 << b;
      }
    }
  }
  return 0;
}
mouse.buttons = mouseButtons;
function mouseElement(ev) {
  return ev.target || ev.srcElement || window;
}
mouse.element = mouseElement;
function mouseRelativeX(ev) {
  if (typeof ev === "object") {
    if ("pageX" in ev) {
      return ev.pageX;
    }
  }
  return 0;
}
mouse.x = mouseRelativeX;
function mouseRelativeY(ev) {
  if (typeof ev === "object") {
    if ("pageY" in ev) {
      return ev.pageY;
    }
  }
  return 0;
}
mouse.y = mouseRelativeY;
function mouseListen(element, callback) {
  if (!callback) {
    callback = element;
    element = window;
  }
  var buttonState = 0;
  var x2 = 0;
  var y = 0;
  var mods = {
    shift: false,
    alt: false,
    control: false,
    meta: false
  };
  var attached = false;
  function updateMods(ev) {
    var changed = false;
    if ("altKey" in ev) {
      changed = changed || ev.altKey !== mods.alt;
      mods.alt = !!ev.altKey;
    }
    if ("shiftKey" in ev) {
      changed = changed || ev.shiftKey !== mods.shift;
      mods.shift = !!ev.shiftKey;
    }
    if ("ctrlKey" in ev) {
      changed = changed || ev.ctrlKey !== mods.control;
      mods.control = !!ev.ctrlKey;
    }
    if ("metaKey" in ev) {
      changed = changed || ev.metaKey !== mods.meta;
      mods.meta = !!ev.metaKey;
    }
    return changed;
  }
  function handleEvent(nextButtons, ev) {
    var nextX = mouse.x(ev);
    var nextY = mouse.y(ev);
    if ("buttons" in ev) {
      nextButtons = ev.buttons | 0;
    }
    if (nextButtons !== buttonState || nextX !== x2 || nextY !== y || updateMods(ev)) {
      buttonState = nextButtons | 0;
      x2 = nextX || 0;
      y = nextY || 0;
      callback && callback(buttonState, x2, y, mods);
    }
  }
  function clearState(ev) {
    handleEvent(0, ev);
  }
  function handleBlur() {
    if (buttonState || x2 || y || mods.shift || mods.alt || mods.meta || mods.control) {
      x2 = y = 0;
      buttonState = 0;
      mods.shift = mods.alt = mods.control = mods.meta = false;
      callback && callback(0, 0, 0, mods);
    }
  }
  function handleMods(ev) {
    if (updateMods(ev)) {
      callback && callback(buttonState, x2, y, mods);
    }
  }
  function handleMouseMove(ev) {
    if (mouse.buttons(ev) === 0) {
      handleEvent(0, ev);
    } else {
      handleEvent(buttonState, ev);
    }
  }
  function handleMouseDown(ev) {
    handleEvent(buttonState | mouse.buttons(ev), ev);
  }
  function handleMouseUp(ev) {
    handleEvent(buttonState & ~mouse.buttons(ev), ev);
  }
  function attachListeners() {
    if (attached) {
      return;
    }
    attached = true;
    element.addEventListener("mousemove", handleMouseMove);
    element.addEventListener("mousedown", handleMouseDown);
    element.addEventListener("mouseup", handleMouseUp);
    element.addEventListener("mouseleave", clearState);
    element.addEventListener("mouseenter", clearState);
    element.addEventListener("mouseout", clearState);
    element.addEventListener("mouseover", clearState);
    element.addEventListener("blur", handleBlur);
    element.addEventListener("keyup", handleMods);
    element.addEventListener("keydown", handleMods);
    element.addEventListener("keypress", handleMods);
    if (element !== window) {
      window.addEventListener("blur", handleBlur);
      window.addEventListener("keyup", handleMods);
      window.addEventListener("keydown", handleMods);
      window.addEventListener("keypress", handleMods);
    }
  }
  function detachListeners() {
    if (!attached) {
      return;
    }
    attached = false;
    element.removeEventListener("mousemove", handleMouseMove);
    element.removeEventListener("mousedown", handleMouseDown);
    element.removeEventListener("mouseup", handleMouseUp);
    element.removeEventListener("mouseleave", clearState);
    element.removeEventListener("mouseenter", clearState);
    element.removeEventListener("mouseout", clearState);
    element.removeEventListener("mouseover", clearState);
    element.removeEventListener("blur", handleBlur);
    element.removeEventListener("keyup", handleMods);
    element.removeEventListener("keydown", handleMods);
    element.removeEventListener("keypress", handleMods);
    if (element !== window) {
      window.removeEventListener("blur", handleBlur);
      window.removeEventListener("keyup", handleMods);
      window.removeEventListener("keydown", handleMods);
      window.removeEventListener("keypress", handleMods);
    }
  }
  attachListeners();
  var result = {
    element
  };
  Object.defineProperties(result, {
    enabled: {
      get: function() {
        return attached;
      },
      set: function(f) {
        if (f) {
          attachListeners();
        } else {
          detachListeners();
        }
      },
      enumerable: true
    },
    buttons: {
      get: function() {
        return buttonState;
      },
      enumerable: true
    },
    x: {
      get: function() {
        return x2;
      },
      enumerable: true
    },
    y: {
      get: function() {
        return y;
      },
      enumerable: true
    },
    mods: {
      get: function() {
        return mods;
      },
      enumerable: true
    }
  });
  return result;
}
var meyda_min = { exports: {} };
(function(module, exports) {
  !function(r, t) {
    module.exports = t();
  }(commonjsGlobal, function() {
    function r(r2, t2, e3) {
      for (var a3, n2 = 0, o3 = t2.length; n2 < o3; n2++) !a3 && n2 in t2 || (a3 || (a3 = Array.prototype.slice.call(t2, 0, n2)), a3[n2] = t2[n2]);
      return r2.concat(a3 || Array.prototype.slice.call(t2));
    }
    var t = Object.freeze({ __proto__: null, blackman: function(r2) {
      for (var t2 = new Float32Array(r2), e3 = 2 * Math.PI / (r2 - 1), a3 = 2 * e3, n2 = 0; n2 < r2 / 2; n2++) t2[n2] = 0.42 - 0.5 * Math.cos(n2 * e3) + 0.08 * Math.cos(n2 * a3);
      for (n2 = Math.ceil(r2 / 2); n2 > 0; n2--) t2[r2 - n2] = t2[n2 - 1];
      return t2;
    }, sine: function(r2) {
      for (var t2 = Math.PI / (r2 - 1), e3 = new Float32Array(r2), a3 = 0; a3 < r2; a3++) e3[a3] = Math.sin(t2 * a3);
      return e3;
    }, hanning: function(r2) {
      for (var t2 = new Float32Array(r2), e3 = 0; e3 < r2; e3++) t2[e3] = 0.5 - 0.5 * Math.cos(2 * Math.PI * e3 / (r2 - 1));
      return t2;
    }, hamming: function(r2) {
      for (var t2 = new Float32Array(r2), e3 = 0; e3 < r2; e3++) t2[e3] = 0.54 - 0.46 * Math.cos(2 * Math.PI * (e3 / r2 - 1));
      return t2;
    } }), e2 = {};
    function a2(r2) {
      for (; r2 % 2 == 0 && r2 > 1; ) r2 /= 2;
      return 1 === r2;
    }
    function n(r2, a3) {
      if ("rect" !== a3) {
        if ("" !== a3 && a3 || (a3 = "hanning"), e2[a3] || (e2[a3] = {}), !e2[a3][r2.length]) try {
          e2[a3][r2.length] = t[a3](r2.length);
        } catch (r3) {
          throw new Error("Invalid windowing function");
        }
        r2 = function(r3, t2) {
          for (var e3 = [], a4 = 0; a4 < Math.min(r3.length, t2.length); a4++) e3[a4] = r3[a4] * t2[a4];
          return e3;
        }(r2, e2[a3][r2.length]);
      }
      return r2;
    }
    function o(r2, t2, e3) {
      for (var a3 = new Float32Array(r2), n2 = 0; n2 < a3.length; n2++) a3[n2] = n2 * t2 / e3, a3[n2] = 13 * Math.atan(a3[n2] / 1315.8) + 3.5 * Math.atan(Math.pow(a3[n2] / 7518, 2));
      return a3;
    }
    function i(r2) {
      return Float32Array.from(r2);
    }
    function u(r2) {
      return 1125 * Math.log(1 + r2 / 700);
    }
    function f(r2, t2, e3) {
      for (var a3, n2 = new Float32Array(r2 + 2), o3 = new Float32Array(r2 + 2), i2 = t2 / 2, f2 = u(0), c2 = (u(i2) - f2) / (r2 + 1), s2 = new Array(r2 + 2), l2 = 0; l2 < n2.length; l2++) n2[l2] = l2 * c2, o3[l2] = (a3 = n2[l2], 700 * (Math.exp(a3 / 1125) - 1)), s2[l2] = Math.floor((e3 + 1) * o3[l2] / t2);
      for (var m2 = new Array(r2), p2 = 0; p2 < m2.length; p2++) {
        m2[p2] = new Array(e3 / 2 + 1).fill(0);
        for (l2 = s2[p2]; l2 < s2[p2 + 1]; l2++) m2[p2][l2] = (l2 - s2[p2]) / (s2[p2 + 1] - s2[p2]);
        for (l2 = s2[p2 + 1]; l2 < s2[p2 + 2]; l2++) m2[p2][l2] = (s2[p2 + 2] - l2) / (s2[p2 + 2] - s2[p2 + 1]);
      }
      return m2;
    }
    function c(t2, e3, a3, n2, o3, i2, u2) {
      void 0 === n2 && (n2 = 5), void 0 === o3 && (o3 = 2), void 0 === i2 && (i2 = true), void 0 === u2 && (u2 = 440);
      var f2 = Math.floor(a3 / 2) + 1, c2 = new Array(a3).fill(0).map(function(r2, n3) {
        return t2 * function(r3, t3) {
          return Math.log2(16 * r3 / t3);
        }(e3 * n3 / a3, u2);
      });
      c2[0] = c2[1] - 1.5 * t2;
      var s2, l2, m2, p2 = c2.slice(1).map(function(r2, t3) {
        return Math.max(r2 - c2[t3]);
      }, 1).concat([1]), h2 = Math.round(t2 / 2), g2 = new Array(t2).fill(0).map(function(r2, e4) {
        return c2.map(function(r3) {
          return (10 * t2 + h2 + r3 - e4) % t2 - h2;
        });
      }), w2 = g2.map(function(r2, t3) {
        return r2.map(function(r3, e4) {
          return Math.exp(-0.5 * Math.pow(2 * g2[t3][e4] / p2[e4], 2));
        });
      });
      if (l2 = (s2 = w2)[0].map(function() {
        return 0;
      }), m2 = s2.reduce(function(r2, t3) {
        return t3.forEach(function(t4, e4) {
          r2[e4] += Math.pow(t4, 2);
        }), r2;
      }, l2).map(Math.sqrt), w2 = s2.map(function(r2, t3) {
        return r2.map(function(r3, t4) {
          return r3 / (m2[t4] || 1);
        });
      }), o3) {
        var v2 = c2.map(function(r2) {
          return Math.exp(-0.5 * Math.pow((r2 / t2 - n2) / o3, 2));
        });
        w2 = w2.map(function(r2) {
          return r2.map(function(r3, t3) {
            return r3 * v2[t3];
          });
        });
      }
      return i2 && (w2 = r(r([], w2.slice(3), true), w2.slice(0, 3))), w2.map(function(r2) {
        return r2.slice(0, f2);
      });
    }
    function s(r2, t2) {
      for (var e3 = 0, a3 = 0, n2 = 0; n2 < t2.length; n2++) e3 += Math.pow(n2, r2) * Math.abs(t2[n2]), a3 += t2[n2];
      return e3 / a3;
    }
    function l(r2) {
      var t2 = r2.ampSpectrum, e3 = r2.barkScale, a3 = r2.numberOfBarkBands, n2 = void 0 === a3 ? 24 : a3;
      if ("object" != typeof t2 || "object" != typeof e3) throw new TypeError();
      var o3 = n2, i2 = new Float32Array(o3), u2 = 0, f2 = t2, c2 = new Int32Array(o3 + 1);
      c2[0] = 0;
      for (var s2 = e3[f2.length - 1] / o3, l2 = 1, m2 = 0; m2 < f2.length; m2++) for (; e3[m2] > s2; ) c2[l2++] = m2, s2 = l2 * e3[f2.length - 1] / o3;
      c2[o3] = f2.length - 1;
      for (m2 = 0; m2 < o3; m2++) {
        for (var p2 = 0, h2 = c2[m2]; h2 < c2[m2 + 1]; h2++) p2 += f2[h2];
        i2[m2] = Math.pow(p2, 0.23);
      }
      for (m2 = 0; m2 < i2.length; m2++) u2 += i2[m2];
      return { specific: i2, total: u2 };
    }
    function m(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      for (var e3 = new Float32Array(t2.length), a3 = 0; a3 < e3.length; a3++) e3[a3] = Math.pow(t2[a3], 2);
      return e3;
    }
    function p(r2) {
      var t2 = r2.ampSpectrum, e3 = r2.melFilterBank, a3 = r2.bufferSize;
      if ("object" != typeof t2) throw new TypeError("Valid ampSpectrum is required to generate melBands");
      if ("object" != typeof e3) throw new TypeError("Valid melFilterBank is required to generate melBands");
      for (var n2 = m({ ampSpectrum: t2 }), o3 = e3.length, i2 = Array(o3), u2 = new Float32Array(o3), f2 = 0; f2 < u2.length; f2++) {
        i2[f2] = new Float32Array(a3 / 2), u2[f2] = 0;
        for (var c2 = 0; c2 < a3 / 2; c2++) i2[f2][c2] = e3[f2][c2] * n2[c2], u2[f2] += i2[f2][c2];
        u2[f2] = Math.log(u2[f2] + 1);
      }
      return Array.prototype.slice.call(u2);
    }
    function h(r2) {
      return r2 && r2.__esModule && Object.prototype.hasOwnProperty.call(r2, "default") ? r2.default : r2;
    }
    var g = {}, w = null;
    var v = function(r2, t2) {
      var e3 = r2.length;
      return t2 = t2 || 2, w && w[e3] || function(r3) {
        (w = w || {})[r3] = new Array(r3 * r3);
        for (var t3 = Math.PI / r3, e4 = 0; e4 < r3; e4++) for (var a3 = 0; a3 < r3; a3++) w[r3][a3 + e4 * r3] = Math.cos(t3 * (a3 + 0.5) * e4);
      }(e3), r2.map(function() {
        return 0;
      }).map(function(a3, n2) {
        return t2 * r2.reduce(function(r3, t3, a4, o3) {
          return r3 + t3 * w[e3][a4 + n2 * e3];
        }, 0);
      });
    };
    !function(r2) {
      r2.exports = v;
    }({ get exports() {
      return g;
    }, set exports(r2) {
      g = r2;
    } });
    var d = h(g);
    var y = Object.freeze({ __proto__: null, buffer: function(r2) {
      return r2.signal;
    }, rms: function(r2) {
      var t2 = r2.signal;
      if ("object" != typeof t2) throw new TypeError();
      for (var e3 = 0, a3 = 0; a3 < t2.length; a3++) e3 += Math.pow(t2[a3], 2);
      return e3 /= t2.length, e3 = Math.sqrt(e3);
    }, energy: function(r2) {
      var t2 = r2.signal;
      if ("object" != typeof t2) throw new TypeError();
      for (var e3 = 0, a3 = 0; a3 < t2.length; a3++) e3 += Math.pow(Math.abs(t2[a3]), 2);
      return e3;
    }, complexSpectrum: function(r2) {
      return r2.complexSpectrum;
    }, spectralSlope: function(r2) {
      var t2 = r2.ampSpectrum, e3 = r2.sampleRate, a3 = r2.bufferSize;
      if ("object" != typeof t2) throw new TypeError();
      for (var n2 = 0, o3 = 0, i2 = new Float32Array(t2.length), u2 = 0, f2 = 0, c2 = 0; c2 < t2.length; c2++) {
        n2 += t2[c2];
        var s2 = c2 * e3 / a3;
        i2[c2] = s2, u2 += s2 * s2, o3 += s2, f2 += s2 * t2[c2];
      }
      return (t2.length * f2 - o3 * n2) / (n2 * (u2 - Math.pow(o3, 2)));
    }, spectralCentroid: function(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      return s(1, t2);
    }, spectralRolloff: function(r2) {
      var t2 = r2.ampSpectrum, e3 = r2.sampleRate;
      if ("object" != typeof t2) throw new TypeError();
      for (var a3 = t2, n2 = e3 / (2 * (a3.length - 1)), o3 = 0, i2 = 0; i2 < a3.length; i2++) o3 += a3[i2];
      for (var u2 = 0.99 * o3, f2 = a3.length - 1; o3 > u2 && f2 >= 0; ) o3 -= a3[f2], --f2;
      return (f2 + 1) * n2;
    }, spectralFlatness: function(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      for (var e3 = 0, a3 = 0, n2 = 0; n2 < t2.length; n2++) e3 += Math.log(t2[n2]), a3 += t2[n2];
      return Math.exp(e3 / t2.length) * t2.length / a3;
    }, spectralSpread: function(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      return Math.sqrt(s(2, t2) - Math.pow(s(1, t2), 2));
    }, spectralSkewness: function(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      var e3 = s(1, t2), a3 = s(2, t2), n2 = s(3, t2);
      return (2 * Math.pow(e3, 3) - 3 * e3 * a3 + n2) / Math.pow(Math.sqrt(a3 - Math.pow(e3, 2)), 3);
    }, spectralKurtosis: function(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      var e3 = t2, a3 = s(1, e3), n2 = s(2, e3), o3 = s(3, e3), i2 = s(4, e3);
      return (-3 * Math.pow(a3, 4) + 6 * a3 * n2 - 4 * a3 * o3 + i2) / Math.pow(Math.sqrt(n2 - Math.pow(a3, 2)), 4);
    }, amplitudeSpectrum: function(r2) {
      return r2.ampSpectrum;
    }, zcr: function(r2) {
      var t2 = r2.signal;
      if ("object" != typeof t2) throw new TypeError();
      for (var e3 = 0, a3 = 1; a3 < t2.length; a3++) (t2[a3 - 1] >= 0 && t2[a3] < 0 || t2[a3 - 1] < 0 && t2[a3] >= 0) && e3++;
      return e3;
    }, loudness: l, perceptualSpread: function(r2) {
      for (var t2 = l({ ampSpectrum: r2.ampSpectrum, barkScale: r2.barkScale }), e3 = 0, a3 = 0; a3 < t2.specific.length; a3++) t2.specific[a3] > e3 && (e3 = t2.specific[a3]);
      return Math.pow((t2.total - e3) / t2.total, 2);
    }, perceptualSharpness: function(r2) {
      for (var t2 = l({ ampSpectrum: r2.ampSpectrum, barkScale: r2.barkScale }), e3 = t2.specific, a3 = 0, n2 = 0; n2 < e3.length; n2++) a3 += n2 < 15 ? (n2 + 1) * e3[n2 + 1] : 0.066 * Math.exp(0.171 * (n2 + 1));
      return a3 *= 0.11 / t2.total;
    }, powerSpectrum: m, mfcc: function(r2) {
      var t2 = r2.ampSpectrum, e3 = r2.melFilterBank, a3 = r2.numberOfMFCCCoefficients, n2 = r2.bufferSize, o3 = Math.min(40, Math.max(1, a3 || 13));
      if (e3.length < o3) throw new Error("Insufficient filter bank for requested number of coefficients");
      var i2 = p({ ampSpectrum: t2, melFilterBank: e3, bufferSize: n2 });
      return d(i2).slice(0, o3);
    }, chroma: function(r2) {
      var t2 = r2.ampSpectrum, e3 = r2.chromaFilterBank;
      if ("object" != typeof t2) throw new TypeError("Valid ampSpectrum is required to generate chroma");
      if ("object" != typeof e3) throw new TypeError("Valid chromaFilterBank is required to generate chroma");
      var a3 = e3.map(function(r3, e4) {
        return t2.reduce(function(t3, e5, a4) {
          return t3 + e5 * r3[a4];
        }, 0);
      }), n2 = Math.max.apply(Math, a3);
      return n2 ? a3.map(function(r3) {
        return r3 / n2;
      }) : a3;
    }, spectralFlux: function(r2) {
      var t2 = r2.signal, e3 = r2.previousSignal, a3 = r2.bufferSize;
      if ("object" != typeof t2 || "object" != typeof e3) throw new TypeError();
      for (var n2 = 0, o3 = -a3 / 2; o3 < t2.length / 2 - 1; o3++) x = Math.abs(t2[o3]) - Math.abs(e3[o3]), n2 += (x + Math.abs(x)) / 2;
      return n2;
    }, spectralCrest: function(r2) {
      var t2 = r2.ampSpectrum;
      if ("object" != typeof t2) throw new TypeError();
      var e3 = 0, a3 = -1 / 0;
      return t2.forEach(function(r3) {
        e3 += Math.pow(r3, 2), a3 = r3 > a3 ? r3 : a3;
      }), e3 /= t2.length, e3 = Math.sqrt(e3), a3 / e3;
    }, melBands: p });
    function S(r2) {
      if (Array.isArray(r2)) {
        for (var t2 = 0, e3 = Array(r2.length); t2 < r2.length; t2++) e3[t2] = r2[t2];
        return e3;
      }
      return Array.from(r2);
    }
    var _ = {}, b = {}, M = { bitReverseArray: function(r2) {
      if (void 0 === _[r2]) {
        for (var t2 = (r2 - 1).toString(2).length, e3 = "0".repeat(t2), a3 = {}, n2 = 0; n2 < r2; n2++) {
          var o3 = n2.toString(2);
          o3 = e3.substr(o3.length) + o3, o3 = [].concat(S(o3)).reverse().join(""), a3[n2] = parseInt(o3, 2);
        }
        _[r2] = a3;
      }
      return _[r2];
    }, multiply: function(r2, t2) {
      return { real: r2.real * t2.real - r2.imag * t2.imag, imag: r2.real * t2.imag + r2.imag * t2.real };
    }, add: function(r2, t2) {
      return { real: r2.real + t2.real, imag: r2.imag + t2.imag };
    }, subtract: function(r2, t2) {
      return { real: r2.real - t2.real, imag: r2.imag - t2.imag };
    }, euler: function(r2, t2) {
      var e3 = -2 * Math.PI * r2 / t2;
      return { real: Math.cos(e3), imag: Math.sin(e3) };
    }, conj: function(r2) {
      return r2.imag *= -1, r2;
    }, constructComplexArray: function(r2) {
      var t2 = {};
      t2.real = void 0 === r2.real ? r2.slice() : r2.real.slice();
      var e3 = t2.real.length;
      return void 0 === b[e3] && (b[e3] = Array.apply(null, Array(e3)).map(Number.prototype.valueOf, 0)), t2.imag = b[e3].slice(), t2;
    } }, F = function(r2) {
      var t2 = {};
      void 0 === r2.real || void 0 === r2.imag ? t2 = M.constructComplexArray(r2) : (t2.real = r2.real.slice(), t2.imag = r2.imag.slice());
      var e3 = t2.real.length, a3 = Math.log2(e3);
      if (Math.round(a3) != a3) throw new Error("Input size must be a power of 2.");
      if (t2.real.length != t2.imag.length) throw new Error("Real and imaginary components must have the same length.");
      for (var n2 = M.bitReverseArray(e3), o3 = { real: [], imag: [] }, i2 = 0; i2 < e3; i2++) o3.real[n2[i2]] = t2.real[i2], o3.imag[n2[i2]] = t2.imag[i2];
      for (var u2 = 0; u2 < e3; u2++) t2.real[u2] = o3.real[u2], t2.imag[u2] = o3.imag[u2];
      for (var f2 = 1; f2 <= a3; f2++) for (var c2 = Math.pow(2, f2), s2 = 0; s2 < c2 / 2; s2++) for (var l2 = M.euler(s2, c2), m2 = 0; m2 < e3 / c2; m2++) {
        var p2 = c2 * m2 + s2, h2 = c2 * m2 + s2 + c2 / 2, g2 = { real: t2.real[p2], imag: t2.imag[p2] }, w2 = { real: t2.real[h2], imag: t2.imag[h2] }, v2 = M.multiply(l2, w2), d2 = M.subtract(g2, v2);
        t2.real[h2] = d2.real, t2.imag[h2] = d2.imag;
        var y2 = M.add(v2, g2);
        t2.real[p2] = y2.real, t2.imag[p2] = y2.imag;
      }
      return t2;
    }, A = F, E = function() {
      function r2(r3, t2) {
        var e3 = this;
        if (this._m = t2, !r3.audioContext) throw this._m.errors.noAC;
        if (r3.bufferSize && !a2(r3.bufferSize)) throw this._m._errors.notPow2;
        if (!r3.source) throw this._m._errors.noSource;
        this._m.audioContext = r3.audioContext, this._m.bufferSize = r3.bufferSize || this._m.bufferSize || 256, this._m.hopSize = r3.hopSize || this._m.hopSize || this._m.bufferSize, this._m.sampleRate = r3.sampleRate || this._m.audioContext.sampleRate || 44100, this._m.callback = r3.callback, this._m.windowingFunction = r3.windowingFunction || "hanning", this._m.featureExtractors = y, this._m.EXTRACTION_STARTED = r3.startImmediately || false, this._m.channel = "number" == typeof r3.channel ? r3.channel : 0, this._m.inputs = r3.inputs || 1, this._m.outputs = r3.outputs || 1, this._m.numberOfMFCCCoefficients = r3.numberOfMFCCCoefficients || this._m.numberOfMFCCCoefficients || 13, this._m.numberOfBarkBands = r3.numberOfBarkBands || this._m.numberOfBarkBands || 24, this._m.spn = this._m.audioContext.createScriptProcessor(this._m.bufferSize, this._m.inputs, this._m.outputs), this._m.spn.connect(this._m.audioContext.destination), this._m._featuresToExtract = r3.featureExtractors || [], this._m.barkScale = o(this._m.bufferSize, this._m.sampleRate, this._m.bufferSize), this._m.melFilterBank = f(Math.max(this._m.melBands, this._m.numberOfMFCCCoefficients), this._m.sampleRate, this._m.bufferSize), this._m.inputData = null, this._m.previousInputData = null, this._m.frame = null, this._m.previousFrame = null, this.setSource(r3.source), this._m.spn.onaudioprocess = function(r4) {
          var t3;
          null !== e3._m.inputData && (e3._m.previousInputData = e3._m.inputData), e3._m.inputData = r4.inputBuffer.getChannelData(e3._m.channel), e3._m.previousInputData ? ((t3 = new Float32Array(e3._m.previousInputData.length + e3._m.inputData.length - e3._m.hopSize)).set(e3._m.previousInputData.slice(e3._m.hopSize)), t3.set(e3._m.inputData, e3._m.previousInputData.length - e3._m.hopSize)) : t3 = e3._m.inputData, function(r5, t4, e4) {
            if (r5.length < t4) throw new Error("Buffer is too short for frame length");
            if (e4 < 1) throw new Error("Hop length cannot be less that 1");
            if (t4 < 1) throw new Error("Frame length cannot be less that 1");
            var a3 = 1 + Math.floor((r5.length - t4) / e4);
            return new Array(a3).fill(0).map(function(a4, n2) {
              return r5.slice(n2 * e4, n2 * e4 + t4);
            });
          }(t3, e3._m.bufferSize, e3._m.hopSize).forEach(function(r5) {
            e3._m.frame = r5;
            var t4 = e3._m.extract(e3._m._featuresToExtract, e3._m.frame, e3._m.previousFrame);
            "function" == typeof e3._m.callback && e3._m.EXTRACTION_STARTED && e3._m.callback(t4), e3._m.previousFrame = e3._m.frame;
          });
        };
      }
      return r2.prototype.start = function(r3) {
        this._m._featuresToExtract = r3 || this._m._featuresToExtract, this._m.EXTRACTION_STARTED = true;
      }, r2.prototype.stop = function() {
        this._m.EXTRACTION_STARTED = false;
      }, r2.prototype.setSource = function(r3) {
        this._m.source && this._m.source.disconnect(this._m.spn), this._m.source = r3, this._m.source.connect(this._m.spn);
      }, r2.prototype.setChannel = function(r3) {
        r3 <= this._m.inputs ? this._m.channel = r3 : console.error("Channel ".concat(r3, " does not exist. Make sure you've provided a value for 'inputs' that is greater than ").concat(r3, " when instantiating the MeydaAnalyzer"));
      }, r2.prototype.get = function(r3) {
        return this._m.inputData ? this._m.extract(r3 || this._m._featuresToExtract, this._m.inputData, this._m.previousInputData) : null;
      }, r2;
    }(), C = { audioContext: null, spn: null, bufferSize: 512, sampleRate: 44100, melBands: 26, chromaBands: 12, callback: null, windowingFunction: "hanning", featureExtractors: y, EXTRACTION_STARTED: false, numberOfMFCCCoefficients: 13, numberOfBarkBands: 24, _featuresToExtract: [], windowing: n, _errors: { notPow2: new Error("Meyda: Buffer size must be a power of 2, e.g. 64 or 512"), featureUndef: new Error("Meyda: No features defined."), invalidFeatureFmt: new Error("Meyda: Invalid feature format"), invalidInput: new Error("Meyda: Invalid input."), noAC: new Error("Meyda: No AudioContext specified."), noSource: new Error("Meyda: No source node specified.") }, createMeydaAnalyzer: function(r2) {
      return new E(r2, Object.assign({}, C));
    }, listAvailableFeatureExtractors: function() {
      return Object.keys(this.featureExtractors);
    }, extract: function(r2, t2, e3) {
      var n2 = this;
      if (!t2) throw this._errors.invalidInput;
      if ("object" != typeof t2) throw this._errors.invalidInput;
      if (!r2) throw this._errors.featureUndef;
      if (!a2(t2.length)) throw this._errors.notPow2;
      void 0 !== this.barkScale && this.barkScale.length == this.bufferSize || (this.barkScale = o(this.bufferSize, this.sampleRate, this.bufferSize)), void 0 !== this.melFilterBank && this.barkScale.length == this.bufferSize && this.melFilterBank.length == this.melBands || (this.melFilterBank = f(Math.max(this.melBands, this.numberOfMFCCCoefficients), this.sampleRate, this.bufferSize)), void 0 !== this.chromaFilterBank && this.chromaFilterBank.length == this.chromaBands || (this.chromaFilterBank = c(this.chromaBands, this.sampleRate, this.bufferSize)), "buffer" in t2 && void 0 === t2.buffer ? this.signal = i(t2) : this.signal = t2;
      var u2 = k(t2, this.windowingFunction, this.bufferSize);
      if (this.signal = u2.windowedSignal, this.complexSpectrum = u2.complexSpectrum, this.ampSpectrum = u2.ampSpectrum, e3) {
        var s2 = k(e3, this.windowingFunction, this.bufferSize);
        this.previousSignal = s2.windowedSignal, this.previousComplexSpectrum = s2.complexSpectrum, this.previousAmpSpectrum = s2.ampSpectrum;
      }
      var l2 = function(r3) {
        return n2.featureExtractors[r3]({ ampSpectrum: n2.ampSpectrum, chromaFilterBank: n2.chromaFilterBank, complexSpectrum: n2.complexSpectrum, signal: n2.signal, bufferSize: n2.bufferSize, sampleRate: n2.sampleRate, barkScale: n2.barkScale, melFilterBank: n2.melFilterBank, previousSignal: n2.previousSignal, previousAmpSpectrum: n2.previousAmpSpectrum, previousComplexSpectrum: n2.previousComplexSpectrum, numberOfMFCCCoefficients: n2.numberOfMFCCCoefficients, numberOfBarkBands: n2.numberOfBarkBands });
      };
      if ("object" == typeof r2) return r2.reduce(function(r3, t3) {
        var e4;
        return Object.assign({}, r3, ((e4 = {})[t3] = l2(t3), e4));
      }, {});
      if ("string" == typeof r2) return l2(r2);
      throw this._errors.invalidFeatureFmt;
    } }, k = function(r2, t2, e3) {
      var a3 = {};
      void 0 === r2.buffer ? a3.signal = i(r2) : a3.signal = r2, a3.windowedSignal = n(a3.signal, t2), a3.complexSpectrum = A(a3.windowedSignal), a3.ampSpectrum = new Float32Array(e3 / 2);
      for (var o3 = 0; o3 < e3 / 2; o3++) a3.ampSpectrum[o3] = Math.sqrt(Math.pow(a3.complexSpectrum.real[o3], 2) + Math.pow(a3.complexSpectrum.imag[o3], 2));
      return a3;
    };
    return "undefined" != typeof window && (window.Meyda = C), C;
  });
})(meyda_min);
var meyda_minExports = meyda_min.exports;
const Meyda = /* @__PURE__ */ getDefaultExportFromCjs(meyda_minExports);
class Audio {
  constructor({
    numBins = 4,
    cutoff = 2,
    smooth = 0.4,
    max = 15,
    scale = 10,
    isDrawing = false,
    parentEl = document.body
  }) {
    this.vol = 0;
    this.scale = scale;
    this.max = max;
    this.cutoff = cutoff;
    this.smooth = smooth;
    this.setBins(numBins);
    this.beat = {
      holdFrames: 20,
      threshold: 40,
      _cutoff: 0,
      // adaptive based on sound state
      decay: 0.98,
      _framesSinceBeat: 0
      // keeps track of frames
    };
    this.onBeat = () => {
    };
    this.canvas = document.createElement("canvas");
    this.canvas.width = 100;
    this.canvas.height = 80;
    this.canvas.style.width = "100px";
    this.canvas.style.height = "80px";
    this.canvas.style.position = "absolute";
    this.canvas.style.right = "0px";
    this.canvas.style.bottom = "0px";
    parentEl.appendChild(this.canvas);
    this.isDrawing = isDrawing;
    this.ctx = this.canvas.getContext("2d");
    this.ctx.fillStyle = "#DFFFFF";
    this.ctx.strokeStyle = "#0ff";
    this.ctx.lineWidth = 0.5;
    if (window.navigator.mediaDevices) {
      window.navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then((stream) => {
        this.stream = stream;
        this.context = new AudioContext();
        let audio_stream = this.context.createMediaStreamSource(stream);
        this.meyda = Meyda.createMeydaAnalyzer({
          audioContext: this.context,
          source: audio_stream,
          featureExtractors: [
            "loudness"
            //  'perceptualSpread',
            //  'perceptualSharpness',
            //  'spectralCentroid'
          ]
        });
      }).catch((err) => console.log("ERROR", err));
    }
  }
  detectBeat(level) {
    if (level > this.beat._cutoff && level > this.beat.threshold) {
      this.onBeat();
      this.beat._cutoff = level * 1.2;
      this.beat._framesSinceBeat = 0;
    } else {
      if (this.beat._framesSinceBeat <= this.beat.holdFrames) {
        this.beat._framesSinceBeat++;
      } else {
        this.beat._cutoff *= this.beat.decay;
        this.beat._cutoff = Math.max(this.beat._cutoff, this.beat.threshold);
      }
    }
  }
  tick() {
    if (this.meyda) {
      var features = this.meyda.get();
      if (features && features !== null) {
        this.vol = features.loudness.total;
        this.detectBeat(this.vol);
        const reducer = (accumulator, currentValue) => accumulator + currentValue;
        let spacing = Math.floor(features.loudness.specific.length / this.bins.length);
        this.prevBins = this.bins.slice(0);
        this.bins = this.bins.map((bin, index) => {
          return features.loudness.specific.slice(index * spacing, (index + 1) * spacing).reduce(reducer);
        }).map((bin, index) => {
          return bin * (1 - this.settings[index].smooth) + this.prevBins[index] * this.settings[index].smooth;
        });
        this.fft = this.bins.map((bin, index) => (
          // Math.max(0, (bin - this.cutoff) / (this.max - this.cutoff))
          Math.max(0, (bin - this.settings[index].cutoff) / this.settings[index].scale)
        ));
        if (this.isDrawing) this.draw();
      }
    }
  }
  setCutoff(cutoff) {
    this.cutoff = cutoff;
    this.settings = this.settings.map((el) => {
      el.cutoff = cutoff;
      return el;
    });
  }
  setSmooth(smooth) {
    this.smooth = smooth;
    this.settings = this.settings.map((el) => {
      el.smooth = smooth;
      return el;
    });
  }
  setBins(numBins) {
    this.bins = Array(numBins).fill(0);
    this.prevBins = Array(numBins).fill(0);
    this.fft = Array(numBins).fill(0);
    this.settings = Array(numBins).fill(0).map(() => ({
      cutoff: this.cutoff,
      scale: this.scale,
      smooth: this.smooth
    }));
    this.bins.forEach((bin, index) => {
      window["a" + index] = (scale = 1, offset = 0) => () => a.fft[index] * scale + offset;
    });
  }
  setScale(scale) {
    this.scale = scale;
    this.settings = this.settings.map((el) => {
      el.scale = scale;
      return el;
    });
  }
  setMax(max) {
    this.max = max;
    console.log("set max is deprecated");
  }
  hide() {
    this.isDrawing = false;
    this.canvas.style.display = "none";
  }
  show() {
    this.isDrawing = true;
    this.canvas.style.display = "block";
  }
  draw() {
    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
    var spacing = this.canvas.width / this.bins.length;
    var scale = this.canvas.height / (this.max * 2);
    this.bins.forEach((bin, index) => {
      var height = bin * scale;
      this.ctx.fillRect(index * spacing, this.canvas.height - height, spacing, height);
      var y = this.canvas.height - scale * this.settings[index].cutoff;
      this.ctx.beginPath();
      this.ctx.moveTo(index * spacing, y);
      this.ctx.lineTo((index + 1) * spacing, y);
      this.ctx.stroke();
      var yMax = this.canvas.height - scale * (this.settings[index].scale + this.settings[index].cutoff);
      this.ctx.beginPath();
      this.ctx.moveTo(index * spacing, yMax);
      this.ctx.lineTo((index + 1) * spacing, yMax);
      this.ctx.stroke();
    });
  }
}
class VideoRecorder {
  constructor(stream) {
    this.mediaSource = new MediaSource();
    this.stream = stream;
    this.output = document.createElement("video");
    this.output.autoplay = true;
    this.output.loop = true;
    let self2 = this;
    this.mediaSource.addEventListener("sourceopen", () => {
      console.log("MediaSource opened");
      self2.sourceBuffer = self2.mediaSource.addSourceBuffer('video/webm; codecs="vp8"');
      console.log("Source buffer: ", sourceBuffer);
    });
  }
  start() {
    let options = { mimeType: "video/webm;codecs=vp9" };
    this.recordedBlobs = [];
    try {
      this.mediaRecorder = new MediaRecorder(this.stream, options);
    } catch (e0) {
      console.log("Unable to create MediaRecorder with options Object: ", e0);
      try {
        options = { mimeType: "video/webm,codecs=vp9" };
        this.mediaRecorder = new MediaRecorder(this.stream, options);
      } catch (e1) {
        console.log("Unable to create MediaRecorder with options Object: ", e1);
        try {
          options = "video/vp8";
          this.mediaRecorder = new MediaRecorder(this.stream, options);
        } catch (e2) {
          alert("MediaRecorder is not supported by this browser.\n\nTry Firefox 29 or later, or Chrome 47 or later, with Enable experimental Web Platform features enabled from chrome://flags.");
          console.error("Exception while creating MediaRecorder:", e2);
          return;
        }
      }
    }
    console.log("Created MediaRecorder", this.mediaRecorder, "with options", options);
    this.mediaRecorder.onstop = this._handleStop.bind(this);
    this.mediaRecorder.ondataavailable = this._handleDataAvailable.bind(this);
    this.mediaRecorder.start(100);
    console.log("MediaRecorder started", this.mediaRecorder);
  }
  stop() {
    this.mediaRecorder.stop();
  }
  _handleStop() {
    const blob = new Blob(this.recordedBlobs, { type: this.mediaRecorder.mimeType });
    const url = window.URL.createObjectURL(blob);
    this.output.src = url;
    const a2 = document.createElement("a");
    a2.style.display = "none";
    a2.href = url;
    let d = /* @__PURE__ */ new Date();
    a2.download = `hydra-${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}-${d.getHours()}.${d.getMinutes()}.${d.getSeconds()}.webm`;
    document.body.appendChild(a2);
    a2.click();
    setTimeout(() => {
      document.body.removeChild(a2);
      window.URL.revokeObjectURL(url);
    }, 300);
  }
  _handleDataAvailable(event) {
    if (event.data && event.data.size > 0) {
      this.recordedBlobs.push(event.data);
    }
  }
}
const easing = {
  // no easing, no acceleration
  linear: function(t) {
    return t;
  },
  // accelerating from zero velocity
  easeInQuad: function(t) {
    return t * t;
  },
  // decelerating to zero velocity
  easeOutQuad: function(t) {
    return t * (2 - t);
  },
  // acceleration until halfway, then deceleration
  easeInOutQuad: function(t) {
    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
  },
  // accelerating from zero velocity
  easeInCubic: function(t) {
    return t * t * t;
  },
  // decelerating to zero velocity
  easeOutCubic: function(t) {
    return --t * t * t + 1;
  },
  // acceleration until halfway, then deceleration
  easeInOutCubic: function(t) {
    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
  },
  // accelerating from zero velocity
  easeInQuart: function(t) {
    return t * t * t * t;
  },
  // decelerating to zero velocity
  easeOutQuart: function(t) {
    return 1 - --t * t * t * t;
  },
  // acceleration until halfway, then deceleration
  easeInOutQuart: function(t) {
    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
  },
  // accelerating from zero velocity
  easeInQuint: function(t) {
    return t * t * t * t * t;
  },
  // decelerating to zero velocity
  easeOutQuint: function(t) {
    return 1 + --t * t * t * t * t;
  },
  // acceleration until halfway, then deceleration
  easeInOutQuint: function(t) {
    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
  },
  // sin shape
  sin: function(t) {
    return (1 + Math.sin(Math.PI * t - Math.PI / 2)) / 2;
  }
};
var map = (num, in_min, in_max, out_min, out_max) => {
  return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
};
const ArrayUtils = {
  init: () => {
    Array.prototype.fast = function(speed = 1) {
      this._speed = speed;
      return this;
    };
    Array.prototype.smooth = function(smooth = 1) {
      this._smooth = smooth;
      return this;
    };
    Array.prototype.ease = function(ease = "linear") {
      if (typeof ease == "function") {
        this._smooth = 1;
        this._ease = ease;
      } else if (easing[ease]) {
        this._smooth = 1;
        this._ease = easing[ease];
      }
      return this;
    };
    Array.prototype.offset = function(offset = 0.5) {
      this._offset = offset % 1;
      return this;
    };
    Array.prototype.fit = function(low = 0, high = 1) {
      let lowest = Math.min(...this);
      let highest = Math.max(...this);
      var newArr = this.map((num) => map(num, lowest, highest, low, high));
      newArr._speed = this._speed;
      newArr._smooth = this._smooth;
      newArr._ease = this._ease;
      return newArr;
    };
  },
  getValue: (arr = []) => ({ time, bpm }) => {
    let speed = arr._speed ? arr._speed : 1;
    let smooth = arr._smooth ? arr._smooth : 0;
    let index = time * speed * (bpm / 60) + (arr._offset || 0);
    if (smooth !== 0) {
      let ease = arr._ease ? arr._ease : easing["linear"];
      let _index = index - smooth / 2;
      let currValue = arr[Math.floor(_index % arr.length)];
      let nextValue = arr[Math.floor((_index + 1) % arr.length)];
      let t = Math.min(_index % 1 / smooth, 1);
      return ease(t) * (nextValue - currValue) + currValue;
    } else {
      arr[Math.floor(index % arr.length)];
      return arr[Math.floor(index % arr.length)];
    }
  }
};
const Sandbox = (parent) => {
  var initialCode = ``;
  var sandbox = createSandbox(initialCode);
  var addToContext = (name, object) => {
    initialCode += `
      var ${name} = ${object}
    `;
    sandbox = createSandbox(initialCode);
  };
  return {
    addToContext,
    eval: (code) => sandbox.eval(code)
  };
  function createSandbox(initial) {
    globalThis.eval(initial);
    var localEval = function(code) {
      globalThis.eval(code);
    };
    return {
      eval: localEval
    };
  }
};
class EvalSandbox {
  constructor(parent, makeGlobal, userProps = []) {
    this.makeGlobal = makeGlobal;
    this.sandbox = Sandbox();
    this.parent = parent;
    var properties = Object.keys(parent);
    properties.forEach((property) => this.add(property));
    this.userProps = userProps;
  }
  add(name) {
    if (this.makeGlobal) window[name] = this.parent[name];
  }
  // sets on window as well as synth object if global (not needed for objects, which can be set directly)
  set(property, value) {
    if (this.makeGlobal) {
      window[property] = value;
    }
    this.parent[property] = value;
  }
  tick() {
    if (this.makeGlobal) {
      this.userProps.forEach((property) => {
        this.parent[property] = window[property];
      });
    }
  }
  eval(code) {
    this.sandbox.eval(code);
  }
}
const DEFAULT_CONVERSIONS = {
  float: {
    "vec4": { name: "sum", args: [[1, 1, 1, 1]] },
    "vec2": { name: "sum", args: [[1, 1]] }
  }
};
const ensure_decimal_dot = (val) => {
  val = val.toString();
  if (val.indexOf(".") < 0) {
    val += ".";
  }
  return val;
};
function formatArguments(transform2, startIndex, synthContext) {
  const defaultArgs = transform2.transform.inputs;
  const userArgs = transform2.userArgs;
  const { generators } = transform2.synth;
  const { src: src2 } = generators;
  return defaultArgs.map((input, index) => {
    const typedArg = {
      value: input.default,
      type: input.type,
      //
      isUniform: false,
      name: input.name,
      vecLen: 0
      //  generateGlsl: null // function for creating glsl
    };
    if (typedArg.type === "float") typedArg.value = ensure_decimal_dot(input.default);
    if (input.type.startsWith("vec")) {
      try {
        typedArg.vecLen = Number.parseInt(input.type.substr(3));
      } catch (e2) {
        console.log(`Error determining length of vector input type ${input.type} (${input.name})`);
      }
    }
    if (userArgs.length > index) {
      typedArg.value = userArgs[index];
      if (typeof userArgs[index] === "function") {
        typedArg.value = (context, props, batchId) => {
          try {
            const val = userArgs[index](props);
            if (typeof val === "number") {
              return val;
            } else {
              console.warn("function does not return a number", userArgs[index]);
            }
            return input.default;
          } catch (e2) {
            console.warn("ERROR", e2);
            return input.default;
          }
        };
        typedArg.isUniform = true;
      } else if (userArgs[index].constructor === Array) {
        typedArg.value = (context, props, batchId) => ArrayUtils.getValue(userArgs[index])(props);
        typedArg.isUniform = true;
      }
    }
    if (startIndex < 0) ;
    else {
      if (typedArg.value && typedArg.value.transforms) {
        const final_transform = typedArg.value.transforms[typedArg.value.transforms.length - 1];
        if (final_transform.transform.glsl_return_type !== input.type) {
          const defaults = DEFAULT_CONVERSIONS[input.type];
          if (typeof defaults !== "undefined") {
            const default_def = defaults[final_transform.transform.glsl_return_type];
            if (typeof default_def !== "undefined") {
              const { name, args } = default_def;
              typedArg.value = typedArg.value[name](...args);
            }
          }
        }
        typedArg.isUniform = false;
      } else if (typedArg.type === "float" && typeof typedArg.value === "number") {
        typedArg.value = ensure_decimal_dot(typedArg.value);
      } else if (typedArg.type.startsWith("vec") && typeof typedArg.value === "object" && Array.isArray(typedArg.value)) {
        typedArg.isUniform = false;
        typedArg.value = `${typedArg.type}(${typedArg.value.map(ensure_decimal_dot).join(", ")})`;
      } else if (input.type === "sampler2D") {
        var x2 = typedArg.value;
        typedArg.value = () => x2.getTexture();
        typedArg.isUniform = true;
      } else {
        if (typedArg.value.getTexture && input.type === "vec4") {
          var x1 = typedArg.value;
          typedArg.value = src2(x1);
          typedArg.isUniform = false;
        }
      }
      if (typedArg.isUniform) {
        typedArg.name += startIndex;
      }
    }
    return typedArg;
  });
}
function generateGlsl(transforms) {
  var shaderParams = {
    uniforms: [],
    // list of uniforms used in shader
    glslFunctions: [],
    // list of functions used in shader
    fragColor: ""
  };
  var gen = generateGlsl$1(transforms, shaderParams)("st");
  shaderParams.fragColor = gen;
  let uniforms = {};
  shaderParams.uniforms.forEach((uniform) => uniforms[uniform.name] = uniform);
  shaderParams.uniforms = Object.values(uniforms);
  return shaderParams;
}
function generateGlsl$1(transforms, shaderParams) {
  var fragColor = () => "";
  transforms.forEach((transform2) => {
    var inputs = formatArguments(transform2, shaderParams.uniforms.length);
    inputs.forEach((input) => {
      if (input.isUniform) shaderParams.uniforms.push(input);
    });
    if (!contains(transform2, shaderParams.glslFunctions)) shaderParams.glslFunctions.push(transform2);
    var f0 = fragColor;
    if (transform2.transform.type === "src") {
      fragColor = (uv) => `${shaderString(uv, transform2.name, inputs, shaderParams)}`;
    } else if (transform2.transform.type === "coord") {
      fragColor = (uv) => `${f0(`${shaderString(uv, transform2.name, inputs, shaderParams)}`)}`;
    } else if (transform2.transform.type === "color") {
      fragColor = (uv) => `${shaderString(`${f0(uv)}`, transform2.name, inputs, shaderParams)}`;
    } else if (transform2.transform.type === "combine") {
      var f1 = inputs[0].value && inputs[0].value.transforms ? (uv) => `${generateGlsl$1(inputs[0].value.transforms, shaderParams)(uv)}` : inputs[0].isUniform ? () => inputs[0].name : () => inputs[0].value;
      fragColor = (uv) => `${shaderString(`${f0(uv)}, ${f1(uv)}`, transform2.name, inputs.slice(1), shaderParams)}`;
    } else if (transform2.transform.type === "combineCoord") {
      var f1 = inputs[0].value && inputs[0].value.transforms ? (uv) => `${generateGlsl$1(inputs[0].value.transforms, shaderParams)(uv)}` : inputs[0].isUniform ? () => inputs[0].name : () => inputs[0].value;
      fragColor = (uv) => `${f0(`${shaderString(`${uv}, ${f1(uv)}`, transform2.name, inputs.slice(1), shaderParams)}`)}`;
    }
  });
  return fragColor;
}
function shaderString(uv, method, inputs, shaderParams) {
  const str = inputs.map((input) => {
    if (input.isUniform) {
      return input.name;
    } else if (input.value && input.value.transforms) {
      return `${generateGlsl$1(input.value.transforms, shaderParams)("st")}`;
    }
    return input.value;
  }).reduce((p, c) => `${p}, ${c}`, "");
  return `${method}(${uv}${str})`;
}
function contains(object, arr) {
  for (var i = 0; i < arr.length; i++) {
    if (object.name == arr[i].name) return true;
  }
  return false;
}
const utilityGlsl = {
  _luminance: {
    type: "util",
    glsl: `float _luminance(vec3 rgb){
      const vec3 W = vec3(0.2125, 0.7154, 0.0721);
      return dot(rgb, W);
    }`
  },
  _noise: {
    type: "util",
    glsl: `
    //	Simplex 3D Noise
    //	by Ian McEwan, Ashima Arts
    vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}
  vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}

  float _noise(vec3 v){
    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);

  // First corner
    vec3 i  = floor(v + dot(v, C.yyy) );
    vec3 x0 =   v - i + dot(i, C.xxx) ;

  // Other corners
    vec3 g = step(x0.yzx, x0.xyz);
    vec3 l = 1.0 - g;
    vec3 i1 = min( g.xyz, l.zxy );
    vec3 i2 = max( g.xyz, l.zxy );

    //  x0 = x0 - 0. + 0.0 * C
    vec3 x1 = x0 - i1 + 1.0 * C.xxx;
    vec3 x2 = x0 - i2 + 2.0 * C.xxx;
    vec3 x3 = x0 - 1. + 3.0 * C.xxx;

  // Permutations
    i = mod(i, 289.0 );
    vec4 p = permute( permute( permute(
               i.z + vec4(0.0, i1.z, i2.z, 1.0 ))
             + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))
             + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));

  // Gradients
  // ( N*N points uniformly over a square, mapped onto an octahedron.)
    float n_ = 1.0/7.0; // N=7
    vec3  ns = n_ * D.wyz - D.xzx;

    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)

    vec4 x_ = floor(j * ns.z);
    vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)

    vec4 x = x_ *ns.x + ns.yyyy;
    vec4 y = y_ *ns.x + ns.yyyy;
    vec4 h = 1.0 - abs(x) - abs(y);

    vec4 b0 = vec4( x.xy, y.xy );
    vec4 b1 = vec4( x.zw, y.zw );

    vec4 s0 = floor(b0)*2.0 + 1.0;
    vec4 s1 = floor(b1)*2.0 + 1.0;
    vec4 sh = -step(h, vec4(0.0));

    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;
    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;

    vec3 p0 = vec3(a0.xy,h.x);
    vec3 p1 = vec3(a0.zw,h.y);
    vec3 p2 = vec3(a1.xy,h.z);
    vec3 p3 = vec3(a1.zw,h.w);

  //Normalise gradients
    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
    p0 *= norm.x;
    p1 *= norm.y;
    p2 *= norm.z;
    p3 *= norm.w;

  // Mix final noise value
    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
    m = m * m;
    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),
                                  dot(p2,x2), dot(p3,x3) ) );
  }
    `
  },
  _rgbToHsv: {
    type: "util",
    glsl: `vec3 _rgbToHsv(vec3 c){
            vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
            vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
            vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

            float d = q.x - min(q.w, q.y);
            float e = 1.0e-10;
            return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
        }`
  },
  _hsvToRgb: {
    type: "util",
    glsl: `vec3 _hsvToRgb(vec3 c){
        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
    }`
  }
};
var GlslSource = function(obj) {
  this.transforms = [];
  this.transforms.push(obj);
  this.defaultOutput = obj.defaultOutput;
  this.synth = obj.synth;
  this.type = "GlslSource";
  this.defaultUniforms = obj.defaultUniforms;
  return this;
};
GlslSource.prototype.addTransform = function(obj) {
  this.transforms.push(obj);
};
GlslSource.prototype.out = function(_output) {
  var output = _output || this.defaultOutput;
  var glsl = this.glsl(output);
  this.synth.currentFunctions = [];
  if (output) try {
    output.render(glsl);
  } catch (error) {
    console.log("shader could not compile", error);
  }
};
GlslSource.prototype.glsl = function() {
  var passes = [];
  var transforms = [];
  this.transforms.forEach((transform2) => {
    if (transform2.transform.type === "renderpass") {
      console.warn("no support for renderpass");
    } else {
      transforms.push(transform2);
    }
  });
  if (transforms.length > 0) passes.push(this.compile(transforms));
  return passes;
};
GlslSource.prototype.compile = function(transforms) {
  var shaderInfo = generateGlsl(transforms, this.synth);
  var uniforms = {};
  shaderInfo.uniforms.forEach((uniform) => {
    uniforms[uniform.name] = uniform.value;
  });
  var frag = `
  precision ${this.defaultOutput.precision} float;
  ${Object.values(shaderInfo.uniforms).map((uniform) => {
    let type = uniform.type;
    switch (uniform.type) {
      case "texture":
        type = "sampler2D";
        break;
    }
    return `
      uniform ${type} ${uniform.name};`;
  }).join("")}
  uniform float time;
  uniform vec2 resolution;
  varying vec2 uv;
  uniform sampler2D prevBuffer;

  ${Object.values(utilityGlsl).map((transform2) => {
    return `
            ${transform2.glsl}
          `;
  }).join("")}

  ${shaderInfo.glslFunctions.map((transform2) => {
    return `
            ${transform2.transform.glsl}
          `;
  }).join("")}

  void main () {
    vec4 c = vec4(1, 0, 0, 1);
    vec2 st = gl_FragCoord.xy/resolution.xy;
    gl_FragColor = ${shaderInfo.fragColor};
  }
  `;
  return {
    frag,
    uniforms: Object.assign({}, this.defaultUniforms, uniforms)
  };
};
const glslFunctions = () => [
  {
    name: "noise",
    type: "src",
    inputs: [
      {
        type: "float",
        name: "scale",
        default: 10
      },
      {
        type: "float",
        name: "offset",
        default: 0.1
      }
    ],
    glsl: `   return vec4(vec3(_noise(vec3(_st*scale, offset*time))), 1.0);`
  },
  {
    name: "voronoi",
    type: "src",
    inputs: [
      {
        type: "float",
        name: "scale",
        default: 5
      },
      {
        type: "float",
        name: "speed",
        default: 0.3
      },
      {
        type: "float",
        name: "blending",
        default: 0.3
      }
    ],
    glsl: `   vec3 color = vec3(.0);
   // Scale
   _st *= scale;
   // Tile the space
   vec2 i_st = floor(_st);
   vec2 f_st = fract(_st);
   float m_dist = 10.;  // minimun distance
   vec2 m_point;        // minimum point
   for (int j=-1; j<=1; j++ ) {
   for (int i=-1; i<=1; i++ ) {
   vec2 neighbor = vec2(float(i),float(j));
   vec2 p = i_st + neighbor;
   vec2 point = fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);
   point = 0.5 + 0.5*sin(time*speed + 6.2831*point);
   vec2 diff = neighbor + point - f_st;
   float dist = length(diff);
   if( dist < m_dist ) {
   m_dist = dist;
   m_point = point;
   }
   }
   }
   // Assign a color using the closest point position
   color += dot(m_point,vec2(.3,.6));
   color *= 1.0 - blending*m_dist;
   return vec4(color, 1.0);`
  },
  {
    name: "osc",
    type: "src",
    inputs: [
      {
        type: "float",
        name: "frequency",
        default: 60
      },
      {
        type: "float",
        name: "sync",
        default: 0.1
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   vec2 st = _st;
   float r = sin((st.x-offset/frequency+time*sync)*frequency)*0.5  + 0.5;
   float g = sin((st.x+time*sync)*frequency)*0.5 + 0.5;
   float b = sin((st.x+offset/frequency+time*sync)*frequency)*0.5  + 0.5;
   return vec4(r, g, b, 1.0);`
  },
  {
    name: "shape",
    type: "src",
    inputs: [
      {
        type: "float",
        name: "sides",
        default: 3
      },
      {
        type: "float",
        name: "radius",
        default: 0.3
      },
      {
        type: "float",
        name: "smoothing",
        default: 0.01
      }
    ],
    glsl: `   vec2 st = _st * 2. - 1.;
   // Angle and radius from the current pixel
   float a = atan(st.x,st.y)+3.1416;
   float r = (2.*3.1416)/sides;
   float d = cos(floor(.5+a/r)*r-a)*length(st);
   return vec4(vec3(1.0-smoothstep(radius,radius + smoothing + 0.0000001,d)), 1.0);`
  },
  {
    name: "gradient",
    type: "src",
    inputs: [
      {
        type: "float",
        name: "speed",
        default: 0
      }
    ],
    glsl: `   return vec4(_st, sin(time*speed), 1.0);`
  },
  {
    name: "src",
    type: "src",
    inputs: [
      {
        type: "sampler2D",
        name: "tex",
        default: NaN
      }
    ],
    glsl: `   //  vec2 uv = gl_FragCoord.xy/vec2(1280., 720.);
   return texture2D(tex, fract(_st));`
  },
  {
    name: "solid",
    type: "src",
    inputs: [
      {
        type: "float",
        name: "r",
        default: 0
      },
      {
        type: "float",
        name: "g",
        default: 0
      },
      {
        type: "float",
        name: "b",
        default: 0
      },
      {
        type: "float",
        name: "a",
        default: 1
      }
    ],
    glsl: `   return vec4(r, g, b, a);`
  },
  {
    name: "rotate",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "angle",
        default: 10
      },
      {
        type: "float",
        name: "speed",
        default: 0
      }
    ],
    glsl: `   vec2 xy = _st - vec2(0.5);
   float ang = angle + speed *time;
   xy = mat2(cos(ang),-sin(ang), sin(ang),cos(ang))*xy;
   xy += 0.5;
   return xy;`
  },
  {
    name: "scale",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1.5
      },
      {
        type: "float",
        name: "xMult",
        default: 1
      },
      {
        type: "float",
        name: "yMult",
        default: 1
      },
      {
        type: "float",
        name: "offsetX",
        default: 0.5
      },
      {
        type: "float",
        name: "offsetY",
        default: 0.5
      }
    ],
    glsl: `   vec2 xy = _st - vec2(offsetX, offsetY);
   xy*=(1.0/vec2(amount*xMult, amount*yMult));
   xy+=vec2(offsetX, offsetY);
   return xy;
   `
  },
  {
    name: "pixelate",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "pixelX",
        default: 20
      },
      {
        type: "float",
        name: "pixelY",
        default: 20
      }
    ],
    glsl: `   vec2 xy = vec2(pixelX, pixelY);
   return (floor(_st * xy) + 0.5)/xy;`
  },
  {
    name: "posterize",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "bins",
        default: 3
      },
      {
        type: "float",
        name: "gamma",
        default: 0.6
      }
    ],
    glsl: `   vec4 c2 = pow(_c0, vec4(gamma));
   c2 *= vec4(bins);
   c2 = floor(c2);
   c2/= vec4(bins);
   c2 = pow(c2, vec4(1.0/gamma));
   return vec4(c2.xyz, _c0.a);`
  },
  {
    name: "shift",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "r",
        default: 0.5
      },
      {
        type: "float",
        name: "g",
        default: 0
      },
      {
        type: "float",
        name: "b",
        default: 0
      },
      {
        type: "float",
        name: "a",
        default: 0
      }
    ],
    glsl: `   vec4 c2 = vec4(_c0);
   c2.r = fract(c2.r + r);
   c2.g = fract(c2.g + g);
   c2.b = fract(c2.b + b);
   c2.a = fract(c2.a + a);
   return vec4(c2.rgba);`
  },
  {
    name: "repeat",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "repeatX",
        default: 3
      },
      {
        type: "float",
        name: "repeatY",
        default: 3
      },
      {
        type: "float",
        name: "offsetX",
        default: 0
      },
      {
        type: "float",
        name: "offsetY",
        default: 0
      }
    ],
    glsl: `   vec2 st = _st * vec2(repeatX, repeatY);
   st.x += step(1., mod(st.y,2.0)) * offsetX;
   st.y += step(1., mod(st.x,2.0)) * offsetY;
   return fract(st);`
  },
  {
    name: "modulateRepeat",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "repeatX",
        default: 3
      },
      {
        type: "float",
        name: "repeatY",
        default: 3
      },
      {
        type: "float",
        name: "offsetX",
        default: 0.5
      },
      {
        type: "float",
        name: "offsetY",
        default: 0.5
      }
    ],
    glsl: `   vec2 st = _st * vec2(repeatX, repeatY);
   st.x += step(1., mod(st.y,2.0)) + _c0.r * offsetX;
   st.y += step(1., mod(st.x,2.0)) + _c0.g * offsetY;
   return fract(st);`
  },
  {
    name: "repeatX",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "reps",
        default: 3
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.y += step(1., mod(st.x,2.0))* offset;
   return fract(st);`
  },
  {
    name: "modulateRepeatX",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "reps",
        default: 3
      },
      {
        type: "float",
        name: "offset",
        default: 0.5
      }
    ],
    glsl: `   vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.y += step(1., mod(st.x,2.0)) + _c0.r * offset;
   return fract(st);`
  },
  {
    name: "repeatY",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "reps",
        default: 3
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   vec2 st = _st * vec2(1.0, reps);
   //  float f =  mod(_st.y,2.0);
   st.x += step(1., mod(st.y,2.0))* offset;
   return fract(st);`
  },
  {
    name: "modulateRepeatY",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "reps",
        default: 3
      },
      {
        type: "float",
        name: "offset",
        default: 0.5
      }
    ],
    glsl: `   vec2 st = _st * vec2(reps, 1.0);
   //  float f =  mod(_st.y,2.0);
   st.x += step(1., mod(st.y,2.0)) + _c0.r * offset;
   return fract(st);`
  },
  {
    name: "kaleid",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "nSides",
        default: 4
      }
    ],
    glsl: `   vec2 st = _st;
   st -= 0.5;
   float r = length(st);
   float a = atan(st.y, st.x);
   float pi = 2.*3.1416;
   a = mod(a,pi/nSides);
   a = abs(a-pi/nSides/2.);
   return r*vec2(cos(a), sin(a));`
  },
  {
    name: "modulateKaleid",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "nSides",
        default: 4
      }
    ],
    glsl: `   vec2 st = _st - 0.5;
   float r = length(st);
   float a = atan(st.y, st.x);
   float pi = 2.*3.1416;
   a = mod(a,pi/nSides);
   a = abs(a-pi/nSides/2.);
   return (_c0.r+r)*vec2(cos(a), sin(a));`
  },
  {
    name: "scroll",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "scrollX",
        default: 0.5
      },
      {
        type: "float",
        name: "scrollY",
        default: 0.5
      },
      {
        type: "float",
        name: "speedX",
        default: 0
      },
      {
        type: "float",
        name: "speedY",
        default: 0
      }
    ],
    glsl: `
   _st.x += scrollX + time*speedX;
   _st.y += scrollY + time*speedY;
   return fract(_st);`
  },
  {
    name: "scrollX",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "scrollX",
        default: 0.5
      },
      {
        type: "float",
        name: "speed",
        default: 0
      }
    ],
    glsl: `   _st.x += scrollX + time*speed;
   return fract(_st);`
  },
  {
    name: "modulateScrollX",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "scrollX",
        default: 0.5
      },
      {
        type: "float",
        name: "speed",
        default: 0
      }
    ],
    glsl: `   _st.x += _c0.r*scrollX + time*speed;
   return fract(_st);`
  },
  {
    name: "scrollY",
    type: "coord",
    inputs: [
      {
        type: "float",
        name: "scrollY",
        default: 0.5
      },
      {
        type: "float",
        name: "speed",
        default: 0
      }
    ],
    glsl: `   _st.y += scrollY + time*speed;
   return fract(_st);`
  },
  {
    name: "modulateScrollY",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "scrollY",
        default: 0.5
      },
      {
        type: "float",
        name: "speed",
        default: 0
      }
    ],
    glsl: `   _st.y += _c0.r*scrollY + time*speed;
   return fract(_st);`
  },
  {
    name: "add",
    type: "combine",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1
      }
    ],
    glsl: `   return (_c0+_c1)*amount + _c0*(1.0-amount);`
  },
  {
    name: "sub",
    type: "combine",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1
      }
    ],
    glsl: `   return (_c0-_c1)*amount + _c0*(1.0-amount);`
  },
  {
    name: "layer",
    type: "combine",
    inputs: [],
    glsl: `   return vec4(mix(_c0.rgb, _c1.rgb, _c1.a), clamp(_c0.a + _c1.a, 0.0, 1.0));`
  },
  {
    name: "blend",
    type: "combine",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 0.5
      }
    ],
    glsl: `   return _c0*(1.0-amount)+_c1*amount;`
  },
  {
    name: "mult",
    type: "combine",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1
      }
    ],
    glsl: `   return _c0*(1.0-amount)+(_c0*_c1)*amount;`
  },
  {
    name: "diff",
    type: "combine",
    inputs: [],
    glsl: `   return vec4(abs(_c0.rgb-_c1.rgb), max(_c0.a, _c1.a));`
  },
  {
    name: "modulate",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 0.1
      }
    ],
    glsl: `   //  return fract(st+(_c0.xy-0.5)*amount);
   return _st + _c0.xy*amount;`
  },
  {
    name: "modulateScale",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "multiple",
        default: 1
      },
      {
        type: "float",
        name: "offset",
        default: 1
      }
    ],
    glsl: `   vec2 xy = _st - vec2(0.5);
   xy*=(1.0/vec2(offset + multiple*_c0.r, offset + multiple*_c0.g));
   xy+=vec2(0.5);
   return xy;`
  },
  {
    name: "modulatePixelate",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "multiple",
        default: 10
      },
      {
        type: "float",
        name: "offset",
        default: 3
      }
    ],
    glsl: `   vec2 xy = vec2(offset + _c0.x*multiple, offset + _c0.y*multiple);
   return (floor(_st * xy) + 0.5)/xy;`
  },
  {
    name: "modulateRotate",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "multiple",
        default: 1
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   vec2 xy = _st - vec2(0.5);
   float angle = offset + _c0.x * multiple;
   xy = mat2(cos(angle),-sin(angle), sin(angle),cos(angle))*xy;
   xy += 0.5;
   return xy;`
  },
  {
    name: "modulateHue",
    type: "combineCoord",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1
      }
    ],
    glsl: `   return _st + (vec2(_c0.g - _c0.r, _c0.b - _c0.g) * amount * 1.0/resolution);`
  },
  {
    name: "invert",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1
      }
    ],
    glsl: `   return vec4((1.0-_c0.rgb)*amount + _c0.rgb*(1.0-amount), _c0.a);`
  },
  {
    name: "contrast",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 1.6
      }
    ],
    glsl: `   vec4 c = (_c0-vec4(0.5))*vec4(amount) + vec4(0.5);
   return vec4(c.rgb, _c0.a);`
  },
  {
    name: "brightness",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 0.4
      }
    ],
    glsl: `   return vec4(_c0.rgb + vec3(amount), _c0.a);`
  },
  {
    name: "mask",
    type: "combine",
    inputs: [],
    glsl: `   float a = _luminance(_c1.rgb);
  return vec4(_c0.rgb*a, a*_c0.a);`
  },
  {
    name: "luma",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "threshold",
        default: 0.5
      },
      {
        type: "float",
        name: "tolerance",
        default: 0.1
      }
    ],
    glsl: `   float a = smoothstep(threshold-(tolerance+0.0000001), threshold+(tolerance+0.0000001), _luminance(_c0.rgb));
   return vec4(_c0.rgb*a, a);`
  },
  {
    name: "thresh",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "threshold",
        default: 0.5
      },
      {
        type: "float",
        name: "tolerance",
        default: 0.04
      }
    ],
    glsl: `   return vec4(vec3(smoothstep(threshold-(tolerance+0.0000001), threshold+(tolerance+0.0000001), _luminance(_c0.rgb))), _c0.a);`
  },
  {
    name: "color",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "r",
        default: 1
      },
      {
        type: "float",
        name: "g",
        default: 1
      },
      {
        type: "float",
        name: "b",
        default: 1
      },
      {
        type: "float",
        name: "a",
        default: 1
      }
    ],
    glsl: `   vec4 c = vec4(r, g, b, a);
   vec4 pos = step(0.0, c); // detect whether negative
   // if > 0, return r * _c0
   // if < 0 return (1.0-r) * _c0
   return vec4(mix((1.0-_c0)*abs(c), c*_c0, pos));`
  },
  {
    name: "saturate",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 2
      }
    ],
    glsl: `   const vec3 W = vec3(0.2125, 0.7154, 0.0721);
   vec3 intensity = vec3(dot(_c0.rgb, W));
   return vec4(mix(intensity, _c0.rgb, amount), _c0.a);`
  },
  {
    name: "hue",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "hue",
        default: 0.4
      }
    ],
    glsl: `   vec3 c = _rgbToHsv(_c0.rgb);
   c.r += hue;
   //  c.r = fract(c.r);
   return vec4(_hsvToRgb(c), _c0.a);`
  },
  {
    name: "colorama",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "amount",
        default: 5e-3
      }
    ],
    glsl: `   vec3 c = _rgbToHsv(_c0.rgb);
   c += vec3(amount);
   c = _hsvToRgb(c);
   c = fract(c);
   return vec4(c, _c0.a);`
  },
  {
    name: "prev",
    type: "src",
    inputs: [],
    glsl: `   return texture2D(prevBuffer, fract(_st));`
  },
  {
    name: "sum",
    type: "color",
    inputs: [
      {
        type: "vec4",
        name: "scale",
        default: 1
      }
    ],
    glsl: `   vec4 v = _c0 * s;
   return v.r + v.g + v.b + v.a;
   }
   float sum(vec2 _st, vec4 s) { // vec4 is not a typo, because argument type is not overloaded
   vec2 v = _st.xy * s.xy;
   return v.x + v.y;`
  },
  {
    name: "r",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "scale",
        default: 1
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   return vec4(_c0.r * scale + offset);`
  },
  {
    name: "g",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "scale",
        default: 1
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   return vec4(_c0.g * scale + offset);`
  },
  {
    name: "b",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "scale",
        default: 1
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   return vec4(_c0.b * scale + offset);`
  },
  {
    name: "a",
    type: "color",
    inputs: [
      {
        type: "float",
        name: "scale",
        default: 1
      },
      {
        type: "float",
        name: "offset",
        default: 0
      }
    ],
    glsl: `   return vec4(_c0.a * scale + offset);`
  }
];
class GeneratorFactory {
  constructor({
    defaultUniforms,
    defaultOutput,
    extendTransforms = [],
    changeListener = () => {
    }
  } = {}) {
    this.defaultOutput = defaultOutput;
    this.defaultUniforms = defaultUniforms;
    this.changeListener = changeListener;
    this.extendTransforms = extendTransforms;
    this.generators = {};
    this.init();
  }
  init() {
    const functions = glslFunctions();
    this.glslTransforms = {};
    this.generators = Object.entries(this.generators).reduce((prev, [method, transform2]) => {
      this.changeListener({ type: "remove", synth: this, method });
      return prev;
    }, {});
    this.sourceClass = /* @__PURE__ */ (() => {
      return class extends GlslSource {
      };
    })();
    if (Array.isArray(this.extendTransforms)) {
      functions.concat(this.extendTransforms);
    } else if (typeof this.extendTransforms === "object" && this.extendTransforms.type) {
      functions.push(this.extendTransforms);
    }
    return functions.map((transform2) => this.setFunction(transform2));
  }
  _addMethod(method, transform2) {
    const self2 = this;
    this.glslTransforms[method] = transform2;
    if (transform2.type === "src") {
      const func = (...args) => new this.sourceClass({
        name: method,
        transform: transform2,
        userArgs: args,
        defaultOutput: this.defaultOutput,
        defaultUniforms: this.defaultUniforms,
        synth: self2
      });
      this.generators[method] = func;
      this.changeListener({ type: "add", synth: this, method });
      return func;
    } else {
      this.sourceClass.prototype[method] = function(...args) {
        this.transforms.push({ name: method, transform: transform2, userArgs: args, synth: self2 });
        return this;
      };
    }
    return void 0;
  }
  setFunction(obj) {
    var processedGlsl = processGlsl(obj);
    if (processedGlsl) this._addMethod(obj.name, processedGlsl);
  }
}
const typeLookup = {
  "src": {
    returnType: "vec4",
    args: ["vec2 _st"]
  },
  "coord": {
    returnType: "vec2",
    args: ["vec2 _st"]
  },
  "color": {
    returnType: "vec4",
    args: ["vec4 _c0"]
  },
  "combine": {
    returnType: "vec4",
    args: ["vec4 _c0", "vec4 _c1"]
  },
  "combineCoord": {
    returnType: "vec2",
    args: ["vec2 _st", "vec4 _c0"]
  }
};
function processGlsl(obj) {
  let t = typeLookup[obj.type];
  if (t) {
    let baseArgs = t.args.map((arg) => arg).join(", ");
    let customArgs = obj.inputs.map((input) => `${input.type} ${input.name}`).join(", ");
    let args = `${baseArgs}${customArgs.length > 0 ? ", " + customArgs : ""}`;
    let glslFunction = `
  ${t.returnType} ${obj.name}(${args}) {
      ${obj.glsl}
  }
`;
    if (obj.type === "combine" || obj.type === "combineCoord") obj.inputs.unshift({
      name: "color",
      type: "vec4"
    });
    return Object.assign({}, obj, { glsl: glslFunction });
  } else {
    console.warn(`type ${obj.type} not recognized`, obj);
  }
}
var regl$1 = { exports: {} };
(function(module, exports) {
  (function(global2, factory) {
    module.exports = factory();
  })(commonjsGlobal, function() {
    var isTypedArray = function(x2) {
      return x2 instanceof Uint8Array || x2 instanceof Uint16Array || x2 instanceof Uint32Array || x2 instanceof Int8Array || x2 instanceof Int16Array || x2 instanceof Int32Array || x2 instanceof Float32Array || x2 instanceof Float64Array || x2 instanceof Uint8ClampedArray;
    };
    var extend = function(base, opts) {
      var keys = Object.keys(opts);
      for (var i = 0; i < keys.length; ++i) {
        base[keys[i]] = opts[keys[i]];
      }
      return base;
    };
    var endl = "\n";
    function decodeB64(str) {
      if (typeof atob !== "undefined") {
        return atob(str);
      }
      return "base64:" + str;
    }
    function raise(message) {
      var error = new Error("(regl) " + message);
      console.error(error);
      throw error;
    }
    function check(pred, message) {
      if (!pred) {
        raise(message);
      }
    }
    function encolon(message) {
      if (message) {
        return ": " + message;
      }
      return "";
    }
    function checkParameter(param, possibilities, message) {
      if (!(param in possibilities)) {
        raise("unknown parameter (" + param + ")" + encolon(message) + ". possible values: " + Object.keys(possibilities).join());
      }
    }
    function checkIsTypedArray(data, message) {
      if (!isTypedArray(data)) {
        raise(
          "invalid parameter type" + encolon(message) + ". must be a typed array"
        );
      }
    }
    function standardTypeEh(value, type) {
      switch (type) {
        case "number":
          return typeof value === "number";
        case "object":
          return typeof value === "object";
        case "string":
          return typeof value === "string";
        case "boolean":
          return typeof value === "boolean";
        case "function":
          return typeof value === "function";
        case "undefined":
          return typeof value === "undefined";
        case "symbol":
          return typeof value === "symbol";
      }
    }
    function checkTypeOf(value, type, message) {
      if (!standardTypeEh(value, type)) {
        raise(
          "invalid parameter type" + encolon(message) + ". expected " + type + ", got " + typeof value
        );
      }
    }
    function checkNonNegativeInt(value, message) {
      if (!(value >= 0 && (value | 0) === value)) {
        raise("invalid parameter type, (" + value + ")" + encolon(message) + ". must be a nonnegative integer");
      }
    }
    function checkOneOf(value, list, message) {
      if (list.indexOf(value) < 0) {
        raise("invalid value" + encolon(message) + ". must be one of: " + list);
      }
    }
    var constructorKeys = [
      "gl",
      "canvas",
      "container",
      "attributes",
      "pixelRatio",
      "extensions",
      "optionalExtensions",
      "profile",
      "onDone"
    ];
    function checkConstructor(obj) {
      Object.keys(obj).forEach(function(key) {
        if (constructorKeys.indexOf(key) < 0) {
          raise('invalid regl constructor argument "' + key + '". must be one of ' + constructorKeys);
        }
      });
    }
    function leftPad(str, n) {
      str = str + "";
      while (str.length < n) {
        str = " " + str;
      }
      return str;
    }
    function ShaderFile() {
      this.name = "unknown";
      this.lines = [];
      this.index = {};
      this.hasErrors = false;
    }
    function ShaderLine(number, line2) {
      this.number = number;
      this.line = line2;
      this.errors = [];
    }
    function ShaderError(fileNumber, lineNumber, message) {
      this.file = fileNumber;
      this.line = lineNumber;
      this.message = message;
    }
    function guessCommand() {
      var error = new Error();
      var stack = (error.stack || error).toString();
      var pat = /compileProcedure.*\n\s*at.*\((.*)\)/.exec(stack);
      if (pat) {
        return pat[1];
      }
      var pat2 = /compileProcedure.*\n\s*at\s+(.*)(\n|$)/.exec(stack);
      if (pat2) {
        return pat2[1];
      }
      return "unknown";
    }
    function guessCallSite() {
      var error = new Error();
      var stack = (error.stack || error).toString();
      var pat = /at REGLCommand.*\n\s+at.*\((.*)\)/.exec(stack);
      if (pat) {
        return pat[1];
      }
      var pat2 = /at REGLCommand.*\n\s+at\s+(.*)\n/.exec(stack);
      if (pat2) {
        return pat2[1];
      }
      return "unknown";
    }
    function parseSource(source, command) {
      var lines2 = source.split("\n");
      var lineNumber = 1;
      var fileNumber = 0;
      var files = {
        unknown: new ShaderFile(),
        0: new ShaderFile()
      };
      files.unknown.name = files[0].name = command || guessCommand();
      files.unknown.lines.push(new ShaderLine(0, ""));
      for (var i = 0; i < lines2.length; ++i) {
        var line2 = lines2[i];
        var parts = /^\s*#\s*(\w+)\s+(.+)\s*$/.exec(line2);
        if (parts) {
          switch (parts[1]) {
            case "line":
              var lineNumberInfo = /(\d+)(\s+\d+)?/.exec(parts[2]);
              if (lineNumberInfo) {
                lineNumber = lineNumberInfo[1] | 0;
                if (lineNumberInfo[2]) {
                  fileNumber = lineNumberInfo[2] | 0;
                  if (!(fileNumber in files)) {
                    files[fileNumber] = new ShaderFile();
                  }
                }
              }
              break;
            case "define":
              var nameInfo = /SHADER_NAME(_B64)?\s+(.*)$/.exec(parts[2]);
              if (nameInfo) {
                files[fileNumber].name = nameInfo[1] ? decodeB64(nameInfo[2]) : nameInfo[2];
              }
              break;
          }
        }
        files[fileNumber].lines.push(new ShaderLine(lineNumber++, line2));
      }
      Object.keys(files).forEach(function(fileNumber2) {
        var file = files[fileNumber2];
        file.lines.forEach(function(line3) {
          file.index[line3.number] = line3;
        });
      });
      return files;
    }
    function parseErrorLog(errLog) {
      var result = [];
      errLog.split("\n").forEach(function(errMsg) {
        if (errMsg.length < 5) {
          return;
        }
        var parts = /^ERROR:\s+(\d+):(\d+):\s*(.*)$/.exec(errMsg);
        if (parts) {
          result.push(new ShaderError(
            parts[1] | 0,
            parts[2] | 0,
            parts[3].trim()
          ));
        } else if (errMsg.length > 0) {
          result.push(new ShaderError("unknown", 0, errMsg));
        }
      });
      return result;
    }
    function annotateFiles(files, errors) {
      errors.forEach(function(error) {
        var file = files[error.file];
        if (file) {
          var line2 = file.index[error.line];
          if (line2) {
            line2.errors.push(error);
            file.hasErrors = true;
            return;
          }
        }
        files.unknown.hasErrors = true;
        files.unknown.lines[0].errors.push(error);
      });
    }
    function checkShaderError(gl, shader, source, type, command) {
      if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
        var errLog = gl.getShaderInfoLog(shader);
        var typeName = type === gl.FRAGMENT_SHADER ? "fragment" : "vertex";
        checkCommandType(source, "string", typeName + " shader source must be a string", command);
        var files = parseSource(source, command);
        var errors = parseErrorLog(errLog);
        annotateFiles(files, errors);
        Object.keys(files).forEach(function(fileNumber) {
          var file = files[fileNumber];
          if (!file.hasErrors) {
            return;
          }
          var strings = [""];
          var styles = [""];
          function push(str, style) {
            strings.push(str);
            styles.push(style || "");
          }
          push("file number " + fileNumber + ": " + file.name + "\n", "color:red;text-decoration:underline;font-weight:bold");
          file.lines.forEach(function(line2) {
            if (line2.errors.length > 0) {
              push(leftPad(line2.number, 4) + "|  ", "background-color:yellow; font-weight:bold");
              push(line2.line + endl, "color:red; background-color:yellow; font-weight:bold");
              var offset = 0;
              line2.errors.forEach(function(error) {
                var message = error.message;
                var token = /^\s*'(.*)'\s*:\s*(.*)$/.exec(message);
                if (token) {
                  var tokenPat = token[1];
                  message = token[2];
                  switch (tokenPat) {
                    case "assign":
                      tokenPat = "=";
                      break;
                  }
                  offset = Math.max(line2.line.indexOf(tokenPat, offset), 0);
                } else {
                  offset = 0;
                }
                push(leftPad("| ", 6));
                push(leftPad("^^^", offset + 3) + endl, "font-weight:bold");
                push(leftPad("| ", 6));
                push(message + endl, "font-weight:bold");
              });
              push(leftPad("| ", 6) + endl);
            } else {
              push(leftPad(line2.number, 4) + "|  ");
              push(line2.line + endl, "color:red");
            }
          });
          if (typeof document !== "undefined" && !window.chrome) {
            styles[0] = strings.join("%c");
            console.log.apply(console, styles);
          } else {
            console.log(strings.join(""));
          }
        });
        check.raise("Error compiling " + typeName + " shader, " + files[0].name);
      }
    }
    function checkLinkError(gl, program, fragShader, vertShader, command) {
      if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
        var errLog = gl.getProgramInfoLog(program);
        var fragParse = parseSource(fragShader, command);
        var vertParse = parseSource(vertShader, command);
        var header = 'Error linking program with vertex shader, "' + vertParse[0].name + '", and fragment shader "' + fragParse[0].name + '"';
        if (typeof document !== "undefined") {
          console.log(
            "%c" + header + endl + "%c" + errLog,
            "color:red;text-decoration:underline;font-weight:bold",
            "color:red"
          );
        } else {
          console.log(header + endl + errLog);
        }
        check.raise(header);
      }
    }
    function saveCommandRef(object) {
      object._commandRef = guessCommand();
    }
    function saveDrawCommandInfo(opts, uniforms, attributes, stringStore) {
      saveCommandRef(opts);
      function id(str) {
        if (str) {
          return stringStore.id(str);
        }
        return 0;
      }
      opts._fragId = id(opts.static.frag);
      opts._vertId = id(opts.static.vert);
      function addProps(dict, set) {
        Object.keys(set).forEach(function(u) {
          dict[stringStore.id(u)] = true;
        });
      }
      var uniformSet = opts._uniformSet = {};
      addProps(uniformSet, uniforms.static);
      addProps(uniformSet, uniforms.dynamic);
      var attributeSet = opts._attributeSet = {};
      addProps(attributeSet, attributes.static);
      addProps(attributeSet, attributes.dynamic);
      opts._hasCount = "count" in opts.static || "count" in opts.dynamic || "elements" in opts.static || "elements" in opts.dynamic;
    }
    function commandRaise(message, command) {
      var callSite = guessCallSite();
      raise(message + " in command " + (command || guessCommand()) + (callSite === "unknown" ? "" : " called from " + callSite));
    }
    function checkCommand(pred, message, command) {
      if (!pred) {
        commandRaise(message, command || guessCommand());
      }
    }
    function checkParameterCommand(param, possibilities, message, command) {
      if (!(param in possibilities)) {
        commandRaise(
          "unknown parameter (" + param + ")" + encolon(message) + ". possible values: " + Object.keys(possibilities).join(),
          command || guessCommand()
        );
      }
    }
    function checkCommandType(value, type, message, command) {
      if (!standardTypeEh(value, type)) {
        commandRaise(
          "invalid parameter type" + encolon(message) + ". expected " + type + ", got " + typeof value,
          command || guessCommand()
        );
      }
    }
    function checkOptional(block) {
      block();
    }
    function checkFramebufferFormat(attachment, texFormats, rbFormats) {
      if (attachment.texture) {
        checkOneOf(
          attachment.texture._texture.internalformat,
          texFormats,
          "unsupported texture format for attachment"
        );
      } else {
        checkOneOf(
          attachment.renderbuffer._renderbuffer.format,
          rbFormats,
          "unsupported renderbuffer format for attachment"
        );
      }
    }
    var GL_CLAMP_TO_EDGE = 33071;
    var GL_NEAREST = 9728;
    var GL_NEAREST_MIPMAP_NEAREST = 9984;
    var GL_LINEAR_MIPMAP_NEAREST = 9985;
    var GL_NEAREST_MIPMAP_LINEAR = 9986;
    var GL_LINEAR_MIPMAP_LINEAR = 9987;
    var GL_BYTE = 5120;
    var GL_UNSIGNED_BYTE = 5121;
    var GL_SHORT = 5122;
    var GL_UNSIGNED_SHORT = 5123;
    var GL_INT = 5124;
    var GL_UNSIGNED_INT = 5125;
    var GL_FLOAT = 5126;
    var GL_UNSIGNED_SHORT_4_4_4_4 = 32819;
    var GL_UNSIGNED_SHORT_5_5_5_1 = 32820;
    var GL_UNSIGNED_SHORT_5_6_5 = 33635;
    var GL_UNSIGNED_INT_24_8_WEBGL = 34042;
    var GL_HALF_FLOAT_OES = 36193;
    var TYPE_SIZE = {};
    TYPE_SIZE[GL_BYTE] = TYPE_SIZE[GL_UNSIGNED_BYTE] = 1;
    TYPE_SIZE[GL_SHORT] = TYPE_SIZE[GL_UNSIGNED_SHORT] = TYPE_SIZE[GL_HALF_FLOAT_OES] = TYPE_SIZE[GL_UNSIGNED_SHORT_5_6_5] = TYPE_SIZE[GL_UNSIGNED_SHORT_4_4_4_4] = TYPE_SIZE[GL_UNSIGNED_SHORT_5_5_5_1] = 2;
    TYPE_SIZE[GL_INT] = TYPE_SIZE[GL_UNSIGNED_INT] = TYPE_SIZE[GL_FLOAT] = TYPE_SIZE[GL_UNSIGNED_INT_24_8_WEBGL] = 4;
    function pixelSize(type, channels) {
      if (type === GL_UNSIGNED_SHORT_5_5_5_1 || type === GL_UNSIGNED_SHORT_4_4_4_4 || type === GL_UNSIGNED_SHORT_5_6_5) {
        return 2;
      } else if (type === GL_UNSIGNED_INT_24_8_WEBGL) {
        return 4;
      } else {
        return TYPE_SIZE[type] * channels;
      }
    }
    function isPow2(v) {
      return !(v & v - 1) && !!v;
    }
    function checkTexture2D(info, mipData, limits) {
      var i;
      var w = mipData.width;
      var h = mipData.height;
      var c = mipData.channels;
      check(
        w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize,
        "invalid texture shape"
      );
      if (info.wrapS !== GL_CLAMP_TO_EDGE || info.wrapT !== GL_CLAMP_TO_EDGE) {
        check(
          isPow2(w) && isPow2(h),
          "incompatible wrap mode for texture, both width and height must be power of 2"
        );
      }
      if (mipData.mipmask === 1) {
        if (w !== 1 && h !== 1) {
          check(
            info.minFilter !== GL_NEAREST_MIPMAP_NEAREST && info.minFilter !== GL_NEAREST_MIPMAP_LINEAR && info.minFilter !== GL_LINEAR_MIPMAP_NEAREST && info.minFilter !== GL_LINEAR_MIPMAP_LINEAR,
            "min filter requires mipmap"
          );
        }
      } else {
        check(
          isPow2(w) && isPow2(h),
          "texture must be a square power of 2 to support mipmapping"
        );
        check(
          mipData.mipmask === (w << 1) - 1,
          "missing or incomplete mipmap data"
        );
      }
      if (mipData.type === GL_FLOAT) {
        if (limits.extensions.indexOf("oes_texture_float_linear") < 0) {
          check(
            info.minFilter === GL_NEAREST && info.magFilter === GL_NEAREST,
            "filter not supported, must enable oes_texture_float_linear"
          );
        }
        check(
          !info.genMipmaps,
          "mipmap generation not supported with float textures"
        );
      }
      var mipimages = mipData.images;
      for (i = 0; i < 16; ++i) {
        if (mipimages[i]) {
          var mw = w >> i;
          var mh = h >> i;
          check(mipData.mipmask & 1 << i, "missing mipmap data");
          var img = mipimages[i];
          check(
            img.width === mw && img.height === mh,
            "invalid shape for mip images"
          );
          check(
            img.format === mipData.format && img.internalformat === mipData.internalformat && img.type === mipData.type,
            "incompatible type for mip image"
          );
          if (img.compressed) ;
          else if (img.data) {
            var rowSize = Math.ceil(pixelSize(img.type, c) * mw / img.unpackAlignment) * img.unpackAlignment;
            check(
              img.data.byteLength === rowSize * mh,
              "invalid data for image, buffer size is inconsistent with image format"
            );
          } else if (img.element) ;
          else if (img.copy) ;
        } else if (!info.genMipmaps) {
          check((mipData.mipmask & 1 << i) === 0, "extra mipmap data");
        }
      }
      if (mipData.compressed) {
        check(
          !info.genMipmaps,
          "mipmap generation for compressed images not supported"
        );
      }
    }
    function checkTextureCube(texture, info, faces, limits) {
      var w = texture.width;
      var h = texture.height;
      var c = texture.channels;
      check(
        w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize,
        "invalid texture shape"
      );
      check(
        w === h,
        "cube map must be square"
      );
      check(
        info.wrapS === GL_CLAMP_TO_EDGE && info.wrapT === GL_CLAMP_TO_EDGE,
        "wrap mode not supported by cube map"
      );
      for (var i = 0; i < faces.length; ++i) {
        var face = faces[i];
        check(
          face.width === w && face.height === h,
          "inconsistent cube map face shape"
        );
        if (info.genMipmaps) {
          check(
            !face.compressed,
            "can not generate mipmap for compressed textures"
          );
          check(
            face.mipmask === 1,
            "can not specify mipmaps and generate mipmaps"
          );
        }
        var mipmaps = face.images;
        for (var j = 0; j < 16; ++j) {
          var img = mipmaps[j];
          if (img) {
            var mw = w >> j;
            var mh = h >> j;
            check(face.mipmask & 1 << j, "missing mipmap data");
            check(
              img.width === mw && img.height === mh,
              "invalid shape for mip images"
            );
            check(
              img.format === texture.format && img.internalformat === texture.internalformat && img.type === texture.type,
              "incompatible type for mip image"
            );
            if (img.compressed) ;
            else if (img.data) {
              check(
                img.data.byteLength === mw * mh * Math.max(pixelSize(img.type, c), img.unpackAlignment),
                "invalid data for image, buffer size is inconsistent with image format"
              );
            } else if (img.element) ;
            else if (img.copy) ;
          }
        }
      }
    }
    var check$1 = extend(check, {
      optional: checkOptional,
      raise,
      commandRaise,
      command: checkCommand,
      parameter: checkParameter,
      commandParameter: checkParameterCommand,
      constructor: checkConstructor,
      type: checkTypeOf,
      commandType: checkCommandType,
      isTypedArray: checkIsTypedArray,
      nni: checkNonNegativeInt,
      oneOf: checkOneOf,
      shaderError: checkShaderError,
      linkError: checkLinkError,
      callSite: guessCallSite,
      saveCommandRef,
      saveDrawInfo: saveDrawCommandInfo,
      framebufferFormat: checkFramebufferFormat,
      guessCommand,
      texture2D: checkTexture2D,
      textureCube: checkTextureCube
    });
    var VARIABLE_COUNTER = 0;
    var DYN_FUNC = 0;
    var DYN_CONSTANT = 5;
    var DYN_ARRAY = 6;
    function DynamicVariable(type, data) {
      this.id = VARIABLE_COUNTER++;
      this.type = type;
      this.data = data;
    }
    function escapeStr(str) {
      return str.replace(/\\/g, "\\\\").replace(/"/g, '\\"');
    }
    function splitParts(str) {
      if (str.length === 0) {
        return [];
      }
      var firstChar = str.charAt(0);
      var lastChar = str.charAt(str.length - 1);
      if (str.length > 1 && firstChar === lastChar && (firstChar === '"' || firstChar === "'")) {
        return ['"' + escapeStr(str.substr(1, str.length - 2)) + '"'];
      }
      var parts = /\[(false|true|null|\d+|'[^']*'|"[^"]*")\]/.exec(str);
      if (parts) {
        return splitParts(str.substr(0, parts.index)).concat(splitParts(parts[1])).concat(splitParts(str.substr(parts.index + parts[0].length)));
      }
      var subparts = str.split(".");
      if (subparts.length === 1) {
        return ['"' + escapeStr(str) + '"'];
      }
      var result = [];
      for (var i = 0; i < subparts.length; ++i) {
        result = result.concat(splitParts(subparts[i]));
      }
      return result;
    }
    function toAccessorString(str) {
      return "[" + splitParts(str).join("][") + "]";
    }
    function defineDynamic(type, data) {
      return new DynamicVariable(type, toAccessorString(data + ""));
    }
    function isDynamic(x2) {
      return typeof x2 === "function" && !x2._reglType || x2 instanceof DynamicVariable;
    }
    function unbox(x2, path) {
      if (typeof x2 === "function") {
        return new DynamicVariable(DYN_FUNC, x2);
      } else if (typeof x2 === "number" || typeof x2 === "boolean") {
        return new DynamicVariable(DYN_CONSTANT, x2);
      } else if (Array.isArray(x2)) {
        return new DynamicVariable(DYN_ARRAY, x2.map((y, i) => unbox(y, path + "[" + i + "]")));
      } else if (x2 instanceof DynamicVariable) {
        return x2;
      }
      check$1(false, "invalid option type in uniform " + path);
    }
    var dynamic = {
      DynamicVariable,
      define: defineDynamic,
      isDynamic,
      unbox,
      accessor: toAccessorString
    };
    var raf2 = {
      next: typeof requestAnimationFrame === "function" ? function(cb) {
        return requestAnimationFrame(cb);
      } : function(cb) {
        return setTimeout(cb, 16);
      },
      cancel: typeof cancelAnimationFrame === "function" ? function(raf3) {
        return cancelAnimationFrame(raf3);
      } : clearTimeout
    };
    var clock = typeof performance !== "undefined" && performance.now ? function() {
      return performance.now();
    } : function() {
      return +/* @__PURE__ */ new Date();
    };
    function createStringStore() {
      var stringIds = { "": 0 };
      var stringValues = [""];
      return {
        id: function(str) {
          var result = stringIds[str];
          if (result) {
            return result;
          }
          result = stringIds[str] = stringValues.length;
          stringValues.push(str);
          return result;
        },
        str: function(id) {
          return stringValues[id];
        }
      };
    }
    function createCanvas(element, onDone, pixelRatio) {
      var canvas = document.createElement("canvas");
      extend(canvas.style, {
        border: 0,
        margin: 0,
        padding: 0,
        top: 0,
        left: 0
      });
      element.appendChild(canvas);
      if (element === document.body) {
        canvas.style.position = "absolute";
        extend(element.style, {
          margin: 0,
          padding: 0
        });
      }
      function resize() {
        var w = window.innerWidth;
        var h = window.innerHeight;
        if (element !== document.body) {
          var bounds = element.getBoundingClientRect();
          w = bounds.right - bounds.left;
          h = bounds.bottom - bounds.top;
        }
        canvas.width = pixelRatio * w;
        canvas.height = pixelRatio * h;
        extend(canvas.style, {
          width: w + "px",
          height: h + "px"
        });
      }
      var resizeObserver;
      if (element !== document.body && typeof ResizeObserver === "function") {
        resizeObserver = new ResizeObserver(function() {
          setTimeout(resize);
        });
        resizeObserver.observe(element);
      } else {
        window.addEventListener("resize", resize, false);
      }
      function onDestroy() {
        if (resizeObserver) {
          resizeObserver.disconnect();
        } else {
          window.removeEventListener("resize", resize);
        }
        element.removeChild(canvas);
      }
      resize();
      return {
        canvas,
        onDestroy
      };
    }
    function createContext(canvas, contextAttributes) {
      function get(name) {
        try {
          return canvas.getContext(name, contextAttributes);
        } catch (e2) {
          return null;
        }
      }
      return get("webgl") || get("experimental-webgl") || get("webgl-experimental");
    }
    function isHTMLElement(obj) {
      return typeof obj.nodeName === "string" && typeof obj.appendChild === "function" && typeof obj.getBoundingClientRect === "function";
    }
    function isWebGLContext(obj) {
      return typeof obj.drawArrays === "function" || typeof obj.drawElements === "function";
    }
    function parseExtensions(input) {
      if (typeof input === "string") {
        return input.split();
      }
      check$1(Array.isArray(input), "invalid extension array");
      return input;
    }
    function getElement(desc) {
      if (typeof desc === "string") {
        check$1(typeof document !== "undefined", "not supported outside of DOM");
        return document.querySelector(desc);
      }
      return desc;
    }
    function parseArgs(args_) {
      var args = args_ || {};
      var element, container, canvas, gl;
      var contextAttributes = {};
      var extensions = [];
      var optionalExtensions = [];
      var pixelRatio = typeof window === "undefined" ? 1 : window.devicePixelRatio;
      var profile = false;
      var onDone = function(err) {
        if (err) {
          check$1.raise(err);
        }
      };
      var onDestroy = function() {
      };
      if (typeof args === "string") {
        check$1(
          typeof document !== "undefined",
          "selector queries only supported in DOM enviroments"
        );
        element = document.querySelector(args);
        check$1(element, "invalid query string for element");
      } else if (typeof args === "object") {
        if (isHTMLElement(args)) {
          element = args;
        } else if (isWebGLContext(args)) {
          gl = args;
          canvas = gl.canvas;
        } else {
          check$1.constructor(args);
          if ("gl" in args) {
            gl = args.gl;
          } else if ("canvas" in args) {
            canvas = getElement(args.canvas);
          } else if ("container" in args) {
            container = getElement(args.container);
          }
          if ("attributes" in args) {
            contextAttributes = args.attributes;
            check$1.type(contextAttributes, "object", "invalid context attributes");
          }
          if ("extensions" in args) {
            extensions = parseExtensions(args.extensions);
          }
          if ("optionalExtensions" in args) {
            optionalExtensions = parseExtensions(args.optionalExtensions);
          }
          if ("onDone" in args) {
            check$1.type(
              args.onDone,
              "function",
              "invalid or missing onDone callback"
            );
            onDone = args.onDone;
          }
          if ("profile" in args) {
            profile = !!args.profile;
          }
          if ("pixelRatio" in args) {
            pixelRatio = +args.pixelRatio;
            check$1(pixelRatio > 0, "invalid pixel ratio");
          }
        }
      } else {
        check$1.raise("invalid arguments to regl");
      }
      if (element) {
        if (element.nodeName.toLowerCase() === "canvas") {
          canvas = element;
        } else {
          container = element;
        }
      }
      if (!gl) {
        if (!canvas) {
          check$1(
            typeof document !== "undefined",
            "must manually specify webgl context outside of DOM environments"
          );
          var result = createCanvas(container || document.body, onDone, pixelRatio);
          if (!result) {
            return null;
          }
          canvas = result.canvas;
          onDestroy = result.onDestroy;
        }
        if (contextAttributes.premultipliedAlpha === void 0) contextAttributes.premultipliedAlpha = true;
        gl = createContext(canvas, contextAttributes);
      }
      if (!gl) {
        onDestroy();
        onDone("webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org");
        return null;
      }
      return {
        gl,
        canvas,
        container,
        extensions,
        optionalExtensions,
        pixelRatio,
        profile,
        onDone,
        onDestroy
      };
    }
    function createExtensionCache(gl, config) {
      var extensions = {};
      function tryLoadExtension(name_) {
        check$1.type(name_, "string", "extension name must be string");
        var name2 = name_.toLowerCase();
        var ext;
        try {
          ext = extensions[name2] = gl.getExtension(name2);
        } catch (e2) {
        }
        return !!ext;
      }
      for (var i = 0; i < config.extensions.length; ++i) {
        var name = config.extensions[i];
        if (!tryLoadExtension(name)) {
          config.onDestroy();
          config.onDone('"' + name + '" extension is not supported by the current WebGL context, try upgrading your system or a different browser');
          return null;
        }
      }
      config.optionalExtensions.forEach(tryLoadExtension);
      return {
        extensions,
        restore: function() {
          Object.keys(extensions).forEach(function(name2) {
            if (extensions[name2] && !tryLoadExtension(name2)) {
              throw new Error("(regl): error restoring extension " + name2);
            }
          });
        }
      };
    }
    function loop2(n, f) {
      var result = Array(n);
      for (var i = 0; i < n; ++i) {
        result[i] = f(i);
      }
      return result;
    }
    var GL_BYTE$1 = 5120;
    var GL_UNSIGNED_BYTE$2 = 5121;
    var GL_SHORT$1 = 5122;
    var GL_UNSIGNED_SHORT$1 = 5123;
    var GL_INT$1 = 5124;
    var GL_UNSIGNED_INT$1 = 5125;
    var GL_FLOAT$2 = 5126;
    function nextPow16(v) {
      for (var i = 16; i <= 1 << 28; i *= 16) {
        if (v <= i) {
          return i;
        }
      }
      return 0;
    }
    function log2(v) {
      var r, shift;
      r = (v > 65535) << 4;
      v >>>= r;
      shift = (v > 255) << 3;
      v >>>= shift;
      r |= shift;
      shift = (v > 15) << 2;
      v >>>= shift;
      r |= shift;
      shift = (v > 3) << 1;
      v >>>= shift;
      r |= shift;
      return r | v >> 1;
    }
    function createPool() {
      var bufferPool = loop2(8, function() {
        return [];
      });
      function alloc(n) {
        var sz = nextPow16(n);
        var bin = bufferPool[log2(sz) >> 2];
        if (bin.length > 0) {
          return bin.pop();
        }
        return new ArrayBuffer(sz);
      }
      function free(buf) {
        bufferPool[log2(buf.byteLength) >> 2].push(buf);
      }
      function allocType(type, n) {
        var result = null;
        switch (type) {
          case GL_BYTE$1:
            result = new Int8Array(alloc(n), 0, n);
            break;
          case GL_UNSIGNED_BYTE$2:
            result = new Uint8Array(alloc(n), 0, n);
            break;
          case GL_SHORT$1:
            result = new Int16Array(alloc(2 * n), 0, n);
            break;
          case GL_UNSIGNED_SHORT$1:
            result = new Uint16Array(alloc(2 * n), 0, n);
            break;
          case GL_INT$1:
            result = new Int32Array(alloc(4 * n), 0, n);
            break;
          case GL_UNSIGNED_INT$1:
            result = new Uint32Array(alloc(4 * n), 0, n);
            break;
          case GL_FLOAT$2:
            result = new Float32Array(alloc(4 * n), 0, n);
            break;
          default:
            return null;
        }
        if (result.length !== n) {
          return result.subarray(0, n);
        }
        return result;
      }
      function freeType(array) {
        free(array.buffer);
      }
      return {
        alloc,
        free,
        allocType,
        freeType
      };
    }
    var pool = createPool();
    pool.zero = createPool();
    var GL_SUBPIXEL_BITS = 3408;
    var GL_RED_BITS = 3410;
    var GL_GREEN_BITS = 3411;
    var GL_BLUE_BITS = 3412;
    var GL_ALPHA_BITS = 3413;
    var GL_DEPTH_BITS = 3414;
    var GL_STENCIL_BITS = 3415;
    var GL_ALIASED_POINT_SIZE_RANGE = 33901;
    var GL_ALIASED_LINE_WIDTH_RANGE = 33902;
    var GL_MAX_TEXTURE_SIZE = 3379;
    var GL_MAX_VIEWPORT_DIMS = 3386;
    var GL_MAX_VERTEX_ATTRIBS = 34921;
    var GL_MAX_VERTEX_UNIFORM_VECTORS = 36347;
    var GL_MAX_VARYING_VECTORS = 36348;
    var GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
    var GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
    var GL_MAX_TEXTURE_IMAGE_UNITS = 34930;
    var GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
    var GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
    var GL_MAX_RENDERBUFFER_SIZE = 34024;
    var GL_VENDOR = 7936;
    var GL_RENDERER = 7937;
    var GL_VERSION = 7938;
    var GL_SHADING_LANGUAGE_VERSION = 35724;
    var GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047;
    var GL_MAX_COLOR_ATTACHMENTS_WEBGL = 36063;
    var GL_MAX_DRAW_BUFFERS_WEBGL = 34852;
    var GL_TEXTURE_2D = 3553;
    var GL_TEXTURE_CUBE_MAP = 34067;
    var GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
    var GL_TEXTURE0 = 33984;
    var GL_RGBA = 6408;
    var GL_FLOAT$1 = 5126;
    var GL_UNSIGNED_BYTE$1 = 5121;
    var GL_FRAMEBUFFER = 36160;
    var GL_FRAMEBUFFER_COMPLETE = 36053;
    var GL_COLOR_ATTACHMENT0 = 36064;
    var GL_COLOR_BUFFER_BIT$1 = 16384;
    var wrapLimits = function(gl, extensions) {
      var maxAnisotropic = 1;
      if (extensions.ext_texture_filter_anisotropic) {
        maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);
      }
      var maxDrawbuffers = 1;
      var maxColorAttachments = 1;
      if (extensions.webgl_draw_buffers) {
        maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL);
        maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL);
      }
      var readFloat = !!extensions.oes_texture_float;
      if (readFloat) {
        var readFloatTexture = gl.createTexture();
        gl.bindTexture(GL_TEXTURE_2D, readFloatTexture);
        gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT$1, null);
        var fbo = gl.createFramebuffer();
        gl.bindFramebuffer(GL_FRAMEBUFFER, fbo);
        gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0);
        gl.bindTexture(GL_TEXTURE_2D, null);
        if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false;
        else {
          gl.viewport(0, 0, 1, 1);
          gl.clearColor(1, 0, 0, 1);
          gl.clear(GL_COLOR_BUFFER_BIT$1);
          var pixels = pool.allocType(GL_FLOAT$1, 4);
          gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT$1, pixels);
          if (gl.getError()) readFloat = false;
          else {
            gl.deleteFramebuffer(fbo);
            gl.deleteTexture(readFloatTexture);
            readFloat = pixels[0] === 1;
          }
          pool.freeType(pixels);
        }
      }
      var isIE = typeof navigator !== "undefined" && (/MSIE/.test(navigator.userAgent) || /Trident\//.test(navigator.appVersion) || /Edge/.test(navigator.userAgent));
      var npotTextureCube = true;
      if (!isIE) {
        var cubeTexture = gl.createTexture();
        var data = pool.allocType(GL_UNSIGNED_BYTE$1, 36);
        gl.activeTexture(GL_TEXTURE0);
        gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture);
        gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE$1, data);
        pool.freeType(data);
        gl.bindTexture(GL_TEXTURE_CUBE_MAP, null);
        gl.deleteTexture(cubeTexture);
        npotTextureCube = !gl.getError();
      }
      return {
        // drawing buffer bit depth
        colorBits: [
          gl.getParameter(GL_RED_BITS),
          gl.getParameter(GL_GREEN_BITS),
          gl.getParameter(GL_BLUE_BITS),
          gl.getParameter(GL_ALPHA_BITS)
        ],
        depthBits: gl.getParameter(GL_DEPTH_BITS),
        stencilBits: gl.getParameter(GL_STENCIL_BITS),
        subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),
        // supported extensions
        extensions: Object.keys(extensions).filter(function(ext) {
          return !!extensions[ext];
        }),
        // max aniso samples
        maxAnisotropic,
        // max draw buffers
        maxDrawbuffers,
        maxColorAttachments,
        // point and line size ranges
        pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),
        lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),
        maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),
        maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),
        maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),
        maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),
        maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),
        maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),
        maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),
        maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),
        maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),
        maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),
        maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),
        // vendor info
        glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),
        renderer: gl.getParameter(GL_RENDERER),
        vendor: gl.getParameter(GL_VENDOR),
        version: gl.getParameter(GL_VERSION),
        // quirks
        readFloat,
        npotTextureCube
      };
    };
    function isNDArrayLike(obj) {
      return !!obj && typeof obj === "object" && Array.isArray(obj.shape) && Array.isArray(obj.stride) && typeof obj.offset === "number" && obj.shape.length === obj.stride.length && (Array.isArray(obj.data) || isTypedArray(obj.data));
    }
    var values = function(obj) {
      return Object.keys(obj).map(function(key) {
        return obj[key];
      });
    };
    var flattenUtils = {
      shape: arrayShape$1,
      flatten: flattenArray
    };
    function flatten1D(array, nx, out) {
      for (var i = 0; i < nx; ++i) {
        out[i] = array[i];
      }
    }
    function flatten2D(array, nx, ny, out) {
      var ptr = 0;
      for (var i = 0; i < nx; ++i) {
        var row = array[i];
        for (var j = 0; j < ny; ++j) {
          out[ptr++] = row[j];
        }
      }
    }
    function flatten3D(array, nx, ny, nz, out, ptr_) {
      var ptr = ptr_;
      for (var i = 0; i < nx; ++i) {
        var row = array[i];
        for (var j = 0; j < ny; ++j) {
          var col = row[j];
          for (var k = 0; k < nz; ++k) {
            out[ptr++] = col[k];
          }
        }
      }
    }
    function flattenRec(array, shape2, level, out, ptr) {
      var stride = 1;
      for (var i = level + 1; i < shape2.length; ++i) {
        stride *= shape2[i];
      }
      var n = shape2[level];
      if (shape2.length - level === 4) {
        var nx = shape2[level + 1];
        var ny = shape2[level + 2];
        var nz = shape2[level + 3];
        for (i = 0; i < n; ++i) {
          flatten3D(array[i], nx, ny, nz, out, ptr);
          ptr += stride;
        }
      } else {
        for (i = 0; i < n; ++i) {
          flattenRec(array[i], shape2, level + 1, out, ptr);
          ptr += stride;
        }
      }
    }
    function flattenArray(array, shape2, type, out_) {
      var sz = 1;
      if (shape2.length) {
        for (var i = 0; i < shape2.length; ++i) {
          sz *= shape2[i];
        }
      } else {
        sz = 0;
      }
      var out = out_ || pool.allocType(type, sz);
      switch (shape2.length) {
        case 0:
          break;
        case 1:
          flatten1D(array, shape2[0], out);
          break;
        case 2:
          flatten2D(array, shape2[0], shape2[1], out);
          break;
        case 3:
          flatten3D(array, shape2[0], shape2[1], shape2[2], out, 0);
          break;
        default:
          flattenRec(array, shape2, 0, out, 0);
      }
      return out;
    }
    function arrayShape$1(array_) {
      var shape2 = [];
      for (var array = array_; array.length; array = array[0]) {
        shape2.push(array.length);
      }
      return shape2;
    }
    var arrayTypes = {
      "[object Int8Array]": 5120,
      "[object Int16Array]": 5122,
      "[object Int32Array]": 5124,
      "[object Uint8Array]": 5121,
      "[object Uint8ClampedArray]": 5121,
      "[object Uint16Array]": 5123,
      "[object Uint32Array]": 5125,
      "[object Float32Array]": 5126,
      "[object Float64Array]": 5121,
      "[object ArrayBuffer]": 5121
    };
    var int8 = 5120;
    var int16 = 5122;
    var int32 = 5124;
    var uint8 = 5121;
    var uint16 = 5123;
    var uint32 = 5125;
    var float = 5126;
    var float32 = 5126;
    var glTypes = {
      int8,
      int16,
      int32,
      uint8,
      uint16,
      uint32,
      float,
      float32
    };
    var dynamic$1 = 35048;
    var stream = 35040;
    var usageTypes = {
      dynamic: dynamic$1,
      stream,
      "static": 35044
    };
    var arrayFlatten = flattenUtils.flatten;
    var arrayShape = flattenUtils.shape;
    var GL_STATIC_DRAW = 35044;
    var GL_STREAM_DRAW = 35040;
    var GL_UNSIGNED_BYTE$3 = 5121;
    var GL_FLOAT$3 = 5126;
    var DTYPES_SIZES = [];
    DTYPES_SIZES[5120] = 1;
    DTYPES_SIZES[5122] = 2;
    DTYPES_SIZES[5124] = 4;
    DTYPES_SIZES[5121] = 1;
    DTYPES_SIZES[5123] = 2;
    DTYPES_SIZES[5125] = 4;
    DTYPES_SIZES[5126] = 4;
    function typedArrayCode(data) {
      return arrayTypes[Object.prototype.toString.call(data)] | 0;
    }
    function copyArray(out, inp) {
      for (var i = 0; i < inp.length; ++i) {
        out[i] = inp[i];
      }
    }
    function transpose(result, data, shapeX, shapeY, strideX, strideY, offset) {
      var ptr = 0;
      for (var i = 0; i < shapeX; ++i) {
        for (var j = 0; j < shapeY; ++j) {
          result[ptr++] = data[strideX * i + strideY * j + offset];
        }
      }
    }
    function wrapBufferState(gl, stats2, config, destroyBuffer) {
      var bufferCount = 0;
      var bufferSet = {};
      function REGLBuffer(type) {
        this.id = bufferCount++;
        this.buffer = gl.createBuffer();
        this.type = type;
        this.usage = GL_STATIC_DRAW;
        this.byteLength = 0;
        this.dimension = 1;
        this.dtype = GL_UNSIGNED_BYTE$3;
        this.persistentData = null;
        if (config.profile) {
          this.stats = { size: 0 };
        }
      }
      REGLBuffer.prototype.bind = function() {
        gl.bindBuffer(this.type, this.buffer);
      };
      REGLBuffer.prototype.destroy = function() {
        destroy(this);
      };
      var streamPool = [];
      function createStream(type, data) {
        var buffer = streamPool.pop();
        if (!buffer) {
          buffer = new REGLBuffer(type);
        }
        buffer.bind();
        initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false);
        return buffer;
      }
      function destroyStream(stream$$1) {
        streamPool.push(stream$$1);
      }
      function initBufferFromTypedArray(buffer, data, usage) {
        buffer.byteLength = data.byteLength;
        gl.bufferData(buffer.type, data, usage);
      }
      function initBufferFromData(buffer, data, usage, dtype, dimension, persist) {
        var shape2;
        buffer.usage = usage;
        if (Array.isArray(data)) {
          buffer.dtype = dtype || GL_FLOAT$3;
          if (data.length > 0) {
            var flatData;
            if (Array.isArray(data[0])) {
              shape2 = arrayShape(data);
              var dim = 1;
              for (var i = 1; i < shape2.length; ++i) {
                dim *= shape2[i];
              }
              buffer.dimension = dim;
              flatData = arrayFlatten(data, shape2, buffer.dtype);
              initBufferFromTypedArray(buffer, flatData, usage);
              if (persist) {
                buffer.persistentData = flatData;
              } else {
                pool.freeType(flatData);
              }
            } else if (typeof data[0] === "number") {
              buffer.dimension = dimension;
              var typedData = pool.allocType(buffer.dtype, data.length);
              copyArray(typedData, data);
              initBufferFromTypedArray(buffer, typedData, usage);
              if (persist) {
                buffer.persistentData = typedData;
              } else {
                pool.freeType(typedData);
              }
            } else if (isTypedArray(data[0])) {
              buffer.dimension = data[0].length;
              buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$3;
              flatData = arrayFlatten(
                data,
                [data.length, data[0].length],
                buffer.dtype
              );
              initBufferFromTypedArray(buffer, flatData, usage);
              if (persist) {
                buffer.persistentData = flatData;
              } else {
                pool.freeType(flatData);
              }
            } else {
              check$1.raise("invalid buffer data");
            }
          }
        } else if (isTypedArray(data)) {
          buffer.dtype = dtype || typedArrayCode(data);
          buffer.dimension = dimension;
          initBufferFromTypedArray(buffer, data, usage);
          if (persist) {
            buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer));
          }
        } else if (isNDArrayLike(data)) {
          shape2 = data.shape;
          var stride = data.stride;
          var offset = data.offset;
          var shapeX = 0;
          var shapeY = 0;
          var strideX = 0;
          var strideY = 0;
          if (shape2.length === 1) {
            shapeX = shape2[0];
            shapeY = 1;
            strideX = stride[0];
            strideY = 0;
          } else if (shape2.length === 2) {
            shapeX = shape2[0];
            shapeY = shape2[1];
            strideX = stride[0];
            strideY = stride[1];
          } else {
            check$1.raise("invalid shape");
          }
          buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$3;
          buffer.dimension = shapeY;
          var transposeData2 = pool.allocType(buffer.dtype, shapeX * shapeY);
          transpose(
            transposeData2,
            data.data,
            shapeX,
            shapeY,
            strideX,
            strideY,
            offset
          );
          initBufferFromTypedArray(buffer, transposeData2, usage);
          if (persist) {
            buffer.persistentData = transposeData2;
          } else {
            pool.freeType(transposeData2);
          }
        } else if (data instanceof ArrayBuffer) {
          buffer.dtype = GL_UNSIGNED_BYTE$3;
          buffer.dimension = dimension;
          initBufferFromTypedArray(buffer, data, usage);
          if (persist) {
            buffer.persistentData = new Uint8Array(new Uint8Array(data));
          }
        } else {
          check$1.raise("invalid buffer data");
        }
      }
      function destroy(buffer) {
        stats2.bufferCount--;
        destroyBuffer(buffer);
        var handle = buffer.buffer;
        check$1(handle, "buffer must not be deleted already");
        gl.deleteBuffer(handle);
        buffer.buffer = null;
        delete bufferSet[buffer.id];
      }
      function createBuffer(options, type, deferInit, persistent) {
        stats2.bufferCount++;
        var buffer = new REGLBuffer(type);
        bufferSet[buffer.id] = buffer;
        function reglBuffer(options2) {
          var usage = GL_STATIC_DRAW;
          var data = null;
          var byteLength = 0;
          var dtype = 0;
          var dimension = 1;
          if (Array.isArray(options2) || isTypedArray(options2) || isNDArrayLike(options2) || options2 instanceof ArrayBuffer) {
            data = options2;
          } else if (typeof options2 === "number") {
            byteLength = options2 | 0;
          } else if (options2) {
            check$1.type(
              options2,
              "object",
              "buffer arguments must be an object, a number or an array"
            );
            if ("data" in options2) {
              check$1(
                data === null || Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data),
                "invalid data for buffer"
              );
              data = options2.data;
            }
            if ("usage" in options2) {
              check$1.parameter(options2.usage, usageTypes, "invalid buffer usage");
              usage = usageTypes[options2.usage];
            }
            if ("type" in options2) {
              check$1.parameter(options2.type, glTypes, "invalid buffer type");
              dtype = glTypes[options2.type];
            }
            if ("dimension" in options2) {
              check$1.type(options2.dimension, "number", "invalid dimension");
              dimension = options2.dimension | 0;
            }
            if ("length" in options2) {
              check$1.nni(byteLength, "buffer length must be a nonnegative integer");
              byteLength = options2.length | 0;
            }
          }
          buffer.bind();
          if (!data) {
            if (byteLength) gl.bufferData(buffer.type, byteLength, usage);
            buffer.dtype = dtype || GL_UNSIGNED_BYTE$3;
            buffer.usage = usage;
            buffer.dimension = dimension;
            buffer.byteLength = byteLength;
          } else {
            initBufferFromData(buffer, data, usage, dtype, dimension, persistent);
          }
          if (config.profile) {
            buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype];
          }
          return reglBuffer;
        }
        function setSubData(data, offset) {
          check$1(
            offset + data.byteLength <= buffer.byteLength,
            "invalid buffer subdata call, buffer is too small.  Can't write data of size " + data.byteLength + " starting from offset " + offset + " to a buffer of size " + buffer.byteLength
          );
          gl.bufferSubData(buffer.type, offset, data);
        }
        function subdata(data, offset_) {
          var offset = (offset_ || 0) | 0;
          var shape2;
          buffer.bind();
          if (isTypedArray(data) || data instanceof ArrayBuffer) {
            setSubData(data, offset);
          } else if (Array.isArray(data)) {
            if (data.length > 0) {
              if (typeof data[0] === "number") {
                var converted = pool.allocType(buffer.dtype, data.length);
                copyArray(converted, data);
                setSubData(converted, offset);
                pool.freeType(converted);
              } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {
                shape2 = arrayShape(data);
                var flatData = arrayFlatten(data, shape2, buffer.dtype);
                setSubData(flatData, offset);
                pool.freeType(flatData);
              } else {
                check$1.raise("invalid buffer data");
              }
            }
          } else if (isNDArrayLike(data)) {
            shape2 = data.shape;
            var stride = data.stride;
            var shapeX = 0;
            var shapeY = 0;
            var strideX = 0;
            var strideY = 0;
            if (shape2.length === 1) {
              shapeX = shape2[0];
              shapeY = 1;
              strideX = stride[0];
              strideY = 0;
            } else if (shape2.length === 2) {
              shapeX = shape2[0];
              shapeY = shape2[1];
              strideX = stride[0];
              strideY = stride[1];
            } else {
              check$1.raise("invalid shape");
            }
            var dtype = Array.isArray(data.data) ? buffer.dtype : typedArrayCode(data.data);
            var transposeData2 = pool.allocType(dtype, shapeX * shapeY);
            transpose(
              transposeData2,
              data.data,
              shapeX,
              shapeY,
              strideX,
              strideY,
              data.offset
            );
            setSubData(transposeData2, offset);
            pool.freeType(transposeData2);
          } else {
            check$1.raise("invalid data for buffer subdata");
          }
          return reglBuffer;
        }
        if (!deferInit) {
          reglBuffer(options);
        }
        reglBuffer._reglType = "buffer";
        reglBuffer._buffer = buffer;
        reglBuffer.subdata = subdata;
        if (config.profile) {
          reglBuffer.stats = buffer.stats;
        }
        reglBuffer.destroy = function() {
          destroy(buffer);
        };
        return reglBuffer;
      }
      function restoreBuffers() {
        values(bufferSet).forEach(function(buffer) {
          buffer.buffer = gl.createBuffer();
          gl.bindBuffer(buffer.type, buffer.buffer);
          gl.bufferData(
            buffer.type,
            buffer.persistentData || buffer.byteLength,
            buffer.usage
          );
        });
      }
      if (config.profile) {
        stats2.getTotalBufferSize = function() {
          var total = 0;
          Object.keys(bufferSet).forEach(function(key) {
            total += bufferSet[key].stats.size;
          });
          return total;
        };
      }
      return {
        create: createBuffer,
        createStream,
        destroyStream,
        clear: function() {
          values(bufferSet).forEach(destroy);
          streamPool.forEach(destroy);
        },
        getBuffer: function(wrapper) {
          if (wrapper && wrapper._buffer instanceof REGLBuffer) {
            return wrapper._buffer;
          }
          return null;
        },
        restore: restoreBuffers,
        _initBuffer: initBufferFromData
      };
    }
    var points = 0;
    var point = 0;
    var lines = 1;
    var line = 1;
    var triangles = 4;
    var triangle = 4;
    var primTypes = {
      points,
      point,
      lines,
      line,
      triangles,
      triangle,
      "line loop": 2,
      "line strip": 3,
      "triangle strip": 5,
      "triangle fan": 6
    };
    var GL_POINTS = 0;
    var GL_LINES = 1;
    var GL_TRIANGLES = 4;
    var GL_BYTE$2 = 5120;
    var GL_UNSIGNED_BYTE$4 = 5121;
    var GL_SHORT$2 = 5122;
    var GL_UNSIGNED_SHORT$2 = 5123;
    var GL_INT$2 = 5124;
    var GL_UNSIGNED_INT$2 = 5125;
    var GL_ELEMENT_ARRAY_BUFFER = 34963;
    var GL_STREAM_DRAW$1 = 35040;
    var GL_STATIC_DRAW$1 = 35044;
    function wrapElementsState(gl, extensions, bufferState, stats2) {
      var elementSet = {};
      var elementCount = 0;
      var elementTypes = {
        "uint8": GL_UNSIGNED_BYTE$4,
        "uint16": GL_UNSIGNED_SHORT$2
      };
      if (extensions.oes_element_index_uint) {
        elementTypes.uint32 = GL_UNSIGNED_INT$2;
      }
      function REGLElementBuffer(buffer) {
        this.id = elementCount++;
        elementSet[this.id] = this;
        this.buffer = buffer;
        this.primType = GL_TRIANGLES;
        this.vertCount = 0;
        this.type = 0;
      }
      REGLElementBuffer.prototype.bind = function() {
        this.buffer.bind();
      };
      var bufferPool = [];
      function createElementStream(data) {
        var result = bufferPool.pop();
        if (!result) {
          result = new REGLElementBuffer(bufferState.create(
            null,
            GL_ELEMENT_ARRAY_BUFFER,
            true,
            false
          )._buffer);
        }
        initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0);
        return result;
      }
      function destroyElementStream(elements) {
        bufferPool.push(elements);
      }
      function initElements(elements, data, usage, prim, count, byteLength, type) {
        elements.buffer.bind();
        var dtype;
        if (data) {
          var predictedType = type;
          if (!type && (!isTypedArray(data) || isNDArrayLike(data) && !isTypedArray(data.data))) {
            predictedType = extensions.oes_element_index_uint ? GL_UNSIGNED_INT$2 : GL_UNSIGNED_SHORT$2;
          }
          bufferState._initBuffer(
            elements.buffer,
            data,
            usage,
            predictedType,
            3
          );
        } else {
          gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage);
          elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$4;
          elements.buffer.usage = usage;
          elements.buffer.dimension = 3;
          elements.buffer.byteLength = byteLength;
        }
        dtype = type;
        if (!type) {
          switch (elements.buffer.dtype) {
            case GL_UNSIGNED_BYTE$4:
            case GL_BYTE$2:
              dtype = GL_UNSIGNED_BYTE$4;
              break;
            case GL_UNSIGNED_SHORT$2:
            case GL_SHORT$2:
              dtype = GL_UNSIGNED_SHORT$2;
              break;
            case GL_UNSIGNED_INT$2:
            case GL_INT$2:
              dtype = GL_UNSIGNED_INT$2;
              break;
            default:
              check$1.raise("unsupported type for element array");
          }
          elements.buffer.dtype = dtype;
        }
        elements.type = dtype;
        check$1(
          dtype !== GL_UNSIGNED_INT$2 || !!extensions.oes_element_index_uint,
          "32 bit element buffers not supported, enable oes_element_index_uint first"
        );
        var vertCount = count;
        if (vertCount < 0) {
          vertCount = elements.buffer.byteLength;
          if (dtype === GL_UNSIGNED_SHORT$2) {
            vertCount >>= 1;
          } else if (dtype === GL_UNSIGNED_INT$2) {
            vertCount >>= 2;
          }
        }
        elements.vertCount = vertCount;
        var primType = prim;
        if (prim < 0) {
          primType = GL_TRIANGLES;
          var dimension = elements.buffer.dimension;
          if (dimension === 1) primType = GL_POINTS;
          if (dimension === 2) primType = GL_LINES;
          if (dimension === 3) primType = GL_TRIANGLES;
        }
        elements.primType = primType;
      }
      function destroyElements(elements) {
        stats2.elementsCount--;
        check$1(elements.buffer !== null, "must not double destroy elements");
        delete elementSet[elements.id];
        elements.buffer.destroy();
        elements.buffer = null;
      }
      function createElements(options, persistent) {
        var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true);
        var elements = new REGLElementBuffer(buffer._buffer);
        stats2.elementsCount++;
        function reglElements(options2) {
          if (!options2) {
            buffer();
            elements.primType = GL_TRIANGLES;
            elements.vertCount = 0;
            elements.type = GL_UNSIGNED_BYTE$4;
          } else if (typeof options2 === "number") {
            buffer(options2);
            elements.primType = GL_TRIANGLES;
            elements.vertCount = options2 | 0;
            elements.type = GL_UNSIGNED_BYTE$4;
          } else {
            var data = null;
            var usage = GL_STATIC_DRAW$1;
            var primType = -1;
            var vertCount = -1;
            var byteLength = 0;
            var dtype = 0;
            if (Array.isArray(options2) || isTypedArray(options2) || isNDArrayLike(options2)) {
              data = options2;
            } else {
              check$1.type(options2, "object", "invalid arguments for elements");
              if ("data" in options2) {
                data = options2.data;
                check$1(
                  Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data),
                  "invalid data for element buffer"
                );
              }
              if ("usage" in options2) {
                check$1.parameter(
                  options2.usage,
                  usageTypes,
                  "invalid element buffer usage"
                );
                usage = usageTypes[options2.usage];
              }
              if ("primitive" in options2) {
                check$1.parameter(
                  options2.primitive,
                  primTypes,
                  "invalid element buffer primitive"
                );
                primType = primTypes[options2.primitive];
              }
              if ("count" in options2) {
                check$1(
                  typeof options2.count === "number" && options2.count >= 0,
                  "invalid vertex count for elements"
                );
                vertCount = options2.count | 0;
              }
              if ("type" in options2) {
                check$1.parameter(
                  options2.type,
                  elementTypes,
                  "invalid buffer type"
                );
                dtype = elementTypes[options2.type];
              }
              if ("length" in options2) {
                byteLength = options2.length | 0;
              } else {
                byteLength = vertCount;
                if (dtype === GL_UNSIGNED_SHORT$2 || dtype === GL_SHORT$2) {
                  byteLength *= 2;
                } else if (dtype === GL_UNSIGNED_INT$2 || dtype === GL_INT$2) {
                  byteLength *= 4;
                }
              }
            }
            initElements(
              elements,
              data,
              usage,
              primType,
              vertCount,
              byteLength,
              dtype
            );
          }
          return reglElements;
        }
        reglElements(options);
        reglElements._reglType = "elements";
        reglElements._elements = elements;
        reglElements.subdata = function(data, offset) {
          buffer.subdata(data, offset);
          return reglElements;
        };
        reglElements.destroy = function() {
          destroyElements(elements);
        };
        return reglElements;
      }
      return {
        create: createElements,
        createStream: createElementStream,
        destroyStream: destroyElementStream,
        getElements: function(elements) {
          if (typeof elements === "function" && elements._elements instanceof REGLElementBuffer) {
            return elements._elements;
          }
          return null;
        },
        clear: function() {
          values(elementSet).forEach(destroyElements);
        }
      };
    }
    var FLOAT = new Float32Array(1);
    var INT = new Uint32Array(FLOAT.buffer);
    var GL_UNSIGNED_SHORT$4 = 5123;
    function convertToHalfFloat(array) {
      var ushorts = pool.allocType(GL_UNSIGNED_SHORT$4, array.length);
      for (var i = 0; i < array.length; ++i) {
        if (isNaN(array[i])) {
          ushorts[i] = 65535;
        } else if (array[i] === Infinity) {
          ushorts[i] = 31744;
        } else if (array[i] === -Infinity) {
          ushorts[i] = 64512;
        } else {
          FLOAT[0] = array[i];
          var x2 = INT[0];
          var sgn = x2 >>> 31 << 15;
          var exp = (x2 << 1 >>> 24) - 127;
          var frac = x2 >> 13 & (1 << 10) - 1;
          if (exp < -24) {
            ushorts[i] = sgn;
          } else if (exp < -14) {
            var s = -14 - exp;
            ushorts[i] = sgn + (frac + (1 << 10) >> s);
          } else if (exp > 15) {
            ushorts[i] = sgn + 31744;
          } else {
            ushorts[i] = sgn + (exp + 15 << 10) + frac;
          }
        }
      }
      return ushorts;
    }
    function isArrayLike(s) {
      return Array.isArray(s) || isTypedArray(s);
    }
    var isPow2$1 = function(v) {
      return !(v & v - 1) && !!v;
    };
    var GL_COMPRESSED_TEXTURE_FORMATS = 34467;
    var GL_TEXTURE_2D$1 = 3553;
    var GL_TEXTURE_CUBE_MAP$1 = 34067;
    var GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 34069;
    var GL_RGBA$1 = 6408;
    var GL_ALPHA = 6406;
    var GL_RGB = 6407;
    var GL_LUMINANCE = 6409;
    var GL_LUMINANCE_ALPHA = 6410;
    var GL_RGBA4 = 32854;
    var GL_RGB5_A1 = 32855;
    var GL_RGB565 = 36194;
    var GL_UNSIGNED_SHORT_4_4_4_4$1 = 32819;
    var GL_UNSIGNED_SHORT_5_5_5_1$1 = 32820;
    var GL_UNSIGNED_SHORT_5_6_5$1 = 33635;
    var GL_UNSIGNED_INT_24_8_WEBGL$1 = 34042;
    var GL_DEPTH_COMPONENT = 6402;
    var GL_DEPTH_STENCIL = 34041;
    var GL_SRGB_EXT = 35904;
    var GL_SRGB_ALPHA_EXT = 35906;
    var GL_HALF_FLOAT_OES$1 = 36193;
    var GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 33776;
    var GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 33777;
    var GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 33778;
    var GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 33779;
    var GL_COMPRESSED_RGB_ATC_WEBGL = 35986;
    var GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 35987;
    var GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 34798;
    var GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840;
    var GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841;
    var GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842;
    var GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843;
    var GL_COMPRESSED_RGB_ETC1_WEBGL = 36196;
    var GL_UNSIGNED_BYTE$5 = 5121;
    var GL_UNSIGNED_SHORT$3 = 5123;
    var GL_UNSIGNED_INT$3 = 5125;
    var GL_FLOAT$4 = 5126;
    var GL_TEXTURE_WRAP_S = 10242;
    var GL_TEXTURE_WRAP_T = 10243;
    var GL_REPEAT = 10497;
    var GL_CLAMP_TO_EDGE$1 = 33071;
    var GL_MIRRORED_REPEAT = 33648;
    var GL_TEXTURE_MAG_FILTER = 10240;
    var GL_TEXTURE_MIN_FILTER = 10241;
    var GL_NEAREST$1 = 9728;
    var GL_LINEAR = 9729;
    var GL_NEAREST_MIPMAP_NEAREST$1 = 9984;
    var GL_LINEAR_MIPMAP_NEAREST$1 = 9985;
    var GL_NEAREST_MIPMAP_LINEAR$1 = 9986;
    var GL_LINEAR_MIPMAP_LINEAR$1 = 9987;
    var GL_GENERATE_MIPMAP_HINT = 33170;
    var GL_DONT_CARE = 4352;
    var GL_FASTEST = 4353;
    var GL_NICEST = 4354;
    var GL_TEXTURE_MAX_ANISOTROPY_EXT = 34046;
    var GL_UNPACK_ALIGNMENT = 3317;
    var GL_UNPACK_FLIP_Y_WEBGL = 37440;
    var GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
    var GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
    var GL_BROWSER_DEFAULT_WEBGL = 37444;
    var GL_TEXTURE0$1 = 33984;
    var MIPMAP_FILTERS = [
      GL_NEAREST_MIPMAP_NEAREST$1,
      GL_NEAREST_MIPMAP_LINEAR$1,
      GL_LINEAR_MIPMAP_NEAREST$1,
      GL_LINEAR_MIPMAP_LINEAR$1
    ];
    var CHANNELS_FORMAT = [
      0,
      GL_LUMINANCE,
      GL_LUMINANCE_ALPHA,
      GL_RGB,
      GL_RGBA$1
    ];
    var FORMAT_CHANNELS = {};
    FORMAT_CHANNELS[GL_LUMINANCE] = FORMAT_CHANNELS[GL_ALPHA] = FORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1;
    FORMAT_CHANNELS[GL_DEPTH_STENCIL] = FORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2;
    FORMAT_CHANNELS[GL_RGB] = FORMAT_CHANNELS[GL_SRGB_EXT] = 3;
    FORMAT_CHANNELS[GL_RGBA$1] = FORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4;
    function objectName(str) {
      return "[object " + str + "]";
    }
    var CANVAS_CLASS = objectName("HTMLCanvasElement");
    var OFFSCREENCANVAS_CLASS = objectName("OffscreenCanvas");
    var CONTEXT2D_CLASS = objectName("CanvasRenderingContext2D");
    var BITMAP_CLASS = objectName("ImageBitmap");
    var IMAGE_CLASS = objectName("HTMLImageElement");
    var VIDEO_CLASS = objectName("HTMLVideoElement");
    var PIXEL_CLASSES = Object.keys(arrayTypes).concat([
      CANVAS_CLASS,
      OFFSCREENCANVAS_CLASS,
      CONTEXT2D_CLASS,
      BITMAP_CLASS,
      IMAGE_CLASS,
      VIDEO_CLASS
    ]);
    var TYPE_SIZES = [];
    TYPE_SIZES[GL_UNSIGNED_BYTE$5] = 1;
    TYPE_SIZES[GL_FLOAT$4] = 4;
    TYPE_SIZES[GL_HALF_FLOAT_OES$1] = 2;
    TYPE_SIZES[GL_UNSIGNED_SHORT$3] = 2;
    TYPE_SIZES[GL_UNSIGNED_INT$3] = 4;
    var FORMAT_SIZES_SPECIAL = [];
    FORMAT_SIZES_SPECIAL[GL_RGBA4] = 2;
    FORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2;
    FORMAT_SIZES_SPECIAL[GL_RGB565] = 2;
    FORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25;
    FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5;
    function isNumericArray(arr) {
      return Array.isArray(arr) && (arr.length === 0 || typeof arr[0] === "number");
    }
    function isRectArray(arr) {
      if (!Array.isArray(arr)) {
        return false;
      }
      var width = arr.length;
      if (width === 0 || !isArrayLike(arr[0])) {
        return false;
      }
      return true;
    }
    function classString(x2) {
      return Object.prototype.toString.call(x2);
    }
    function isCanvasElement(object) {
      return classString(object) === CANVAS_CLASS;
    }
    function isOffscreenCanvas(object) {
      return classString(object) === OFFSCREENCANVAS_CLASS;
    }
    function isContext2D(object) {
      return classString(object) === CONTEXT2D_CLASS;
    }
    function isBitmap(object) {
      return classString(object) === BITMAP_CLASS;
    }
    function isImageElement(object) {
      return classString(object) === IMAGE_CLASS;
    }
    function isVideoElement(object) {
      return classString(object) === VIDEO_CLASS;
    }
    function isPixelData(object) {
      if (!object) {
        return false;
      }
      var className = classString(object);
      if (PIXEL_CLASSES.indexOf(className) >= 0) {
        return true;
      }
      return isNumericArray(object) || isRectArray(object) || isNDArrayLike(object);
    }
    function typedArrayCode$1(data) {
      return arrayTypes[Object.prototype.toString.call(data)] | 0;
    }
    function convertData(result, data) {
      var n = data.length;
      switch (result.type) {
        case GL_UNSIGNED_BYTE$5:
        case GL_UNSIGNED_SHORT$3:
        case GL_UNSIGNED_INT$3:
        case GL_FLOAT$4:
          var converted = pool.allocType(result.type, n);
          converted.set(data);
          result.data = converted;
          break;
        case GL_HALF_FLOAT_OES$1:
          result.data = convertToHalfFloat(data);
          break;
        default:
          check$1.raise("unsupported texture type, must specify a typed array");
      }
    }
    function preConvert(image, n) {
      return pool.allocType(
        image.type === GL_HALF_FLOAT_OES$1 ? GL_FLOAT$4 : image.type,
        n
      );
    }
    function postConvert(image, data) {
      if (image.type === GL_HALF_FLOAT_OES$1) {
        image.data = convertToHalfFloat(data);
        pool.freeType(data);
      } else {
        image.data = data;
      }
    }
    function transposeData(image, array, strideX, strideY, strideC, offset) {
      var w = image.width;
      var h = image.height;
      var c = image.channels;
      var n = w * h * c;
      var data = preConvert(image, n);
      var p = 0;
      for (var i = 0; i < h; ++i) {
        for (var j = 0; j < w; ++j) {
          for (var k = 0; k < c; ++k) {
            data[p++] = array[strideX * j + strideY * i + strideC * k + offset];
          }
        }
      }
      postConvert(image, data);
    }
    function getTextureSize(format, type, width, height, isMipmap, isCube) {
      var s;
      if (typeof FORMAT_SIZES_SPECIAL[format] !== "undefined") {
        s = FORMAT_SIZES_SPECIAL[format];
      } else {
        s = FORMAT_CHANNELS[format] * TYPE_SIZES[type];
      }
      if (isCube) {
        s *= 6;
      }
      if (isMipmap) {
        var total = 0;
        var w = width;
        while (w >= 1) {
          total += s * w * w;
          w /= 2;
        }
        return total;
      } else {
        return s * width * height;
      }
    }
    function createTextureSet(gl, extensions, limits, reglPoll, contextState, stats2, config) {
      var mipmapHint = {
        "don't care": GL_DONT_CARE,
        "dont care": GL_DONT_CARE,
        "nice": GL_NICEST,
        "fast": GL_FASTEST
      };
      var wrapModes = {
        "repeat": GL_REPEAT,
        "clamp": GL_CLAMP_TO_EDGE$1,
        "mirror": GL_MIRRORED_REPEAT
      };
      var magFilters = {
        "nearest": GL_NEAREST$1,
        "linear": GL_LINEAR
      };
      var minFilters = extend({
        "mipmap": GL_LINEAR_MIPMAP_LINEAR$1,
        "nearest mipmap nearest": GL_NEAREST_MIPMAP_NEAREST$1,
        "linear mipmap nearest": GL_LINEAR_MIPMAP_NEAREST$1,
        "nearest mipmap linear": GL_NEAREST_MIPMAP_LINEAR$1,
        "linear mipmap linear": GL_LINEAR_MIPMAP_LINEAR$1
      }, magFilters);
      var colorSpace = {
        "none": 0,
        "browser": GL_BROWSER_DEFAULT_WEBGL
      };
      var textureTypes = {
        "uint8": GL_UNSIGNED_BYTE$5,
        "rgba4": GL_UNSIGNED_SHORT_4_4_4_4$1,
        "rgb565": GL_UNSIGNED_SHORT_5_6_5$1,
        "rgb5 a1": GL_UNSIGNED_SHORT_5_5_5_1$1
      };
      var textureFormats = {
        "alpha": GL_ALPHA,
        "luminance": GL_LUMINANCE,
        "luminance alpha": GL_LUMINANCE_ALPHA,
        "rgb": GL_RGB,
        "rgba": GL_RGBA$1,
        "rgba4": GL_RGBA4,
        "rgb5 a1": GL_RGB5_A1,
        "rgb565": GL_RGB565
      };
      var compressedTextureFormats = {};
      if (extensions.ext_srgb) {
        textureFormats.srgb = GL_SRGB_EXT;
        textureFormats.srgba = GL_SRGB_ALPHA_EXT;
      }
      if (extensions.oes_texture_float) {
        textureTypes.float32 = textureTypes.float = GL_FLOAT$4;
      }
      if (extensions.oes_texture_half_float) {
        textureTypes["float16"] = textureTypes["half float"] = GL_HALF_FLOAT_OES$1;
      }
      if (extensions.webgl_depth_texture) {
        extend(textureFormats, {
          "depth": GL_DEPTH_COMPONENT,
          "depth stencil": GL_DEPTH_STENCIL
        });
        extend(textureTypes, {
          "uint16": GL_UNSIGNED_SHORT$3,
          "uint32": GL_UNSIGNED_INT$3,
          "depth stencil": GL_UNSIGNED_INT_24_8_WEBGL$1
        });
      }
      if (extensions.webgl_compressed_texture_s3tc) {
        extend(compressedTextureFormats, {
          "rgb s3tc dxt1": GL_COMPRESSED_RGB_S3TC_DXT1_EXT,
          "rgba s3tc dxt1": GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,
          "rgba s3tc dxt3": GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,
          "rgba s3tc dxt5": GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
        });
      }
      if (extensions.webgl_compressed_texture_atc) {
        extend(compressedTextureFormats, {
          "rgb atc": GL_COMPRESSED_RGB_ATC_WEBGL,
          "rgba atc explicit alpha": GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,
          "rgba atc interpolated alpha": GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL
        });
      }
      if (extensions.webgl_compressed_texture_pvrtc) {
        extend(compressedTextureFormats, {
          "rgb pvrtc 4bppv1": GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,
          "rgb pvrtc 2bppv1": GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,
          "rgba pvrtc 4bppv1": GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,
          "rgba pvrtc 2bppv1": GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
        });
      }
      if (extensions.webgl_compressed_texture_etc1) {
        compressedTextureFormats["rgb etc1"] = GL_COMPRESSED_RGB_ETC1_WEBGL;
      }
      var supportedCompressedFormats = Array.prototype.slice.call(
        gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS)
      );
      Object.keys(compressedTextureFormats).forEach(function(name) {
        var format = compressedTextureFormats[name];
        if (supportedCompressedFormats.indexOf(format) >= 0) {
          textureFormats[name] = format;
        }
      });
      var supportedFormats = Object.keys(textureFormats);
      limits.textureFormats = supportedFormats;
      var textureFormatsInvert = [];
      Object.keys(textureFormats).forEach(function(key) {
        var val = textureFormats[key];
        textureFormatsInvert[val] = key;
      });
      var textureTypesInvert = [];
      Object.keys(textureTypes).forEach(function(key) {
        var val = textureTypes[key];
        textureTypesInvert[val] = key;
      });
      var magFiltersInvert = [];
      Object.keys(magFilters).forEach(function(key) {
        var val = magFilters[key];
        magFiltersInvert[val] = key;
      });
      var minFiltersInvert = [];
      Object.keys(minFilters).forEach(function(key) {
        var val = minFilters[key];
        minFiltersInvert[val] = key;
      });
      var wrapModesInvert = [];
      Object.keys(wrapModes).forEach(function(key) {
        var val = wrapModes[key];
        wrapModesInvert[val] = key;
      });
      var colorFormats = supportedFormats.reduce(function(color2, key) {
        var glenum = textureFormats[key];
        if (glenum === GL_LUMINANCE || glenum === GL_ALPHA || glenum === GL_LUMINANCE || glenum === GL_LUMINANCE_ALPHA || glenum === GL_DEPTH_COMPONENT || glenum === GL_DEPTH_STENCIL || extensions.ext_srgb && (glenum === GL_SRGB_EXT || glenum === GL_SRGB_ALPHA_EXT)) {
          color2[glenum] = glenum;
        } else if (glenum === GL_RGB5_A1 || key.indexOf("rgba") >= 0) {
          color2[glenum] = GL_RGBA$1;
        } else {
          color2[glenum] = GL_RGB;
        }
        return color2;
      }, {});
      function TexFlags() {
        this.internalformat = GL_RGBA$1;
        this.format = GL_RGBA$1;
        this.type = GL_UNSIGNED_BYTE$5;
        this.compressed = false;
        this.premultiplyAlpha = false;
        this.flipY = false;
        this.unpackAlignment = 1;
        this.colorSpace = GL_BROWSER_DEFAULT_WEBGL;
        this.width = 0;
        this.height = 0;
        this.channels = 0;
      }
      function copyFlags(result, other) {
        result.internalformat = other.internalformat;
        result.format = other.format;
        result.type = other.type;
        result.compressed = other.compressed;
        result.premultiplyAlpha = other.premultiplyAlpha;
        result.flipY = other.flipY;
        result.unpackAlignment = other.unpackAlignment;
        result.colorSpace = other.colorSpace;
        result.width = other.width;
        result.height = other.height;
        result.channels = other.channels;
      }
      function parseFlags(flags, options) {
        if (typeof options !== "object" || !options) {
          return;
        }
        if ("premultiplyAlpha" in options) {
          check$1.type(
            options.premultiplyAlpha,
            "boolean",
            "invalid premultiplyAlpha"
          );
          flags.premultiplyAlpha = options.premultiplyAlpha;
        }
        if ("flipY" in options) {
          check$1.type(
            options.flipY,
            "boolean",
            "invalid texture flip"
          );
          flags.flipY = options.flipY;
        }
        if ("alignment" in options) {
          check$1.oneOf(
            options.alignment,
            [1, 2, 4, 8],
            "invalid texture unpack alignment"
          );
          flags.unpackAlignment = options.alignment;
        }
        if ("colorSpace" in options) {
          check$1.parameter(
            options.colorSpace,
            colorSpace,
            "invalid colorSpace"
          );
          flags.colorSpace = colorSpace[options.colorSpace];
        }
        if ("type" in options) {
          var type = options.type;
          check$1(
            extensions.oes_texture_float || !(type === "float" || type === "float32"),
            "you must enable the OES_texture_float extension in order to use floating point textures."
          );
          check$1(
            extensions.oes_texture_half_float || !(type === "half float" || type === "float16"),
            "you must enable the OES_texture_half_float extension in order to use 16-bit floating point textures."
          );
          check$1(
            extensions.webgl_depth_texture || !(type === "uint16" || type === "uint32" || type === "depth stencil"),
            "you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures."
          );
          check$1.parameter(
            type,
            textureTypes,
            "invalid texture type"
          );
          flags.type = textureTypes[type];
        }
        var w = flags.width;
        var h = flags.height;
        var c = flags.channels;
        var hasChannels = false;
        if ("shape" in options) {
          check$1(
            Array.isArray(options.shape) && options.shape.length >= 2,
            "shape must be an array"
          );
          w = options.shape[0];
          h = options.shape[1];
          if (options.shape.length === 3) {
            c = options.shape[2];
            check$1(c > 0 && c <= 4, "invalid number of channels");
            hasChannels = true;
          }
          check$1(w >= 0 && w <= limits.maxTextureSize, "invalid width");
          check$1(h >= 0 && h <= limits.maxTextureSize, "invalid height");
        } else {
          if ("radius" in options) {
            w = h = options.radius;
            check$1(w >= 0 && w <= limits.maxTextureSize, "invalid radius");
          }
          if ("width" in options) {
            w = options.width;
            check$1(w >= 0 && w <= limits.maxTextureSize, "invalid width");
          }
          if ("height" in options) {
            h = options.height;
            check$1(h >= 0 && h <= limits.maxTextureSize, "invalid height");
          }
          if ("channels" in options) {
            c = options.channels;
            check$1(c > 0 && c <= 4, "invalid number of channels");
            hasChannels = true;
          }
        }
        flags.width = w | 0;
        flags.height = h | 0;
        flags.channels = c | 0;
        var hasFormat = false;
        if ("format" in options) {
          var formatStr = options.format;
          check$1(
            extensions.webgl_depth_texture || !(formatStr === "depth" || formatStr === "depth stencil"),
            "you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures."
          );
          check$1.parameter(
            formatStr,
            textureFormats,
            "invalid texture format"
          );
          var internalformat = flags.internalformat = textureFormats[formatStr];
          flags.format = colorFormats[internalformat];
          if (formatStr in textureTypes) {
            if (!("type" in options)) {
              flags.type = textureTypes[formatStr];
            }
          }
          if (formatStr in compressedTextureFormats) {
            flags.compressed = true;
          }
          hasFormat = true;
        }
        if (!hasChannels && hasFormat) {
          flags.channels = FORMAT_CHANNELS[flags.format];
        } else if (hasChannels && !hasFormat) {
          if (flags.channels !== CHANNELS_FORMAT[flags.format]) {
            flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels];
          }
        } else if (hasFormat && hasChannels) {
          check$1(
            flags.channels === FORMAT_CHANNELS[flags.format],
            "number of channels inconsistent with specified format"
          );
        }
      }
      function setFlags(flags) {
        gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY);
        gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha);
        gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace);
        gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment);
      }
      function TexImage() {
        TexFlags.call(this);
        this.xOffset = 0;
        this.yOffset = 0;
        this.data = null;
        this.needsFree = false;
        this.element = null;
        this.needsCopy = false;
      }
      function parseImage(image, options) {
        var data = null;
        if (isPixelData(options)) {
          data = options;
        } else if (options) {
          check$1.type(options, "object", "invalid pixel data type");
          parseFlags(image, options);
          if ("x" in options) {
            image.xOffset = options.x | 0;
          }
          if ("y" in options) {
            image.yOffset = options.y | 0;
          }
          if (isPixelData(options.data)) {
            data = options.data;
          }
        }
        check$1(
          !image.compressed || data instanceof Uint8Array,
          "compressed texture data must be stored in a uint8array"
        );
        if (options.copy) {
          check$1(!data, "can not specify copy and data field for the same texture");
          var viewW = contextState.viewportWidth;
          var viewH = contextState.viewportHeight;
          image.width = image.width || viewW - image.xOffset;
          image.height = image.height || viewH - image.yOffset;
          image.needsCopy = true;
          check$1(
            image.xOffset >= 0 && image.xOffset < viewW && image.yOffset >= 0 && image.yOffset < viewH && image.width > 0 && image.width <= viewW && image.height > 0 && image.height <= viewH,
            "copy texture read out of bounds"
          );
        } else if (!data) {
          image.width = image.width || 1;
          image.height = image.height || 1;
          image.channels = image.channels || 4;
        } else if (isTypedArray(data)) {
          image.channels = image.channels || 4;
          image.data = data;
          if (!("type" in options) && image.type === GL_UNSIGNED_BYTE$5) {
            image.type = typedArrayCode$1(data);
          }
        } else if (isNumericArray(data)) {
          image.channels = image.channels || 4;
          convertData(image, data);
          image.alignment = 1;
          image.needsFree = true;
        } else if (isNDArrayLike(data)) {
          var array = data.data;
          if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$5) {
            image.type = typedArrayCode$1(array);
          }
          var shape2 = data.shape;
          var stride = data.stride;
          var shapeX, shapeY, shapeC, strideX, strideY, strideC;
          if (shape2.length === 3) {
            shapeC = shape2[2];
            strideC = stride[2];
          } else {
            check$1(shape2.length === 2, "invalid ndarray pixel data, must be 2 or 3D");
            shapeC = 1;
            strideC = 1;
          }
          shapeX = shape2[0];
          shapeY = shape2[1];
          strideX = stride[0];
          strideY = stride[1];
          image.alignment = 1;
          image.width = shapeX;
          image.height = shapeY;
          image.channels = shapeC;
          image.format = image.internalformat = CHANNELS_FORMAT[shapeC];
          image.needsFree = true;
          transposeData(image, array, strideX, strideY, strideC, data.offset);
        } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {
          if (isCanvasElement(data) || isOffscreenCanvas(data)) {
            image.element = data;
          } else {
            image.element = data.canvas;
          }
          image.width = image.element.width;
          image.height = image.element.height;
          image.channels = 4;
        } else if (isBitmap(data)) {
          image.element = data;
          image.width = data.width;
          image.height = data.height;
          image.channels = 4;
        } else if (isImageElement(data)) {
          image.element = data;
          image.width = data.naturalWidth;
          image.height = data.naturalHeight;
          image.channels = 4;
        } else if (isVideoElement(data)) {
          image.element = data;
          image.width = data.videoWidth;
          image.height = data.videoHeight;
          image.channels = 4;
        } else if (isRectArray(data)) {
          var w = image.width || data[0].length;
          var h = image.height || data.length;
          var c = image.channels;
          if (isArrayLike(data[0][0])) {
            c = c || data[0][0].length;
          } else {
            c = c || 1;
          }
          var arrayShape2 = flattenUtils.shape(data);
          var n = 1;
          for (var dd = 0; dd < arrayShape2.length; ++dd) {
            n *= arrayShape2[dd];
          }
          var allocData = preConvert(image, n);
          flattenUtils.flatten(data, arrayShape2, "", allocData);
          postConvert(image, allocData);
          image.alignment = 1;
          image.width = w;
          image.height = h;
          image.channels = c;
          image.format = image.internalformat = CHANNELS_FORMAT[c];
          image.needsFree = true;
        }
        if (image.type === GL_FLOAT$4) {
          check$1(
            limits.extensions.indexOf("oes_texture_float") >= 0,
            "oes_texture_float extension not enabled"
          );
        } else if (image.type === GL_HALF_FLOAT_OES$1) {
          check$1(
            limits.extensions.indexOf("oes_texture_half_float") >= 0,
            "oes_texture_half_float extension not enabled"
          );
        }
      }
      function setImage(info, target, miplevel) {
        var element = info.element;
        var data = info.data;
        var internalformat = info.internalformat;
        var format = info.format;
        var type = info.type;
        var width = info.width;
        var height = info.height;
        setFlags(info);
        if (element) {
          gl.texImage2D(target, miplevel, format, format, type, element);
        } else if (info.compressed) {
          gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data);
        } else if (info.needsCopy) {
          reglPoll();
          gl.copyTexImage2D(
            target,
            miplevel,
            format,
            info.xOffset,
            info.yOffset,
            width,
            height,
            0
          );
        } else {
          gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null);
        }
      }
      function setSubImage(info, target, x2, y, miplevel) {
        var element = info.element;
        var data = info.data;
        var internalformat = info.internalformat;
        var format = info.format;
        var type = info.type;
        var width = info.width;
        var height = info.height;
        setFlags(info);
        if (element) {
          gl.texSubImage2D(
            target,
            miplevel,
            x2,
            y,
            format,
            type,
            element
          );
        } else if (info.compressed) {
          gl.compressedTexSubImage2D(
            target,
            miplevel,
            x2,
            y,
            internalformat,
            width,
            height,
            data
          );
        } else if (info.needsCopy) {
          reglPoll();
          gl.copyTexSubImage2D(
            target,
            miplevel,
            x2,
            y,
            info.xOffset,
            info.yOffset,
            width,
            height
          );
        } else {
          gl.texSubImage2D(
            target,
            miplevel,
            x2,
            y,
            width,
            height,
            format,
            type,
            data
          );
        }
      }
      var imagePool = [];
      function allocImage() {
        return imagePool.pop() || new TexImage();
      }
      function freeImage(image) {
        if (image.needsFree) {
          pool.freeType(image.data);
        }
        TexImage.call(image);
        imagePool.push(image);
      }
      function MipMap() {
        TexFlags.call(this);
        this.genMipmaps = false;
        this.mipmapHint = GL_DONT_CARE;
        this.mipmask = 0;
        this.images = Array(16);
      }
      function parseMipMapFromShape(mipmap, width, height) {
        var img = mipmap.images[0] = allocImage();
        mipmap.mipmask = 1;
        img.width = mipmap.width = width;
        img.height = mipmap.height = height;
        img.channels = mipmap.channels = 4;
      }
      function parseMipMapFromObject(mipmap, options) {
        var imgData = null;
        if (isPixelData(options)) {
          imgData = mipmap.images[0] = allocImage();
          copyFlags(imgData, mipmap);
          parseImage(imgData, options);
          mipmap.mipmask = 1;
        } else {
          parseFlags(mipmap, options);
          if (Array.isArray(options.mipmap)) {
            var mipData = options.mipmap;
            for (var i = 0; i < mipData.length; ++i) {
              imgData = mipmap.images[i] = allocImage();
              copyFlags(imgData, mipmap);
              imgData.width >>= i;
              imgData.height >>= i;
              parseImage(imgData, mipData[i]);
              mipmap.mipmask |= 1 << i;
            }
          } else {
            imgData = mipmap.images[0] = allocImage();
            copyFlags(imgData, mipmap);
            parseImage(imgData, options);
            mipmap.mipmask = 1;
          }
        }
        copyFlags(mipmap, mipmap.images[0]);
        if (mipmap.compressed && (mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)) {
          check$1(
            mipmap.width % 4 === 0 && mipmap.height % 4 === 0,
            "for compressed texture formats, mipmap level 0 must have width and height that are a multiple of 4"
          );
        }
      }
      function setMipMap(mipmap, target) {
        var images = mipmap.images;
        for (var i = 0; i < images.length; ++i) {
          if (!images[i]) {
            return;
          }
          setImage(images[i], target, i);
        }
      }
      var mipPool = [];
      function allocMipMap() {
        var result = mipPool.pop() || new MipMap();
        TexFlags.call(result);
        result.mipmask = 0;
        for (var i = 0; i < 16; ++i) {
          result.images[i] = null;
        }
        return result;
      }
      function freeMipMap(mipmap) {
        var images = mipmap.images;
        for (var i = 0; i < images.length; ++i) {
          if (images[i]) {
            freeImage(images[i]);
          }
          images[i] = null;
        }
        mipPool.push(mipmap);
      }
      function TexInfo() {
        this.minFilter = GL_NEAREST$1;
        this.magFilter = GL_NEAREST$1;
        this.wrapS = GL_CLAMP_TO_EDGE$1;
        this.wrapT = GL_CLAMP_TO_EDGE$1;
        this.anisotropic = 1;
        this.genMipmaps = false;
        this.mipmapHint = GL_DONT_CARE;
      }
      function parseTexInfo(info, options) {
        if ("min" in options) {
          var minFilter = options.min;
          check$1.parameter(minFilter, minFilters);
          info.minFilter = minFilters[minFilter];
          if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !("faces" in options)) {
            info.genMipmaps = true;
          }
        }
        if ("mag" in options) {
          var magFilter = options.mag;
          check$1.parameter(magFilter, magFilters);
          info.magFilter = magFilters[magFilter];
        }
        var wrapS = info.wrapS;
        var wrapT = info.wrapT;
        if ("wrap" in options) {
          var wrap = options.wrap;
          if (typeof wrap === "string") {
            check$1.parameter(wrap, wrapModes);
            wrapS = wrapT = wrapModes[wrap];
          } else if (Array.isArray(wrap)) {
            check$1.parameter(wrap[0], wrapModes);
            check$1.parameter(wrap[1], wrapModes);
            wrapS = wrapModes[wrap[0]];
            wrapT = wrapModes[wrap[1]];
          }
        } else {
          if ("wrapS" in options) {
            var optWrapS = options.wrapS;
            check$1.parameter(optWrapS, wrapModes);
            wrapS = wrapModes[optWrapS];
          }
          if ("wrapT" in options) {
            var optWrapT = options.wrapT;
            check$1.parameter(optWrapT, wrapModes);
            wrapT = wrapModes[optWrapT];
          }
        }
        info.wrapS = wrapS;
        info.wrapT = wrapT;
        if ("anisotropic" in options) {
          var anisotropic = options.anisotropic;
          check$1(
            typeof anisotropic === "number" && anisotropic >= 1 && anisotropic <= limits.maxAnisotropic,
            "aniso samples must be between 1 and "
          );
          info.anisotropic = options.anisotropic;
        }
        if ("mipmap" in options) {
          var hasMipMap = false;
          switch (typeof options.mipmap) {
            case "string":
              check$1.parameter(
                options.mipmap,
                mipmapHint,
                "invalid mipmap hint"
              );
              info.mipmapHint = mipmapHint[options.mipmap];
              info.genMipmaps = true;
              hasMipMap = true;
              break;
            case "boolean":
              hasMipMap = info.genMipmaps = options.mipmap;
              break;
            case "object":
              check$1(Array.isArray(options.mipmap), "invalid mipmap type");
              info.genMipmaps = false;
              hasMipMap = true;
              break;
            default:
              check$1.raise("invalid mipmap type");
          }
          if (hasMipMap && !("min" in options)) {
            info.minFilter = GL_NEAREST_MIPMAP_NEAREST$1;
          }
        }
      }
      function setTexInfo(info, target) {
        gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter);
        gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter);
        gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS);
        gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT);
        if (extensions.ext_texture_filter_anisotropic) {
          gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic);
        }
        if (info.genMipmaps) {
          gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint);
          gl.generateMipmap(target);
        }
      }
      var textureCount = 0;
      var textureSet = {};
      var numTexUnits = limits.maxTextureUnits;
      var textureUnits = Array(numTexUnits).map(function() {
        return null;
      });
      function REGLTexture(target) {
        TexFlags.call(this);
        this.mipmask = 0;
        this.internalformat = GL_RGBA$1;
        this.id = textureCount++;
        this.refCount = 1;
        this.target = target;
        this.texture = gl.createTexture();
        this.unit = -1;
        this.bindCount = 0;
        this.texInfo = new TexInfo();
        if (config.profile) {
          this.stats = { size: 0 };
        }
      }
      function tempBind(texture) {
        gl.activeTexture(GL_TEXTURE0$1);
        gl.bindTexture(texture.target, texture.texture);
      }
      function tempRestore() {
        var prev = textureUnits[0];
        if (prev) {
          gl.bindTexture(prev.target, prev.texture);
        } else {
          gl.bindTexture(GL_TEXTURE_2D$1, null);
        }
      }
      function destroy(texture) {
        var handle = texture.texture;
        check$1(handle, "must not double destroy texture");
        var unit = texture.unit;
        var target = texture.target;
        if (unit >= 0) {
          gl.activeTexture(GL_TEXTURE0$1 + unit);
          gl.bindTexture(target, null);
          textureUnits[unit] = null;
        }
        gl.deleteTexture(handle);
        texture.texture = null;
        texture.params = null;
        texture.pixels = null;
        texture.refCount = 0;
        delete textureSet[texture.id];
        stats2.textureCount--;
      }
      extend(REGLTexture.prototype, {
        bind: function() {
          var texture = this;
          texture.bindCount += 1;
          var unit = texture.unit;
          if (unit < 0) {
            for (var i = 0; i < numTexUnits; ++i) {
              var other = textureUnits[i];
              if (other) {
                if (other.bindCount > 0) {
                  continue;
                }
                other.unit = -1;
              }
              textureUnits[i] = texture;
              unit = i;
              break;
            }
            if (unit >= numTexUnits) {
              check$1.raise("insufficient number of texture units");
            }
            if (config.profile && stats2.maxTextureUnits < unit + 1) {
              stats2.maxTextureUnits = unit + 1;
            }
            texture.unit = unit;
            gl.activeTexture(GL_TEXTURE0$1 + unit);
            gl.bindTexture(texture.target, texture.texture);
          }
          return unit;
        },
        unbind: function() {
          this.bindCount -= 1;
        },
        decRef: function() {
          if (--this.refCount <= 0) {
            destroy(this);
          }
        }
      });
      function createTexture2D(a2, b) {
        var texture = new REGLTexture(GL_TEXTURE_2D$1);
        textureSet[texture.id] = texture;
        stats2.textureCount++;
        function reglTexture2D(a3, b2) {
          var texInfo = texture.texInfo;
          TexInfo.call(texInfo);
          var mipData = allocMipMap();
          if (typeof a3 === "number") {
            if (typeof b2 === "number") {
              parseMipMapFromShape(mipData, a3 | 0, b2 | 0);
            } else {
              parseMipMapFromShape(mipData, a3 | 0, a3 | 0);
            }
          } else if (a3) {
            check$1.type(a3, "object", "invalid arguments to regl.texture");
            parseTexInfo(texInfo, a3);
            parseMipMapFromObject(mipData, a3);
          } else {
            parseMipMapFromShape(mipData, 1, 1);
          }
          if (texInfo.genMipmaps) {
            mipData.mipmask = (mipData.width << 1) - 1;
          }
          texture.mipmask = mipData.mipmask;
          copyFlags(texture, mipData);
          check$1.texture2D(texInfo, mipData, limits);
          texture.internalformat = mipData.internalformat;
          reglTexture2D.width = mipData.width;
          reglTexture2D.height = mipData.height;
          tempBind(texture);
          setMipMap(mipData, GL_TEXTURE_2D$1);
          setTexInfo(texInfo, GL_TEXTURE_2D$1);
          tempRestore();
          freeMipMap(mipData);
          if (config.profile) {
            texture.stats.size = getTextureSize(
              texture.internalformat,
              texture.type,
              mipData.width,
              mipData.height,
              texInfo.genMipmaps,
              false
            );
          }
          reglTexture2D.format = textureFormatsInvert[texture.internalformat];
          reglTexture2D.type = textureTypesInvert[texture.type];
          reglTexture2D.mag = magFiltersInvert[texInfo.magFilter];
          reglTexture2D.min = minFiltersInvert[texInfo.minFilter];
          reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS];
          reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT];
          return reglTexture2D;
        }
        function subimage(image, x_, y_, level_) {
          check$1(!!image, "must specify image data");
          var x2 = x_ | 0;
          var y = y_ | 0;
          var level = level_ | 0;
          var imageData = allocImage();
          copyFlags(imageData, texture);
          imageData.width = 0;
          imageData.height = 0;
          parseImage(imageData, image);
          imageData.width = imageData.width || (texture.width >> level) - x2;
          imageData.height = imageData.height || (texture.height >> level) - y;
          check$1(
            texture.type === imageData.type && texture.format === imageData.format && texture.internalformat === imageData.internalformat,
            "incompatible format for texture.subimage"
          );
          check$1(
            x2 >= 0 && y >= 0 && x2 + imageData.width <= texture.width && y + imageData.height <= texture.height,
            "texture.subimage write out of bounds"
          );
          check$1(
            texture.mipmask & 1 << level,
            "missing mipmap data"
          );
          check$1(
            imageData.data || imageData.element || imageData.needsCopy,
            "missing image data"
          );
          tempBind(texture);
          setSubImage(imageData, GL_TEXTURE_2D$1, x2, y, level);
          tempRestore();
          freeImage(imageData);
          return reglTexture2D;
        }
        function resize(w_, h_) {
          var w = w_ | 0;
          var h = h_ | 0 || w;
          if (w === texture.width && h === texture.height) {
            return reglTexture2D;
          }
          reglTexture2D.width = texture.width = w;
          reglTexture2D.height = texture.height = h;
          tempBind(texture);
          for (var i = 0; texture.mipmask >> i; ++i) {
            var _w = w >> i;
            var _h = h >> i;
            if (!_w || !_h) break;
            gl.texImage2D(
              GL_TEXTURE_2D$1,
              i,
              texture.format,
              _w,
              _h,
              0,
              texture.format,
              texture.type,
              null
            );
          }
          tempRestore();
          if (config.profile) {
            texture.stats.size = getTextureSize(
              texture.internalformat,
              texture.type,
              w,
              h,
              false,
              false
            );
          }
          return reglTexture2D;
        }
        reglTexture2D(a2, b);
        reglTexture2D.subimage = subimage;
        reglTexture2D.resize = resize;
        reglTexture2D._reglType = "texture2d";
        reglTexture2D._texture = texture;
        if (config.profile) {
          reglTexture2D.stats = texture.stats;
        }
        reglTexture2D.destroy = function() {
          texture.decRef();
        };
        return reglTexture2D;
      }
      function createTextureCube(a0, a1, a2, a3, a4, a5) {
        var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1);
        textureSet[texture.id] = texture;
        stats2.cubeCount++;
        var faces = new Array(6);
        function reglTextureCube(a02, a12, a22, a32, a42, a52) {
          var i;
          var texInfo = texture.texInfo;
          TexInfo.call(texInfo);
          for (i = 0; i < 6; ++i) {
            faces[i] = allocMipMap();
          }
          if (typeof a02 === "number" || !a02) {
            var s = a02 | 0 || 1;
            for (i = 0; i < 6; ++i) {
              parseMipMapFromShape(faces[i], s, s);
            }
          } else if (typeof a02 === "object") {
            if (a12) {
              parseMipMapFromObject(faces[0], a02);
              parseMipMapFromObject(faces[1], a12);
              parseMipMapFromObject(faces[2], a22);
              parseMipMapFromObject(faces[3], a32);
              parseMipMapFromObject(faces[4], a42);
              parseMipMapFromObject(faces[5], a52);
            } else {
              parseTexInfo(texInfo, a02);
              parseFlags(texture, a02);
              if ("faces" in a02) {
                var faceInput = a02.faces;
                check$1(
                  Array.isArray(faceInput) && faceInput.length === 6,
                  "cube faces must be a length 6 array"
                );
                for (i = 0; i < 6; ++i) {
                  check$1(
                    typeof faceInput[i] === "object" && !!faceInput[i],
                    "invalid input for cube map face"
                  );
                  copyFlags(faces[i], texture);
                  parseMipMapFromObject(faces[i], faceInput[i]);
                }
              } else {
                for (i = 0; i < 6; ++i) {
                  parseMipMapFromObject(faces[i], a02);
                }
              }
            }
          } else {
            check$1.raise("invalid arguments to cube map");
          }
          copyFlags(texture, faces[0]);
          if (!limits.npotTextureCube) {
            check$1(isPow2$1(texture.width) && isPow2$1(texture.height), "your browser does not support non power or two texture dimensions");
          }
          if (texInfo.genMipmaps) {
            texture.mipmask = (faces[0].width << 1) - 1;
          } else {
            texture.mipmask = faces[0].mipmask;
          }
          check$1.textureCube(texture, texInfo, faces, limits);
          texture.internalformat = faces[0].internalformat;
          reglTextureCube.width = faces[0].width;
          reglTextureCube.height = faces[0].height;
          tempBind(texture);
          for (i = 0; i < 6; ++i) {
            setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i);
          }
          setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1);
          tempRestore();
          if (config.profile) {
            texture.stats.size = getTextureSize(
              texture.internalformat,
              texture.type,
              reglTextureCube.width,
              reglTextureCube.height,
              texInfo.genMipmaps,
              true
            );
          }
          reglTextureCube.format = textureFormatsInvert[texture.internalformat];
          reglTextureCube.type = textureTypesInvert[texture.type];
          reglTextureCube.mag = magFiltersInvert[texInfo.magFilter];
          reglTextureCube.min = minFiltersInvert[texInfo.minFilter];
          reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS];
          reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT];
          for (i = 0; i < 6; ++i) {
            freeMipMap(faces[i]);
          }
          return reglTextureCube;
        }
        function subimage(face, image, x_, y_, level_) {
          check$1(!!image, "must specify image data");
          check$1(typeof face === "number" && face === (face | 0) && face >= 0 && face < 6, "invalid face");
          var x2 = x_ | 0;
          var y = y_ | 0;
          var level = level_ | 0;
          var imageData = allocImage();
          copyFlags(imageData, texture);
          imageData.width = 0;
          imageData.height = 0;
          parseImage(imageData, image);
          imageData.width = imageData.width || (texture.width >> level) - x2;
          imageData.height = imageData.height || (texture.height >> level) - y;
          check$1(
            texture.type === imageData.type && texture.format === imageData.format && texture.internalformat === imageData.internalformat,
            "incompatible format for texture.subimage"
          );
          check$1(
            x2 >= 0 && y >= 0 && x2 + imageData.width <= texture.width && y + imageData.height <= texture.height,
            "texture.subimage write out of bounds"
          );
          check$1(
            texture.mipmask & 1 << level,
            "missing mipmap data"
          );
          check$1(
            imageData.data || imageData.element || imageData.needsCopy,
            "missing image data"
          );
          tempBind(texture);
          setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x2, y, level);
          tempRestore();
          freeImage(imageData);
          return reglTextureCube;
        }
        function resize(radius_) {
          var radius = radius_ | 0;
          if (radius === texture.width) {
            return;
          }
          reglTextureCube.width = texture.width = radius;
          reglTextureCube.height = texture.height = radius;
          tempBind(texture);
          for (var i = 0; i < 6; ++i) {
            for (var j = 0; texture.mipmask >> j; ++j) {
              gl.texImage2D(
                GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i,
                j,
                texture.format,
                radius >> j,
                radius >> j,
                0,
                texture.format,
                texture.type,
                null
              );
            }
          }
          tempRestore();
          if (config.profile) {
            texture.stats.size = getTextureSize(
              texture.internalformat,
              texture.type,
              reglTextureCube.width,
              reglTextureCube.height,
              false,
              true
            );
          }
          return reglTextureCube;
        }
        reglTextureCube(a0, a1, a2, a3, a4, a5);
        reglTextureCube.subimage = subimage;
        reglTextureCube.resize = resize;
        reglTextureCube._reglType = "textureCube";
        reglTextureCube._texture = texture;
        if (config.profile) {
          reglTextureCube.stats = texture.stats;
        }
        reglTextureCube.destroy = function() {
          texture.decRef();
        };
        return reglTextureCube;
      }
      function destroyTextures() {
        for (var i = 0; i < numTexUnits; ++i) {
          gl.activeTexture(GL_TEXTURE0$1 + i);
          gl.bindTexture(GL_TEXTURE_2D$1, null);
          textureUnits[i] = null;
        }
        values(textureSet).forEach(destroy);
        stats2.cubeCount = 0;
        stats2.textureCount = 0;
      }
      if (config.profile) {
        stats2.getTotalTextureSize = function() {
          var total = 0;
          Object.keys(textureSet).forEach(function(key) {
            total += textureSet[key].stats.size;
          });
          return total;
        };
      }
      function restoreTextures() {
        for (var i = 0; i < numTexUnits; ++i) {
          var tex = textureUnits[i];
          if (tex) {
            tex.bindCount = 0;
            tex.unit = -1;
            textureUnits[i] = null;
          }
        }
        values(textureSet).forEach(function(texture) {
          texture.texture = gl.createTexture();
          gl.bindTexture(texture.target, texture.texture);
          for (var i2 = 0; i2 < 32; ++i2) {
            if ((texture.mipmask & 1 << i2) === 0) {
              continue;
            }
            if (texture.target === GL_TEXTURE_2D$1) {
              gl.texImage2D(
                GL_TEXTURE_2D$1,
                i2,
                texture.internalformat,
                texture.width >> i2,
                texture.height >> i2,
                0,
                texture.internalformat,
                texture.type,
                null
              );
            } else {
              for (var j = 0; j < 6; ++j) {
                gl.texImage2D(
                  GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j,
                  i2,
                  texture.internalformat,
                  texture.width >> i2,
                  texture.height >> i2,
                  0,
                  texture.internalformat,
                  texture.type,
                  null
                );
              }
            }
          }
          setTexInfo(texture.texInfo, texture.target);
        });
      }
      function refreshTextures() {
        for (var i = 0; i < numTexUnits; ++i) {
          var tex = textureUnits[i];
          if (tex) {
            tex.bindCount = 0;
            tex.unit = -1;
            textureUnits[i] = null;
          }
          gl.activeTexture(GL_TEXTURE0$1 + i);
          gl.bindTexture(GL_TEXTURE_2D$1, null);
          gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null);
        }
      }
      return {
        create2D: createTexture2D,
        createCube: createTextureCube,
        clear: destroyTextures,
        getTexture: function(wrapper) {
          return null;
        },
        restore: restoreTextures,
        refresh: refreshTextures
      };
    }
    var GL_RENDERBUFFER = 36161;
    var GL_RGBA4$1 = 32854;
    var GL_RGB5_A1$1 = 32855;
    var GL_RGB565$1 = 36194;
    var GL_DEPTH_COMPONENT16 = 33189;
    var GL_STENCIL_INDEX8 = 36168;
    var GL_DEPTH_STENCIL$1 = 34041;
    var GL_SRGB8_ALPHA8_EXT = 35907;
    var GL_RGBA32F_EXT = 34836;
    var GL_RGBA16F_EXT = 34842;
    var GL_RGB16F_EXT = 34843;
    var FORMAT_SIZES = [];
    FORMAT_SIZES[GL_RGBA4$1] = 2;
    FORMAT_SIZES[GL_RGB5_A1$1] = 2;
    FORMAT_SIZES[GL_RGB565$1] = 2;
    FORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2;
    FORMAT_SIZES[GL_STENCIL_INDEX8] = 1;
    FORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4;
    FORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4;
    FORMAT_SIZES[GL_RGBA32F_EXT] = 16;
    FORMAT_SIZES[GL_RGBA16F_EXT] = 8;
    FORMAT_SIZES[GL_RGB16F_EXT] = 6;
    function getRenderbufferSize(format, width, height) {
      return FORMAT_SIZES[format] * width * height;
    }
    var wrapRenderbuffers = function(gl, extensions, limits, stats2, config) {
      var formatTypes = {
        "rgba4": GL_RGBA4$1,
        "rgb565": GL_RGB565$1,
        "rgb5 a1": GL_RGB5_A1$1,
        "depth": GL_DEPTH_COMPONENT16,
        "stencil": GL_STENCIL_INDEX8,
        "depth stencil": GL_DEPTH_STENCIL$1
      };
      if (extensions.ext_srgb) {
        formatTypes["srgba"] = GL_SRGB8_ALPHA8_EXT;
      }
      if (extensions.ext_color_buffer_half_float) {
        formatTypes["rgba16f"] = GL_RGBA16F_EXT;
        formatTypes["rgb16f"] = GL_RGB16F_EXT;
      }
      if (extensions.webgl_color_buffer_float) {
        formatTypes["rgba32f"] = GL_RGBA32F_EXT;
      }
      var formatTypesInvert = [];
      Object.keys(formatTypes).forEach(function(key) {
        var val = formatTypes[key];
        formatTypesInvert[val] = key;
      });
      var renderbufferCount = 0;
      var renderbufferSet = {};
      function REGLRenderbuffer(renderbuffer) {
        this.id = renderbufferCount++;
        this.refCount = 1;
        this.renderbuffer = renderbuffer;
        this.format = GL_RGBA4$1;
        this.width = 0;
        this.height = 0;
        if (config.profile) {
          this.stats = { size: 0 };
        }
      }
      REGLRenderbuffer.prototype.decRef = function() {
        if (--this.refCount <= 0) {
          destroy(this);
        }
      };
      function destroy(rb) {
        var handle = rb.renderbuffer;
        check$1(handle, "must not double destroy renderbuffer");
        gl.bindRenderbuffer(GL_RENDERBUFFER, null);
        gl.deleteRenderbuffer(handle);
        rb.renderbuffer = null;
        rb.refCount = 0;
        delete renderbufferSet[rb.id];
        stats2.renderbufferCount--;
      }
      function createRenderbuffer(a2, b) {
        var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer());
        renderbufferSet[renderbuffer.id] = renderbuffer;
        stats2.renderbufferCount++;
        function reglRenderbuffer(a3, b2) {
          var w = 0;
          var h = 0;
          var format = GL_RGBA4$1;
          if (typeof a3 === "object" && a3) {
            var options = a3;
            if ("shape" in options) {
              var shape2 = options.shape;
              check$1(
                Array.isArray(shape2) && shape2.length >= 2,
                "invalid renderbuffer shape"
              );
              w = shape2[0] | 0;
              h = shape2[1] | 0;
            } else {
              if ("radius" in options) {
                w = h = options.radius | 0;
              }
              if ("width" in options) {
                w = options.width | 0;
              }
              if ("height" in options) {
                h = options.height | 0;
              }
            }
            if ("format" in options) {
              check$1.parameter(
                options.format,
                formatTypes,
                "invalid renderbuffer format"
              );
              format = formatTypes[options.format];
            }
          } else if (typeof a3 === "number") {
            w = a3 | 0;
            if (typeof b2 === "number") {
              h = b2 | 0;
            } else {
              h = w;
            }
          } else if (!a3) {
            w = h = 1;
          } else {
            check$1.raise("invalid arguments to renderbuffer constructor");
          }
          check$1(
            w > 0 && h > 0 && w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize,
            "invalid renderbuffer size"
          );
          if (w === renderbuffer.width && h === renderbuffer.height && format === renderbuffer.format) {
            return;
          }
          reglRenderbuffer.width = renderbuffer.width = w;
          reglRenderbuffer.height = renderbuffer.height = h;
          renderbuffer.format = format;
          gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);
          gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h);
          check$1(
            gl.getError() === 0,
            "invalid render buffer format"
          );
          if (config.profile) {
            renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);
          }
          reglRenderbuffer.format = formatTypesInvert[renderbuffer.format];
          return reglRenderbuffer;
        }
        function resize(w_, h_) {
          var w = w_ | 0;
          var h = h_ | 0 || w;
          if (w === renderbuffer.width && h === renderbuffer.height) {
            return reglRenderbuffer;
          }
          check$1(
            w > 0 && h > 0 && w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize,
            "invalid renderbuffer size"
          );
          reglRenderbuffer.width = renderbuffer.width = w;
          reglRenderbuffer.height = renderbuffer.height = h;
          gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);
          gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h);
          check$1(
            gl.getError() === 0,
            "invalid render buffer format"
          );
          if (config.profile) {
            renderbuffer.stats.size = getRenderbufferSize(
              renderbuffer.format,
              renderbuffer.width,
              renderbuffer.height
            );
          }
          return reglRenderbuffer;
        }
        reglRenderbuffer(a2, b);
        reglRenderbuffer.resize = resize;
        reglRenderbuffer._reglType = "renderbuffer";
        reglRenderbuffer._renderbuffer = renderbuffer;
        if (config.profile) {
          reglRenderbuffer.stats = renderbuffer.stats;
        }
        reglRenderbuffer.destroy = function() {
          renderbuffer.decRef();
        };
        return reglRenderbuffer;
      }
      if (config.profile) {
        stats2.getTotalRenderbufferSize = function() {
          var total = 0;
          Object.keys(renderbufferSet).forEach(function(key) {
            total += renderbufferSet[key].stats.size;
          });
          return total;
        };
      }
      function restoreRenderbuffers() {
        values(renderbufferSet).forEach(function(rb) {
          rb.renderbuffer = gl.createRenderbuffer();
          gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer);
          gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height);
        });
        gl.bindRenderbuffer(GL_RENDERBUFFER, null);
      }
      return {
        create: createRenderbuffer,
        clear: function() {
          values(renderbufferSet).forEach(destroy);
        },
        restore: restoreRenderbuffers
      };
    };
    var GL_FRAMEBUFFER$1 = 36160;
    var GL_RENDERBUFFER$1 = 36161;
    var GL_TEXTURE_2D$2 = 3553;
    var GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 34069;
    var GL_COLOR_ATTACHMENT0$1 = 36064;
    var GL_DEPTH_ATTACHMENT = 36096;
    var GL_STENCIL_ATTACHMENT = 36128;
    var GL_DEPTH_STENCIL_ATTACHMENT = 33306;
    var GL_FRAMEBUFFER_COMPLETE$1 = 36053;
    var GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
    var GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
    var GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
    var GL_FRAMEBUFFER_UNSUPPORTED = 36061;
    var GL_HALF_FLOAT_OES$2 = 36193;
    var GL_UNSIGNED_BYTE$6 = 5121;
    var GL_FLOAT$5 = 5126;
    var GL_RGB$1 = 6407;
    var GL_RGBA$2 = 6408;
    var GL_DEPTH_COMPONENT$1 = 6402;
    var colorTextureFormatEnums = [
      GL_RGB$1,
      GL_RGBA$2
    ];
    var textureFormatChannels = [];
    textureFormatChannels[GL_RGBA$2] = 4;
    textureFormatChannels[GL_RGB$1] = 3;
    var textureTypeSizes = [];
    textureTypeSizes[GL_UNSIGNED_BYTE$6] = 1;
    textureTypeSizes[GL_FLOAT$5] = 4;
    textureTypeSizes[GL_HALF_FLOAT_OES$2] = 2;
    var GL_RGBA4$2 = 32854;
    var GL_RGB5_A1$2 = 32855;
    var GL_RGB565$2 = 36194;
    var GL_DEPTH_COMPONENT16$1 = 33189;
    var GL_STENCIL_INDEX8$1 = 36168;
    var GL_DEPTH_STENCIL$2 = 34041;
    var GL_SRGB8_ALPHA8_EXT$1 = 35907;
    var GL_RGBA32F_EXT$1 = 34836;
    var GL_RGBA16F_EXT$1 = 34842;
    var GL_RGB16F_EXT$1 = 34843;
    var colorRenderbufferFormatEnums = [
      GL_RGBA4$2,
      GL_RGB5_A1$2,
      GL_RGB565$2,
      GL_SRGB8_ALPHA8_EXT$1,
      GL_RGBA16F_EXT$1,
      GL_RGB16F_EXT$1,
      GL_RGBA32F_EXT$1
    ];
    var statusCode = {};
    statusCode[GL_FRAMEBUFFER_COMPLETE$1] = "complete";
    statusCode[GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT] = "incomplete attachment";
    statusCode[GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS] = "incomplete dimensions";
    statusCode[GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT] = "incomplete, missing attachment";
    statusCode[GL_FRAMEBUFFER_UNSUPPORTED] = "unsupported";
    function wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats2) {
      var framebufferState = {
        cur: null,
        next: null,
        dirty: false,
        setFBO: null
      };
      var colorTextureFormats = ["rgba"];
      var colorRenderbufferFormats = ["rgba4", "rgb565", "rgb5 a1"];
      if (extensions.ext_srgb) {
        colorRenderbufferFormats.push("srgba");
      }
      if (extensions.ext_color_buffer_half_float) {
        colorRenderbufferFormats.push("rgba16f", "rgb16f");
      }
      if (extensions.webgl_color_buffer_float) {
        colorRenderbufferFormats.push("rgba32f");
      }
      var colorTypes = ["uint8"];
      if (extensions.oes_texture_half_float) {
        colorTypes.push("half float", "float16");
      }
      if (extensions.oes_texture_float) {
        colorTypes.push("float", "float32");
      }
      function FramebufferAttachment(target, texture, renderbuffer) {
        this.target = target;
        this.texture = texture;
        this.renderbuffer = renderbuffer;
        var w = 0;
        var h = 0;
        if (texture) {
          w = texture.width;
          h = texture.height;
        } else if (renderbuffer) {
          w = renderbuffer.width;
          h = renderbuffer.height;
        }
        this.width = w;
        this.height = h;
      }
      function decRef(attachment) {
        if (attachment) {
          if (attachment.texture) {
            attachment.texture._texture.decRef();
          }
          if (attachment.renderbuffer) {
            attachment.renderbuffer._renderbuffer.decRef();
          }
        }
      }
      function incRefAndCheckShape(attachment, width, height) {
        if (!attachment) {
          return;
        }
        if (attachment.texture) {
          var texture = attachment.texture._texture;
          var tw = Math.max(1, texture.width);
          var th = Math.max(1, texture.height);
          check$1(
            tw === width && th === height,
            "inconsistent width/height for supplied texture"
          );
          texture.refCount += 1;
        } else {
          var renderbuffer = attachment.renderbuffer._renderbuffer;
          check$1(
            renderbuffer.width === width && renderbuffer.height === height,
            "inconsistent width/height for renderbuffer"
          );
          renderbuffer.refCount += 1;
        }
      }
      function attach(location2, attachment) {
        if (attachment) {
          if (attachment.texture) {
            gl.framebufferTexture2D(
              GL_FRAMEBUFFER$1,
              location2,
              attachment.target,
              attachment.texture._texture.texture,
              0
            );
          } else {
            gl.framebufferRenderbuffer(
              GL_FRAMEBUFFER$1,
              location2,
              GL_RENDERBUFFER$1,
              attachment.renderbuffer._renderbuffer.renderbuffer
            );
          }
        }
      }
      function parseAttachment(attachment) {
        var target = GL_TEXTURE_2D$2;
        var texture = null;
        var renderbuffer = null;
        var data = attachment;
        if (typeof attachment === "object") {
          data = attachment.data;
          if ("target" in attachment) {
            target = attachment.target | 0;
          }
        }
        check$1.type(data, "function", "invalid attachment data");
        var type = data._reglType;
        if (type === "texture2d") {
          texture = data;
          check$1(target === GL_TEXTURE_2D$2);
        } else if (type === "textureCube") {
          texture = data;
          check$1(
            target >= GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 && target < GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + 6,
            "invalid cube map target"
          );
        } else if (type === "renderbuffer") {
          renderbuffer = data;
          target = GL_RENDERBUFFER$1;
        } else {
          check$1.raise("invalid regl object for attachment");
        }
        return new FramebufferAttachment(target, texture, renderbuffer);
      }
      function allocAttachment(width, height, isTexture, format, type) {
        if (isTexture) {
          var texture = textureState.create2D({
            width,
            height,
            format,
            type
          });
          texture._texture.refCount = 0;
          return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null);
        } else {
          var rb = renderbufferState.create({
            width,
            height,
            format
          });
          rb._renderbuffer.refCount = 0;
          return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb);
        }
      }
      function unwrapAttachment(attachment) {
        return attachment && (attachment.texture || attachment.renderbuffer);
      }
      function resizeAttachment(attachment, w, h) {
        if (attachment) {
          if (attachment.texture) {
            attachment.texture.resize(w, h);
          } else if (attachment.renderbuffer) {
            attachment.renderbuffer.resize(w, h);
          }
          attachment.width = w;
          attachment.height = h;
        }
      }
      var framebufferCount = 0;
      var framebufferSet = {};
      function REGLFramebuffer() {
        this.id = framebufferCount++;
        framebufferSet[this.id] = this;
        this.framebuffer = gl.createFramebuffer();
        this.width = 0;
        this.height = 0;
        this.colorAttachments = [];
        this.depthAttachment = null;
        this.stencilAttachment = null;
        this.depthStencilAttachment = null;
      }
      function decFBORefs(framebuffer) {
        framebuffer.colorAttachments.forEach(decRef);
        decRef(framebuffer.depthAttachment);
        decRef(framebuffer.stencilAttachment);
        decRef(framebuffer.depthStencilAttachment);
      }
      function destroy(framebuffer) {
        var handle = framebuffer.framebuffer;
        check$1(handle, "must not double destroy framebuffer");
        gl.deleteFramebuffer(handle);
        framebuffer.framebuffer = null;
        stats2.framebufferCount--;
        delete framebufferSet[framebuffer.id];
      }
      function updateFramebuffer(framebuffer) {
        var i;
        gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer);
        var colorAttachments = framebuffer.colorAttachments;
        for (i = 0; i < colorAttachments.length; ++i) {
          attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i]);
        }
        for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {
          gl.framebufferTexture2D(
            GL_FRAMEBUFFER$1,
            GL_COLOR_ATTACHMENT0$1 + i,
            GL_TEXTURE_2D$2,
            null,
            0
          );
        }
        gl.framebufferTexture2D(
          GL_FRAMEBUFFER$1,
          GL_DEPTH_STENCIL_ATTACHMENT,
          GL_TEXTURE_2D$2,
          null,
          0
        );
        gl.framebufferTexture2D(
          GL_FRAMEBUFFER$1,
          GL_DEPTH_ATTACHMENT,
          GL_TEXTURE_2D$2,
          null,
          0
        );
        gl.framebufferTexture2D(
          GL_FRAMEBUFFER$1,
          GL_STENCIL_ATTACHMENT,
          GL_TEXTURE_2D$2,
          null,
          0
        );
        attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment);
        attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment);
        attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment);
        var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1);
        if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) {
          check$1.raise("framebuffer configuration not supported, status = " + statusCode[status]);
        }
        gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null);
        framebufferState.cur = framebufferState.next;
        gl.getError();
      }
      function createFBO(a0, a1) {
        var framebuffer = new REGLFramebuffer();
        stats2.framebufferCount++;
        function reglFramebuffer(a2, b) {
          var i;
          check$1(
            framebufferState.next !== framebuffer,
            "can not update framebuffer which is currently in use"
          );
          var width = 0;
          var height = 0;
          var needsDepth = true;
          var needsStencil = true;
          var colorBuffer = null;
          var colorTexture = true;
          var colorFormat = "rgba";
          var colorType = "uint8";
          var colorCount = 1;
          var depthBuffer = null;
          var stencilBuffer = null;
          var depthStencilBuffer = null;
          var depthStencilTexture = false;
          if (typeof a2 === "number") {
            width = a2 | 0;
            height = b | 0 || width;
          } else if (!a2) {
            width = height = 1;
          } else {
            check$1.type(a2, "object", "invalid arguments for framebuffer");
            var options = a2;
            if ("shape" in options) {
              var shape2 = options.shape;
              check$1(
                Array.isArray(shape2) && shape2.length >= 2,
                "invalid shape for framebuffer"
              );
              width = shape2[0];
              height = shape2[1];
            } else {
              if ("radius" in options) {
                width = height = options.radius;
              }
              if ("width" in options) {
                width = options.width;
              }
              if ("height" in options) {
                height = options.height;
              }
            }
            if ("color" in options || "colors" in options) {
              colorBuffer = options.color || options.colors;
              if (Array.isArray(colorBuffer)) {
                check$1(
                  colorBuffer.length === 1 || extensions.webgl_draw_buffers,
                  "multiple render targets not supported"
                );
              }
            }
            if (!colorBuffer) {
              if ("colorCount" in options) {
                colorCount = options.colorCount | 0;
                check$1(colorCount > 0, "invalid color buffer count");
              }
              if ("colorTexture" in options) {
                colorTexture = !!options.colorTexture;
                colorFormat = "rgba4";
              }
              if ("colorType" in options) {
                colorType = options.colorType;
                if (!colorTexture) {
                  if (colorType === "half float" || colorType === "float16") {
                    check$1(
                      extensions.ext_color_buffer_half_float,
                      "you must enable EXT_color_buffer_half_float to use 16-bit render buffers"
                    );
                    colorFormat = "rgba16f";
                  } else if (colorType === "float" || colorType === "float32") {
                    check$1(
                      extensions.webgl_color_buffer_float,
                      "you must enable WEBGL_color_buffer_float in order to use 32-bit floating point renderbuffers"
                    );
                    colorFormat = "rgba32f";
                  }
                } else {
                  check$1(
                    extensions.oes_texture_float || !(colorType === "float" || colorType === "float32"),
                    "you must enable OES_texture_float in order to use floating point framebuffer objects"
                  );
                  check$1(
                    extensions.oes_texture_half_float || !(colorType === "half float" || colorType === "float16"),
                    "you must enable OES_texture_half_float in order to use 16-bit floating point framebuffer objects"
                  );
                }
                check$1.oneOf(colorType, colorTypes, "invalid color type");
              }
              if ("colorFormat" in options) {
                colorFormat = options.colorFormat;
                if (colorTextureFormats.indexOf(colorFormat) >= 0) {
                  colorTexture = true;
                } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {
                  colorTexture = false;
                } else {
                  if (colorTexture) {
                    check$1.oneOf(
                      options.colorFormat,
                      colorTextureFormats,
                      "invalid color format for texture"
                    );
                  } else {
                    check$1.oneOf(
                      options.colorFormat,
                      colorRenderbufferFormats,
                      "invalid color format for renderbuffer"
                    );
                  }
                }
              }
            }
            if ("depthTexture" in options || "depthStencilTexture" in options) {
              depthStencilTexture = !!(options.depthTexture || options.depthStencilTexture);
              check$1(
                !depthStencilTexture || extensions.webgl_depth_texture,
                "webgl_depth_texture extension not supported"
              );
            }
            if ("depth" in options) {
              if (typeof options.depth === "boolean") {
                needsDepth = options.depth;
              } else {
                depthBuffer = options.depth;
                needsStencil = false;
              }
            }
            if ("stencil" in options) {
              if (typeof options.stencil === "boolean") {
                needsStencil = options.stencil;
              } else {
                stencilBuffer = options.stencil;
                needsDepth = false;
              }
            }
            if ("depthStencil" in options) {
              if (typeof options.depthStencil === "boolean") {
                needsDepth = needsStencil = options.depthStencil;
              } else {
                depthStencilBuffer = options.depthStencil;
                needsDepth = false;
                needsStencil = false;
              }
            }
          }
          var colorAttachments = null;
          var depthAttachment = null;
          var stencilAttachment = null;
          var depthStencilAttachment = null;
          if (Array.isArray(colorBuffer)) {
            colorAttachments = colorBuffer.map(parseAttachment);
          } else if (colorBuffer) {
            colorAttachments = [parseAttachment(colorBuffer)];
          } else {
            colorAttachments = new Array(colorCount);
            for (i = 0; i < colorCount; ++i) {
              colorAttachments[i] = allocAttachment(
                width,
                height,
                colorTexture,
                colorFormat,
                colorType
              );
            }
          }
          check$1(
            extensions.webgl_draw_buffers || colorAttachments.length <= 1,
            "you must enable the WEBGL_draw_buffers extension in order to use multiple color buffers."
          );
          check$1(
            colorAttachments.length <= limits.maxColorAttachments,
            "too many color attachments, not supported"
          );
          width = width || colorAttachments[0].width;
          height = height || colorAttachments[0].height;
          if (depthBuffer) {
            depthAttachment = parseAttachment(depthBuffer);
          } else if (needsDepth && !needsStencil) {
            depthAttachment = allocAttachment(
              width,
              height,
              depthStencilTexture,
              "depth",
              "uint32"
            );
          }
          if (stencilBuffer) {
            stencilAttachment = parseAttachment(stencilBuffer);
          } else if (needsStencil && !needsDepth) {
            stencilAttachment = allocAttachment(
              width,
              height,
              false,
              "stencil",
              "uint8"
            );
          }
          if (depthStencilBuffer) {
            depthStencilAttachment = parseAttachment(depthStencilBuffer);
          } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {
            depthStencilAttachment = allocAttachment(
              width,
              height,
              depthStencilTexture,
              "depth stencil",
              "depth stencil"
            );
          }
          check$1(
            !!depthBuffer + !!stencilBuffer + !!depthStencilBuffer <= 1,
            "invalid framebuffer configuration, can specify exactly one depth/stencil attachment"
          );
          var commonColorAttachmentSize = null;
          for (i = 0; i < colorAttachments.length; ++i) {
            incRefAndCheckShape(colorAttachments[i], width, height);
            check$1(
              !colorAttachments[i] || colorAttachments[i].texture && colorTextureFormatEnums.indexOf(colorAttachments[i].texture._texture.format) >= 0 || colorAttachments[i].renderbuffer && colorRenderbufferFormatEnums.indexOf(colorAttachments[i].renderbuffer._renderbuffer.format) >= 0,
              "framebuffer color attachment " + i + " is invalid"
            );
            if (colorAttachments[i] && colorAttachments[i].texture) {
              var colorAttachmentSize = textureFormatChannels[colorAttachments[i].texture._texture.format] * textureTypeSizes[colorAttachments[i].texture._texture.type];
              if (commonColorAttachmentSize === null) {
                commonColorAttachmentSize = colorAttachmentSize;
              } else {
                check$1(
                  commonColorAttachmentSize === colorAttachmentSize,
                  "all color attachments much have the same number of bits per pixel."
                );
              }
            }
          }
          incRefAndCheckShape(depthAttachment, width, height);
          check$1(
            !depthAttachment || depthAttachment.texture && depthAttachment.texture._texture.format === GL_DEPTH_COMPONENT$1 || depthAttachment.renderbuffer && depthAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_COMPONENT16$1,
            "invalid depth attachment for framebuffer object"
          );
          incRefAndCheckShape(stencilAttachment, width, height);
          check$1(
            !stencilAttachment || stencilAttachment.renderbuffer && stencilAttachment.renderbuffer._renderbuffer.format === GL_STENCIL_INDEX8$1,
            "invalid stencil attachment for framebuffer object"
          );
          incRefAndCheckShape(depthStencilAttachment, width, height);
          check$1(
            !depthStencilAttachment || depthStencilAttachment.texture && depthStencilAttachment.texture._texture.format === GL_DEPTH_STENCIL$2 || depthStencilAttachment.renderbuffer && depthStencilAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_STENCIL$2,
            "invalid depth-stencil attachment for framebuffer object"
          );
          decFBORefs(framebuffer);
          framebuffer.width = width;
          framebuffer.height = height;
          framebuffer.colorAttachments = colorAttachments;
          framebuffer.depthAttachment = depthAttachment;
          framebuffer.stencilAttachment = stencilAttachment;
          framebuffer.depthStencilAttachment = depthStencilAttachment;
          reglFramebuffer.color = colorAttachments.map(unwrapAttachment);
          reglFramebuffer.depth = unwrapAttachment(depthAttachment);
          reglFramebuffer.stencil = unwrapAttachment(stencilAttachment);
          reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment);
          reglFramebuffer.width = framebuffer.width;
          reglFramebuffer.height = framebuffer.height;
          updateFramebuffer(framebuffer);
          return reglFramebuffer;
        }
        function resize(w_, h_) {
          check$1(
            framebufferState.next !== framebuffer,
            "can not resize a framebuffer which is currently in use"
          );
          var w = Math.max(w_ | 0, 1);
          var h = Math.max(h_ | 0 || w, 1);
          if (w === framebuffer.width && h === framebuffer.height) {
            return reglFramebuffer;
          }
          var colorAttachments = framebuffer.colorAttachments;
          for (var i = 0; i < colorAttachments.length; ++i) {
            resizeAttachment(colorAttachments[i], w, h);
          }
          resizeAttachment(framebuffer.depthAttachment, w, h);
          resizeAttachment(framebuffer.stencilAttachment, w, h);
          resizeAttachment(framebuffer.depthStencilAttachment, w, h);
          framebuffer.width = reglFramebuffer.width = w;
          framebuffer.height = reglFramebuffer.height = h;
          updateFramebuffer(framebuffer);
          return reglFramebuffer;
        }
        reglFramebuffer(a0, a1);
        return extend(reglFramebuffer, {
          resize,
          _reglType: "framebuffer",
          _framebuffer: framebuffer,
          destroy: function() {
            destroy(framebuffer);
            decFBORefs(framebuffer);
          },
          use: function(block) {
            framebufferState.setFBO({
              framebuffer: reglFramebuffer
            }, block);
          }
        });
      }
      function createCubeFBO(options) {
        var faces = Array(6);
        function reglFramebufferCube(a2) {
          var i;
          check$1(
            faces.indexOf(framebufferState.next) < 0,
            "can not update framebuffer which is currently in use"
          );
          var params = {
            color: null
          };
          var radius = 0;
          var colorBuffer = null;
          var colorFormat = "rgba";
          var colorType = "uint8";
          var colorCount = 1;
          if (typeof a2 === "number") {
            radius = a2 | 0;
          } else if (!a2) {
            radius = 1;
          } else {
            check$1.type(a2, "object", "invalid arguments for framebuffer");
            var options2 = a2;
            if ("shape" in options2) {
              var shape2 = options2.shape;
              check$1(
                Array.isArray(shape2) && shape2.length >= 2,
                "invalid shape for framebuffer"
              );
              check$1(
                shape2[0] === shape2[1],
                "cube framebuffer must be square"
              );
              radius = shape2[0];
            } else {
              if ("radius" in options2) {
                radius = options2.radius | 0;
              }
              if ("width" in options2) {
                radius = options2.width | 0;
                if ("height" in options2) {
                  check$1(options2.height === radius, "must be square");
                }
              } else if ("height" in options2) {
                radius = options2.height | 0;
              }
            }
            if ("color" in options2 || "colors" in options2) {
              colorBuffer = options2.color || options2.colors;
              if (Array.isArray(colorBuffer)) {
                check$1(
                  colorBuffer.length === 1 || extensions.webgl_draw_buffers,
                  "multiple render targets not supported"
                );
              }
            }
            if (!colorBuffer) {
              if ("colorCount" in options2) {
                colorCount = options2.colorCount | 0;
                check$1(colorCount > 0, "invalid color buffer count");
              }
              if ("colorType" in options2) {
                check$1.oneOf(
                  options2.colorType,
                  colorTypes,
                  "invalid color type"
                );
                colorType = options2.colorType;
              }
              if ("colorFormat" in options2) {
                colorFormat = options2.colorFormat;
                check$1.oneOf(
                  options2.colorFormat,
                  colorTextureFormats,
                  "invalid color format for texture"
                );
              }
            }
            if ("depth" in options2) {
              params.depth = options2.depth;
            }
            if ("stencil" in options2) {
              params.stencil = options2.stencil;
            }
            if ("depthStencil" in options2) {
              params.depthStencil = options2.depthStencil;
            }
          }
          var colorCubes;
          if (colorBuffer) {
            if (Array.isArray(colorBuffer)) {
              colorCubes = [];
              for (i = 0; i < colorBuffer.length; ++i) {
                colorCubes[i] = colorBuffer[i];
              }
            } else {
              colorCubes = [colorBuffer];
            }
          } else {
            colorCubes = Array(colorCount);
            var cubeMapParams = {
              radius,
              format: colorFormat,
              type: colorType
            };
            for (i = 0; i < colorCount; ++i) {
              colorCubes[i] = textureState.createCube(cubeMapParams);
            }
          }
          params.color = Array(colorCubes.length);
          for (i = 0; i < colorCubes.length; ++i) {
            var cube = colorCubes[i];
            check$1(
              typeof cube === "function" && cube._reglType === "textureCube",
              "invalid cube map"
            );
            radius = radius || cube.width;
            check$1(
              cube.width === radius && cube.height === radius,
              "invalid cube map shape"
            );
            params.color[i] = {
              target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,
              data: colorCubes[i]
            };
          }
          for (i = 0; i < 6; ++i) {
            for (var j = 0; j < colorCubes.length; ++j) {
              params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i;
            }
            if (i > 0) {
              params.depth = faces[0].depth;
              params.stencil = faces[0].stencil;
              params.depthStencil = faces[0].depthStencil;
            }
            if (faces[i]) {
              faces[i](params);
            } else {
              faces[i] = createFBO(params);
            }
          }
          return extend(reglFramebufferCube, {
            width: radius,
            height: radius,
            color: colorCubes
          });
        }
        function resize(radius_) {
          var i;
          var radius = radius_ | 0;
          check$1(
            radius > 0 && radius <= limits.maxCubeMapSize,
            "invalid radius for cube fbo"
          );
          if (radius === reglFramebufferCube.width) {
            return reglFramebufferCube;
          }
          var colors = reglFramebufferCube.color;
          for (i = 0; i < colors.length; ++i) {
            colors[i].resize(radius);
          }
          for (i = 0; i < 6; ++i) {
            faces[i].resize(radius);
          }
          reglFramebufferCube.width = reglFramebufferCube.height = radius;
          return reglFramebufferCube;
        }
        reglFramebufferCube(options);
        return extend(reglFramebufferCube, {
          faces,
          resize,
          _reglType: "framebufferCube",
          destroy: function() {
            faces.forEach(function(f) {
              f.destroy();
            });
          }
        });
      }
      function restoreFramebuffers() {
        framebufferState.cur = null;
        framebufferState.next = null;
        framebufferState.dirty = true;
        values(framebufferSet).forEach(function(fb) {
          fb.framebuffer = gl.createFramebuffer();
          updateFramebuffer(fb);
        });
      }
      return extend(framebufferState, {
        getFramebuffer: function(object) {
          if (typeof object === "function" && object._reglType === "framebuffer") {
            var fbo = object._framebuffer;
            if (fbo instanceof REGLFramebuffer) {
              return fbo;
            }
          }
          return null;
        },
        create: createFBO,
        createCube: createCubeFBO,
        clear: function() {
          values(framebufferSet).forEach(destroy);
        },
        restore: restoreFramebuffers
      });
    }
    var GL_FLOAT$6 = 5126;
    var GL_ARRAY_BUFFER$1 = 34962;
    function AttributeRecord() {
      this.state = 0;
      this.x = 0;
      this.y = 0;
      this.z = 0;
      this.w = 0;
      this.buffer = null;
      this.size = 0;
      this.normalized = false;
      this.type = GL_FLOAT$6;
      this.offset = 0;
      this.stride = 0;
      this.divisor = 0;
    }
    function wrapAttributeState(gl, extensions, limits, stats2, bufferState) {
      var NUM_ATTRIBUTES = limits.maxAttributes;
      var attributeBindings = new Array(NUM_ATTRIBUTES);
      for (var i = 0; i < NUM_ATTRIBUTES; ++i) {
        attributeBindings[i] = new AttributeRecord();
      }
      var vaoCount = 0;
      var vaoSet = {};
      var state = {
        Record: AttributeRecord,
        scope: {},
        state: attributeBindings,
        currentVAO: null,
        targetVAO: null,
        restore: extVAO() ? restoreVAO : function() {
        },
        createVAO,
        getVAO,
        destroyBuffer,
        setVAO: extVAO() ? setVAOEXT : setVAOEmulated,
        clear: extVAO() ? destroyVAOEXT : function() {
        }
      };
      function destroyBuffer(buffer) {
        for (var i2 = 0; i2 < attributeBindings.length; ++i2) {
          var record = attributeBindings[i2];
          if (record.buffer === buffer) {
            gl.disableVertexAttribArray(i2);
            record.buffer = null;
          }
        }
      }
      function extVAO() {
        return extensions.oes_vertex_array_object;
      }
      function extInstanced() {
        return extensions.angle_instanced_arrays;
      }
      function getVAO(vao) {
        if (typeof vao === "function" && vao._vao) {
          return vao._vao;
        }
        return null;
      }
      function setVAOEXT(vao) {
        if (vao === state.currentVAO) {
          return;
        }
        var ext = extVAO();
        if (vao) {
          ext.bindVertexArrayOES(vao.vao);
        } else {
          ext.bindVertexArrayOES(null);
        }
        state.currentVAO = vao;
      }
      function setVAOEmulated(vao) {
        if (vao === state.currentVAO) {
          return;
        }
        if (vao) {
          vao.bindAttrs();
        } else {
          var exti = extInstanced();
          for (var i2 = 0; i2 < attributeBindings.length; ++i2) {
            var binding = attributeBindings[i2];
            if (binding.buffer) {
              gl.enableVertexAttribArray(i2);
              gl.vertexAttribPointer(i2, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset);
              if (exti && binding.divisor) {
                exti.vertexAttribDivisorANGLE(i2, binding.divisor);
              }
            } else {
              gl.disableVertexAttribArray(i2);
              gl.vertexAttrib4f(i2, binding.x, binding.y, binding.z, binding.w);
            }
          }
        }
        state.currentVAO = vao;
      }
      function destroyVAOEXT() {
        values(vaoSet).forEach(function(vao) {
          vao.destroy();
        });
      }
      function REGLVAO() {
        this.id = ++vaoCount;
        this.attributes = [];
        var extension = extVAO();
        if (extension) {
          this.vao = extension.createVertexArrayOES();
        } else {
          this.vao = null;
        }
        vaoSet[this.id] = this;
        this.buffers = [];
      }
      REGLVAO.prototype.bindAttrs = function() {
        var exti = extInstanced();
        var attributes = this.attributes;
        for (var i2 = 0; i2 < attributes.length; ++i2) {
          var attr = attributes[i2];
          if (attr.buffer) {
            gl.enableVertexAttribArray(i2);
            gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer);
            gl.vertexAttribPointer(i2, attr.size, attr.type, attr.normalized, attr.stride, attr.offset);
            if (exti && attr.divisor) {
              exti.vertexAttribDivisorANGLE(i2, attr.divisor);
            }
          } else {
            gl.disableVertexAttribArray(i2);
            gl.vertexAttrib4f(i2, attr.x, attr.y, attr.z, attr.w);
          }
        }
        for (var j = attributes.length; j < NUM_ATTRIBUTES; ++j) {
          gl.disableVertexAttribArray(j);
        }
      };
      REGLVAO.prototype.refresh = function() {
        var ext = extVAO();
        if (ext) {
          ext.bindVertexArrayOES(this.vao);
          this.bindAttrs();
          state.currentVAO = this;
        }
      };
      REGLVAO.prototype.destroy = function() {
        if (this.vao) {
          var extension = extVAO();
          if (this === state.currentVAO) {
            state.currentVAO = null;
            extension.bindVertexArrayOES(null);
          }
          extension.deleteVertexArrayOES(this.vao);
          this.vao = null;
        }
        if (vaoSet[this.id]) {
          delete vaoSet[this.id];
          stats2.vaoCount -= 1;
        }
      };
      function restoreVAO() {
        var ext = extVAO();
        if (ext) {
          values(vaoSet).forEach(function(vao) {
            vao.refresh();
          });
        }
      }
      function createVAO(_attr) {
        var vao = new REGLVAO();
        stats2.vaoCount += 1;
        function updateVAO(attributes) {
          check$1(Array.isArray(attributes), "arguments to vertex array constructor must be an array");
          check$1(attributes.length < NUM_ATTRIBUTES, "too many attributes");
          check$1(attributes.length > 0, "must specify at least one attribute");
          var bufUpdated = {};
          var nattributes = vao.attributes;
          nattributes.length = attributes.length;
          for (var i2 = 0; i2 < attributes.length; ++i2) {
            var spec = attributes[i2];
            var rec = nattributes[i2] = new AttributeRecord();
            var data = spec.data || spec;
            if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {
              var buf;
              if (vao.buffers[i2]) {
                buf = vao.buffers[i2];
                if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) {
                  buf.subdata(data);
                } else {
                  buf.destroy();
                  vao.buffers[i2] = null;
                }
              }
              if (!vao.buffers[i2]) {
                buf = vao.buffers[i2] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true);
              }
              rec.buffer = bufferState.getBuffer(buf);
              rec.size = rec.buffer.dimension | 0;
              rec.normalized = false;
              rec.type = rec.buffer.dtype;
              rec.offset = 0;
              rec.stride = 0;
              rec.divisor = 0;
              rec.state = 1;
              bufUpdated[i2] = 1;
            } else if (bufferState.getBuffer(spec)) {
              rec.buffer = bufferState.getBuffer(spec);
              rec.size = rec.buffer.dimension | 0;
              rec.normalized = false;
              rec.type = rec.buffer.dtype;
              rec.offset = 0;
              rec.stride = 0;
              rec.divisor = 0;
              rec.state = 1;
            } else if (bufferState.getBuffer(spec.buffer)) {
              rec.buffer = bufferState.getBuffer(spec.buffer);
              rec.size = (+spec.size || rec.buffer.dimension) | 0;
              rec.normalized = !!spec.normalized || false;
              if ("type" in spec) {
                check$1.parameter(spec.type, glTypes, "invalid buffer type");
                rec.type = glTypes[spec.type];
              } else {
                rec.type = rec.buffer.dtype;
              }
              rec.offset = (spec.offset || 0) | 0;
              rec.stride = (spec.stride || 0) | 0;
              rec.divisor = (spec.divisor || 0) | 0;
              rec.state = 1;
              check$1(rec.size >= 1 && rec.size <= 4, "size must be between 1 and 4");
              check$1(rec.offset >= 0, "invalid offset");
              check$1(rec.stride >= 0 && rec.stride <= 255, "stride must be between 0 and 255");
              check$1(rec.divisor >= 0, "divisor must be positive");
              check$1(!rec.divisor || !!extensions.angle_instanced_arrays, "ANGLE_instanced_arrays must be enabled to use divisor");
            } else if ("x" in spec) {
              check$1(i2 > 0, "first attribute must not be a constant");
              rec.x = +spec.x || 0;
              rec.y = +spec.y || 0;
              rec.z = +spec.z || 0;
              rec.w = +spec.w || 0;
              rec.state = 2;
            } else {
              check$1(false, "invalid attribute spec for location " + i2);
            }
          }
          for (var j = 0; j < vao.buffers.length; ++j) {
            if (!bufUpdated[j] && vao.buffers[j]) {
              vao.buffers[j].destroy();
              vao.buffers[j] = null;
            }
          }
          vao.refresh();
          return updateVAO;
        }
        updateVAO.destroy = function() {
          for (var j = 0; j < vao.buffers.length; ++j) {
            if (vao.buffers[j]) {
              vao.buffers[j].destroy();
            }
          }
          vao.buffers.length = 0;
          vao.destroy();
        };
        updateVAO._vao = vao;
        updateVAO._reglType = "vao";
        return updateVAO(_attr);
      }
      return state;
    }
    var GL_FRAGMENT_SHADER = 35632;
    var GL_VERTEX_SHADER = 35633;
    var GL_ACTIVE_UNIFORMS = 35718;
    var GL_ACTIVE_ATTRIBUTES = 35721;
    function wrapShaderState(gl, stringStore, stats2, config) {
      var fragShaders = {};
      var vertShaders = {};
      function ActiveInfo(name, id, location2, info) {
        this.name = name;
        this.id = id;
        this.location = location2;
        this.info = info;
      }
      function insertActiveInfo(list, info) {
        for (var i = 0; i < list.length; ++i) {
          if (list[i].id === info.id) {
            list[i].location = info.location;
            return;
          }
        }
        list.push(info);
      }
      function getShader(type, id, command) {
        var cache2 = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders;
        var shader = cache2[id];
        if (!shader) {
          var source = stringStore.str(id);
          shader = gl.createShader(type);
          gl.shaderSource(shader, source);
          gl.compileShader(shader);
          check$1.shaderError(gl, shader, source, type, command);
          cache2[id] = shader;
        }
        return shader;
      }
      var programCache = {};
      var programList = [];
      var PROGRAM_COUNTER = 0;
      function REGLProgram(fragId, vertId) {
        this.id = PROGRAM_COUNTER++;
        this.fragId = fragId;
        this.vertId = vertId;
        this.program = null;
        this.uniforms = [];
        this.attributes = [];
        this.refCount = 1;
        if (config.profile) {
          this.stats = {
            uniformsCount: 0,
            attributesCount: 0
          };
        }
      }
      function linkProgram(desc, command, attributeLocations) {
        var i, info;
        var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId);
        var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId);
        var program = desc.program = gl.createProgram();
        gl.attachShader(program, fragShader);
        gl.attachShader(program, vertShader);
        if (attributeLocations) {
          for (i = 0; i < attributeLocations.length; ++i) {
            var binding = attributeLocations[i];
            gl.bindAttribLocation(program, binding[0], binding[1]);
          }
        }
        gl.linkProgram(program);
        check$1.linkError(
          gl,
          program,
          stringStore.str(desc.fragId),
          stringStore.str(desc.vertId),
          command
        );
        var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS);
        if (config.profile) {
          desc.stats.uniformsCount = numUniforms;
        }
        var uniforms = desc.uniforms;
        for (i = 0; i < numUniforms; ++i) {
          info = gl.getActiveUniform(program, i);
          if (info) {
            if (info.size > 1) {
              for (var j = 0; j < info.size; ++j) {
                var name = info.name.replace("[0]", "[" + j + "]");
                insertActiveInfo(uniforms, new ActiveInfo(
                  name,
                  stringStore.id(name),
                  gl.getUniformLocation(program, name),
                  info
                ));
              }
            } else {
              insertActiveInfo(uniforms, new ActiveInfo(
                info.name,
                stringStore.id(info.name),
                gl.getUniformLocation(program, info.name),
                info
              ));
            }
          }
        }
        var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES);
        if (config.profile) {
          desc.stats.attributesCount = numAttributes;
        }
        var attributes = desc.attributes;
        for (i = 0; i < numAttributes; ++i) {
          info = gl.getActiveAttrib(program, i);
          if (info) {
            insertActiveInfo(attributes, new ActiveInfo(
              info.name,
              stringStore.id(info.name),
              gl.getAttribLocation(program, info.name),
              info
            ));
          }
        }
      }
      if (config.profile) {
        stats2.getMaxUniformsCount = function() {
          var m = 0;
          programList.forEach(function(desc) {
            if (desc.stats.uniformsCount > m) {
              m = desc.stats.uniformsCount;
            }
          });
          return m;
        };
        stats2.getMaxAttributesCount = function() {
          var m = 0;
          programList.forEach(function(desc) {
            if (desc.stats.attributesCount > m) {
              m = desc.stats.attributesCount;
            }
          });
          return m;
        };
      }
      function restoreShaders() {
        fragShaders = {};
        vertShaders = {};
        for (var i = 0; i < programList.length; ++i) {
          linkProgram(programList[i], null, programList[i].attributes.map(function(info) {
            return [info.location, info.name];
          }));
        }
      }
      return {
        clear: function() {
          var deleteShader = gl.deleteShader.bind(gl);
          values(fragShaders).forEach(deleteShader);
          fragShaders = {};
          values(vertShaders).forEach(deleteShader);
          vertShaders = {};
          programList.forEach(function(desc) {
            gl.deleteProgram(desc.program);
          });
          programList.length = 0;
          programCache = {};
          stats2.shaderCount = 0;
        },
        program: function(vertId, fragId, command, attribLocations) {
          check$1.command(vertId >= 0, "missing vertex shader", command);
          check$1.command(fragId >= 0, "missing fragment shader", command);
          var cache2 = programCache[fragId];
          if (!cache2) {
            cache2 = programCache[fragId] = {};
          }
          var prevProgram = cache2[vertId];
          if (prevProgram) {
            prevProgram.refCount++;
            if (!attribLocations) {
              return prevProgram;
            }
          }
          var program = new REGLProgram(fragId, vertId);
          stats2.shaderCount++;
          linkProgram(program, command, attribLocations);
          if (!prevProgram) {
            cache2[vertId] = program;
          }
          programList.push(program);
          return extend(program, {
            destroy: function() {
              program.refCount--;
              if (program.refCount <= 0) {
                gl.deleteProgram(program.program);
                var idx = programList.indexOf(program);
                programList.splice(idx, 1);
                stats2.shaderCount--;
              }
              if (cache2[program.vertId].refCount <= 0) {
                gl.deleteShader(vertShaders[program.vertId]);
                delete vertShaders[program.vertId];
                delete programCache[program.fragId][program.vertId];
              }
              if (!Object.keys(programCache[program.fragId]).length) {
                gl.deleteShader(fragShaders[program.fragId]);
                delete fragShaders[program.fragId];
                delete programCache[program.fragId];
              }
            }
          });
        },
        restore: restoreShaders,
        shader: getShader,
        frag: -1,
        vert: -1
      };
    }
    var GL_RGBA$3 = 6408;
    var GL_UNSIGNED_BYTE$7 = 5121;
    var GL_PACK_ALIGNMENT = 3333;
    var GL_FLOAT$7 = 5126;
    function wrapReadPixels(gl, framebufferState, reglPoll, context, glAttributes, extensions, limits) {
      function readPixelsImpl(input) {
        var type;
        if (framebufferState.next === null) {
          check$1(
            glAttributes.preserveDrawingBuffer,
            'you must create a webgl context with "preserveDrawingBuffer":true in order to read pixels from the drawing buffer'
          );
          type = GL_UNSIGNED_BYTE$7;
        } else {
          check$1(
            framebufferState.next.colorAttachments[0].texture !== null,
            "You cannot read from a renderbuffer"
          );
          type = framebufferState.next.colorAttachments[0].texture._texture.type;
          if (extensions.oes_texture_float) {
            check$1(
              type === GL_UNSIGNED_BYTE$7 || type === GL_FLOAT$7,
              "Reading from a framebuffer is only allowed for the types 'uint8' and 'float'"
            );
            if (type === GL_FLOAT$7) {
              check$1(limits.readFloat, "Reading 'float' values is not permitted in your browser. For a fallback, please see: https://www.npmjs.com/package/glsl-read-float");
            }
          } else {
            check$1(
              type === GL_UNSIGNED_BYTE$7,
              "Reading from a framebuffer is only allowed for the type 'uint8'"
            );
          }
        }
        var x2 = 0;
        var y = 0;
        var width = context.framebufferWidth;
        var height = context.framebufferHeight;
        var data = null;
        if (isTypedArray(input)) {
          data = input;
        } else if (input) {
          check$1.type(input, "object", "invalid arguments to regl.read()");
          x2 = input.x | 0;
          y = input.y | 0;
          check$1(
            x2 >= 0 && x2 < context.framebufferWidth,
            "invalid x offset for regl.read"
          );
          check$1(
            y >= 0 && y < context.framebufferHeight,
            "invalid y offset for regl.read"
          );
          width = (input.width || context.framebufferWidth - x2) | 0;
          height = (input.height || context.framebufferHeight - y) | 0;
          data = input.data || null;
        }
        if (data) {
          if (type === GL_UNSIGNED_BYTE$7) {
            check$1(
              data instanceof Uint8Array,
              "buffer must be 'Uint8Array' when reading from a framebuffer of type 'uint8'"
            );
          } else if (type === GL_FLOAT$7) {
            check$1(
              data instanceof Float32Array,
              "buffer must be 'Float32Array' when reading from a framebuffer of type 'float'"
            );
          }
        }
        check$1(
          width > 0 && width + x2 <= context.framebufferWidth,
          "invalid width for read pixels"
        );
        check$1(
          height > 0 && height + y <= context.framebufferHeight,
          "invalid height for read pixels"
        );
        reglPoll();
        var size = width * height * 4;
        if (!data) {
          if (type === GL_UNSIGNED_BYTE$7) {
            data = new Uint8Array(size);
          } else if (type === GL_FLOAT$7) {
            data = data || new Float32Array(size);
          }
        }
        check$1.isTypedArray(data, "data buffer for regl.read() must be a typedarray");
        check$1(data.byteLength >= size, "data buffer for regl.read() too small");
        gl.pixelStorei(GL_PACK_ALIGNMENT, 4);
        gl.readPixels(
          x2,
          y,
          width,
          height,
          GL_RGBA$3,
          type,
          data
        );
        return data;
      }
      function readPixelsFBO(options) {
        var result;
        framebufferState.setFBO({
          framebuffer: options.framebuffer
        }, function() {
          result = readPixelsImpl(options);
        });
        return result;
      }
      function readPixels(options) {
        if (!options || !("framebuffer" in options)) {
          return readPixelsImpl(options);
        } else {
          return readPixelsFBO(options);
        }
      }
      return readPixels;
    }
    function slice(x2) {
      return Array.prototype.slice.call(x2);
    }
    function join(x2) {
      return slice(x2).join("");
    }
    function createEnvironment() {
      var varCounter = 0;
      var linkedNames = [];
      var linkedValues = [];
      function link(value) {
        for (var i = 0; i < linkedValues.length; ++i) {
          if (linkedValues[i] === value) {
            return linkedNames[i];
          }
        }
        var name = "g" + varCounter++;
        linkedNames.push(name);
        linkedValues.push(value);
        return name;
      }
      function block() {
        var code = [];
        function push() {
          code.push.apply(code, slice(arguments));
        }
        var vars = [];
        function def() {
          var name = "v" + varCounter++;
          vars.push(name);
          if (arguments.length > 0) {
            code.push(name, "=");
            code.push.apply(code, slice(arguments));
            code.push(";");
          }
          return name;
        }
        return extend(push, {
          def,
          toString: function() {
            return join([
              vars.length > 0 ? "var " + vars.join(",") + ";" : "",
              join(code)
            ]);
          }
        });
      }
      function scope() {
        var entry = block();
        var exit = block();
        var entryToString = entry.toString;
        var exitToString = exit.toString;
        function save(object, prop) {
          exit(object, prop, "=", entry.def(object, prop), ";");
        }
        return extend(function() {
          entry.apply(entry, slice(arguments));
        }, {
          def: entry.def,
          entry,
          exit,
          save,
          set: function(object, prop, value) {
            save(object, prop);
            entry(object, prop, "=", value, ";");
          },
          toString: function() {
            return entryToString() + exitToString();
          }
        });
      }
      function conditional() {
        var pred = join(arguments);
        var thenBlock = scope();
        var elseBlock = scope();
        var thenToString = thenBlock.toString;
        var elseToString = elseBlock.toString;
        return extend(thenBlock, {
          then: function() {
            thenBlock.apply(thenBlock, slice(arguments));
            return this;
          },
          else: function() {
            elseBlock.apply(elseBlock, slice(arguments));
            return this;
          },
          toString: function() {
            var elseClause = elseToString();
            if (elseClause) {
              elseClause = "else{" + elseClause + "}";
            }
            return join([
              "if(",
              pred,
              "){",
              thenToString(),
              "}",
              elseClause
            ]);
          }
        });
      }
      var globalBlock = block();
      var procedures = {};
      function proc(name, count) {
        var args = [];
        function arg() {
          var name2 = "a" + args.length;
          args.push(name2);
          return name2;
        }
        count = count || 0;
        for (var i = 0; i < count; ++i) {
          arg();
        }
        var body = scope();
        var bodyToString = body.toString;
        var result = procedures[name] = extend(body, {
          arg,
          toString: function() {
            return join([
              "function(",
              args.join(),
              "){",
              bodyToString(),
              "}"
            ]);
          }
        });
        return result;
      }
      function compile() {
        var code = [
          '"use strict";',
          globalBlock,
          "return {"
        ];
        Object.keys(procedures).forEach(function(name) {
          code.push('"', name, '":', procedures[name].toString(), ",");
        });
        code.push("}");
        var src2 = join(code).replace(/;/g, ";\n").replace(/}/g, "}\n").replace(/{/g, "{\n");
        var proc2 = Function.apply(null, linkedNames.concat(src2));
        return proc2.apply(null, linkedValues);
      }
      return {
        global: globalBlock,
        link,
        block,
        proc,
        scope,
        cond: conditional,
        compile
      };
    }
    var CUTE_COMPONENTS = "xyzw".split("");
    var GL_UNSIGNED_BYTE$8 = 5121;
    var ATTRIB_STATE_POINTER = 1;
    var ATTRIB_STATE_CONSTANT = 2;
    var DYN_FUNC$1 = 0;
    var DYN_PROP$1 = 1;
    var DYN_CONTEXT$1 = 2;
    var DYN_STATE$1 = 3;
    var DYN_THUNK = 4;
    var DYN_CONSTANT$1 = 5;
    var DYN_ARRAY$1 = 6;
    var S_DITHER = "dither";
    var S_BLEND_ENABLE = "blend.enable";
    var S_BLEND_COLOR = "blend.color";
    var S_BLEND_EQUATION = "blend.equation";
    var S_BLEND_FUNC = "blend.func";
    var S_DEPTH_ENABLE = "depth.enable";
    var S_DEPTH_FUNC = "depth.func";
    var S_DEPTH_RANGE = "depth.range";
    var S_DEPTH_MASK = "depth.mask";
    var S_COLOR_MASK = "colorMask";
    var S_CULL_ENABLE = "cull.enable";
    var S_CULL_FACE = "cull.face";
    var S_FRONT_FACE = "frontFace";
    var S_LINE_WIDTH = "lineWidth";
    var S_POLYGON_OFFSET_ENABLE = "polygonOffset.enable";
    var S_POLYGON_OFFSET_OFFSET = "polygonOffset.offset";
    var S_SAMPLE_ALPHA = "sample.alpha";
    var S_SAMPLE_ENABLE = "sample.enable";
    var S_SAMPLE_COVERAGE = "sample.coverage";
    var S_STENCIL_ENABLE = "stencil.enable";
    var S_STENCIL_MASK = "stencil.mask";
    var S_STENCIL_FUNC = "stencil.func";
    var S_STENCIL_OPFRONT = "stencil.opFront";
    var S_STENCIL_OPBACK = "stencil.opBack";
    var S_SCISSOR_ENABLE = "scissor.enable";
    var S_SCISSOR_BOX = "scissor.box";
    var S_VIEWPORT = "viewport";
    var S_PROFILE = "profile";
    var S_FRAMEBUFFER = "framebuffer";
    var S_VERT = "vert";
    var S_FRAG = "frag";
    var S_ELEMENTS = "elements";
    var S_PRIMITIVE = "primitive";
    var S_COUNT = "count";
    var S_OFFSET = "offset";
    var S_INSTANCES = "instances";
    var S_VAO = "vao";
    var SUFFIX_WIDTH = "Width";
    var SUFFIX_HEIGHT = "Height";
    var S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH;
    var S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT;
    var S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH;
    var S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT;
    var S_DRAWINGBUFFER = "drawingBuffer";
    var S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH;
    var S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT;
    var NESTED_OPTIONS = [
      S_BLEND_FUNC,
      S_BLEND_EQUATION,
      S_STENCIL_FUNC,
      S_STENCIL_OPFRONT,
      S_STENCIL_OPBACK,
      S_SAMPLE_COVERAGE,
      S_VIEWPORT,
      S_SCISSOR_BOX,
      S_POLYGON_OFFSET_OFFSET
    ];
    var GL_ARRAY_BUFFER$2 = 34962;
    var GL_ELEMENT_ARRAY_BUFFER$1 = 34963;
    var GL_FRAGMENT_SHADER$1 = 35632;
    var GL_VERTEX_SHADER$1 = 35633;
    var GL_TEXTURE_2D$3 = 3553;
    var GL_TEXTURE_CUBE_MAP$2 = 34067;
    var GL_CULL_FACE = 2884;
    var GL_BLEND = 3042;
    var GL_DITHER = 3024;
    var GL_STENCIL_TEST = 2960;
    var GL_DEPTH_TEST = 2929;
    var GL_SCISSOR_TEST = 3089;
    var GL_POLYGON_OFFSET_FILL = 32823;
    var GL_SAMPLE_ALPHA_TO_COVERAGE = 32926;
    var GL_SAMPLE_COVERAGE = 32928;
    var GL_FLOAT$8 = 5126;
    var GL_FLOAT_VEC2 = 35664;
    var GL_FLOAT_VEC3 = 35665;
    var GL_FLOAT_VEC4 = 35666;
    var GL_INT$3 = 5124;
    var GL_INT_VEC2 = 35667;
    var GL_INT_VEC3 = 35668;
    var GL_INT_VEC4 = 35669;
    var GL_BOOL = 35670;
    var GL_BOOL_VEC2 = 35671;
    var GL_BOOL_VEC3 = 35672;
    var GL_BOOL_VEC4 = 35673;
    var GL_FLOAT_MAT2 = 35674;
    var GL_FLOAT_MAT3 = 35675;
    var GL_FLOAT_MAT4 = 35676;
    var GL_SAMPLER_2D = 35678;
    var GL_SAMPLER_CUBE = 35680;
    var GL_TRIANGLES$1 = 4;
    var GL_FRONT = 1028;
    var GL_BACK = 1029;
    var GL_CW = 2304;
    var GL_CCW = 2305;
    var GL_MIN_EXT = 32775;
    var GL_MAX_EXT = 32776;
    var GL_ALWAYS = 519;
    var GL_KEEP = 7680;
    var GL_ZERO = 0;
    var GL_ONE = 1;
    var GL_FUNC_ADD = 32774;
    var GL_LESS = 513;
    var GL_FRAMEBUFFER$2 = 36160;
    var GL_COLOR_ATTACHMENT0$2 = 36064;
    var blendFuncs = {
      "0": 0,
      "1": 1,
      "zero": 0,
      "one": 1,
      "src color": 768,
      "one minus src color": 769,
      "src alpha": 770,
      "one minus src alpha": 771,
      "dst color": 774,
      "one minus dst color": 775,
      "dst alpha": 772,
      "one minus dst alpha": 773,
      "constant color": 32769,
      "one minus constant color": 32770,
      "constant alpha": 32771,
      "one minus constant alpha": 32772,
      "src alpha saturate": 776
    };
    var invalidBlendCombinations = [
      "constant color, constant alpha",
      "one minus constant color, constant alpha",
      "constant color, one minus constant alpha",
      "one minus constant color, one minus constant alpha",
      "constant alpha, constant color",
      "constant alpha, one minus constant color",
      "one minus constant alpha, constant color",
      "one minus constant alpha, one minus constant color"
    ];
    var compareFuncs = {
      "never": 512,
      "less": 513,
      "<": 513,
      "equal": 514,
      "=": 514,
      "==": 514,
      "===": 514,
      "lequal": 515,
      "<=": 515,
      "greater": 516,
      ">": 516,
      "notequal": 517,
      "!=": 517,
      "!==": 517,
      "gequal": 518,
      ">=": 518,
      "always": 519
    };
    var stencilOps = {
      "0": 0,
      "zero": 0,
      "keep": 7680,
      "replace": 7681,
      "increment": 7682,
      "decrement": 7683,
      "increment wrap": 34055,
      "decrement wrap": 34056,
      "invert": 5386
    };
    var shaderType = {
      "frag": GL_FRAGMENT_SHADER$1,
      "vert": GL_VERTEX_SHADER$1
    };
    var orientationType = {
      "cw": GL_CW,
      "ccw": GL_CCW
    };
    function isBufferArgs(x2) {
      return Array.isArray(x2) || isTypedArray(x2) || isNDArrayLike(x2);
    }
    function sortState(state) {
      return state.sort(function(a2, b) {
        if (a2 === S_VIEWPORT) {
          return -1;
        } else if (b === S_VIEWPORT) {
          return 1;
        }
        return a2 < b ? -1 : 1;
      });
    }
    function Declaration(thisDep, contextDep, propDep, append) {
      this.thisDep = thisDep;
      this.contextDep = contextDep;
      this.propDep = propDep;
      this.append = append;
    }
    function isStatic(decl) {
      return decl && !(decl.thisDep || decl.contextDep || decl.propDep);
    }
    function createStaticDecl(append) {
      return new Declaration(false, false, false, append);
    }
    function createDynamicDecl(dyn, append) {
      var type = dyn.type;
      if (type === DYN_FUNC$1) {
        var numArgs = dyn.data.length;
        return new Declaration(
          true,
          numArgs >= 1,
          numArgs >= 2,
          append
        );
      } else if (type === DYN_THUNK) {
        var data = dyn.data;
        return new Declaration(
          data.thisDep,
          data.contextDep,
          data.propDep,
          append
        );
      } else if (type === DYN_CONSTANT$1) {
        return new Declaration(
          false,
          false,
          false,
          append
        );
      } else if (type === DYN_ARRAY$1) {
        var thisDep = false;
        var contextDep = false;
        var propDep = false;
        for (var i = 0; i < dyn.data.length; ++i) {
          var subDyn = dyn.data[i];
          if (subDyn.type === DYN_PROP$1) {
            propDep = true;
          } else if (subDyn.type === DYN_CONTEXT$1) {
            contextDep = true;
          } else if (subDyn.type === DYN_STATE$1) {
            thisDep = true;
          } else if (subDyn.type === DYN_FUNC$1) {
            thisDep = true;
            var subArgs = subDyn.data;
            if (subArgs >= 1) {
              contextDep = true;
            }
            if (subArgs >= 2) {
              propDep = true;
            }
          } else if (subDyn.type === DYN_THUNK) {
            thisDep = thisDep || subDyn.data.thisDep;
            contextDep = contextDep || subDyn.data.contextDep;
            propDep = propDep || subDyn.data.propDep;
          }
        }
        return new Declaration(
          thisDep,
          contextDep,
          propDep,
          append
        );
      } else {
        return new Declaration(
          type === DYN_STATE$1,
          type === DYN_CONTEXT$1,
          type === DYN_PROP$1,
          append
        );
      }
    }
    var SCOPE_DECL = new Declaration(false, false, false, function() {
    });
    function reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, config) {
      var AttributeRecord2 = attributeState.Record;
      var blendEquations = {
        "add": 32774,
        "subtract": 32778,
        "reverse subtract": 32779
      };
      if (extensions.ext_blend_minmax) {
        blendEquations.min = GL_MIN_EXT;
        blendEquations.max = GL_MAX_EXT;
      }
      var extInstancing = extensions.angle_instanced_arrays;
      var extDrawBuffers = extensions.webgl_draw_buffers;
      var currentState = {
        dirty: true,
        profile: config.profile
      };
      var nextState = {};
      var GL_STATE_NAMES = [];
      var GL_FLAGS = {};
      var GL_VARIABLES = {};
      function propName(name) {
        return name.replace(".", "_");
      }
      function stateFlag(sname, cap, init) {
        var name = propName(sname);
        GL_STATE_NAMES.push(sname);
        nextState[name] = currentState[name] = !!init;
        GL_FLAGS[name] = cap;
      }
      function stateVariable(sname, func, init) {
        var name = propName(sname);
        GL_STATE_NAMES.push(sname);
        if (Array.isArray(init)) {
          currentState[name] = init.slice();
          nextState[name] = init.slice();
        } else {
          currentState[name] = nextState[name] = init;
        }
        GL_VARIABLES[name] = func;
      }
      stateFlag(S_DITHER, GL_DITHER);
      stateFlag(S_BLEND_ENABLE, GL_BLEND);
      stateVariable(S_BLEND_COLOR, "blendColor", [0, 0, 0, 0]);
      stateVariable(
        S_BLEND_EQUATION,
        "blendEquationSeparate",
        [GL_FUNC_ADD, GL_FUNC_ADD]
      );
      stateVariable(
        S_BLEND_FUNC,
        "blendFuncSeparate",
        [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO]
      );
      stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true);
      stateVariable(S_DEPTH_FUNC, "depthFunc", GL_LESS);
      stateVariable(S_DEPTH_RANGE, "depthRange", [0, 1]);
      stateVariable(S_DEPTH_MASK, "depthMask", true);
      stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true]);
      stateFlag(S_CULL_ENABLE, GL_CULL_FACE);
      stateVariable(S_CULL_FACE, "cullFace", GL_BACK);
      stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW);
      stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1);
      stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL);
      stateVariable(S_POLYGON_OFFSET_OFFSET, "polygonOffset", [0, 0]);
      stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE);
      stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE);
      stateVariable(S_SAMPLE_COVERAGE, "sampleCoverage", [1, false]);
      stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST);
      stateVariable(S_STENCIL_MASK, "stencilMask", -1);
      stateVariable(S_STENCIL_FUNC, "stencilFunc", [GL_ALWAYS, 0, -1]);
      stateVariable(
        S_STENCIL_OPFRONT,
        "stencilOpSeparate",
        [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP]
      );
      stateVariable(
        S_STENCIL_OPBACK,
        "stencilOpSeparate",
        [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP]
      );
      stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST);
      stateVariable(
        S_SCISSOR_BOX,
        "scissor",
        [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]
      );
      stateVariable(
        S_VIEWPORT,
        S_VIEWPORT,
        [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]
      );
      var sharedState = {
        gl,
        context: contextState,
        strings: stringStore,
        next: nextState,
        current: currentState,
        draw: drawState,
        elements: elementState,
        buffer: bufferState,
        shader: shaderState,
        attributes: attributeState.state,
        vao: attributeState,
        uniforms: uniformState,
        framebuffer: framebufferState,
        extensions,
        timer,
        isBufferArgs
      };
      var sharedConstants = {
        primTypes,
        compareFuncs,
        blendFuncs,
        blendEquations,
        stencilOps,
        glTypes,
        orientationType
      };
      check$1.optional(function() {
        sharedState.isArrayLike = isArrayLike;
      });
      if (extDrawBuffers) {
        sharedConstants.backBuffer = [GL_BACK];
        sharedConstants.drawBuffer = loop2(limits.maxDrawbuffers, function(i) {
          if (i === 0) {
            return [0];
          }
          return loop2(i, function(j) {
            return GL_COLOR_ATTACHMENT0$2 + j;
          });
        });
      }
      var drawCallCounter = 0;
      function createREGLEnvironment() {
        var env = createEnvironment();
        var link = env.link;
        var global2 = env.global;
        env.id = drawCallCounter++;
        env.batchId = "0";
        var SHARED = link(sharedState);
        var shared = env.shared = {
          props: "a0"
        };
        Object.keys(sharedState).forEach(function(prop) {
          shared[prop] = global2.def(SHARED, ".", prop);
        });
        check$1.optional(function() {
          env.CHECK = link(check$1);
          env.commandStr = check$1.guessCommand();
          env.command = link(env.commandStr);
          env.assert = function(block, pred, message) {
            block(
              "if(!(",
              pred,
              "))",
              this.CHECK,
              ".commandRaise(",
              link(message),
              ",",
              this.command,
              ");"
            );
          };
          sharedConstants.invalidBlendCombinations = invalidBlendCombinations;
        });
        var nextVars = env.next = {};
        var currentVars = env.current = {};
        Object.keys(GL_VARIABLES).forEach(function(variable) {
          if (Array.isArray(currentState[variable])) {
            nextVars[variable] = global2.def(shared.next, ".", variable);
            currentVars[variable] = global2.def(shared.current, ".", variable);
          }
        });
        var constants = env.constants = {};
        Object.keys(sharedConstants).forEach(function(name) {
          constants[name] = global2.def(JSON.stringify(sharedConstants[name]));
        });
        env.invoke = function(block, x2) {
          switch (x2.type) {
            case DYN_FUNC$1:
              var argList = [
                "this",
                shared.context,
                shared.props,
                env.batchId
              ];
              return block.def(
                link(x2.data),
                ".call(",
                argList.slice(0, Math.max(x2.data.length + 1, 4)),
                ")"
              );
            case DYN_PROP$1:
              return block.def(shared.props, x2.data);
            case DYN_CONTEXT$1:
              return block.def(shared.context, x2.data);
            case DYN_STATE$1:
              return block.def("this", x2.data);
            case DYN_THUNK:
              x2.data.append(env, block);
              return x2.data.ref;
            case DYN_CONSTANT$1:
              return x2.data.toString();
            case DYN_ARRAY$1:
              return x2.data.map(function(y) {
                return env.invoke(block, y);
              });
          }
        };
        env.attribCache = {};
        var scopeAttribs = {};
        env.scopeAttrib = function(name) {
          var id = stringStore.id(name);
          if (id in scopeAttribs) {
            return scopeAttribs[id];
          }
          var binding = attributeState.scope[id];
          if (!binding) {
            binding = attributeState.scope[id] = new AttributeRecord2();
          }
          var result = scopeAttribs[id] = link(binding);
          return result;
        };
        return env;
      }
      function parseProfile(options) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        var profileEnable;
        if (S_PROFILE in staticOptions) {
          var value = !!staticOptions[S_PROFILE];
          profileEnable = createStaticDecl(function(env, scope) {
            return value;
          });
          profileEnable.enable = value;
        } else if (S_PROFILE in dynamicOptions) {
          var dyn = dynamicOptions[S_PROFILE];
          profileEnable = createDynamicDecl(dyn, function(env, scope) {
            return env.invoke(scope, dyn);
          });
        }
        return profileEnable;
      }
      function parseFramebuffer(options, env) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        if (S_FRAMEBUFFER in staticOptions) {
          var framebuffer = staticOptions[S_FRAMEBUFFER];
          if (framebuffer) {
            framebuffer = framebufferState.getFramebuffer(framebuffer);
            check$1.command(framebuffer, "invalid framebuffer object");
            return createStaticDecl(function(env2, block) {
              var FRAMEBUFFER = env2.link(framebuffer);
              var shared = env2.shared;
              block.set(
                shared.framebuffer,
                ".next",
                FRAMEBUFFER
              );
              var CONTEXT = shared.context;
              block.set(
                CONTEXT,
                "." + S_FRAMEBUFFER_WIDTH,
                FRAMEBUFFER + ".width"
              );
              block.set(
                CONTEXT,
                "." + S_FRAMEBUFFER_HEIGHT,
                FRAMEBUFFER + ".height"
              );
              return FRAMEBUFFER;
            });
          } else {
            return createStaticDecl(function(env2, scope) {
              var shared = env2.shared;
              scope.set(
                shared.framebuffer,
                ".next",
                "null"
              );
              var CONTEXT = shared.context;
              scope.set(
                CONTEXT,
                "." + S_FRAMEBUFFER_WIDTH,
                CONTEXT + "." + S_DRAWINGBUFFER_WIDTH
              );
              scope.set(
                CONTEXT,
                "." + S_FRAMEBUFFER_HEIGHT,
                CONTEXT + "." + S_DRAWINGBUFFER_HEIGHT
              );
              return "null";
            });
          }
        } else if (S_FRAMEBUFFER in dynamicOptions) {
          var dyn = dynamicOptions[S_FRAMEBUFFER];
          return createDynamicDecl(dyn, function(env2, scope) {
            var FRAMEBUFFER_FUNC = env2.invoke(scope, dyn);
            var shared = env2.shared;
            var FRAMEBUFFER_STATE = shared.framebuffer;
            var FRAMEBUFFER = scope.def(
              FRAMEBUFFER_STATE,
              ".getFramebuffer(",
              FRAMEBUFFER_FUNC,
              ")"
            );
            check$1.optional(function() {
              env2.assert(
                scope,
                "!" + FRAMEBUFFER_FUNC + "||" + FRAMEBUFFER,
                "invalid framebuffer object"
              );
            });
            scope.set(
              FRAMEBUFFER_STATE,
              ".next",
              FRAMEBUFFER
            );
            var CONTEXT = shared.context;
            scope.set(
              CONTEXT,
              "." + S_FRAMEBUFFER_WIDTH,
              FRAMEBUFFER + "?" + FRAMEBUFFER + ".width:" + CONTEXT + "." + S_DRAWINGBUFFER_WIDTH
            );
            scope.set(
              CONTEXT,
              "." + S_FRAMEBUFFER_HEIGHT,
              FRAMEBUFFER + "?" + FRAMEBUFFER + ".height:" + CONTEXT + "." + S_DRAWINGBUFFER_HEIGHT
            );
            return FRAMEBUFFER;
          });
        } else {
          return null;
        }
      }
      function parseViewportScissor(options, framebuffer, env) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        function parseBox(param) {
          if (param in staticOptions) {
            var box = staticOptions[param];
            check$1.commandType(box, "object", "invalid " + param, env.commandStr);
            var isStatic2 = true;
            var x2 = box.x | 0;
            var y = box.y | 0;
            var w, h;
            if ("width" in box) {
              w = box.width | 0;
              check$1.command(w >= 0, "invalid " + param, env.commandStr);
            } else {
              isStatic2 = false;
            }
            if ("height" in box) {
              h = box.height | 0;
              check$1.command(h >= 0, "invalid " + param, env.commandStr);
            } else {
              isStatic2 = false;
            }
            return new Declaration(
              !isStatic2 && framebuffer && framebuffer.thisDep,
              !isStatic2 && framebuffer && framebuffer.contextDep,
              !isStatic2 && framebuffer && framebuffer.propDep,
              function(env2, scope) {
                var CONTEXT = env2.shared.context;
                var BOX_W = w;
                if (!("width" in box)) {
                  BOX_W = scope.def(CONTEXT, ".", S_FRAMEBUFFER_WIDTH, "-", x2);
                }
                var BOX_H = h;
                if (!("height" in box)) {
                  BOX_H = scope.def(CONTEXT, ".", S_FRAMEBUFFER_HEIGHT, "-", y);
                }
                return [x2, y, BOX_W, BOX_H];
              }
            );
          } else if (param in dynamicOptions) {
            var dynBox = dynamicOptions[param];
            var result = createDynamicDecl(dynBox, function(env2, scope) {
              var BOX = env2.invoke(scope, dynBox);
              check$1.optional(function() {
                env2.assert(
                  scope,
                  BOX + "&&typeof " + BOX + '==="object"',
                  "invalid " + param
                );
              });
              var CONTEXT = env2.shared.context;
              var BOX_X = scope.def(BOX, ".x|0");
              var BOX_Y = scope.def(BOX, ".y|0");
              var BOX_W = scope.def(
                '"width" in ',
                BOX,
                "?",
                BOX,
                ".width|0:",
                "(",
                CONTEXT,
                ".",
                S_FRAMEBUFFER_WIDTH,
                "-",
                BOX_X,
                ")"
              );
              var BOX_H = scope.def(
                '"height" in ',
                BOX,
                "?",
                BOX,
                ".height|0:",
                "(",
                CONTEXT,
                ".",
                S_FRAMEBUFFER_HEIGHT,
                "-",
                BOX_Y,
                ")"
              );
              check$1.optional(function() {
                env2.assert(
                  scope,
                  BOX_W + ">=0&&" + BOX_H + ">=0",
                  "invalid " + param
                );
              });
              return [BOX_X, BOX_Y, BOX_W, BOX_H];
            });
            if (framebuffer) {
              result.thisDep = result.thisDep || framebuffer.thisDep;
              result.contextDep = result.contextDep || framebuffer.contextDep;
              result.propDep = result.propDep || framebuffer.propDep;
            }
            return result;
          } else if (framebuffer) {
            return new Declaration(
              framebuffer.thisDep,
              framebuffer.contextDep,
              framebuffer.propDep,
              function(env2, scope) {
                var CONTEXT = env2.shared.context;
                return [
                  0,
                  0,
                  scope.def(CONTEXT, ".", S_FRAMEBUFFER_WIDTH),
                  scope.def(CONTEXT, ".", S_FRAMEBUFFER_HEIGHT)
                ];
              }
            );
          } else {
            return null;
          }
        }
        var viewport = parseBox(S_VIEWPORT);
        if (viewport) {
          var prevViewport = viewport;
          viewport = new Declaration(
            viewport.thisDep,
            viewport.contextDep,
            viewport.propDep,
            function(env2, scope) {
              var VIEWPORT = prevViewport.append(env2, scope);
              var CONTEXT = env2.shared.context;
              scope.set(
                CONTEXT,
                "." + S_VIEWPORT_WIDTH,
                VIEWPORT[2]
              );
              scope.set(
                CONTEXT,
                "." + S_VIEWPORT_HEIGHT,
                VIEWPORT[3]
              );
              return VIEWPORT;
            }
          );
        }
        return {
          viewport,
          scissor_box: parseBox(S_SCISSOR_BOX)
        };
      }
      function parseAttribLocations(options, attributes) {
        var staticOptions = options.static;
        var staticProgram = typeof staticOptions[S_FRAG] === "string" && typeof staticOptions[S_VERT] === "string";
        if (staticProgram) {
          if (Object.keys(attributes.dynamic).length > 0) {
            return null;
          }
          var staticAttributes = attributes.static;
          var sAttributes = Object.keys(staticAttributes);
          if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === "number") {
            var bindings = [];
            for (var i = 0; i < sAttributes.length; ++i) {
              check$1(typeof staticAttributes[sAttributes[i]] === "number", "must specify all vertex attribute locations when using vaos");
              bindings.push([staticAttributes[sAttributes[i]] | 0, sAttributes[i]]);
            }
            return bindings;
          }
        }
        return null;
      }
      function parseProgram(options, env, attribLocations) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        function parseShader(name) {
          if (name in staticOptions) {
            var id = stringStore.id(staticOptions[name]);
            check$1.optional(function() {
              shaderState.shader(shaderType[name], id, check$1.guessCommand());
            });
            var result = createStaticDecl(function() {
              return id;
            });
            result.id = id;
            return result;
          } else if (name in dynamicOptions) {
            var dyn = dynamicOptions[name];
            return createDynamicDecl(dyn, function(env2, scope) {
              var str = env2.invoke(scope, dyn);
              var id2 = scope.def(env2.shared.strings, ".id(", str, ")");
              check$1.optional(function() {
                scope(
                  env2.shared.shader,
                  ".shader(",
                  shaderType[name],
                  ",",
                  id2,
                  ",",
                  env2.command,
                  ");"
                );
              });
              return id2;
            });
          }
          return null;
        }
        var frag = parseShader(S_FRAG);
        var vert = parseShader(S_VERT);
        var program = null;
        var progVar;
        if (isStatic(frag) && isStatic(vert)) {
          program = shaderState.program(vert.id, frag.id, null, attribLocations);
          progVar = createStaticDecl(function(env2, scope) {
            return env2.link(program);
          });
        } else {
          progVar = new Declaration(
            frag && frag.thisDep || vert && vert.thisDep,
            frag && frag.contextDep || vert && vert.contextDep,
            frag && frag.propDep || vert && vert.propDep,
            function(env2, scope) {
              var SHADER_STATE = env2.shared.shader;
              var fragId;
              if (frag) {
                fragId = frag.append(env2, scope);
              } else {
                fragId = scope.def(SHADER_STATE, ".", S_FRAG);
              }
              var vertId;
              if (vert) {
                vertId = vert.append(env2, scope);
              } else {
                vertId = scope.def(SHADER_STATE, ".", S_VERT);
              }
              var progDef = SHADER_STATE + ".program(" + vertId + "," + fragId;
              check$1.optional(function() {
                progDef += "," + env2.command;
              });
              return scope.def(progDef + ")");
            }
          );
        }
        return {
          frag,
          vert,
          progVar,
          program
        };
      }
      function parseDraw(options, env) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        function parseElements() {
          if (S_ELEMENTS in staticOptions) {
            var elements2 = staticOptions[S_ELEMENTS];
            if (isBufferArgs(elements2)) {
              elements2 = elementState.getElements(elementState.create(elements2, true));
            } else if (elements2) {
              elements2 = elementState.getElements(elements2);
              check$1.command(elements2, "invalid elements", env.commandStr);
            }
            var result = createStaticDecl(function(env2, scope) {
              if (elements2) {
                var result2 = env2.link(elements2);
                env2.ELEMENTS = result2;
                return result2;
              }
              env2.ELEMENTS = null;
              return null;
            });
            result.value = elements2;
            return result;
          } else if (S_ELEMENTS in dynamicOptions) {
            var dyn = dynamicOptions[S_ELEMENTS];
            return createDynamicDecl(dyn, function(env2, scope) {
              var shared = env2.shared;
              var IS_BUFFER_ARGS = shared.isBufferArgs;
              var ELEMENT_STATE = shared.elements;
              var elementDefn = env2.invoke(scope, dyn);
              var elements3 = scope.def("null");
              var elementStream = scope.def(IS_BUFFER_ARGS, "(", elementDefn, ")");
              var ifte = env2.cond(elementStream).then(elements3, "=", ELEMENT_STATE, ".createStream(", elementDefn, ");").else(elements3, "=", ELEMENT_STATE, ".getElements(", elementDefn, ");");
              check$1.optional(function() {
                env2.assert(
                  ifte.else,
                  "!" + elementDefn + "||" + elements3,
                  "invalid elements"
                );
              });
              scope.entry(ifte);
              scope.exit(
                env2.cond(elementStream).then(ELEMENT_STATE, ".destroyStream(", elements3, ");")
              );
              env2.ELEMENTS = elements3;
              return elements3;
            });
          }
          return null;
        }
        var elements = parseElements();
        function parsePrimitive() {
          if (S_PRIMITIVE in staticOptions) {
            var primitive = staticOptions[S_PRIMITIVE];
            check$1.commandParameter(primitive, primTypes, "invalid primitve", env.commandStr);
            return createStaticDecl(function(env2, scope) {
              return primTypes[primitive];
            });
          } else if (S_PRIMITIVE in dynamicOptions) {
            var dynPrimitive = dynamicOptions[S_PRIMITIVE];
            return createDynamicDecl(dynPrimitive, function(env2, scope) {
              var PRIM_TYPES = env2.constants.primTypes;
              var prim = env2.invoke(scope, dynPrimitive);
              check$1.optional(function() {
                env2.assert(
                  scope,
                  prim + " in " + PRIM_TYPES,
                  "invalid primitive, must be one of " + Object.keys(primTypes)
                );
              });
              return scope.def(PRIM_TYPES, "[", prim, "]");
            });
          } else if (elements) {
            if (isStatic(elements)) {
              if (elements.value) {
                return createStaticDecl(function(env2, scope) {
                  return scope.def(env2.ELEMENTS, ".primType");
                });
              } else {
                return createStaticDecl(function() {
                  return GL_TRIANGLES$1;
                });
              }
            } else {
              return new Declaration(
                elements.thisDep,
                elements.contextDep,
                elements.propDep,
                function(env2, scope) {
                  var elements2 = env2.ELEMENTS;
                  return scope.def(elements2, "?", elements2, ".primType:", GL_TRIANGLES$1);
                }
              );
            }
          }
          return null;
        }
        function parseParam(param, isOffset) {
          if (param in staticOptions) {
            var value = staticOptions[param] | 0;
            check$1.command(!isOffset || value >= 0, "invalid " + param, env.commandStr);
            return createStaticDecl(function(env2, scope) {
              if (isOffset) {
                env2.OFFSET = value;
              }
              return value;
            });
          } else if (param in dynamicOptions) {
            var dynValue = dynamicOptions[param];
            return createDynamicDecl(dynValue, function(env2, scope) {
              var result = env2.invoke(scope, dynValue);
              if (isOffset) {
                env2.OFFSET = result;
                check$1.optional(function() {
                  env2.assert(
                    scope,
                    result + ">=0",
                    "invalid " + param
                  );
                });
              }
              return result;
            });
          } else if (isOffset && elements) {
            return createStaticDecl(function(env2, scope) {
              env2.OFFSET = "0";
              return 0;
            });
          }
          return null;
        }
        var OFFSET = parseParam(S_OFFSET, true);
        function parseVertCount() {
          if (S_COUNT in staticOptions) {
            var count = staticOptions[S_COUNT] | 0;
            check$1.command(
              typeof count === "number" && count >= 0,
              "invalid vertex count",
              env.commandStr
            );
            return createStaticDecl(function() {
              return count;
            });
          } else if (S_COUNT in dynamicOptions) {
            var dynCount = dynamicOptions[S_COUNT];
            return createDynamicDecl(dynCount, function(env2, scope) {
              var result2 = env2.invoke(scope, dynCount);
              check$1.optional(function() {
                env2.assert(
                  scope,
                  "typeof " + result2 + '==="number"&&' + result2 + ">=0&&" + result2 + "===(" + result2 + "|0)",
                  "invalid vertex count"
                );
              });
              return result2;
            });
          } else if (elements) {
            if (isStatic(elements)) {
              if (elements) {
                if (OFFSET) {
                  return new Declaration(
                    OFFSET.thisDep,
                    OFFSET.contextDep,
                    OFFSET.propDep,
                    function(env2, scope) {
                      var result2 = scope.def(
                        env2.ELEMENTS,
                        ".vertCount-",
                        env2.OFFSET
                      );
                      check$1.optional(function() {
                        env2.assert(
                          scope,
                          result2 + ">=0",
                          "invalid vertex offset/element buffer too small"
                        );
                      });
                      return result2;
                    }
                  );
                } else {
                  return createStaticDecl(function(env2, scope) {
                    return scope.def(env2.ELEMENTS, ".vertCount");
                  });
                }
              } else {
                var result = createStaticDecl(function() {
                  return -1;
                });
                check$1.optional(function() {
                  result.MISSING = true;
                });
                return result;
              }
            } else {
              var variable = new Declaration(
                elements.thisDep || OFFSET.thisDep,
                elements.contextDep || OFFSET.contextDep,
                elements.propDep || OFFSET.propDep,
                function(env2, scope) {
                  var elements2 = env2.ELEMENTS;
                  if (env2.OFFSET) {
                    return scope.def(
                      elements2,
                      "?",
                      elements2,
                      ".vertCount-",
                      env2.OFFSET,
                      ":-1"
                    );
                  }
                  return scope.def(elements2, "?", elements2, ".vertCount:-1");
                }
              );
              check$1.optional(function() {
                variable.DYNAMIC = true;
              });
              return variable;
            }
          }
          return null;
        }
        return {
          elements,
          primitive: parsePrimitive(),
          count: parseVertCount(),
          instances: parseParam(S_INSTANCES, false),
          offset: OFFSET
        };
      }
      function parseGLState(options, env) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        var STATE = {};
        GL_STATE_NAMES.forEach(function(prop) {
          var param = propName(prop);
          function parseParam(parseStatic, parseDynamic) {
            if (prop in staticOptions) {
              var value = parseStatic(staticOptions[prop]);
              STATE[param] = createStaticDecl(function() {
                return value;
              });
            } else if (prop in dynamicOptions) {
              var dyn = dynamicOptions[prop];
              STATE[param] = createDynamicDecl(dyn, function(env2, scope) {
                return parseDynamic(env2, scope, env2.invoke(scope, dyn));
              });
            }
          }
          switch (prop) {
            case S_CULL_ENABLE:
            case S_BLEND_ENABLE:
            case S_DITHER:
            case S_STENCIL_ENABLE:
            case S_DEPTH_ENABLE:
            case S_SCISSOR_ENABLE:
            case S_POLYGON_OFFSET_ENABLE:
            case S_SAMPLE_ALPHA:
            case S_SAMPLE_ENABLE:
            case S_DEPTH_MASK:
              return parseParam(
                function(value) {
                  check$1.commandType(value, "boolean", prop, env.commandStr);
                  return value;
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      "typeof " + value + '==="boolean"',
                      "invalid flag " + prop,
                      env2.commandStr
                    );
                  });
                  return value;
                }
              );
            case S_DEPTH_FUNC:
              return parseParam(
                function(value) {
                  check$1.commandParameter(value, compareFuncs, "invalid " + prop, env.commandStr);
                  return compareFuncs[value];
                },
                function(env2, scope, value) {
                  var COMPARE_FUNCS = env2.constants.compareFuncs;
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + " in " + COMPARE_FUNCS,
                      "invalid " + prop + ", must be one of " + Object.keys(compareFuncs)
                    );
                  });
                  return scope.def(COMPARE_FUNCS, "[", value, "]");
                }
              );
            case S_DEPTH_RANGE:
              return parseParam(
                function(value) {
                  check$1.command(
                    isArrayLike(value) && value.length === 2 && typeof value[0] === "number" && typeof value[1] === "number" && value[0] <= value[1],
                    "depth range is 2d array",
                    env.commandStr
                  );
                  return value;
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      env2.shared.isArrayLike + "(" + value + ")&&" + value + ".length===2&&typeof " + value + '[0]==="number"&&typeof ' + value + '[1]==="number"&&' + value + "[0]<=" + value + "[1]",
                      "depth range must be a 2d array"
                    );
                  });
                  var Z_NEAR = scope.def("+", value, "[0]");
                  var Z_FAR = scope.def("+", value, "[1]");
                  return [Z_NEAR, Z_FAR];
                }
              );
            case S_BLEND_FUNC:
              return parseParam(
                function(value) {
                  check$1.commandType(value, "object", "blend.func", env.commandStr);
                  var srcRGB = "srcRGB" in value ? value.srcRGB : value.src;
                  var srcAlpha = "srcAlpha" in value ? value.srcAlpha : value.src;
                  var dstRGB = "dstRGB" in value ? value.dstRGB : value.dst;
                  var dstAlpha = "dstAlpha" in value ? value.dstAlpha : value.dst;
                  check$1.commandParameter(srcRGB, blendFuncs, param + ".srcRGB", env.commandStr);
                  check$1.commandParameter(srcAlpha, blendFuncs, param + ".srcAlpha", env.commandStr);
                  check$1.commandParameter(dstRGB, blendFuncs, param + ".dstRGB", env.commandStr);
                  check$1.commandParameter(dstAlpha, blendFuncs, param + ".dstAlpha", env.commandStr);
                  check$1.command(
                    invalidBlendCombinations.indexOf(srcRGB + ", " + dstRGB) === -1,
                    "unallowed blending combination (srcRGB, dstRGB) = (" + srcRGB + ", " + dstRGB + ")",
                    env.commandStr
                  );
                  return [
                    blendFuncs[srcRGB],
                    blendFuncs[dstRGB],
                    blendFuncs[srcAlpha],
                    blendFuncs[dstAlpha]
                  ];
                },
                function(env2, scope, value) {
                  var BLEND_FUNCS = env2.constants.blendFuncs;
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + "&&typeof " + value + '==="object"',
                      "invalid blend func, must be an object"
                    );
                  });
                  function read(prefix2, suffix2) {
                    var func = scope.def(
                      '"',
                      prefix2,
                      suffix2,
                      '" in ',
                      value,
                      "?",
                      value,
                      ".",
                      prefix2,
                      suffix2,
                      ":",
                      value,
                      ".",
                      prefix2
                    );
                    check$1.optional(function() {
                      env2.assert(
                        scope,
                        func + " in " + BLEND_FUNCS,
                        "invalid " + prop + "." + prefix2 + suffix2 + ", must be one of " + Object.keys(blendFuncs)
                      );
                    });
                    return func;
                  }
                  var srcRGB = read("src", "RGB");
                  var dstRGB = read("dst", "RGB");
                  check$1.optional(function() {
                    var INVALID_BLEND_COMBINATIONS = env2.constants.invalidBlendCombinations;
                    env2.assert(
                      scope,
                      INVALID_BLEND_COMBINATIONS + ".indexOf(" + srcRGB + '+", "+' + dstRGB + ") === -1 ",
                      "unallowed blending combination for (srcRGB, dstRGB)"
                    );
                  });
                  var SRC_RGB = scope.def(BLEND_FUNCS, "[", srcRGB, "]");
                  var SRC_ALPHA = scope.def(BLEND_FUNCS, "[", read("src", "Alpha"), "]");
                  var DST_RGB = scope.def(BLEND_FUNCS, "[", dstRGB, "]");
                  var DST_ALPHA = scope.def(BLEND_FUNCS, "[", read("dst", "Alpha"), "]");
                  return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA];
                }
              );
            case S_BLEND_EQUATION:
              return parseParam(
                function(value) {
                  if (typeof value === "string") {
                    check$1.commandParameter(value, blendEquations, "invalid " + prop, env.commandStr);
                    return [
                      blendEquations[value],
                      blendEquations[value]
                    ];
                  } else if (typeof value === "object") {
                    check$1.commandParameter(
                      value.rgb,
                      blendEquations,
                      prop + ".rgb",
                      env.commandStr
                    );
                    check$1.commandParameter(
                      value.alpha,
                      blendEquations,
                      prop + ".alpha",
                      env.commandStr
                    );
                    return [
                      blendEquations[value.rgb],
                      blendEquations[value.alpha]
                    ];
                  } else {
                    check$1.commandRaise("invalid blend.equation", env.commandStr);
                  }
                },
                function(env2, scope, value) {
                  var BLEND_EQUATIONS = env2.constants.blendEquations;
                  var RGB = scope.def();
                  var ALPHA = scope.def();
                  var ifte = env2.cond("typeof ", value, '==="string"');
                  check$1.optional(function() {
                    function checkProp(block, name, value2) {
                      env2.assert(
                        block,
                        value2 + " in " + BLEND_EQUATIONS,
                        "invalid " + name + ", must be one of " + Object.keys(blendEquations)
                      );
                    }
                    checkProp(ifte.then, prop, value);
                    env2.assert(
                      ifte.else,
                      value + "&&typeof " + value + '==="object"',
                      "invalid " + prop
                    );
                    checkProp(ifte.else, prop + ".rgb", value + ".rgb");
                    checkProp(ifte.else, prop + ".alpha", value + ".alpha");
                  });
                  ifte.then(
                    RGB,
                    "=",
                    ALPHA,
                    "=",
                    BLEND_EQUATIONS,
                    "[",
                    value,
                    "];"
                  );
                  ifte.else(
                    RGB,
                    "=",
                    BLEND_EQUATIONS,
                    "[",
                    value,
                    ".rgb];",
                    ALPHA,
                    "=",
                    BLEND_EQUATIONS,
                    "[",
                    value,
                    ".alpha];"
                  );
                  scope(ifte);
                  return [RGB, ALPHA];
                }
              );
            case S_BLEND_COLOR:
              return parseParam(
                function(value) {
                  check$1.command(
                    isArrayLike(value) && value.length === 4,
                    "blend.color must be a 4d array",
                    env.commandStr
                  );
                  return loop2(4, function(i) {
                    return +value[i];
                  });
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      env2.shared.isArrayLike + "(" + value + ")&&" + value + ".length===4",
                      "blend.color must be a 4d array"
                    );
                  });
                  return loop2(4, function(i) {
                    return scope.def("+", value, "[", i, "]");
                  });
                }
              );
            case S_STENCIL_MASK:
              return parseParam(
                function(value) {
                  check$1.commandType(value, "number", param, env.commandStr);
                  return value | 0;
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      "typeof " + value + '==="number"',
                      "invalid stencil.mask"
                    );
                  });
                  return scope.def(value, "|0");
                }
              );
            case S_STENCIL_FUNC:
              return parseParam(
                function(value) {
                  check$1.commandType(value, "object", param, env.commandStr);
                  var cmp = value.cmp || "keep";
                  var ref = value.ref || 0;
                  var mask = "mask" in value ? value.mask : -1;
                  check$1.commandParameter(cmp, compareFuncs, prop + ".cmp", env.commandStr);
                  check$1.commandType(ref, "number", prop + ".ref", env.commandStr);
                  check$1.commandType(mask, "number", prop + ".mask", env.commandStr);
                  return [
                    compareFuncs[cmp],
                    ref,
                    mask
                  ];
                },
                function(env2, scope, value) {
                  var COMPARE_FUNCS = env2.constants.compareFuncs;
                  check$1.optional(function() {
                    function assert2() {
                      env2.assert(
                        scope,
                        Array.prototype.join.call(arguments, ""),
                        "invalid stencil.func"
                      );
                    }
                    assert2(value + "&&typeof ", value, '==="object"');
                    assert2(
                      '!("cmp" in ',
                      value,
                      ")||(",
                      value,
                      ".cmp in ",
                      COMPARE_FUNCS,
                      ")"
                    );
                  });
                  var cmp = scope.def(
                    '"cmp" in ',
                    value,
                    "?",
                    COMPARE_FUNCS,
                    "[",
                    value,
                    ".cmp]",
                    ":",
                    GL_KEEP
                  );
                  var ref = scope.def(value, ".ref|0");
                  var mask = scope.def(
                    '"mask" in ',
                    value,
                    "?",
                    value,
                    ".mask|0:-1"
                  );
                  return [cmp, ref, mask];
                }
              );
            case S_STENCIL_OPFRONT:
            case S_STENCIL_OPBACK:
              return parseParam(
                function(value) {
                  check$1.commandType(value, "object", param, env.commandStr);
                  var fail = value.fail || "keep";
                  var zfail = value.zfail || "keep";
                  var zpass = value.zpass || "keep";
                  check$1.commandParameter(fail, stencilOps, prop + ".fail", env.commandStr);
                  check$1.commandParameter(zfail, stencilOps, prop + ".zfail", env.commandStr);
                  check$1.commandParameter(zpass, stencilOps, prop + ".zpass", env.commandStr);
                  return [
                    prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,
                    stencilOps[fail],
                    stencilOps[zfail],
                    stencilOps[zpass]
                  ];
                },
                function(env2, scope, value) {
                  var STENCIL_OPS = env2.constants.stencilOps;
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + "&&typeof " + value + '==="object"',
                      "invalid " + prop
                    );
                  });
                  function read(name) {
                    check$1.optional(function() {
                      env2.assert(
                        scope,
                        '!("' + name + '" in ' + value + ")||(" + value + "." + name + " in " + STENCIL_OPS + ")",
                        "invalid " + prop + "." + name + ", must be one of " + Object.keys(stencilOps)
                      );
                    });
                    return scope.def(
                      '"',
                      name,
                      '" in ',
                      value,
                      "?",
                      STENCIL_OPS,
                      "[",
                      value,
                      ".",
                      name,
                      "]:",
                      GL_KEEP
                    );
                  }
                  return [
                    prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT,
                    read("fail"),
                    read("zfail"),
                    read("zpass")
                  ];
                }
              );
            case S_POLYGON_OFFSET_OFFSET:
              return parseParam(
                function(value) {
                  check$1.commandType(value, "object", param, env.commandStr);
                  var factor = value.factor | 0;
                  var units = value.units | 0;
                  check$1.commandType(factor, "number", param + ".factor", env.commandStr);
                  check$1.commandType(units, "number", param + ".units", env.commandStr);
                  return [factor, units];
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + "&&typeof " + value + '==="object"',
                      "invalid " + prop
                    );
                  });
                  var FACTOR = scope.def(value, ".factor|0");
                  var UNITS = scope.def(value, ".units|0");
                  return [FACTOR, UNITS];
                }
              );
            case S_CULL_FACE:
              return parseParam(
                function(value) {
                  var face = 0;
                  if (value === "front") {
                    face = GL_FRONT;
                  } else if (value === "back") {
                    face = GL_BACK;
                  }
                  check$1.command(!!face, param, env.commandStr);
                  return face;
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + '==="front"||' + value + '==="back"',
                      "invalid cull.face"
                    );
                  });
                  return scope.def(value, '==="front"?', GL_FRONT, ":", GL_BACK);
                }
              );
            case S_LINE_WIDTH:
              return parseParam(
                function(value) {
                  check$1.command(
                    typeof value === "number" && value >= limits.lineWidthDims[0] && value <= limits.lineWidthDims[1],
                    "invalid line width, must be a positive number between " + limits.lineWidthDims[0] + " and " + limits.lineWidthDims[1],
                    env.commandStr
                  );
                  return value;
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      "typeof " + value + '==="number"&&' + value + ">=" + limits.lineWidthDims[0] + "&&" + value + "<=" + limits.lineWidthDims[1],
                      "invalid line width"
                    );
                  });
                  return value;
                }
              );
            case S_FRONT_FACE:
              return parseParam(
                function(value) {
                  check$1.commandParameter(value, orientationType, param, env.commandStr);
                  return orientationType[value];
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + '==="cw"||' + value + '==="ccw"',
                      "invalid frontFace, must be one of cw,ccw"
                    );
                  });
                  return scope.def(value + '==="cw"?' + GL_CW + ":" + GL_CCW);
                }
              );
            case S_COLOR_MASK:
              return parseParam(
                function(value) {
                  check$1.command(
                    isArrayLike(value) && value.length === 4,
                    "color.mask must be length 4 array",
                    env.commandStr
                  );
                  return value.map(function(v) {
                    return !!v;
                  });
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      env2.shared.isArrayLike + "(" + value + ")&&" + value + ".length===4",
                      "invalid color.mask"
                    );
                  });
                  return loop2(4, function(i) {
                    return "!!" + value + "[" + i + "]";
                  });
                }
              );
            case S_SAMPLE_COVERAGE:
              return parseParam(
                function(value) {
                  check$1.command(typeof value === "object" && value, param, env.commandStr);
                  var sampleValue = "value" in value ? value.value : 1;
                  var sampleInvert = !!value.invert;
                  check$1.command(
                    typeof sampleValue === "number" && sampleValue >= 0 && sampleValue <= 1,
                    "sample.coverage.value must be a number between 0 and 1",
                    env.commandStr
                  );
                  return [sampleValue, sampleInvert];
                },
                function(env2, scope, value) {
                  check$1.optional(function() {
                    env2.assert(
                      scope,
                      value + "&&typeof " + value + '==="object"',
                      "invalid sample.coverage"
                    );
                  });
                  var VALUE = scope.def(
                    '"value" in ',
                    value,
                    "?+",
                    value,
                    ".value:1"
                  );
                  var INVERT = scope.def("!!", value, ".invert");
                  return [VALUE, INVERT];
                }
              );
          }
        });
        return STATE;
      }
      function parseUniforms(uniforms, env) {
        var staticUniforms = uniforms.static;
        var dynamicUniforms = uniforms.dynamic;
        var UNIFORMS = {};
        Object.keys(staticUniforms).forEach(function(name) {
          var value = staticUniforms[name];
          var result;
          if (typeof value === "number" || typeof value === "boolean") {
            result = createStaticDecl(function() {
              return value;
            });
          } else if (typeof value === "function") {
            var reglType = value._reglType;
            if (reglType === "texture2d" || reglType === "textureCube") {
              result = createStaticDecl(function(env2) {
                return env2.link(value);
              });
            } else if (reglType === "framebuffer" || reglType === "framebufferCube") {
              check$1.command(
                value.color.length > 0,
                'missing color attachment for framebuffer sent to uniform "' + name + '"',
                env.commandStr
              );
              result = createStaticDecl(function(env2) {
                return env2.link(value.color[0]);
              });
            } else {
              check$1.commandRaise('invalid data for uniform "' + name + '"', env.commandStr);
            }
          } else if (isArrayLike(value)) {
            result = createStaticDecl(function(env2) {
              var ITEM = env2.global.def(
                "[",
                loop2(value.length, function(i) {
                  check$1.command(
                    typeof value[i] === "number" || typeof value[i] === "boolean",
                    "invalid uniform " + name,
                    env2.commandStr
                  );
                  return value[i];
                }),
                "]"
              );
              return ITEM;
            });
          } else {
            check$1.commandRaise('invalid or missing data for uniform "' + name + '"', env.commandStr);
          }
          result.value = value;
          UNIFORMS[name] = result;
        });
        Object.keys(dynamicUniforms).forEach(function(key) {
          var dyn = dynamicUniforms[key];
          UNIFORMS[key] = createDynamicDecl(dyn, function(env2, scope) {
            return env2.invoke(scope, dyn);
          });
        });
        return UNIFORMS;
      }
      function parseAttributes(attributes, env) {
        var staticAttributes = attributes.static;
        var dynamicAttributes = attributes.dynamic;
        var attributeDefs = {};
        Object.keys(staticAttributes).forEach(function(attribute) {
          var value = staticAttributes[attribute];
          var id = stringStore.id(attribute);
          var record = new AttributeRecord2();
          if (isBufferArgs(value)) {
            record.state = ATTRIB_STATE_POINTER;
            record.buffer = bufferState.getBuffer(
              bufferState.create(value, GL_ARRAY_BUFFER$2, false, true)
            );
            record.type = 0;
          } else {
            var buffer = bufferState.getBuffer(value);
            if (buffer) {
              record.state = ATTRIB_STATE_POINTER;
              record.buffer = buffer;
              record.type = 0;
            } else {
              check$1.command(
                typeof value === "object" && value,
                "invalid data for attribute " + attribute,
                env.commandStr
              );
              if ("constant" in value) {
                var constant = value.constant;
                record.buffer = "null";
                record.state = ATTRIB_STATE_CONSTANT;
                if (typeof constant === "number") {
                  record.x = constant;
                } else {
                  check$1.command(
                    isArrayLike(constant) && constant.length > 0 && constant.length <= 4,
                    "invalid constant for attribute " + attribute,
                    env.commandStr
                  );
                  CUTE_COMPONENTS.forEach(function(c, i) {
                    if (i < constant.length) {
                      record[c] = constant[i];
                    }
                  });
                }
              } else {
                if (isBufferArgs(value.buffer)) {
                  buffer = bufferState.getBuffer(
                    bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true)
                  );
                } else {
                  buffer = bufferState.getBuffer(value.buffer);
                }
                check$1.command(!!buffer, 'missing buffer for attribute "' + attribute + '"', env.commandStr);
                var offset = value.offset | 0;
                check$1.command(
                  offset >= 0,
                  'invalid offset for attribute "' + attribute + '"',
                  env.commandStr
                );
                var stride = value.stride | 0;
                check$1.command(
                  stride >= 0 && stride < 256,
                  'invalid stride for attribute "' + attribute + '", must be integer betweeen [0, 255]',
                  env.commandStr
                );
                var size = value.size | 0;
                check$1.command(
                  !("size" in value) || size > 0 && size <= 4,
                  'invalid size for attribute "' + attribute + '", must be 1,2,3,4',
                  env.commandStr
                );
                var normalized = !!value.normalized;
                var type = 0;
                if ("type" in value) {
                  check$1.commandParameter(
                    value.type,
                    glTypes,
                    "invalid type for attribute " + attribute,
                    env.commandStr
                  );
                  type = glTypes[value.type];
                }
                var divisor = value.divisor | 0;
                if ("divisor" in value) {
                  check$1.command(
                    divisor === 0 || extInstancing,
                    'cannot specify divisor for attribute "' + attribute + '", instancing not supported',
                    env.commandStr
                  );
                  check$1.command(
                    divisor >= 0,
                    'invalid divisor for attribute "' + attribute + '"',
                    env.commandStr
                  );
                }
                check$1.optional(function() {
                  var command = env.commandStr;
                  var VALID_KEYS = [
                    "buffer",
                    "offset",
                    "divisor",
                    "normalized",
                    "type",
                    "size",
                    "stride"
                  ];
                  Object.keys(value).forEach(function(prop) {
                    check$1.command(
                      VALID_KEYS.indexOf(prop) >= 0,
                      'unknown parameter "' + prop + '" for attribute pointer "' + attribute + '" (valid parameters are ' + VALID_KEYS + ")",
                      command
                    );
                  });
                });
                record.buffer = buffer;
                record.state = ATTRIB_STATE_POINTER;
                record.size = size;
                record.normalized = normalized;
                record.type = type || buffer.dtype;
                record.offset = offset;
                record.stride = stride;
                record.divisor = divisor;
              }
            }
          }
          attributeDefs[attribute] = createStaticDecl(function(env2, scope) {
            var cache2 = env2.attribCache;
            if (id in cache2) {
              return cache2[id];
            }
            var result = {
              isStream: false
            };
            Object.keys(record).forEach(function(key) {
              result[key] = record[key];
            });
            if (record.buffer) {
              result.buffer = env2.link(record.buffer);
              result.type = result.type || result.buffer + ".dtype";
            }
            cache2[id] = result;
            return result;
          });
        });
        Object.keys(dynamicAttributes).forEach(function(attribute) {
          var dyn = dynamicAttributes[attribute];
          function appendAttributeCode(env2, block) {
            var VALUE = env2.invoke(block, dyn);
            var shared = env2.shared;
            var constants = env2.constants;
            var IS_BUFFER_ARGS = shared.isBufferArgs;
            var BUFFER_STATE = shared.buffer;
            check$1.optional(function() {
              env2.assert(
                block,
                VALUE + "&&(typeof " + VALUE + '==="object"||typeof ' + VALUE + '==="function")&&(' + IS_BUFFER_ARGS + "(" + VALUE + ")||" + BUFFER_STATE + ".getBuffer(" + VALUE + ")||" + BUFFER_STATE + ".getBuffer(" + VALUE + ".buffer)||" + IS_BUFFER_ARGS + "(" + VALUE + '.buffer)||("constant" in ' + VALUE + "&&(typeof " + VALUE + '.constant==="number"||' + shared.isArrayLike + "(" + VALUE + ".constant))))",
                'invalid dynamic attribute "' + attribute + '"'
              );
            });
            var result = {
              isStream: block.def(false)
            };
            var defaultRecord = new AttributeRecord2();
            defaultRecord.state = ATTRIB_STATE_POINTER;
            Object.keys(defaultRecord).forEach(function(key) {
              result[key] = block.def("" + defaultRecord[key]);
            });
            var BUFFER = result.buffer;
            var TYPE = result.type;
            block(
              "if(",
              IS_BUFFER_ARGS,
              "(",
              VALUE,
              ")){",
              result.isStream,
              "=true;",
              BUFFER,
              "=",
              BUFFER_STATE,
              ".createStream(",
              GL_ARRAY_BUFFER$2,
              ",",
              VALUE,
              ");",
              TYPE,
              "=",
              BUFFER,
              ".dtype;",
              "}else{",
              BUFFER,
              "=",
              BUFFER_STATE,
              ".getBuffer(",
              VALUE,
              ");",
              "if(",
              BUFFER,
              "){",
              TYPE,
              "=",
              BUFFER,
              ".dtype;",
              '}else if("constant" in ',
              VALUE,
              "){",
              result.state,
              "=",
              ATTRIB_STATE_CONSTANT,
              ";",
              "if(typeof " + VALUE + '.constant === "number"){',
              result[CUTE_COMPONENTS[0]],
              "=",
              VALUE,
              ".constant;",
              CUTE_COMPONENTS.slice(1).map(function(n) {
                return result[n];
              }).join("="),
              "=0;",
              "}else{",
              CUTE_COMPONENTS.map(function(name, i) {
                return result[name] + "=" + VALUE + ".constant.length>" + i + "?" + VALUE + ".constant[" + i + "]:0;";
              }).join(""),
              "}}else{",
              "if(",
              IS_BUFFER_ARGS,
              "(",
              VALUE,
              ".buffer)){",
              BUFFER,
              "=",
              BUFFER_STATE,
              ".createStream(",
              GL_ARRAY_BUFFER$2,
              ",",
              VALUE,
              ".buffer);",
              "}else{",
              BUFFER,
              "=",
              BUFFER_STATE,
              ".getBuffer(",
              VALUE,
              ".buffer);",
              "}",
              TYPE,
              '="type" in ',
              VALUE,
              "?",
              constants.glTypes,
              "[",
              VALUE,
              ".type]:",
              BUFFER,
              ".dtype;",
              result.normalized,
              "=!!",
              VALUE,
              ".normalized;"
            );
            function emitReadRecord(name) {
              block(result[name], "=", VALUE, ".", name, "|0;");
            }
            emitReadRecord("size");
            emitReadRecord("offset");
            emitReadRecord("stride");
            emitReadRecord("divisor");
            block("}}");
            block.exit(
              "if(",
              result.isStream,
              "){",
              BUFFER_STATE,
              ".destroyStream(",
              BUFFER,
              ");",
              "}"
            );
            return result;
          }
          attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode);
        });
        return attributeDefs;
      }
      function parseVAO(options, env) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        if (S_VAO in staticOptions) {
          var vao = staticOptions[S_VAO];
          if (vao !== null && attributeState.getVAO(vao) === null) {
            vao = attributeState.createVAO(vao);
          }
          return createStaticDecl(function(env2) {
            return env2.link(attributeState.getVAO(vao));
          });
        } else if (S_VAO in dynamicOptions) {
          var dyn = dynamicOptions[S_VAO];
          return createDynamicDecl(dyn, function(env2, scope) {
            var vaoRef = env2.invoke(scope, dyn);
            return scope.def(env2.shared.vao + ".getVAO(" + vaoRef + ")");
          });
        }
        return null;
      }
      function parseContext(context) {
        var staticContext = context.static;
        var dynamicContext = context.dynamic;
        var result = {};
        Object.keys(staticContext).forEach(function(name) {
          var value = staticContext[name];
          result[name] = createStaticDecl(function(env, scope) {
            if (typeof value === "number" || typeof value === "boolean") {
              return "" + value;
            } else {
              return env.link(value);
            }
          });
        });
        Object.keys(dynamicContext).forEach(function(name) {
          var dyn = dynamicContext[name];
          result[name] = createDynamicDecl(dyn, function(env, scope) {
            return env.invoke(scope, dyn);
          });
        });
        return result;
      }
      function parseArguments(options, attributes, uniforms, context, env) {
        var staticOptions = options.static;
        var dynamicOptions = options.dynamic;
        check$1.optional(function() {
          var KEY_NAMES = [
            S_FRAMEBUFFER,
            S_VERT,
            S_FRAG,
            S_ELEMENTS,
            S_PRIMITIVE,
            S_OFFSET,
            S_COUNT,
            S_INSTANCES,
            S_PROFILE,
            S_VAO
          ].concat(GL_STATE_NAMES);
          function checkKeys(dict) {
            Object.keys(dict).forEach(function(key) {
              check$1.command(
                KEY_NAMES.indexOf(key) >= 0,
                'unknown parameter "' + key + '"',
                env.commandStr
              );
            });
          }
          checkKeys(staticOptions);
          checkKeys(dynamicOptions);
        });
        var attribLocations = parseAttribLocations(options, attributes);
        var framebuffer = parseFramebuffer(options);
        var viewportAndScissor = parseViewportScissor(options, framebuffer, env);
        var draw = parseDraw(options, env);
        var state = parseGLState(options, env);
        var shader = parseProgram(options, env, attribLocations);
        function copyBox(name) {
          var defn = viewportAndScissor[name];
          if (defn) {
            state[name] = defn;
          }
        }
        copyBox(S_VIEWPORT);
        copyBox(propName(S_SCISSOR_BOX));
        var dirty = Object.keys(state).length > 0;
        var result = {
          framebuffer,
          draw,
          shader,
          state,
          dirty,
          scopeVAO: null,
          drawVAO: null,
          useVAO: false,
          attributes: {}
        };
        result.profile = parseProfile(options);
        result.uniforms = parseUniforms(uniforms, env);
        result.drawVAO = result.scopeVAO = parseVAO(options);
        if (!result.drawVAO && shader.program && !attribLocations && extensions.angle_instanced_arrays) {
          var useVAO = true;
          var staticBindings = shader.program.attributes.map(function(attr) {
            var binding = attributes.static[attr];
            useVAO = useVAO && !!binding;
            return binding;
          });
          if (useVAO && staticBindings.length > 0) {
            var vao = attributeState.getVAO(attributeState.createVAO(staticBindings));
            result.drawVAO = new Declaration(null, null, null, function(env2, scope) {
              return env2.link(vao);
            });
            result.useVAO = true;
          }
        }
        if (attribLocations) {
          result.useVAO = true;
        } else {
          result.attributes = parseAttributes(attributes, env);
        }
        result.context = parseContext(context);
        return result;
      }
      function emitContext(env, scope, context) {
        var shared = env.shared;
        var CONTEXT = shared.context;
        var contextEnter = env.scope();
        Object.keys(context).forEach(function(name) {
          scope.save(CONTEXT, "." + name);
          var defn = context[name];
          var value = defn.append(env, scope);
          if (Array.isArray(value)) {
            contextEnter(CONTEXT, ".", name, "=[", value.join(), "];");
          } else {
            contextEnter(CONTEXT, ".", name, "=", value, ";");
          }
        });
        scope(contextEnter);
      }
      function emitPollFramebuffer(env, scope, framebuffer, skipCheck) {
        var shared = env.shared;
        var GL = shared.gl;
        var FRAMEBUFFER_STATE = shared.framebuffer;
        var EXT_DRAW_BUFFERS;
        if (extDrawBuffers) {
          EXT_DRAW_BUFFERS = scope.def(shared.extensions, ".webgl_draw_buffers");
        }
        var constants = env.constants;
        var DRAW_BUFFERS = constants.drawBuffer;
        var BACK_BUFFER = constants.backBuffer;
        var NEXT;
        if (framebuffer) {
          NEXT = framebuffer.append(env, scope);
        } else {
          NEXT = scope.def(FRAMEBUFFER_STATE, ".next");
        }
        if (!skipCheck) {
          scope("if(", NEXT, "!==", FRAMEBUFFER_STATE, ".cur){");
        }
        scope(
          "if(",
          NEXT,
          "){",
          GL,
          ".bindFramebuffer(",
          GL_FRAMEBUFFER$2,
          ",",
          NEXT,
          ".framebuffer);"
        );
        if (extDrawBuffers) {
          scope(
            EXT_DRAW_BUFFERS,
            ".drawBuffersWEBGL(",
            DRAW_BUFFERS,
            "[",
            NEXT,
            ".colorAttachments.length]);"
          );
        }
        scope(
          "}else{",
          GL,
          ".bindFramebuffer(",
          GL_FRAMEBUFFER$2,
          ",null);"
        );
        if (extDrawBuffers) {
          scope(EXT_DRAW_BUFFERS, ".drawBuffersWEBGL(", BACK_BUFFER, ");");
        }
        scope(
          "}",
          FRAMEBUFFER_STATE,
          ".cur=",
          NEXT,
          ";"
        );
        if (!skipCheck) {
          scope("}");
        }
      }
      function emitPollState(env, scope, args) {
        var shared = env.shared;
        var GL = shared.gl;
        var CURRENT_VARS = env.current;
        var NEXT_VARS = env.next;
        var CURRENT_STATE = shared.current;
        var NEXT_STATE = shared.next;
        var block = env.cond(CURRENT_STATE, ".dirty");
        GL_STATE_NAMES.forEach(function(prop) {
          var param = propName(prop);
          if (param in args.state) {
            return;
          }
          var NEXT, CURRENT;
          if (param in NEXT_VARS) {
            NEXT = NEXT_VARS[param];
            CURRENT = CURRENT_VARS[param];
            var parts = loop2(currentState[param].length, function(i) {
              return block.def(NEXT, "[", i, "]");
            });
            block(env.cond(parts.map(function(p, i) {
              return p + "!==" + CURRENT + "[" + i + "]";
            }).join("||")).then(
              GL,
              ".",
              GL_VARIABLES[param],
              "(",
              parts,
              ");",
              parts.map(function(p, i) {
                return CURRENT + "[" + i + "]=" + p;
              }).join(";"),
              ";"
            ));
          } else {
            NEXT = block.def(NEXT_STATE, ".", param);
            var ifte = env.cond(NEXT, "!==", CURRENT_STATE, ".", param);
            block(ifte);
            if (param in GL_FLAGS) {
              ifte(
                env.cond(NEXT).then(GL, ".enable(", GL_FLAGS[param], ");").else(GL, ".disable(", GL_FLAGS[param], ");"),
                CURRENT_STATE,
                ".",
                param,
                "=",
                NEXT,
                ";"
              );
            } else {
              ifte(
                GL,
                ".",
                GL_VARIABLES[param],
                "(",
                NEXT,
                ");",
                CURRENT_STATE,
                ".",
                param,
                "=",
                NEXT,
                ";"
              );
            }
          }
        });
        if (Object.keys(args.state).length === 0) {
          block(CURRENT_STATE, ".dirty=false;");
        }
        scope(block);
      }
      function emitSetOptions(env, scope, options, filter) {
        var shared = env.shared;
        var CURRENT_VARS = env.current;
        var CURRENT_STATE = shared.current;
        var GL = shared.gl;
        sortState(Object.keys(options)).forEach(function(param) {
          var defn = options[param];
          if (filter && !filter(defn)) {
            return;
          }
          var variable = defn.append(env, scope);
          if (GL_FLAGS[param]) {
            var flag = GL_FLAGS[param];
            if (isStatic(defn)) {
              if (variable) {
                scope(GL, ".enable(", flag, ");");
              } else {
                scope(GL, ".disable(", flag, ");");
              }
            } else {
              scope(env.cond(variable).then(GL, ".enable(", flag, ");").else(GL, ".disable(", flag, ");"));
            }
            scope(CURRENT_STATE, ".", param, "=", variable, ";");
          } else if (isArrayLike(variable)) {
            var CURRENT = CURRENT_VARS[param];
            scope(
              GL,
              ".",
              GL_VARIABLES[param],
              "(",
              variable,
              ");",
              variable.map(function(v, i) {
                return CURRENT + "[" + i + "]=" + v;
              }).join(";"),
              ";"
            );
          } else {
            scope(
              GL,
              ".",
              GL_VARIABLES[param],
              "(",
              variable,
              ");",
              CURRENT_STATE,
              ".",
              param,
              "=",
              variable,
              ";"
            );
          }
        });
      }
      function injectExtensions(env, scope) {
        if (extInstancing) {
          env.instancing = scope.def(
            env.shared.extensions,
            ".angle_instanced_arrays"
          );
        }
      }
      function emitProfile(env, scope, args, useScope, incrementCounter) {
        var shared = env.shared;
        var STATS = env.stats;
        var CURRENT_STATE = shared.current;
        var TIMER = shared.timer;
        var profileArg = args.profile;
        function perfCounter() {
          if (typeof performance === "undefined") {
            return "Date.now()";
          } else {
            return "performance.now()";
          }
        }
        var CPU_START, QUERY_COUNTER;
        function emitProfileStart(block) {
          CPU_START = scope.def();
          block(CPU_START, "=", perfCounter(), ";");
          if (typeof incrementCounter === "string") {
            block(STATS, ".count+=", incrementCounter, ";");
          } else {
            block(STATS, ".count++;");
          }
          if (timer) {
            if (useScope) {
              QUERY_COUNTER = scope.def();
              block(QUERY_COUNTER, "=", TIMER, ".getNumPendingQueries();");
            } else {
              block(TIMER, ".beginQuery(", STATS, ");");
            }
          }
        }
        function emitProfileEnd(block) {
          block(STATS, ".cpuTime+=", perfCounter(), "-", CPU_START, ";");
          if (timer) {
            if (useScope) {
              block(
                TIMER,
                ".pushScopeStats(",
                QUERY_COUNTER,
                ",",
                TIMER,
                ".getNumPendingQueries(),",
                STATS,
                ");"
              );
            } else {
              block(TIMER, ".endQuery();");
            }
          }
        }
        function scopeProfile(value) {
          var prev = scope.def(CURRENT_STATE, ".profile");
          scope(CURRENT_STATE, ".profile=", value, ";");
          scope.exit(CURRENT_STATE, ".profile=", prev, ";");
        }
        var USE_PROFILE;
        if (profileArg) {
          if (isStatic(profileArg)) {
            if (profileArg.enable) {
              emitProfileStart(scope);
              emitProfileEnd(scope.exit);
              scopeProfile("true");
            } else {
              scopeProfile("false");
            }
            return;
          }
          USE_PROFILE = profileArg.append(env, scope);
          scopeProfile(USE_PROFILE);
        } else {
          USE_PROFILE = scope.def(CURRENT_STATE, ".profile");
        }
        var start = env.block();
        emitProfileStart(start);
        scope("if(", USE_PROFILE, "){", start, "}");
        var end = env.block();
        emitProfileEnd(end);
        scope.exit("if(", USE_PROFILE, "){", end, "}");
      }
      function emitAttributes(env, scope, args, attributes, filter) {
        var shared = env.shared;
        function typeLength(x2) {
          switch (x2) {
            case GL_FLOAT_VEC2:
            case GL_INT_VEC2:
            case GL_BOOL_VEC2:
              return 2;
            case GL_FLOAT_VEC3:
            case GL_INT_VEC3:
            case GL_BOOL_VEC3:
              return 3;
            case GL_FLOAT_VEC4:
            case GL_INT_VEC4:
            case GL_BOOL_VEC4:
              return 4;
            default:
              return 1;
          }
        }
        function emitBindAttribute(ATTRIBUTE, size, record) {
          var GL = shared.gl;
          var LOCATION = scope.def(ATTRIBUTE, ".location");
          var BINDING = scope.def(shared.attributes, "[", LOCATION, "]");
          var STATE = record.state;
          var BUFFER = record.buffer;
          var CONST_COMPONENTS = [
            record.x,
            record.y,
            record.z,
            record.w
          ];
          var COMMON_KEYS = [
            "buffer",
            "normalized",
            "offset",
            "stride"
          ];
          function emitBuffer() {
            scope(
              "if(!",
              BINDING,
              ".buffer){",
              GL,
              ".enableVertexAttribArray(",
              LOCATION,
              ");}"
            );
            var TYPE = record.type;
            var SIZE;
            if (!record.size) {
              SIZE = size;
            } else {
              SIZE = scope.def(record.size, "||", size);
            }
            scope(
              "if(",
              BINDING,
              ".type!==",
              TYPE,
              "||",
              BINDING,
              ".size!==",
              SIZE,
              "||",
              COMMON_KEYS.map(function(key) {
                return BINDING + "." + key + "!==" + record[key];
              }).join("||"),
              "){",
              GL,
              ".bindBuffer(",
              GL_ARRAY_BUFFER$2,
              ",",
              BUFFER,
              ".buffer);",
              GL,
              ".vertexAttribPointer(",
              [
                LOCATION,
                SIZE,
                TYPE,
                record.normalized,
                record.stride,
                record.offset
              ],
              ");",
              BINDING,
              ".type=",
              TYPE,
              ";",
              BINDING,
              ".size=",
              SIZE,
              ";",
              COMMON_KEYS.map(function(key) {
                return BINDING + "." + key + "=" + record[key] + ";";
              }).join(""),
              "}"
            );
            if (extInstancing) {
              var DIVISOR = record.divisor;
              scope(
                "if(",
                BINDING,
                ".divisor!==",
                DIVISOR,
                "){",
                env.instancing,
                ".vertexAttribDivisorANGLE(",
                [LOCATION, DIVISOR],
                ");",
                BINDING,
                ".divisor=",
                DIVISOR,
                ";}"
              );
            }
          }
          function emitConstant() {
            scope(
              "if(",
              BINDING,
              ".buffer){",
              GL,
              ".disableVertexAttribArray(",
              LOCATION,
              ");",
              BINDING,
              ".buffer=null;",
              "}if(",
              CUTE_COMPONENTS.map(function(c, i) {
                return BINDING + "." + c + "!==" + CONST_COMPONENTS[i];
              }).join("||"),
              "){",
              GL,
              ".vertexAttrib4f(",
              LOCATION,
              ",",
              CONST_COMPONENTS,
              ");",
              CUTE_COMPONENTS.map(function(c, i) {
                return BINDING + "." + c + "=" + CONST_COMPONENTS[i] + ";";
              }).join(""),
              "}"
            );
          }
          if (STATE === ATTRIB_STATE_POINTER) {
            emitBuffer();
          } else if (STATE === ATTRIB_STATE_CONSTANT) {
            emitConstant();
          } else {
            scope("if(", STATE, "===", ATTRIB_STATE_POINTER, "){");
            emitBuffer();
            scope("}else{");
            emitConstant();
            scope("}");
          }
        }
        attributes.forEach(function(attribute) {
          var name = attribute.name;
          var arg = args.attributes[name];
          var record;
          if (arg) {
            if (!filter(arg)) {
              return;
            }
            record = arg.append(env, scope);
          } else {
            if (!filter(SCOPE_DECL)) {
              return;
            }
            var scopeAttrib = env.scopeAttrib(name);
            check$1.optional(function() {
              env.assert(
                scope,
                scopeAttrib + ".state",
                "missing attribute " + name
              );
            });
            record = {};
            Object.keys(new AttributeRecord2()).forEach(function(key) {
              record[key] = scope.def(scopeAttrib, ".", key);
            });
          }
          emitBindAttribute(
            env.link(attribute),
            typeLength(attribute.info.type),
            record
          );
        });
      }
      function emitUniforms(env, scope, args, uniforms, filter) {
        var shared = env.shared;
        var GL = shared.gl;
        var infix;
        for (var i = 0; i < uniforms.length; ++i) {
          var uniform = uniforms[i];
          var name = uniform.name;
          var type = uniform.info.type;
          var arg = args.uniforms[name];
          var UNIFORM = env.link(uniform);
          var LOCATION = UNIFORM + ".location";
          var VALUE;
          if (arg) {
            if (!filter(arg)) {
              continue;
            }
            if (isStatic(arg)) {
              var value = arg.value;
              check$1.command(
                value !== null && typeof value !== "undefined",
                'missing uniform "' + name + '"',
                env.commandStr
              );
              if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {
                check$1.command(
                  typeof value === "function" && (type === GL_SAMPLER_2D && (value._reglType === "texture2d" || value._reglType === "framebuffer") || type === GL_SAMPLER_CUBE && (value._reglType === "textureCube" || value._reglType === "framebufferCube")),
                  "invalid texture for uniform " + name,
                  env.commandStr
                );
                var TEX_VALUE = env.link(value._texture || value.color[0]._texture);
                scope(GL, ".uniform1i(", LOCATION, ",", TEX_VALUE + ".bind());");
                scope.exit(TEX_VALUE, ".unbind();");
              } else if (type === GL_FLOAT_MAT2 || type === GL_FLOAT_MAT3 || type === GL_FLOAT_MAT4) {
                check$1.optional(function() {
                  check$1.command(
                    isArrayLike(value),
                    "invalid matrix for uniform " + name,
                    env.commandStr
                  );
                  check$1.command(
                    type === GL_FLOAT_MAT2 && value.length === 4 || type === GL_FLOAT_MAT3 && value.length === 9 || type === GL_FLOAT_MAT4 && value.length === 16,
                    "invalid length for matrix uniform " + name,
                    env.commandStr
                  );
                });
                var MAT_VALUE = env.global.def("new Float32Array([" + Array.prototype.slice.call(value) + "])");
                var dim = 2;
                if (type === GL_FLOAT_MAT3) {
                  dim = 3;
                } else if (type === GL_FLOAT_MAT4) {
                  dim = 4;
                }
                scope(
                  GL,
                  ".uniformMatrix",
                  dim,
                  "fv(",
                  LOCATION,
                  ",false,",
                  MAT_VALUE,
                  ");"
                );
              } else {
                switch (type) {
                  case GL_FLOAT$8:
                    check$1.commandType(value, "number", "uniform " + name, env.commandStr);
                    infix = "1f";
                    break;
                  case GL_FLOAT_VEC2:
                    check$1.command(
                      isArrayLike(value) && value.length === 2,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "2f";
                    break;
                  case GL_FLOAT_VEC3:
                    check$1.command(
                      isArrayLike(value) && value.length === 3,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "3f";
                    break;
                  case GL_FLOAT_VEC4:
                    check$1.command(
                      isArrayLike(value) && value.length === 4,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "4f";
                    break;
                  case GL_BOOL:
                    check$1.commandType(value, "boolean", "uniform " + name, env.commandStr);
                    infix = "1i";
                    break;
                  case GL_INT$3:
                    check$1.commandType(value, "number", "uniform " + name, env.commandStr);
                    infix = "1i";
                    break;
                  case GL_BOOL_VEC2:
                    check$1.command(
                      isArrayLike(value) && value.length === 2,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "2i";
                    break;
                  case GL_INT_VEC2:
                    check$1.command(
                      isArrayLike(value) && value.length === 2,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "2i";
                    break;
                  case GL_BOOL_VEC3:
                    check$1.command(
                      isArrayLike(value) && value.length === 3,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "3i";
                    break;
                  case GL_INT_VEC3:
                    check$1.command(
                      isArrayLike(value) && value.length === 3,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "3i";
                    break;
                  case GL_BOOL_VEC4:
                    check$1.command(
                      isArrayLike(value) && value.length === 4,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "4i";
                    break;
                  case GL_INT_VEC4:
                    check$1.command(
                      isArrayLike(value) && value.length === 4,
                      "uniform " + name,
                      env.commandStr
                    );
                    infix = "4i";
                    break;
                }
                scope(
                  GL,
                  ".uniform",
                  infix,
                  "(",
                  LOCATION,
                  ",",
                  isArrayLike(value) ? Array.prototype.slice.call(value) : value,
                  ");"
                );
              }
              continue;
            } else {
              VALUE = arg.append(env, scope);
            }
          } else {
            if (!filter(SCOPE_DECL)) {
              continue;
            }
            VALUE = scope.def(shared.uniforms, "[", stringStore.id(name), "]");
          }
          if (type === GL_SAMPLER_2D) {
            check$1(!Array.isArray(VALUE), "must specify a scalar prop for textures");
            scope(
              "if(",
              VALUE,
              "&&",
              VALUE,
              '._reglType==="framebuffer"){',
              VALUE,
              "=",
              VALUE,
              ".color[0];",
              "}"
            );
          } else if (type === GL_SAMPLER_CUBE) {
            check$1(!Array.isArray(VALUE), "must specify a scalar prop for cube maps");
            scope(
              "if(",
              VALUE,
              "&&",
              VALUE,
              '._reglType==="framebufferCube"){',
              VALUE,
              "=",
              VALUE,
              ".color[0];",
              "}"
            );
          }
          check$1.optional(function() {
            function emitCheck(pred, message) {
              env.assert(
                scope,
                pred,
                'bad data or missing for uniform "' + name + '".  ' + message
              );
            }
            function checkType(type2) {
              check$1(!Array.isArray(VALUE), "must not specify an array type for uniform");
              emitCheck(
                "typeof " + VALUE + '==="' + type2 + '"',
                "invalid type, expected " + type2
              );
            }
            function checkVector(n, type2) {
              if (Array.isArray(VALUE)) {
                check$1(VALUE.length === n, "must have length " + n);
              } else {
                emitCheck(
                  shared.isArrayLike + "(" + VALUE + ")&&" + VALUE + ".length===" + n,
                  "invalid vector, should have length " + n,
                  env.commandStr
                );
              }
            }
            function checkTexture(target) {
              check$1(!Array.isArray(VALUE), "must not specify a value type");
              emitCheck(
                "typeof " + VALUE + '==="function"&&' + VALUE + '._reglType==="texture' + (target === GL_TEXTURE_2D$3 ? "2d" : "Cube") + '"',
                "invalid texture type",
                env.commandStr
              );
            }
            switch (type) {
              case GL_INT$3:
                checkType("number");
                break;
              case GL_INT_VEC2:
                checkVector(2);
                break;
              case GL_INT_VEC3:
                checkVector(3);
                break;
              case GL_INT_VEC4:
                checkVector(4);
                break;
              case GL_FLOAT$8:
                checkType("number");
                break;
              case GL_FLOAT_VEC2:
                checkVector(2);
                break;
              case GL_FLOAT_VEC3:
                checkVector(3);
                break;
              case GL_FLOAT_VEC4:
                checkVector(4);
                break;
              case GL_BOOL:
                checkType("boolean");
                break;
              case GL_BOOL_VEC2:
                checkVector(2);
                break;
              case GL_BOOL_VEC3:
                checkVector(3);
                break;
              case GL_BOOL_VEC4:
                checkVector(4);
                break;
              case GL_FLOAT_MAT2:
                checkVector(4);
                break;
              case GL_FLOAT_MAT3:
                checkVector(9);
                break;
              case GL_FLOAT_MAT4:
                checkVector(16);
                break;
              case GL_SAMPLER_2D:
                checkTexture(GL_TEXTURE_2D$3);
                break;
              case GL_SAMPLER_CUBE:
                checkTexture(GL_TEXTURE_CUBE_MAP$2);
                break;
            }
          });
          var unroll = 1;
          switch (type) {
            case GL_SAMPLER_2D:
            case GL_SAMPLER_CUBE:
              var TEX = scope.def(VALUE, "._texture");
              scope(GL, ".uniform1i(", LOCATION, ",", TEX, ".bind());");
              scope.exit(TEX, ".unbind();");
              continue;
            case GL_INT$3:
            case GL_BOOL:
              infix = "1i";
              break;
            case GL_INT_VEC2:
            case GL_BOOL_VEC2:
              infix = "2i";
              unroll = 2;
              break;
            case GL_INT_VEC3:
            case GL_BOOL_VEC3:
              infix = "3i";
              unroll = 3;
              break;
            case GL_INT_VEC4:
            case GL_BOOL_VEC4:
              infix = "4i";
              unroll = 4;
              break;
            case GL_FLOAT$8:
              infix = "1f";
              break;
            case GL_FLOAT_VEC2:
              infix = "2f";
              unroll = 2;
              break;
            case GL_FLOAT_VEC3:
              infix = "3f";
              unroll = 3;
              break;
            case GL_FLOAT_VEC4:
              infix = "4f";
              unroll = 4;
              break;
            case GL_FLOAT_MAT2:
              infix = "Matrix2fv";
              break;
            case GL_FLOAT_MAT3:
              infix = "Matrix3fv";
              break;
            case GL_FLOAT_MAT4:
              infix = "Matrix4fv";
              break;
          }
          scope(GL, ".uniform", infix, "(", LOCATION, ",");
          if (infix.charAt(0) === "M") {
            var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2);
            var STORAGE = env.global.def("new Float32Array(", matSize, ")");
            if (Array.isArray(VALUE)) {
              scope(
                "false,(",
                loop2(matSize, function(i2) {
                  return STORAGE + "[" + i2 + "]=" + VALUE[i2];
                }),
                ",",
                STORAGE,
                ")"
              );
            } else {
              scope(
                "false,(Array.isArray(",
                VALUE,
                ")||",
                VALUE,
                " instanceof Float32Array)?",
                VALUE,
                ":(",
                loop2(matSize, function(i2) {
                  return STORAGE + "[" + i2 + "]=" + VALUE + "[" + i2 + "]";
                }),
                ",",
                STORAGE,
                ")"
              );
            }
          } else if (unroll > 1) {
            scope(loop2(unroll, function(i2) {
              return Array.isArray(VALUE) ? VALUE[i2] : VALUE + "[" + i2 + "]";
            }));
          } else {
            check$1(!Array.isArray(VALUE), "uniform value must not be an array");
            scope(VALUE);
          }
          scope(");");
        }
      }
      function emitDraw(env, outer, inner, args) {
        var shared = env.shared;
        var GL = shared.gl;
        var DRAW_STATE = shared.draw;
        var drawOptions = args.draw;
        function emitElements() {
          var defn = drawOptions.elements;
          var ELEMENTS2;
          var scope = outer;
          if (defn) {
            if (defn.contextDep && args.contextDynamic || defn.propDep) {
              scope = inner;
            }
            ELEMENTS2 = defn.append(env, scope);
          } else {
            ELEMENTS2 = scope.def(DRAW_STATE, ".", S_ELEMENTS);
          }
          if (ELEMENTS2) {
            scope(
              "if(" + ELEMENTS2 + ")" + GL + ".bindBuffer(" + GL_ELEMENT_ARRAY_BUFFER$1 + "," + ELEMENTS2 + ".buffer.buffer);"
            );
          }
          return ELEMENTS2;
        }
        function emitCount() {
          var defn = drawOptions.count;
          var COUNT2;
          var scope = outer;
          if (defn) {
            if (defn.contextDep && args.contextDynamic || defn.propDep) {
              scope = inner;
            }
            COUNT2 = defn.append(env, scope);
            check$1.optional(function() {
              if (defn.MISSING) {
                env.assert(outer, "false", "missing vertex count");
              }
              if (defn.DYNAMIC) {
                env.assert(scope, COUNT2 + ">=0", "missing vertex count");
              }
            });
          } else {
            COUNT2 = scope.def(DRAW_STATE, ".", S_COUNT);
            check$1.optional(function() {
              env.assert(scope, COUNT2 + ">=0", "missing vertex count");
            });
          }
          return COUNT2;
        }
        var ELEMENTS = emitElements();
        function emitValue(name) {
          var defn = drawOptions[name];
          if (defn) {
            if (defn.contextDep && args.contextDynamic || defn.propDep) {
              return defn.append(env, inner);
            } else {
              return defn.append(env, outer);
            }
          } else {
            return outer.def(DRAW_STATE, ".", name);
          }
        }
        var PRIMITIVE = emitValue(S_PRIMITIVE);
        var OFFSET = emitValue(S_OFFSET);
        var COUNT = emitCount();
        if (typeof COUNT === "number") {
          if (COUNT === 0) {
            return;
          }
        } else {
          inner("if(", COUNT, "){");
          inner.exit("}");
        }
        var INSTANCES, EXT_INSTANCING;
        if (extInstancing) {
          INSTANCES = emitValue(S_INSTANCES);
          EXT_INSTANCING = env.instancing;
        }
        var ELEMENT_TYPE = ELEMENTS + ".type";
        var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements);
        function emitInstancing() {
          function drawElements() {
            inner(EXT_INSTANCING, ".drawElementsInstancedANGLE(", [
              PRIMITIVE,
              COUNT,
              ELEMENT_TYPE,
              OFFSET + "<<((" + ELEMENT_TYPE + "-" + GL_UNSIGNED_BYTE$8 + ")>>1)",
              INSTANCES
            ], ");");
          }
          function drawArrays() {
            inner(
              EXT_INSTANCING,
              ".drawArraysInstancedANGLE(",
              [PRIMITIVE, OFFSET, COUNT, INSTANCES],
              ");"
            );
          }
          if (ELEMENTS) {
            if (!elementsStatic) {
              inner("if(", ELEMENTS, "){");
              drawElements();
              inner("}else{");
              drawArrays();
              inner("}");
            } else {
              drawElements();
            }
          } else {
            drawArrays();
          }
        }
        function emitRegular() {
          function drawElements() {
            inner(GL + ".drawElements(" + [
              PRIMITIVE,
              COUNT,
              ELEMENT_TYPE,
              OFFSET + "<<((" + ELEMENT_TYPE + "-" + GL_UNSIGNED_BYTE$8 + ")>>1)"
            ] + ");");
          }
          function drawArrays() {
            inner(GL + ".drawArrays(" + [PRIMITIVE, OFFSET, COUNT] + ");");
          }
          if (ELEMENTS) {
            if (!elementsStatic) {
              inner("if(", ELEMENTS, "){");
              drawElements();
              inner("}else{");
              drawArrays();
              inner("}");
            } else {
              drawElements();
            }
          } else {
            drawArrays();
          }
        }
        if (extInstancing && (typeof INSTANCES !== "number" || INSTANCES >= 0)) {
          if (typeof INSTANCES === "string") {
            inner("if(", INSTANCES, ">0){");
            emitInstancing();
            inner("}else if(", INSTANCES, "<0){");
            emitRegular();
            inner("}");
          } else {
            emitInstancing();
          }
        } else {
          emitRegular();
        }
      }
      function createBody(emitBody, parentEnv, args, program, count) {
        var env = createREGLEnvironment();
        var scope = env.proc("body", count);
        check$1.optional(function() {
          env.commandStr = parentEnv.commandStr;
          env.command = env.link(parentEnv.commandStr);
        });
        if (extInstancing) {
          env.instancing = scope.def(
            env.shared.extensions,
            ".angle_instanced_arrays"
          );
        }
        emitBody(env, scope, args, program);
        return env.compile().body;
      }
      function emitDrawBody(env, draw, args, program) {
        injectExtensions(env, draw);
        if (args.useVAO) {
          if (args.drawVAO) {
            draw(env.shared.vao, ".setVAO(", args.drawVAO.append(env, draw), ");");
          } else {
            draw(env.shared.vao, ".setVAO(", env.shared.vao, ".targetVAO);");
          }
        } else {
          draw(env.shared.vao, ".setVAO(null);");
          emitAttributes(env, draw, args, program.attributes, function() {
            return true;
          });
        }
        emitUniforms(env, draw, args, program.uniforms, function() {
          return true;
        });
        emitDraw(env, draw, draw, args);
      }
      function emitDrawProc(env, args) {
        var draw = env.proc("draw", 1);
        injectExtensions(env, draw);
        emitContext(env, draw, args.context);
        emitPollFramebuffer(env, draw, args.framebuffer);
        emitPollState(env, draw, args);
        emitSetOptions(env, draw, args.state);
        emitProfile(env, draw, args, false, true);
        var program = args.shader.progVar.append(env, draw);
        draw(env.shared.gl, ".useProgram(", program, ".program);");
        if (args.shader.program) {
          emitDrawBody(env, draw, args, args.shader.program);
        } else {
          draw(env.shared.vao, ".setVAO(null);");
          var drawCache = env.global.def("{}");
          var PROG_ID = draw.def(program, ".id");
          var CACHED_PROC = draw.def(drawCache, "[", PROG_ID, "]");
          draw(
            env.cond(CACHED_PROC).then(CACHED_PROC, ".call(this,a0);").else(
              CACHED_PROC,
              "=",
              drawCache,
              "[",
              PROG_ID,
              "]=",
              env.link(function(program2) {
                return createBody(emitDrawBody, env, args, program2, 1);
              }),
              "(",
              program,
              ");",
              CACHED_PROC,
              ".call(this,a0);"
            )
          );
        }
        if (Object.keys(args.state).length > 0) {
          draw(env.shared.current, ".dirty=true;");
        }
      }
      function emitBatchDynamicShaderBody(env, scope, args, program) {
        env.batchId = "a1";
        injectExtensions(env, scope);
        function all() {
          return true;
        }
        emitAttributes(env, scope, args, program.attributes, all);
        emitUniforms(env, scope, args, program.uniforms, all);
        emitDraw(env, scope, scope, args);
      }
      function emitBatchBody(env, scope, args, program) {
        injectExtensions(env, scope);
        var contextDynamic = args.contextDep;
        var BATCH_ID = scope.def();
        var PROP_LIST = "a0";
        var NUM_PROPS = "a1";
        var PROPS = scope.def();
        env.shared.props = PROPS;
        env.batchId = BATCH_ID;
        var outer = env.scope();
        var inner = env.scope();
        scope(
          outer.entry,
          "for(",
          BATCH_ID,
          "=0;",
          BATCH_ID,
          "<",
          NUM_PROPS,
          ";++",
          BATCH_ID,
          "){",
          PROPS,
          "=",
          PROP_LIST,
          "[",
          BATCH_ID,
          "];",
          inner,
          "}",
          outer.exit
        );
        function isInnerDefn(defn) {
          return defn.contextDep && contextDynamic || defn.propDep;
        }
        function isOuterDefn(defn) {
          return !isInnerDefn(defn);
        }
        if (args.needsContext) {
          emitContext(env, inner, args.context);
        }
        if (args.needsFramebuffer) {
          emitPollFramebuffer(env, inner, args.framebuffer);
        }
        emitSetOptions(env, inner, args.state, isInnerDefn);
        if (args.profile && isInnerDefn(args.profile)) {
          emitProfile(env, inner, args, false, true);
        }
        if (!program) {
          var progCache = env.global.def("{}");
          var PROGRAM = args.shader.progVar.append(env, inner);
          var PROG_ID = inner.def(PROGRAM, ".id");
          var CACHED_PROC = inner.def(progCache, "[", PROG_ID, "]");
          inner(
            env.shared.gl,
            ".useProgram(",
            PROGRAM,
            ".program);",
            "if(!",
            CACHED_PROC,
            "){",
            CACHED_PROC,
            "=",
            progCache,
            "[",
            PROG_ID,
            "]=",
            env.link(function(program2) {
              return createBody(
                emitBatchDynamicShaderBody,
                env,
                args,
                program2,
                2
              );
            }),
            "(",
            PROGRAM,
            ");}",
            CACHED_PROC,
            ".call(this,a0[",
            BATCH_ID,
            "],",
            BATCH_ID,
            ");"
          );
        } else {
          if (args.useVAO) {
            if (args.drawVAO) {
              if (isInnerDefn(args.drawVAO)) {
                inner(env.shared.vao, ".setVAO(", args.drawVAO.append(env, inner), ");");
              } else {
                outer(env.shared.vao, ".setVAO(", args.drawVAO.append(env, outer), ");");
              }
            } else {
              outer(env.shared.vao, ".setVAO(", env.shared.vao, ".targetVAO);");
            }
          } else {
            outer(env.shared.vao, ".setVAO(null);");
            emitAttributes(env, outer, args, program.attributes, isOuterDefn);
            emitAttributes(env, inner, args, program.attributes, isInnerDefn);
          }
          emitUniforms(env, outer, args, program.uniforms, isOuterDefn);
          emitUniforms(env, inner, args, program.uniforms, isInnerDefn);
          emitDraw(env, outer, inner, args);
        }
      }
      function emitBatchProc(env, args) {
        var batch = env.proc("batch", 2);
        env.batchId = "0";
        injectExtensions(env, batch);
        var contextDynamic = false;
        var needsContext = true;
        Object.keys(args.context).forEach(function(name) {
          contextDynamic = contextDynamic || args.context[name].propDep;
        });
        if (!contextDynamic) {
          emitContext(env, batch, args.context);
          needsContext = false;
        }
        var framebuffer = args.framebuffer;
        var needsFramebuffer = false;
        if (framebuffer) {
          if (framebuffer.propDep) {
            contextDynamic = needsFramebuffer = true;
          } else if (framebuffer.contextDep && contextDynamic) {
            needsFramebuffer = true;
          }
          if (!needsFramebuffer) {
            emitPollFramebuffer(env, batch, framebuffer);
          }
        } else {
          emitPollFramebuffer(env, batch, null);
        }
        if (args.state.viewport && args.state.viewport.propDep) {
          contextDynamic = true;
        }
        function isInnerDefn(defn) {
          return defn.contextDep && contextDynamic || defn.propDep;
        }
        emitPollState(env, batch, args);
        emitSetOptions(env, batch, args.state, function(defn) {
          return !isInnerDefn(defn);
        });
        if (!args.profile || !isInnerDefn(args.profile)) {
          emitProfile(env, batch, args, false, "a1");
        }
        args.contextDep = contextDynamic;
        args.needsContext = needsContext;
        args.needsFramebuffer = needsFramebuffer;
        var progDefn = args.shader.progVar;
        if (progDefn.contextDep && contextDynamic || progDefn.propDep) {
          emitBatchBody(
            env,
            batch,
            args,
            null
          );
        } else {
          var PROGRAM = progDefn.append(env, batch);
          batch(env.shared.gl, ".useProgram(", PROGRAM, ".program);");
          if (args.shader.program) {
            emitBatchBody(
              env,
              batch,
              args,
              args.shader.program
            );
          } else {
            batch(env.shared.vao, ".setVAO(null);");
            var batchCache = env.global.def("{}");
            var PROG_ID = batch.def(PROGRAM, ".id");
            var CACHED_PROC = batch.def(batchCache, "[", PROG_ID, "]");
            batch(
              env.cond(CACHED_PROC).then(CACHED_PROC, ".call(this,a0,a1);").else(
                CACHED_PROC,
                "=",
                batchCache,
                "[",
                PROG_ID,
                "]=",
                env.link(function(program) {
                  return createBody(emitBatchBody, env, args, program, 2);
                }),
                "(",
                PROGRAM,
                ");",
                CACHED_PROC,
                ".call(this,a0,a1);"
              )
            );
          }
        }
        if (Object.keys(args.state).length > 0) {
          batch(env.shared.current, ".dirty=true;");
        }
      }
      function emitScopeProc(env, args) {
        var scope = env.proc("scope", 3);
        env.batchId = "a2";
        var shared = env.shared;
        var CURRENT_STATE = shared.current;
        emitContext(env, scope, args.context);
        if (args.framebuffer) {
          args.framebuffer.append(env, scope);
        }
        sortState(Object.keys(args.state)).forEach(function(name) {
          var defn = args.state[name];
          var value = defn.append(env, scope);
          if (isArrayLike(value)) {
            value.forEach(function(v, i) {
              scope.set(env.next[name], "[" + i + "]", v);
            });
          } else {
            scope.set(shared.next, "." + name, value);
          }
        });
        emitProfile(env, scope, args, true, true);
        [S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(
          function(opt) {
            var variable = args.draw[opt];
            if (!variable) {
              return;
            }
            scope.set(shared.draw, "." + opt, "" + variable.append(env, scope));
          }
        );
        Object.keys(args.uniforms).forEach(function(opt) {
          var value = args.uniforms[opt].append(env, scope);
          if (Array.isArray(value)) {
            value = "[" + value.join() + "]";
          }
          scope.set(
            shared.uniforms,
            "[" + stringStore.id(opt) + "]",
            value
          );
        });
        Object.keys(args.attributes).forEach(function(name) {
          var record = args.attributes[name].append(env, scope);
          var scopeAttrib = env.scopeAttrib(name);
          Object.keys(new AttributeRecord2()).forEach(function(prop) {
            scope.set(scopeAttrib, "." + prop, record[prop]);
          });
        });
        if (args.scopeVAO) {
          scope.set(shared.vao, ".targetVAO", args.scopeVAO.append(env, scope));
        }
        function saveShader(name) {
          var shader = args.shader[name];
          if (shader) {
            scope.set(shared.shader, "." + name, shader.append(env, scope));
          }
        }
        saveShader(S_VERT);
        saveShader(S_FRAG);
        if (Object.keys(args.state).length > 0) {
          scope(CURRENT_STATE, ".dirty=true;");
          scope.exit(CURRENT_STATE, ".dirty=true;");
        }
        scope("a1(", env.shared.context, ",a0,", env.batchId, ");");
      }
      function isDynamicObject(object) {
        if (typeof object !== "object" || isArrayLike(object)) {
          return;
        }
        var props = Object.keys(object);
        for (var i = 0; i < props.length; ++i) {
          if (dynamic.isDynamic(object[props[i]])) {
            return true;
          }
        }
        return false;
      }
      function splatObject(env, options, name) {
        var object = options.static[name];
        if (!object || !isDynamicObject(object)) {
          return;
        }
        var globals = env.global;
        var keys = Object.keys(object);
        var thisDep = false;
        var contextDep = false;
        var propDep = false;
        var objectRef = env.global.def("{}");
        keys.forEach(function(key) {
          var value = object[key];
          if (dynamic.isDynamic(value)) {
            if (typeof value === "function") {
              value = object[key] = dynamic.unbox(value);
            }
            var deps = createDynamicDecl(value, null);
            thisDep = thisDep || deps.thisDep;
            propDep = propDep || deps.propDep;
            contextDep = contextDep || deps.contextDep;
          } else {
            globals(objectRef, ".", key, "=");
            switch (typeof value) {
              case "number":
                globals(value);
                break;
              case "string":
                globals('"', value, '"');
                break;
              case "object":
                if (Array.isArray(value)) {
                  globals("[", value.join(), "]");
                }
                break;
              default:
                globals(env.link(value));
                break;
            }
            globals(";");
          }
        });
        function appendBlock(env2, block) {
          keys.forEach(function(key) {
            var value = object[key];
            if (!dynamic.isDynamic(value)) {
              return;
            }
            var ref = env2.invoke(block, value);
            block(objectRef, ".", key, "=", ref, ";");
          });
        }
        options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {
          thisDep,
          contextDep,
          propDep,
          ref: objectRef,
          append: appendBlock
        });
        delete options.static[name];
      }
      function compileCommand(options, attributes, uniforms, context, stats2) {
        var env = createREGLEnvironment();
        env.stats = env.link(stats2);
        Object.keys(attributes.static).forEach(function(key) {
          splatObject(env, attributes, key);
        });
        NESTED_OPTIONS.forEach(function(name) {
          splatObject(env, options, name);
        });
        var args = parseArguments(options, attributes, uniforms, context, env);
        emitDrawProc(env, args);
        emitScopeProc(env, args);
        emitBatchProc(env, args);
        return extend(env.compile(), {
          destroy: function() {
            args.shader.program.destroy();
          }
        });
      }
      return {
        next: nextState,
        current: currentState,
        procs: function() {
          var env = createREGLEnvironment();
          var poll = env.proc("poll");
          var refresh = env.proc("refresh");
          var common = env.block();
          poll(common);
          refresh(common);
          var shared = env.shared;
          var GL = shared.gl;
          var NEXT_STATE = shared.next;
          var CURRENT_STATE = shared.current;
          common(CURRENT_STATE, ".dirty=false;");
          emitPollFramebuffer(env, poll);
          emitPollFramebuffer(env, refresh, null, true);
          var INSTANCING;
          if (extInstancing) {
            INSTANCING = env.link(extInstancing);
          }
          if (extensions.oes_vertex_array_object) {
            refresh(env.link(extensions.oes_vertex_array_object), ".bindVertexArrayOES(null);");
          }
          for (var i = 0; i < limits.maxAttributes; ++i) {
            var BINDING = refresh.def(shared.attributes, "[", i, "]");
            var ifte = env.cond(BINDING, ".buffer");
            ifte.then(
              GL,
              ".enableVertexAttribArray(",
              i,
              ");",
              GL,
              ".bindBuffer(",
              GL_ARRAY_BUFFER$2,
              ",",
              BINDING,
              ".buffer.buffer);",
              GL,
              ".vertexAttribPointer(",
              i,
              ",",
              BINDING,
              ".size,",
              BINDING,
              ".type,",
              BINDING,
              ".normalized,",
              BINDING,
              ".stride,",
              BINDING,
              ".offset);"
            ).else(
              GL,
              ".disableVertexAttribArray(",
              i,
              ");",
              GL,
              ".vertexAttrib4f(",
              i,
              ",",
              BINDING,
              ".x,",
              BINDING,
              ".y,",
              BINDING,
              ".z,",
              BINDING,
              ".w);",
              BINDING,
              ".buffer=null;"
            );
            refresh(ifte);
            if (extInstancing) {
              refresh(
                INSTANCING,
                ".vertexAttribDivisorANGLE(",
                i,
                ",",
                BINDING,
                ".divisor);"
              );
            }
          }
          refresh(
            env.shared.vao,
            ".currentVAO=null;",
            env.shared.vao,
            ".setVAO(",
            env.shared.vao,
            ".targetVAO);"
          );
          Object.keys(GL_FLAGS).forEach(function(flag) {
            var cap = GL_FLAGS[flag];
            var NEXT = common.def(NEXT_STATE, ".", flag);
            var block = env.block();
            block(
              "if(",
              NEXT,
              "){",
              GL,
              ".enable(",
              cap,
              ")}else{",
              GL,
              ".disable(",
              cap,
              ")}",
              CURRENT_STATE,
              ".",
              flag,
              "=",
              NEXT,
              ";"
            );
            refresh(block);
            poll(
              "if(",
              NEXT,
              "!==",
              CURRENT_STATE,
              ".",
              flag,
              "){",
              block,
              "}"
            );
          });
          Object.keys(GL_VARIABLES).forEach(function(name) {
            var func = GL_VARIABLES[name];
            var init = currentState[name];
            var NEXT, CURRENT;
            var block = env.block();
            block(GL, ".", func, "(");
            if (isArrayLike(init)) {
              var n = init.length;
              NEXT = env.global.def(NEXT_STATE, ".", name);
              CURRENT = env.global.def(CURRENT_STATE, ".", name);
              block(
                loop2(n, function(i2) {
                  return NEXT + "[" + i2 + "]";
                }),
                ");",
                loop2(n, function(i2) {
                  return CURRENT + "[" + i2 + "]=" + NEXT + "[" + i2 + "];";
                }).join("")
              );
              poll(
                "if(",
                loop2(n, function(i2) {
                  return NEXT + "[" + i2 + "]!==" + CURRENT + "[" + i2 + "]";
                }).join("||"),
                "){",
                block,
                "}"
              );
            } else {
              NEXT = common.def(NEXT_STATE, ".", name);
              CURRENT = common.def(CURRENT_STATE, ".", name);
              block(
                NEXT,
                ");",
                CURRENT_STATE,
                ".",
                name,
                "=",
                NEXT,
                ";"
              );
              poll(
                "if(",
                NEXT,
                "!==",
                CURRENT,
                "){",
                block,
                "}"
              );
            }
            refresh(block);
          });
          return env.compile();
        }(),
        compile: compileCommand
      };
    }
    function stats() {
      return {
        vaoCount: 0,
        bufferCount: 0,
        elementsCount: 0,
        framebufferCount: 0,
        shaderCount: 0,
        textureCount: 0,
        cubeCount: 0,
        renderbufferCount: 0,
        maxTextureUnits: 0
      };
    }
    var GL_QUERY_RESULT_EXT = 34918;
    var GL_QUERY_RESULT_AVAILABLE_EXT = 34919;
    var GL_TIME_ELAPSED_EXT = 35007;
    var createTimer = function(gl, extensions) {
      if (!extensions.ext_disjoint_timer_query) {
        return null;
      }
      var queryPool = [];
      function allocQuery() {
        return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT();
      }
      function freeQuery(query) {
        queryPool.push(query);
      }
      var pendingQueries = [];
      function beginQuery(stats2) {
        var query = allocQuery();
        extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query);
        pendingQueries.push(query);
        pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats2);
      }
      function endQuery() {
        extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT);
      }
      function PendingStats() {
        this.startQueryIndex = -1;
        this.endQueryIndex = -1;
        this.sum = 0;
        this.stats = null;
      }
      var pendingStatsPool = [];
      function allocPendingStats() {
        return pendingStatsPool.pop() || new PendingStats();
      }
      function freePendingStats(pendingStats2) {
        pendingStatsPool.push(pendingStats2);
      }
      var pendingStats = [];
      function pushScopeStats(start, end, stats2) {
        var ps = allocPendingStats();
        ps.startQueryIndex = start;
        ps.endQueryIndex = end;
        ps.sum = 0;
        ps.stats = stats2;
        pendingStats.push(ps);
      }
      var timeSum = [];
      var queryPtr = [];
      function update() {
        var ptr, i;
        var n = pendingQueries.length;
        if (n === 0) {
          return;
        }
        queryPtr.length = Math.max(queryPtr.length, n + 1);
        timeSum.length = Math.max(timeSum.length, n + 1);
        timeSum[0] = 0;
        queryPtr[0] = 0;
        var queryTime = 0;
        ptr = 0;
        for (i = 0; i < pendingQueries.length; ++i) {
          var query = pendingQueries[i];
          if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {
            queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT);
            freeQuery(query);
          } else {
            pendingQueries[ptr++] = query;
          }
          timeSum[i + 1] = queryTime;
          queryPtr[i + 1] = ptr;
        }
        pendingQueries.length = ptr;
        ptr = 0;
        for (i = 0; i < pendingStats.length; ++i) {
          var stats2 = pendingStats[i];
          var start = stats2.startQueryIndex;
          var end = stats2.endQueryIndex;
          stats2.sum += timeSum[end] - timeSum[start];
          var startPtr = queryPtr[start];
          var endPtr = queryPtr[end];
          if (endPtr === startPtr) {
            stats2.stats.gpuTime += stats2.sum / 1e6;
            freePendingStats(stats2);
          } else {
            stats2.startQueryIndex = startPtr;
            stats2.endQueryIndex = endPtr;
            pendingStats[ptr++] = stats2;
          }
        }
        pendingStats.length = ptr;
      }
      return {
        beginQuery,
        endQuery,
        pushScopeStats,
        update,
        getNumPendingQueries: function() {
          return pendingQueries.length;
        },
        clear: function() {
          queryPool.push.apply(queryPool, pendingQueries);
          for (var i = 0; i < queryPool.length; i++) {
            extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i]);
          }
          pendingQueries.length = 0;
          queryPool.length = 0;
        },
        restore: function() {
          pendingQueries.length = 0;
          queryPool.length = 0;
        }
      };
    };
    var GL_COLOR_BUFFER_BIT = 16384;
    var GL_DEPTH_BUFFER_BIT = 256;
    var GL_STENCIL_BUFFER_BIT = 1024;
    var GL_ARRAY_BUFFER = 34962;
    var CONTEXT_LOST_EVENT = "webglcontextlost";
    var CONTEXT_RESTORED_EVENT = "webglcontextrestored";
    var DYN_PROP = 1;
    var DYN_CONTEXT = 2;
    var DYN_STATE = 3;
    function find(haystack, needle) {
      for (var i = 0; i < haystack.length; ++i) {
        if (haystack[i] === needle) {
          return i;
        }
      }
      return -1;
    }
    function wrapREGL(args) {
      var config = parseArgs(args);
      if (!config) {
        return null;
      }
      var gl = config.gl;
      var glAttributes = gl.getContextAttributes();
      var contextLost = gl.isContextLost();
      var extensionState = createExtensionCache(gl, config);
      if (!extensionState) {
        return null;
      }
      var stringStore = createStringStore();
      var stats$$1 = stats();
      var extensions = extensionState.extensions;
      var timer = createTimer(gl, extensions);
      var START_TIME = clock();
      var WIDTH = gl.drawingBufferWidth;
      var HEIGHT = gl.drawingBufferHeight;
      var contextState = {
        tick: 0,
        time: 0,
        viewportWidth: WIDTH,
        viewportHeight: HEIGHT,
        framebufferWidth: WIDTH,
        framebufferHeight: HEIGHT,
        drawingBufferWidth: WIDTH,
        drawingBufferHeight: HEIGHT,
        pixelRatio: config.pixelRatio
      };
      var uniformState = {};
      var drawState = {
        elements: null,
        primitive: 4,
        // GL_TRIANGLES
        count: -1,
        offset: 0,
        instances: -1
      };
      var limits = wrapLimits(gl, extensions);
      var bufferState = wrapBufferState(
        gl,
        stats$$1,
        config,
        destroyBuffer
      );
      var attributeState = wrapAttributeState(
        gl,
        extensions,
        limits,
        stats$$1,
        bufferState
      );
      function destroyBuffer(buffer) {
        return attributeState.destroyBuffer(buffer);
      }
      var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1);
      var shaderState = wrapShaderState(gl, stringStore, stats$$1, config);
      var textureState = createTextureSet(
        gl,
        extensions,
        limits,
        function() {
          core.procs.poll();
        },
        contextState,
        stats$$1,
        config
      );
      var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config);
      var framebufferState = wrapFBOState(
        gl,
        extensions,
        limits,
        textureState,
        renderbufferState,
        stats$$1
      );
      var core = reglCore(
        gl,
        stringStore,
        extensions,
        limits,
        bufferState,
        elementState,
        textureState,
        framebufferState,
        uniformState,
        attributeState,
        shaderState,
        drawState,
        contextState,
        timer,
        config
      );
      var readPixels = wrapReadPixels(
        gl,
        framebufferState,
        core.procs.poll,
        contextState,
        glAttributes,
        extensions,
        limits
      );
      var nextState = core.next;
      var canvas = gl.canvas;
      var rafCallbacks = [];
      var lossCallbacks = [];
      var restoreCallbacks = [];
      var destroyCallbacks = [config.onDestroy];
      var activeRAF = null;
      function handleRAF() {
        if (rafCallbacks.length === 0) {
          if (timer) {
            timer.update();
          }
          activeRAF = null;
          return;
        }
        activeRAF = raf2.next(handleRAF);
        poll();
        for (var i = rafCallbacks.length - 1; i >= 0; --i) {
          var cb = rafCallbacks[i];
          if (cb) {
            cb(contextState, null, 0);
          }
        }
        gl.flush();
        if (timer) {
          timer.update();
        }
      }
      function startRAF() {
        if (!activeRAF && rafCallbacks.length > 0) {
          activeRAF = raf2.next(handleRAF);
        }
      }
      function stopRAF() {
        if (activeRAF) {
          raf2.cancel(handleRAF);
          activeRAF = null;
        }
      }
      function handleContextLoss(event) {
        event.preventDefault();
        contextLost = true;
        stopRAF();
        lossCallbacks.forEach(function(cb) {
          cb();
        });
      }
      function handleContextRestored(event) {
        gl.getError();
        contextLost = false;
        extensionState.restore();
        shaderState.restore();
        bufferState.restore();
        textureState.restore();
        renderbufferState.restore();
        framebufferState.restore();
        attributeState.restore();
        if (timer) {
          timer.restore();
        }
        core.procs.refresh();
        startRAF();
        restoreCallbacks.forEach(function(cb) {
          cb();
        });
      }
      if (canvas) {
        canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false);
        canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false);
      }
      function destroy() {
        rafCallbacks.length = 0;
        stopRAF();
        if (canvas) {
          canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss);
          canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored);
        }
        shaderState.clear();
        framebufferState.clear();
        renderbufferState.clear();
        textureState.clear();
        elementState.clear();
        bufferState.clear();
        attributeState.clear();
        if (timer) {
          timer.clear();
        }
        destroyCallbacks.forEach(function(cb) {
          cb();
        });
      }
      function compileProcedure(options) {
        check$1(!!options, "invalid args to regl({...})");
        check$1.type(options, "object", "invalid args to regl({...})");
        function flattenNestedOptions(options2) {
          var result = extend({}, options2);
          delete result.uniforms;
          delete result.attributes;
          delete result.context;
          delete result.vao;
          if ("stencil" in result && result.stencil.op) {
            result.stencil.opBack = result.stencil.opFront = result.stencil.op;
            delete result.stencil.op;
          }
          function merge(name) {
            if (name in result) {
              var child = result[name];
              delete result[name];
              Object.keys(child).forEach(function(prop) {
                result[name + "." + prop] = child[prop];
              });
            }
          }
          merge("blend");
          merge("depth");
          merge("cull");
          merge("stencil");
          merge("polygonOffset");
          merge("scissor");
          merge("sample");
          if ("vao" in options2) {
            result.vao = options2.vao;
          }
          return result;
        }
        function separateDynamic(object, useArrays) {
          var staticItems = {};
          var dynamicItems = {};
          Object.keys(object).forEach(function(option) {
            var value = object[option];
            if (dynamic.isDynamic(value)) {
              dynamicItems[option] = dynamic.unbox(value, option);
              return;
            } else if (useArrays && Array.isArray(value)) {
              for (var i = 0; i < value.length; ++i) {
                if (dynamic.isDynamic(value[i])) {
                  dynamicItems[option] = dynamic.unbox(value, option);
                  return;
                }
              }
            }
            staticItems[option] = value;
          });
          return {
            dynamic: dynamicItems,
            static: staticItems
          };
        }
        var context = separateDynamic(options.context || {}, true);
        var uniforms = separateDynamic(options.uniforms || {}, true);
        var attributes = separateDynamic(options.attributes || {}, false);
        var opts = separateDynamic(flattenNestedOptions(options), false);
        var stats$$12 = {
          gpuTime: 0,
          cpuTime: 0,
          count: 0
        };
        var compiled = core.compile(opts, attributes, uniforms, context, stats$$12);
        var draw = compiled.draw;
        var batch = compiled.batch;
        var scope = compiled.scope;
        var EMPTY_ARRAY = [];
        function reserve(count) {
          while (EMPTY_ARRAY.length < count) {
            EMPTY_ARRAY.push(null);
          }
          return EMPTY_ARRAY;
        }
        function REGLCommand(args2, body) {
          var i;
          if (contextLost) {
            check$1.raise("context lost");
          }
          if (typeof args2 === "function") {
            return scope.call(this, null, args2, 0);
          } else if (typeof body === "function") {
            if (typeof args2 === "number") {
              for (i = 0; i < args2; ++i) {
                scope.call(this, null, body, i);
              }
            } else if (Array.isArray(args2)) {
              for (i = 0; i < args2.length; ++i) {
                scope.call(this, args2[i], body, i);
              }
            } else {
              return scope.call(this, args2, body, 0);
            }
          } else if (typeof args2 === "number") {
            if (args2 > 0) {
              return batch.call(this, reserve(args2 | 0), args2 | 0);
            }
          } else if (Array.isArray(args2)) {
            if (args2.length) {
              return batch.call(this, args2, args2.length);
            }
          } else {
            return draw.call(this, args2);
          }
        }
        return extend(REGLCommand, {
          stats: stats$$12,
          destroy: function() {
            compiled.destroy();
          }
        });
      }
      var setFBO = framebufferState.setFBO = compileProcedure({
        framebuffer: dynamic.define.call(null, DYN_PROP, "framebuffer")
      });
      function clearImpl(_, options) {
        var clearFlags = 0;
        core.procs.poll();
        var c = options.color;
        if (c) {
          gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0);
          clearFlags |= GL_COLOR_BUFFER_BIT;
        }
        if ("depth" in options) {
          gl.clearDepth(+options.depth);
          clearFlags |= GL_DEPTH_BUFFER_BIT;
        }
        if ("stencil" in options) {
          gl.clearStencil(options.stencil | 0);
          clearFlags |= GL_STENCIL_BUFFER_BIT;
        }
        check$1(!!clearFlags, "called regl.clear with no buffer specified");
        gl.clear(clearFlags);
      }
      function clear(options) {
        check$1(
          typeof options === "object" && options,
          "regl.clear() takes an object as input"
        );
        if ("framebuffer" in options) {
          if (options.framebuffer && options.framebuffer_reglType === "framebufferCube") {
            for (var i = 0; i < 6; ++i) {
              setFBO(extend({
                framebuffer: options.framebuffer.faces[i]
              }, options), clearImpl);
            }
          } else {
            setFBO(options, clearImpl);
          }
        } else {
          clearImpl(null, options);
        }
      }
      function frame(cb) {
        check$1.type(cb, "function", "regl.frame() callback must be a function");
        rafCallbacks.push(cb);
        function cancel() {
          var i = find(rafCallbacks, cb);
          check$1(i >= 0, "cannot cancel a frame twice");
          function pendingCancel() {
            var index = find(rafCallbacks, pendingCancel);
            rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1];
            rafCallbacks.length -= 1;
            if (rafCallbacks.length <= 0) {
              stopRAF();
            }
          }
          rafCallbacks[i] = pendingCancel;
        }
        startRAF();
        return {
          cancel
        };
      }
      function pollViewport() {
        var viewport = nextState.viewport;
        var scissorBox = nextState.scissor_box;
        viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0;
        contextState.viewportWidth = contextState.framebufferWidth = contextState.drawingBufferWidth = viewport[2] = scissorBox[2] = gl.drawingBufferWidth;
        contextState.viewportHeight = contextState.framebufferHeight = contextState.drawingBufferHeight = viewport[3] = scissorBox[3] = gl.drawingBufferHeight;
      }
      function poll() {
        contextState.tick += 1;
        contextState.time = now4();
        pollViewport();
        core.procs.poll();
      }
      function refresh() {
        textureState.refresh();
        pollViewport();
        core.procs.refresh();
        if (timer) {
          timer.update();
        }
      }
      function now4() {
        return (clock() - START_TIME) / 1e3;
      }
      refresh();
      function addListener(event, callback) {
        check$1.type(callback, "function", "listener callback must be a function");
        var callbacks;
        switch (event) {
          case "frame":
            return frame(callback);
          case "lost":
            callbacks = lossCallbacks;
            break;
          case "restore":
            callbacks = restoreCallbacks;
            break;
          case "destroy":
            callbacks = destroyCallbacks;
            break;
          default:
            check$1.raise("invalid event, must be one of frame,lost,restore,destroy");
        }
        callbacks.push(callback);
        return {
          cancel: function() {
            for (var i = 0; i < callbacks.length; ++i) {
              if (callbacks[i] === callback) {
                callbacks[i] = callbacks[callbacks.length - 1];
                callbacks.pop();
                return;
              }
            }
          }
        };
      }
      var regl2 = extend(compileProcedure, {
        // Clear current FBO
        clear,
        // Short cuts for dynamic variables
        prop: dynamic.define.bind(null, DYN_PROP),
        context: dynamic.define.bind(null, DYN_CONTEXT),
        this: dynamic.define.bind(null, DYN_STATE),
        // executes an empty draw command
        draw: compileProcedure({}),
        // Resources
        buffer: function(options) {
          return bufferState.create(options, GL_ARRAY_BUFFER, false, false);
        },
        elements: function(options) {
          return elementState.create(options, false);
        },
        texture: textureState.create2D,
        cube: textureState.createCube,
        renderbuffer: renderbufferState.create,
        framebuffer: framebufferState.create,
        framebufferCube: framebufferState.createCube,
        vao: attributeState.createVAO,
        // Expose context attributes
        attributes: glAttributes,
        // Frame rendering
        frame,
        on: addListener,
        // System limits
        limits,
        hasExtension: function(name) {
          return limits.extensions.indexOf(name.toLowerCase()) >= 0;
        },
        // Read pixels
        read: readPixels,
        // Destroy regl and all associated resources
        destroy,
        // Direct GL state manipulation
        _gl: gl,
        _refresh: refresh,
        poll: function() {
          poll();
          if (timer) {
            timer.update();
          }
        },
        // Current time
        now: now4,
        // regl Statistics Information
        stats: stats$$1
      });
      config.onDone(null, regl2);
      return regl2;
    }
    return wrapREGL;
  });
})(regl$1);
var reglExports = regl$1.exports;
const regl = /* @__PURE__ */ getDefaultExportFromCjs(reglExports);
const Mouse = mouseListen();
class HydraRenderer {
  constructor({
    pb = null,
    width = 1280,
    height = 720,
    numSources = 4,
    numOutputs = 4,
    makeGlobal = true,
    autoLoop = true,
    detectAudio = true,
    enableStreamCapture = true,
    canvas,
    precision,
    extendTransforms = {}
    // add your own functions on init
  } = {}) {
    ArrayUtils.init();
    this.pb = pb;
    this.width = width;
    this.height = height;
    this.renderAll = false;
    this.detectAudio = detectAudio;
    this._initCanvas(canvas);
    this.synth = {
      time: 0,
      bpm: 30,
      width: this.width,
      height: this.height,
      fps: void 0,
      stats: {
        fps: 0
      },
      speed: 1,
      mouse: Mouse,
      render: this._render.bind(this),
      setResolution: this.setResolution.bind(this),
      update: (dt) => {
      },
      // user defined update function
      hush: this.hush.bind(this),
      tick: this.tick.bind(this)
    };
    if (makeGlobal) window.loadScript = this.loadScript;
    this.timeSinceLastUpdate = 0;
    this._time = 0;
    let precisionOptions = ["lowp", "mediump", "highp"];
    if (precision && precisionOptions.includes(precision.toLowerCase())) {
      this.precision = precision.toLowerCase();
    } else {
      let isIOS = (/iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && !window.MSStream;
      this.precision = isIOS ? "highp" : "mediump";
    }
    this.extendTransforms = extendTransforms;
    this.saveFrame = false;
    this.captureStream = null;
    this.generator = void 0;
    this._initRegl();
    this._initOutputs(numOutputs);
    this._initSources(numSources);
    this._generateGlslTransforms();
    this.synth.screencap = () => {
      this.saveFrame = true;
    };
    if (enableStreamCapture) {
      try {
        this.captureStream = this.canvas.captureStream(25);
        this.synth.vidRecorder = new VideoRecorder(this.captureStream);
      } catch (e2) {
        console.warn("[hydra-synth warning]\nnew MediaSource() is not currently supported on iOS.");
        console.error(e2);
      }
    }
    if (detectAudio) this._initAudio();
    if (autoLoop) loop(this.tick.bind(this)).start();
    this.sandbox = new EvalSandbox(this.synth, makeGlobal, ["speed", "update", "bpm", "fps"]);
  }
  eval(code) {
    this.sandbox.eval(code);
  }
  getScreenImage(callback) {
    this.imageCallback = callback;
    this.saveFrame = true;
  }
  hush() {
    this.s.forEach((source) => {
      source.clear();
    });
    this.o.forEach((output) => {
      this.synth.solid(0, 0, 0, 0).out(output);
    });
    this.synth.render(this.o[0]);
    this.sandbox.set("update", (dt) => {
    });
  }
  loadScript(url = "") {
    const p = new Promise((res, rej) => {
      var script = document.createElement("script");
      script.onload = function() {
        console.log(`loaded script ${url}`);
        res();
      };
      script.onerror = (err) => {
        console.log(`error loading script ${url}`, "log-error");
        res();
      };
      script.src = url;
      document.head.appendChild(script);
    });
    return p;
  }
  setResolution(width, height) {
    this.canvas.width = width;
    this.canvas.height = height;
    this.width = width;
    this.height = height;
    this.sandbox.set("width", width);
    this.sandbox.set("height", height);
    console.log(this.width);
    this.o.forEach((output) => {
      output.resize(width, height);
    });
    this.s.forEach((source) => {
      source.resize(width, height);
    });
    this.regl._refresh();
    console.log(this.canvas.width);
  }
  canvasToImage(callback) {
    const a2 = document.createElement("a");
    a2.style.display = "none";
    let d = /* @__PURE__ */ new Date();
    a2.download = `hydra-${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}-${d.getHours()}.${d.getMinutes()}.${d.getSeconds()}.png`;
    document.body.appendChild(a2);
    var self2 = this;
    this.canvas.toBlob((blob) => {
      if (self2.imageCallback) {
        self2.imageCallback(blob);
        delete self2.imageCallback;
      } else {
        a2.href = URL.createObjectURL(blob);
        console.log(a2.href);
        a2.click();
      }
    }, "image/png");
    setTimeout(() => {
      document.body.removeChild(a2);
      window.URL.revokeObjectURL(a2.href);
    }, 300);
  }
  _initAudio() {
    this.synth.a = new Audio({
      numBins: 4,
      parentEl: this.canvas.parentNode
      // changeListener: ({audio}) => {
      //   that.a = audio.bins.map((_, index) =>
      //     (scale = 1, offset = 0) => () => (audio.fft[index] * scale + offset)
      //   )
      //
      //   if (that.makeGlobal) {
      //     that.a.forEach((a, index) => {
      //       const aname = `a${index}`
      //       window[aname] = a
      //     })
      //   }
      // }
    });
  }
  // create main output canvas and add to screen
  _initCanvas(canvas) {
    if (canvas) {
      this.canvas = canvas;
      this.width = canvas.width;
      this.height = canvas.height;
    } else {
      this.canvas = document.createElement("canvas");
      this.canvas.width = this.width;
      this.canvas.height = this.height;
      this.canvas.style.width = "100%";
      this.canvas.style.height = "100%";
      this.canvas.style.imageRendering = "pixelated";
      document.body.appendChild(this.canvas);
    }
  }
  _initRegl() {
    this.regl = regl({
      //  profile: true,
      canvas: this.canvas,
      pixelRatio: 1
      //,
      // extensions: [
      //   'oes_texture_half_float',
      //   'oes_texture_half_float_linear'
      // ],
      // optionalExtensions: [
      //   'oes_texture_float',
      //   'oes_texture_float_linear'
      //]
    });
    this.regl.clear({
      color: [0, 0, 0, 1]
    });
    this.renderAll = this.regl({
      frag: `
      precision ${this.precision} float;
      varying vec2 uv;
      uniform sampler2D tex0;
      uniform sampler2D tex1;
      uniform sampler2D tex2;
      uniform sampler2D tex3;

      void main () {
        vec2 st = vec2(1.0 - uv.x, uv.y);
        st*= vec2(2);
        vec2 q = floor(st).xy*(vec2(2.0, 1.0));
        int quad = int(q.x) + int(q.y);
        st.x += step(1., mod(st.y,2.0));
        st.y += step(1., mod(st.x,2.0));
        st = fract(st);
        if(quad==0){
          gl_FragColor = texture2D(tex0, st);
        } else if(quad==1){
          gl_FragColor = texture2D(tex1, st);
        } else if (quad==2){
          gl_FragColor = texture2D(tex2, st);
        } else {
          gl_FragColor = texture2D(tex3, st);
        }

      }
      `,
      vert: `
      precision ${this.precision} float;
      attribute vec2 position;
      varying vec2 uv;

      void main () {
        uv = position;
        gl_Position = vec4(1.0 - 2.0 * position, 0, 1);
      }`,
      attributes: {
        position: [
          [-2, 0],
          [0, -2],
          [2, 2]
        ]
      },
      uniforms: {
        tex0: this.regl.prop("tex0"),
        tex1: this.regl.prop("tex1"),
        tex2: this.regl.prop("tex2"),
        tex3: this.regl.prop("tex3")
      },
      count: 3,
      depth: { enable: false }
    });
    this.renderFbo = this.regl({
      frag: `
      precision ${this.precision} float;
      varying vec2 uv;
      uniform vec2 resolution;
      uniform sampler2D tex0;

      void main () {
        gl_FragColor = texture2D(tex0, vec2(1.0 - uv.x, uv.y));
      }
      `,
      vert: `
      precision ${this.precision} float;
      attribute vec2 position;
      varying vec2 uv;

      void main () {
        uv = position;
        gl_Position = vec4(1.0 - 2.0 * position, 0, 1);
      }`,
      attributes: {
        position: [
          [-2, 0],
          [0, -2],
          [2, 2]
        ]
      },
      uniforms: {
        tex0: this.regl.prop("tex0"),
        resolution: this.regl.prop("resolution")
      },
      count: 3,
      depth: { enable: false }
    });
  }
  _initOutputs(numOutputs) {
    const self2 = this;
    this.o = Array(numOutputs).fill().map((el, index) => {
      var o = new Output({
        regl: this.regl,
        width: this.width,
        height: this.height,
        precision: this.precision,
        label: `o${index}`
      });
      o.id = index;
      self2.synth["o" + index] = o;
      return o;
    });
    this.output = this.o[0];
  }
  _initSources(numSources) {
    this.s = [];
    for (var i = 0; i < numSources; i++) {
      this.createSource(i);
    }
  }
  createSource(i) {
    let s = new HydraSource({ regl: this.regl, pb: this.pb, width: this.width, height: this.height, label: `s${i}` });
    this.synth["s" + this.s.length] = s;
    this.s.push(s);
    return s;
  }
  _generateGlslTransforms() {
    var self2 = this;
    this.generator = new GeneratorFactory({
      defaultOutput: this.o[0],
      defaultUniforms: this.o[0].uniforms,
      extendTransforms: this.extendTransforms,
      changeListener: ({ type, method, synth }) => {
        if (type === "add") {
          self2.synth[method] = synth.generators[method];
          if (self2.sandbox) self2.sandbox.add(method);
        }
      }
    });
    this.synth.setFunction = this.generator.setFunction.bind(this.generator);
  }
  _render(output) {
    if (output) {
      this.output = output;
      this.isRenderingAll = false;
    } else {
      this.isRenderingAll = true;
    }
  }
  // dt in ms
  tick(dt, uniforms) {
    this.sandbox.tick();
    if (this.detectAudio === true) this.synth.a.tick();
    this.sandbox.set("time", this.synth.time += dt * 1e-3 * this.synth.speed);
    this.timeSinceLastUpdate += dt;
    if (!this.synth.fps || this.timeSinceLastUpdate >= 1e3 / this.synth.fps) {
      this.synth.stats.fps = Math.ceil(1e3 / this.timeSinceLastUpdate);
      if (this.synth.update) {
        try {
          this.synth.update(this.timeSinceLastUpdate);
        } catch (e2) {
          console.log(e2);
        }
      }
      for (let i = 0; i < this.s.length; i++) {
        this.s[i].tick(this.synth.time);
      }
      for (let i = 0; i < this.o.length; i++) {
        this.o[i].tick({
          time: this.synth.time,
          mouse: this.synth.mouse,
          bpm: this.synth.bpm,
          resolution: [this.canvas.width, this.canvas.height]
        });
      }
      if (this.isRenderingAll) {
        this.renderAll({
          tex0: this.o[0].getCurrent(),
          tex1: this.o[1].getCurrent(),
          tex2: this.o[2].getCurrent(),
          tex3: this.o[3].getCurrent(),
          resolution: [this.canvas.width, this.canvas.height]
        });
      } else {
        this.renderFbo({
          tex0: this.output.getCurrent(),
          resolution: [this.canvas.width, this.canvas.height]
        });
      }
      this.timeSinceLastUpdate = 0;
    }
    if (this.saveFrame === true) {
      this.canvasToImage();
      this.saveFrame = false;
    }
  }
}
let Map$1 = class Map2 extends Component {
  constructor(id, state, emit) {
    super(id);
    this.local = state.components[id] = {};
    this.state = state;
  }
  load(element) {
    console.log("loading hydra", element, this.canvas);
    const hydraCanvas = element.querySelector("canvas");
    hydraCanvas.width = 800;
    hydraCanvas.height = 800;
    if (this.state.hydra == void 0) {
      this.state.hydra = new HydraRenderer({
        canvas: hydraCanvas,
        detectAudio: false,
        width: hydraCanvas.width,
        height: hydraCanvas.height
      });
    }
  }
  update() {
    return false;
  }
  createElement(center) {
    return html$1`
      <div class="relative z-0 w-screen h-screen">
        <canvas class="w-full h-full z-0"></canvas>
      </div>
    `;
  }
};
function commonjsRequire(path) {
  throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var p5_min = { exports: {} };
/*! p5.js v1.11.8 June 05, 2025 */
(function(module, exports) {
  !function(e2) {
    module.exports = e2();
  }(function() {
    var s;
    return function o(n, s2, i) {
      function a2(t, e3) {
        if (!s2[t]) {
          if (!n[t]) {
            var r = "function" == typeof commonjsRequire && commonjsRequire;
            if (!e3 && r) return r(t, true);
            if (l) return l(t, true);
            throw (e3 = new Error("Cannot find module '" + t + "'")).code = "MODULE_NOT_FOUND", e3;
          }
          r = s2[t] = { exports: {} }, n[t][0].call(r.exports, function(e4) {
            return a2(n[t][1][e4] || e4);
          }, r, r.exports, o, n, s2, i);
        }
        return s2[t].exports;
      }
      for (var l = "function" == typeof commonjsRequire && commonjsRequire, e2 = 0; e2 < i.length; e2++) a2(i[e2]);
      return a2;
    }({ 1: [function(e2, t, r) {
      r.byteLength = function(e3) {
        var e3 = c(e3), t2 = e3[0], e3 = e3[1];
        return 3 * (t2 + e3) / 4 - e3;
      }, r.toByteArray = function(e3) {
        var t2, r2, o3 = c(e3), n2 = o3[0], o3 = o3[1], s3 = new u(function(e4, t3) {
          return 3 * (e4 + t3) / 4 - t3;
        }(n2, o3)), i = 0, a3 = 0 < o3 ? n2 - 4 : n2;
        for (r2 = 0; r2 < a3; r2 += 4) t2 = l[e3.charCodeAt(r2)] << 18 | l[e3.charCodeAt(r2 + 1)] << 12 | l[e3.charCodeAt(r2 + 2)] << 6 | l[e3.charCodeAt(r2 + 3)], s3[i++] = t2 >> 16 & 255, s3[i++] = t2 >> 8 & 255, s3[i++] = 255 & t2;
        2 === o3 && (t2 = l[e3.charCodeAt(r2)] << 2 | l[e3.charCodeAt(r2 + 1)] >> 4, s3[i++] = 255 & t2);
        1 === o3 && (t2 = l[e3.charCodeAt(r2)] << 10 | l[e3.charCodeAt(r2 + 1)] << 4 | l[e3.charCodeAt(r2 + 2)] >> 2, s3[i++] = t2 >> 8 & 255, s3[i++] = 255 & t2);
        return s3;
      }, r.fromByteArray = function(e3) {
        for (var t2, r2 = e3.length, o3 = r2 % 3, n2 = [], s3 = 0, i = r2 - o3; s3 < i; s3 += 16383) n2.push(function(e4, t3, r3) {
          for (var o4, n3 = [], s4 = t3; s4 < r3; s4 += 3) o4 = (e4[s4] << 16 & 16711680) + (e4[s4 + 1] << 8 & 65280) + (255 & e4[s4 + 2]), n3.push(function(e5) {
            return a2[e5 >> 18 & 63] + a2[e5 >> 12 & 63] + a2[e5 >> 6 & 63] + a2[63 & e5];
          }(o4));
          return n3.join("");
        }(e3, s3, i < s3 + 16383 ? i : s3 + 16383));
        1 == o3 ? (t2 = e3[r2 - 1], n2.push(a2[t2 >> 2] + a2[t2 << 4 & 63] + "==")) : 2 == o3 && (t2 = (e3[r2 - 2] << 8) + e3[r2 - 1], n2.push(a2[t2 >> 10] + a2[t2 >> 4 & 63] + a2[t2 << 2 & 63] + "="));
        return n2.join("");
      };
      for (var a2 = [], l = [], u = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, s2 = o.length; n < s2; ++n) a2[n] = o[n], l[o.charCodeAt(n)] = n;
      function c(e3) {
        var t2 = e3.length;
        if (0 < t2 % 4) throw new Error("Invalid string. Length must be a multiple of 4");
        e3 = e3.indexOf("="), t2 = (e3 = -1 === e3 ? t2 : e3) === t2 ? 0 : 4 - e3 % 4;
        return [e3, t2];
      }
      l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63;
    }, {}], 2: [function(e2, t, r) {
    }, {}], 3: [function(e2, t, r) {
    }, {}], 4: [function(P, e2, L) {
      !(function(d) {
        var S = P("base64-js"), s2 = P("ieee754"), e3 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null, t = (L.Buffer = d, L.SlowBuffer = function(e4) {
          +e4 != e4 && (e4 = 0);
          return d.alloc(+e4);
        }, L.INSPECT_MAX_BYTES = 50, 2147483647);
        function l(e4) {
          if (t < e4) throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
          e4 = new Uint8Array(e4);
          return Object.setPrototypeOf(e4, d.prototype), e4;
        }
        function d(e4, t2, r2) {
          if ("number" != typeof e4) return o(e4, t2, r2);
          if ("string" == typeof t2) throw new TypeError('The "string" argument must be of type string. Received type number');
          return i(e4);
        }
        function o(e4, t2, r2) {
          if ("string" == typeof e4) {
            var o3 = e4, n2 = t2;
            if (d.isEncoding(n2 = "string" == typeof n2 && "" !== n2 ? n2 : "utf8")) return s3 = 0 | h(o3, n2), i2 = l(s3), i2 = (o3 = i2.write(o3, n2)) !== s3 ? i2.slice(0, o3) : i2;
            throw new TypeError("Unknown encoding: " + n2);
          }
          if (ArrayBuffer.isView(e4)) return u(e4);
          if (null != e4) {
            if (O(e4, ArrayBuffer) || e4 && O(e4.buffer, ArrayBuffer)) {
              var s3 = e4, o3 = t2, i2 = r2;
              if (o3 < 0 || s3.byteLength < o3) throw new RangeError('"offset" is outside of buffer bounds');
              if (s3.byteLength < o3 + (i2 || 0)) throw new RangeError('"length" is outside of buffer bounds');
              return s3 = void 0 === o3 && void 0 === i2 ? new Uint8Array(s3) : void 0 === i2 ? new Uint8Array(s3, o3) : new Uint8Array(s3, o3, i2), Object.setPrototypeOf(s3, d.prototype), s3;
            }
            if ("number" == typeof e4) throw new TypeError('The "value" argument must not be of type number. Received type number');
            n2 = e4.valueOf && e4.valueOf();
            if (null != n2 && n2 !== e4) return d.from(n2, t2, r2);
            var a3 = function(e5) {
              {
                var t3, r3;
                if (d.isBuffer(e5)) return t3 = 0 | c(e5.length), 0 !== (r3 = l(t3)).length && e5.copy(r3, 0, 0, t3), r3;
              }
              if (void 0 !== e5.length) return "number" != typeof e5.length || C(e5.length) ? l(0) : u(e5);
              if ("Buffer" === e5.type && Array.isArray(e5.data)) return u(e5.data);
            }(e4);
            if (a3) return a3;
            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e4[Symbol.toPrimitive]) return d.from(e4[Symbol.toPrimitive]("string"), t2, r2);
          }
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e4);
        }
        function n(e4) {
          if ("number" != typeof e4) throw new TypeError('"size" argument must be of type number');
          if (e4 < 0) throw new RangeError('The value "' + e4 + '" is invalid for option "size"');
        }
        function i(e4) {
          return n(e4), l(e4 < 0 ? 0 : 0 | c(e4));
        }
        function u(e4) {
          for (var t2 = e4.length < 0 ? 0 : 0 | c(e4.length), r2 = l(t2), o3 = 0; o3 < t2; o3 += 1) r2[o3] = 255 & e4[o3];
          return r2;
        }
        function c(e4) {
          if (t <= e4) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + t.toString(16) + " bytes");
          return 0 | e4;
        }
        function h(e4, t2) {
          if (d.isBuffer(e4)) return e4.length;
          if (ArrayBuffer.isView(e4) || O(e4, ArrayBuffer)) return e4.byteLength;
          if ("string" != typeof e4) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e4);
          var r2 = e4.length, o3 = 2 < arguments.length && true === arguments[2];
          if (!o3 && 0 === r2) return 0;
          for (var n2 = false; ; ) switch (t2) {
            case "ascii":
            case "latin1":
            case "binary":
              return r2;
            case "utf8":
            case "utf-8":
              return E(e4).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * r2;
            case "hex":
              return r2 >>> 1;
            case "base64":
              return M(e4).length;
            default:
              if (n2) return o3 ? -1 : E(e4).length;
              t2 = ("" + t2).toLowerCase(), n2 = true;
          }
        }
        function r(e4, t2, r2) {
          var o3, n2 = false;
          if ((t2 = void 0 === t2 || t2 < 0 ? 0 : t2) > this.length) return "";
          if ((r2 = void 0 === r2 || r2 > this.length ? this.length : r2) <= 0) return "";
          if ((r2 >>>= 0) <= (t2 >>>= 0)) return "";
          for (e4 = e4 || "utf8"; ; ) switch (e4) {
            case "hex":
              var s3 = this, i2 = t2, a3 = r2, l2 = s3.length;
              (!a3 || a3 < 0 || l2 < a3) && (a3 = l2);
              for (var u2 = "", c2 = i2 = !i2 || i2 < 0 ? 0 : i2; c2 < a3; ++c2) u2 += A[s3[c2]];
              return u2;
            case "utf8":
            case "utf-8":
              return T(this, t2, r2);
            case "ascii":
              var d2 = this, l2 = t2, h2 = r2, f2 = "";
              h2 = Math.min(d2.length, h2);
              for (var p2 = l2; p2 < h2; ++p2) f2 += String.fromCharCode(127 & d2[p2]);
              return f2;
            case "latin1":
            case "binary":
              var m2 = this, i2 = t2, y2 = r2, g2 = "";
              y2 = Math.min(m2.length, y2);
              for (var v2 = i2; v2 < y2; ++v2) g2 += String.fromCharCode(m2[v2]);
              return g2;
            case "base64":
              return b2 = this, o3 = r2, 0 === (_2 = t2) && o3 === b2.length ? S.fromByteArray(b2) : S.fromByteArray(b2.slice(_2, o3));
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              for (var b2 = t2, _2 = r2, j2 = this.slice(b2, _2), x3 = "", w2 = 0; w2 < j2.length; w2 += 2) x3 += String.fromCharCode(j2[w2] + 256 * j2[w2 + 1]);
              return x3;
            default:
              if (n2) throw new TypeError("Unknown encoding: " + e4);
              e4 = (e4 + "").toLowerCase(), n2 = true;
          }
        }
        function a2(e4, t2, r2) {
          var o3 = e4[t2];
          e4[t2] = e4[r2], e4[r2] = o3;
        }
        function f(e4, t2, r2, o3, n2) {
          if (0 === e4.length) return -1;
          if ("string" == typeof r2 ? (o3 = r2, r2 = 0) : 2147483647 < r2 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), (r2 = (r2 = C(r2 = +r2) ? n2 ? 0 : e4.length - 1 : r2) < 0 ? e4.length + r2 : r2) >= e4.length) {
            if (n2) return -1;
            r2 = e4.length - 1;
          } else if (r2 < 0) {
            if (!n2) return -1;
            r2 = 0;
          }
          if ("string" == typeof t2 && (t2 = d.from(t2, o3)), d.isBuffer(t2)) return 0 === t2.length ? -1 : p(e4, t2, r2, o3, n2);
          if ("number" == typeof t2) return t2 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? (n2 ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e4, t2, r2) : p(e4, [t2], r2, o3, n2);
          throw new TypeError("val must be string, number or Buffer");
        }
        function p(e4, t2, r2, o3, n2) {
          var s3 = 1, i2 = e4.length, a3 = t2.length;
          if (void 0 !== o3 && ("ucs2" === (o3 = String(o3).toLowerCase()) || "ucs-2" === o3 || "utf16le" === o3 || "utf-16le" === o3)) {
            if (e4.length < 2 || t2.length < 2) return -1;
            i2 /= s3 = 2, a3 /= 2, r2 /= 2;
          }
          function l2(e5, t3) {
            return 1 === s3 ? e5[t3] : e5.readUInt16BE(t3 * s3);
          }
          if (n2) for (var u2 = -1, c2 = r2; c2 < i2; c2++) if (l2(e4, c2) === l2(t2, -1 === u2 ? 0 : c2 - u2)) {
            if (c2 - (u2 = -1 === u2 ? c2 : u2) + 1 === a3) return u2 * s3;
          } else -1 !== u2 && (c2 -= c2 - u2), u2 = -1;
          else for (c2 = r2 = i2 < r2 + a3 ? i2 - a3 : r2; 0 <= c2; c2--) {
            for (var d2 = true, h2 = 0; h2 < a3; h2++) if (l2(e4, c2 + h2) !== l2(t2, h2)) {
              d2 = false;
              break;
            }
            if (d2) return c2;
          }
          return -1;
        }
        function y(e4, t2, r2, o3) {
          return k(function(e5) {
            for (var t3 = [], r3 = 0; r3 < e5.length; ++r3) t3.push(255 & e5.charCodeAt(r3));
            return t3;
          }(t2), e4, r2, o3);
        }
        function g(e4, t2, r2, o3) {
          return k(function(e5, t3) {
            for (var r3, o4, n2 = [], s3 = 0; s3 < e5.length && !((t3 -= 2) < 0); ++s3) o4 = e5.charCodeAt(s3), r3 = o4 >> 8, o4 = o4 % 256, n2.push(o4), n2.push(r3);
            return n2;
          }(t2, e4.length - r2), e4, r2, o3);
        }
        function T(e4, t2, r2) {
          r2 = Math.min(e4.length, r2);
          for (var o3 = [], n2 = t2; n2 < r2; ) {
            var s3, i2, a3, l2, u2 = e4[n2], c2 = null, d2 = 239 < u2 ? 4 : 223 < u2 ? 3 : 191 < u2 ? 2 : 1;
            if (n2 + d2 <= r2) switch (d2) {
              case 1:
                u2 < 128 && (c2 = u2);
                break;
              case 2:
                128 == (192 & (s3 = e4[n2 + 1])) && 127 < (l2 = (31 & u2) << 6 | 63 & s3) && (c2 = l2);
                break;
              case 3:
                s3 = e4[n2 + 1], i2 = e4[n2 + 2], 128 == (192 & s3) && 128 == (192 & i2) && 2047 < (l2 = (15 & u2) << 12 | (63 & s3) << 6 | 63 & i2) && (l2 < 55296 || 57343 < l2) && (c2 = l2);
                break;
              case 4:
                s3 = e4[n2 + 1], i2 = e4[n2 + 2], a3 = e4[n2 + 3], 128 == (192 & s3) && 128 == (192 & i2) && 128 == (192 & a3) && 65535 < (l2 = (15 & u2) << 18 | (63 & s3) << 12 | (63 & i2) << 6 | 63 & a3) && l2 < 1114112 && (c2 = l2);
            }
            null === c2 ? (c2 = 65533, d2 = 1) : 65535 < c2 && (c2 -= 65536, o3.push(c2 >>> 10 & 1023 | 55296), c2 = 56320 | 1023 & c2), o3.push(c2), n2 += d2;
          }
          var h2 = o3, f2 = h2.length;
          if (f2 <= v) return String.fromCharCode.apply(String, h2);
          for (var p2 = "", m2 = 0; m2 < f2; ) p2 += String.fromCharCode.apply(String, h2.slice(m2, m2 += v));
          return p2;
        }
        L.kMaxLength = t, (d.TYPED_ARRAY_SUPPORT = function() {
          try {
            var e4 = new Uint8Array(1), t2 = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(t2, Uint8Array.prototype), Object.setPrototypeOf(e4, t2), 42 === e4.foo();
          } catch (e5) {
            return false;
          }
        }()) || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(d.prototype, "parent", { enumerable: true, get: function() {
          if (d.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(d.prototype, "offset", { enumerable: true, get: function() {
          if (d.isBuffer(this)) return this.byteOffset;
        } }), "undefined" != typeof Symbol && null != Symbol.species && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false }), d.poolSize = 8192, d.from = o, Object.setPrototypeOf(d.prototype, Uint8Array.prototype), Object.setPrototypeOf(d, Uint8Array), d.alloc = function(e4, t2, r2) {
          return t2 = t2, r2 = r2, n(e4 = e4), !(e4 <= 0) && void 0 !== t2 ? "string" == typeof r2 ? l(e4).fill(t2, r2) : l(e4).fill(t2) : l(e4);
        }, d.allocUnsafe = i, d.allocUnsafeSlow = i, d.isBuffer = function(e4) {
          return null != e4 && true === e4._isBuffer && e4 !== d.prototype;
        }, d.compare = function(e4, t2) {
          if (O(e4, Uint8Array) && (e4 = d.from(e4, e4.offset, e4.byteLength)), O(t2, Uint8Array) && (t2 = d.from(t2, t2.offset, t2.byteLength)), !d.isBuffer(e4) || !d.isBuffer(t2)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (e4 === t2) return 0;
          for (var r2 = e4.length, o3 = t2.length, n2 = 0, s3 = Math.min(r2, o3); n2 < s3; ++n2) if (e4[n2] !== t2[n2]) {
            r2 = e4[n2], o3 = t2[n2];
            break;
          }
          return r2 < o3 ? -1 : o3 < r2 ? 1 : 0;
        }, d.isEncoding = function(e4) {
          switch (String(e4).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, d.concat = function(e4, t2) {
          if (!Array.isArray(e4)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (0 === e4.length) return d.alloc(0);
          if (void 0 === t2) for (n2 = t2 = 0; n2 < e4.length; ++n2) t2 += e4[n2].length;
          for (var r2 = d.allocUnsafe(t2), o3 = 0, n2 = 0; n2 < e4.length; ++n2) {
            var s3 = e4[n2];
            if (O(s3, Uint8Array) && (s3 = d.from(s3)), !d.isBuffer(s3)) throw new TypeError('"list" argument must be an Array of Buffers');
            s3.copy(r2, o3), o3 += s3.length;
          }
          return r2;
        }, d.byteLength = h, d.prototype._isBuffer = true, d.prototype.swap16 = function() {
          var e4 = this.length;
          if (e4 % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var t2 = 0; t2 < e4; t2 += 2) a2(this, t2, t2 + 1);
          return this;
        }, d.prototype.swap32 = function() {
          var e4 = this.length;
          if (e4 % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (var t2 = 0; t2 < e4; t2 += 4) a2(this, t2, t2 + 3), a2(this, t2 + 1, t2 + 2);
          return this;
        }, d.prototype.swap64 = function() {
          var e4 = this.length;
          if (e4 % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (var t2 = 0; t2 < e4; t2 += 8) a2(this, t2, t2 + 7), a2(this, t2 + 1, t2 + 6), a2(this, t2 + 2, t2 + 5), a2(this, t2 + 3, t2 + 4);
          return this;
        }, d.prototype.toLocaleString = d.prototype.toString = function() {
          var e4 = this.length;
          return 0 === e4 ? "" : 0 === arguments.length ? T(this, 0, e4) : r.apply(this, arguments);
        }, d.prototype.equals = function(e4) {
          if (d.isBuffer(e4)) return this === e4 || 0 === d.compare(this, e4);
          throw new TypeError("Argument must be a Buffer");
        }, d.prototype.inspect = function() {
          var e4 = "", t2 = L.INSPECT_MAX_BYTES, e4 = this.toString("hex", 0, t2).replace(/(.{2})/g, "$1 ").trim();
          return this.length > t2 && (e4 += " ... "), "<Buffer " + e4 + ">";
        }, e3 && (d.prototype[e3] = d.prototype.inspect), d.prototype.compare = function(e4, t2, r2, o3, n2) {
          if (O(e4, Uint8Array) && (e4 = d.from(e4, e4.offset, e4.byteLength)), !d.isBuffer(e4)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e4);
          if (void 0 === r2 && (r2 = e4 ? e4.length : 0), void 0 === o3 && (o3 = 0), void 0 === n2 && (n2 = this.length), (t2 = void 0 === t2 ? 0 : t2) < 0 || r2 > e4.length || o3 < 0 || n2 > this.length) throw new RangeError("out of range index");
          if (n2 <= o3 && r2 <= t2) return 0;
          if (n2 <= o3) return -1;
          if (r2 <= t2) return 1;
          if (this === e4) return 0;
          for (var s3 = (n2 >>>= 0) - (o3 >>>= 0), i2 = (r2 >>>= 0) - (t2 >>>= 0), a3 = Math.min(s3, i2), l2 = this.slice(o3, n2), u2 = e4.slice(t2, r2), c2 = 0; c2 < a3; ++c2) if (l2[c2] !== u2[c2]) {
            s3 = l2[c2], i2 = u2[c2];
            break;
          }
          return s3 < i2 ? -1 : i2 < s3 ? 1 : 0;
        }, d.prototype.includes = function(e4, t2, r2) {
          return -1 !== this.indexOf(e4, t2, r2);
        }, d.prototype.indexOf = function(e4, t2, r2) {
          return f(this, e4, t2, r2, true);
        }, d.prototype.lastIndexOf = function(e4, t2, r2) {
          return f(this, e4, t2, r2, false);
        }, d.prototype.write = function(e4, t2, r2, o3) {
          if (void 0 === t2) o3 = "utf8", r2 = this.length, t2 = 0;
          else if (void 0 === r2 && "string" == typeof t2) o3 = t2, r2 = this.length, t2 = 0;
          else {
            if (!isFinite(t2)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t2 >>>= 0, isFinite(r2) ? (r2 >>>= 0, void 0 === o3 && (o3 = "utf8")) : (o3 = r2, r2 = void 0);
          }
          var n2 = this.length - t2;
          if ((void 0 === r2 || n2 < r2) && (r2 = n2), 0 < e4.length && (r2 < 0 || t2 < 0) || t2 > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          o3 = o3 || "utf8";
          for (var s3, i2, a3, l2 = false; ; ) switch (o3) {
            case "hex":
              var u2 = this, c2 = e4, d2 = t2, h2 = r2, f2 = (d2 = Number(d2) || 0, u2.length - d2);
              (!h2 || f2 < (h2 = Number(h2))) && (h2 = f2), (f2 = c2.length) / 2 < h2 && (h2 = f2 / 2);
              for (var p2 = 0; p2 < h2; ++p2) {
                var m2 = parseInt(c2.substr(2 * p2, 2), 16);
                if (C(m2)) return p2;
                u2[d2 + p2] = m2;
              }
              return p2;
            case "utf8":
            case "utf-8":
              return f2 = t2, a3 = r2, k(E(e4, (i2 = this).length - f2), i2, f2, a3);
            case "ascii":
              return y(this, e4, t2, r2);
            case "latin1":
            case "binary":
              return y(this, e4, t2, r2);
            case "base64":
              return i2 = this, a3 = t2, s3 = r2, k(M(e4), i2, a3, s3);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return g(this, e4, t2, r2);
            default:
              if (l2) throw new TypeError("Unknown encoding: " + o3);
              o3 = ("" + o3).toLowerCase(), l2 = true;
          }
        }, d.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        var v = 4096;
        function m(e4, t2, r2) {
          if (e4 % 1 != 0 || e4 < 0) throw new RangeError("offset is not uint");
          if (r2 < e4 + t2) throw new RangeError("Trying to access beyond buffer length");
        }
        function b(e4, t2, r2, o3, n2, s3) {
          if (!d.isBuffer(e4)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (n2 < t2 || t2 < s3) throw new RangeError('"value" argument is out of bounds');
          if (r2 + o3 > e4.length) throw new RangeError("Index out of range");
        }
        function _(e4, t2, r2, o3) {
          if (r2 + o3 > e4.length) throw new RangeError("Index out of range");
          if (r2 < 0) throw new RangeError("Index out of range");
        }
        function j(e4, t2, r2, o3, n2) {
          return t2 = +t2, r2 >>>= 0, n2 || _(e4, 0, r2, 4), s2.write(e4, t2, r2, o3, 23, 4), r2 + 4;
        }
        function x2(e4, t2, r2, o3, n2) {
          return t2 = +t2, r2 >>>= 0, n2 || _(e4, 0, r2, 8), s2.write(e4, t2, r2, o3, 52, 8), r2 + 8;
        }
        d.prototype.slice = function(e4, t2) {
          var r2 = this.length, r2 = ((e4 = ~~e4) < 0 ? (e4 += r2) < 0 && (e4 = 0) : r2 < e4 && (e4 = r2), (t2 = void 0 === t2 ? r2 : ~~t2) < 0 ? (t2 += r2) < 0 && (t2 = 0) : r2 < t2 && (t2 = r2), t2 < e4 && (t2 = e4), this.subarray(e4, t2));
          return Object.setPrototypeOf(r2, d.prototype), r2;
        }, d.prototype.readUIntLE = function(e4, t2, r2) {
          e4 >>>= 0, t2 >>>= 0, r2 || m(e4, t2, this.length);
          for (var o3 = this[e4], n2 = 1, s3 = 0; ++s3 < t2 && (n2 *= 256); ) o3 += this[e4 + s3] * n2;
          return o3;
        }, d.prototype.readUIntBE = function(e4, t2, r2) {
          e4 >>>= 0, t2 >>>= 0, r2 || m(e4, t2, this.length);
          for (var o3 = this[e4 + --t2], n2 = 1; 0 < t2 && (n2 *= 256); ) o3 += this[e4 + --t2] * n2;
          return o3;
        }, d.prototype.readUInt8 = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 1, this.length), this[e4];
        }, d.prototype.readUInt16LE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 2, this.length), this[e4] | this[e4 + 1] << 8;
        }, d.prototype.readUInt16BE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 2, this.length), this[e4] << 8 | this[e4 + 1];
        }, d.prototype.readUInt32LE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 4, this.length), (this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16) + 16777216 * this[e4 + 3];
        }, d.prototype.readUInt32BE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 4, this.length), 16777216 * this[e4] + (this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3]);
        }, d.prototype.readIntLE = function(e4, t2, r2) {
          e4 >>>= 0, t2 >>>= 0, r2 || m(e4, t2, this.length);
          for (var o3 = this[e4], n2 = 1, s3 = 0; ++s3 < t2 && (n2 *= 256); ) o3 += this[e4 + s3] * n2;
          return (n2 *= 128) <= o3 && (o3 -= Math.pow(2, 8 * t2)), o3;
        }, d.prototype.readIntBE = function(e4, t2, r2) {
          e4 >>>= 0, t2 >>>= 0, r2 || m(e4, t2, this.length);
          for (var o3 = t2, n2 = 1, s3 = this[e4 + --o3]; 0 < o3 && (n2 *= 256); ) s3 += this[e4 + --o3] * n2;
          return (n2 *= 128) <= s3 && (s3 -= Math.pow(2, 8 * t2)), s3;
        }, d.prototype.readInt8 = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 1, this.length), 128 & this[e4] ? -1 * (255 - this[e4] + 1) : this[e4];
        }, d.prototype.readInt16LE = function(e4, t2) {
          e4 >>>= 0, t2 || m(e4, 2, this.length);
          t2 = this[e4] | this[e4 + 1] << 8;
          return 32768 & t2 ? 4294901760 | t2 : t2;
        }, d.prototype.readInt16BE = function(e4, t2) {
          e4 >>>= 0, t2 || m(e4, 2, this.length);
          t2 = this[e4 + 1] | this[e4] << 8;
          return 32768 & t2 ? 4294901760 | t2 : t2;
        }, d.prototype.readInt32LE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 4, this.length), this[e4] | this[e4 + 1] << 8 | this[e4 + 2] << 16 | this[e4 + 3] << 24;
        }, d.prototype.readInt32BE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 4, this.length), this[e4] << 24 | this[e4 + 1] << 16 | this[e4 + 2] << 8 | this[e4 + 3];
        }, d.prototype.readFloatLE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 4, this.length), s2.read(this, e4, true, 23, 4);
        }, d.prototype.readFloatBE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 4, this.length), s2.read(this, e4, false, 23, 4);
        }, d.prototype.readDoubleLE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 8, this.length), s2.read(this, e4, true, 52, 8);
        }, d.prototype.readDoubleBE = function(e4, t2) {
          return e4 >>>= 0, t2 || m(e4, 8, this.length), s2.read(this, e4, false, 52, 8);
        }, d.prototype.writeUIntLE = function(e4, t2, r2, o3) {
          e4 = +e4, t2 >>>= 0, r2 >>>= 0, o3 || b(this, e4, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var n2 = 1, s3 = 0;
          for (this[t2] = 255 & e4; ++s3 < r2 && (n2 *= 256); ) this[t2 + s3] = e4 / n2 & 255;
          return t2 + r2;
        }, d.prototype.writeUIntBE = function(e4, t2, r2, o3) {
          e4 = +e4, t2 >>>= 0, r2 >>>= 0, o3 || b(this, e4, t2, r2, Math.pow(2, 8 * r2) - 1, 0);
          var n2 = r2 - 1, s3 = 1;
          for (this[t2 + n2] = 255 & e4; 0 <= --n2 && (s3 *= 256); ) this[t2 + n2] = e4 / s3 & 255;
          return t2 + r2;
        }, d.prototype.writeUInt8 = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 1, 255, 0), this[t2] = 255 & e4, t2 + 1;
        }, d.prototype.writeUInt16LE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 2, 65535, 0), this[t2] = 255 & e4, this[t2 + 1] = e4 >>> 8, t2 + 2;
        }, d.prototype.writeUInt16BE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 2, 65535, 0), this[t2] = e4 >>> 8, this[t2 + 1] = 255 & e4, t2 + 2;
        }, d.prototype.writeUInt32LE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 4, 4294967295, 0), this[t2 + 3] = e4 >>> 24, this[t2 + 2] = e4 >>> 16, this[t2 + 1] = e4 >>> 8, this[t2] = 255 & e4, t2 + 4;
        }, d.prototype.writeUInt32BE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 4, 4294967295, 0), this[t2] = e4 >>> 24, this[t2 + 1] = e4 >>> 16, this[t2 + 2] = e4 >>> 8, this[t2 + 3] = 255 & e4, t2 + 4;
        }, d.prototype.writeIntLE = function(e4, t2, r2, o3) {
          e4 = +e4, t2 >>>= 0, o3 || b(this, e4, t2, r2, (o3 = Math.pow(2, 8 * r2 - 1)) - 1, -o3);
          var n2 = 0, s3 = 1, i2 = 0;
          for (this[t2] = 255 & e4; ++n2 < r2 && (s3 *= 256); ) e4 < 0 && 0 === i2 && 0 !== this[t2 + n2 - 1] && (i2 = 1), this[t2 + n2] = (e4 / s3 >> 0) - i2 & 255;
          return t2 + r2;
        }, d.prototype.writeIntBE = function(e4, t2, r2, o3) {
          e4 = +e4, t2 >>>= 0, o3 || b(this, e4, t2, r2, (o3 = Math.pow(2, 8 * r2 - 1)) - 1, -o3);
          var n2 = r2 - 1, s3 = 1, i2 = 0;
          for (this[t2 + n2] = 255 & e4; 0 <= --n2 && (s3 *= 256); ) e4 < 0 && 0 === i2 && 0 !== this[t2 + n2 + 1] && (i2 = 1), this[t2 + n2] = (e4 / s3 >> 0) - i2 & 255;
          return t2 + r2;
        }, d.prototype.writeInt8 = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 1, 127, -128), this[t2] = 255 & (e4 = e4 < 0 ? 255 + e4 + 1 : e4), t2 + 1;
        }, d.prototype.writeInt16LE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 2, 32767, -32768), this[t2] = 255 & e4, this[t2 + 1] = e4 >>> 8, t2 + 2;
        }, d.prototype.writeInt16BE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 2, 32767, -32768), this[t2] = e4 >>> 8, this[t2 + 1] = 255 & e4, t2 + 2;
        }, d.prototype.writeInt32LE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 4, 2147483647, -2147483648), this[t2] = 255 & e4, this[t2 + 1] = e4 >>> 8, this[t2 + 2] = e4 >>> 16, this[t2 + 3] = e4 >>> 24, t2 + 4;
        }, d.prototype.writeInt32BE = function(e4, t2, r2) {
          return e4 = +e4, t2 >>>= 0, r2 || b(this, e4, t2, 4, 2147483647, -2147483648), this[t2] = (e4 = e4 < 0 ? 4294967295 + e4 + 1 : e4) >>> 24, this[t2 + 1] = e4 >>> 16, this[t2 + 2] = e4 >>> 8, this[t2 + 3] = 255 & e4, t2 + 4;
        }, d.prototype.writeFloatLE = function(e4, t2, r2) {
          return j(this, e4, t2, true, r2);
        }, d.prototype.writeFloatBE = function(e4, t2, r2) {
          return j(this, e4, t2, false, r2);
        }, d.prototype.writeDoubleLE = function(e4, t2, r2) {
          return x2(this, e4, t2, true, r2);
        }, d.prototype.writeDoubleBE = function(e4, t2, r2) {
          return x2(this, e4, t2, false, r2);
        }, d.prototype.copy = function(e4, t2, r2, o3) {
          if (!d.isBuffer(e4)) throw new TypeError("argument should be a Buffer");
          if (r2 = r2 || 0, o3 || 0 === o3 || (o3 = this.length), t2 >= e4.length && (t2 = e4.length), (o3 = 0 < o3 && o3 < r2 ? r2 : o3) === r2) return 0;
          if (0 === e4.length || 0 === this.length) return 0;
          if ((t2 = t2 || 0) < 0) throw new RangeError("targetStart out of bounds");
          if (r2 < 0 || r2 >= this.length) throw new RangeError("Index out of range");
          if (o3 < 0) throw new RangeError("sourceEnd out of bounds");
          o3 > this.length && (o3 = this.length);
          var n2 = (o3 = e4.length - t2 < o3 - r2 ? e4.length - t2 + r2 : o3) - r2;
          if (this === e4 && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(t2, r2, o3);
          else if (this === e4 && r2 < t2 && t2 < o3) for (var s3 = n2 - 1; 0 <= s3; --s3) e4[s3 + t2] = this[s3 + r2];
          else Uint8Array.prototype.set.call(e4, this.subarray(r2, o3), t2);
          return n2;
        }, d.prototype.fill = function(e4, t2, r2, o3) {
          if ("string" == typeof e4) {
            if ("string" == typeof t2 ? (o3 = t2, t2 = 0, r2 = this.length) : "string" == typeof r2 && (o3 = r2, r2 = this.length), void 0 !== o3 && "string" != typeof o3) throw new TypeError("encoding must be a string");
            if ("string" == typeof o3 && !d.isEncoding(o3)) throw new TypeError("Unknown encoding: " + o3);
            var n2;
            1 === e4.length && (n2 = e4.charCodeAt(0), ("utf8" === o3 && n2 < 128 || "latin1" === o3) && (e4 = n2));
          } else "number" == typeof e4 ? e4 &= 255 : "boolean" == typeof e4 && (e4 = Number(e4));
          if (t2 < 0 || this.length < t2 || this.length < r2) throw new RangeError("Out of range index");
          var s3;
          if (!(r2 <= t2)) if (t2 >>>= 0, r2 = void 0 === r2 ? this.length : r2 >>> 0, "number" == typeof (e4 = e4 || 0)) for (s3 = t2; s3 < r2; ++s3) this[s3] = e4;
          else {
            var i2 = d.isBuffer(e4) ? e4 : d.from(e4, o3), a3 = i2.length;
            if (0 === a3) throw new TypeError('The value "' + e4 + '" is invalid for argument "value"');
            for (s3 = 0; s3 < r2 - t2; ++s3) this[s3 + t2] = i2[s3 % a3];
          }
          return this;
        };
        var w = /[^+/0-9A-Za-z-_]/g;
        function E(e4, t2) {
          t2 = t2 || 1 / 0;
          for (var r2, o3 = e4.length, n2 = null, s3 = [], i2 = 0; i2 < o3; ++i2) {
            if (55295 < (r2 = e4.charCodeAt(i2)) && r2 < 57344) {
              if (!n2) {
                if (56319 < r2) {
                  -1 < (t2 -= 3) && s3.push(239, 191, 189);
                  continue;
                }
                if (i2 + 1 === o3) {
                  -1 < (t2 -= 3) && s3.push(239, 191, 189);
                  continue;
                }
                n2 = r2;
                continue;
              }
              if (r2 < 56320) {
                -1 < (t2 -= 3) && s3.push(239, 191, 189), n2 = r2;
                continue;
              }
              r2 = 65536 + (n2 - 55296 << 10 | r2 - 56320);
            } else n2 && -1 < (t2 -= 3) && s3.push(239, 191, 189);
            if (n2 = null, r2 < 128) {
              if (--t2 < 0) break;
              s3.push(r2);
            } else if (r2 < 2048) {
              if ((t2 -= 2) < 0) break;
              s3.push(r2 >> 6 | 192, 63 & r2 | 128);
            } else if (r2 < 65536) {
              if ((t2 -= 3) < 0) break;
              s3.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            } else {
              if (!(r2 < 1114112)) throw new Error("Invalid code point");
              if ((t2 -= 4) < 0) break;
              s3.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, 63 & r2 | 128);
            }
          }
          return s3;
        }
        function M(e4) {
          return S.toByteArray(function(e5) {
            if ((e5 = (e5 = e5.split("=")[0]).trim().replace(w, "")).length < 2) return "";
            for (; e5.length % 4 != 0; ) e5 += "=";
            return e5;
          }(e4));
        }
        function k(e4, t2, r2, o3) {
          for (var n2 = 0; n2 < o3 && !(n2 + r2 >= t2.length || n2 >= e4.length); ++n2) t2[n2 + r2] = e4[n2];
          return n2;
        }
        function O(e4, t2) {
          return e4 instanceof t2 || null != e4 && null != e4.constructor && null != e4.constructor.name && e4.constructor.name === t2.name;
        }
        function C(e4) {
          return e4 != e4;
        }
        var A = function() {
          for (var e4 = "0123456789abcdef", t2 = new Array(256), r2 = 0; r2 < 16; ++r2) for (var o3 = 16 * r2, n2 = 0; n2 < 16; ++n2) t2[o3 + n2] = e4[r2] + e4[n2];
          return t2;
        }();
      }).call(this, P("buffer").Buffer);
    }, { "base64-js": 1, buffer: 4, ieee754: 254 }], 5: [function(e2, t, r) {
      t.exports = function(e3) {
        if ("function" != typeof e3) throw TypeError(String(e3) + " is not a function");
        return e3;
      };
    }, {}], 6: [function(e2, t, r) {
      var o = e2("../internals/is-object");
      t.exports = function(e3) {
        if (o(e3) || null === e3) return e3;
        throw TypeError("Can't set " + String(e3) + " as a prototype");
      };
    }, { "../internals/is-object": 75 }], 7: [function(e2, t, r) {
      var o = e2("../internals/well-known-symbol"), n = e2("../internals/object-create"), e2 = e2("../internals/object-define-property"), s2 = o("unscopables"), i = Array.prototype;
      null == i[s2] && e2.f(i, s2, { configurable: true, value: n(null) }), t.exports = function(e3) {
        i[s2][e3] = true;
      };
    }, { "../internals/object-create": 91, "../internals/object-define-property": 93, "../internals/well-known-symbol": 150 }], 8: [function(e2, t, r) {
      var o = e2("../internals/string-multibyte").charAt;
      t.exports = function(e3, t2, r2) {
        return t2 + (r2 ? o(e3, t2).length : 1);
      };
    }, { "../internals/string-multibyte": 125 }], 9: [function(e2, t, r) {
      t.exports = function(e3, t2, r2) {
        if (e3 instanceof t2) return e3;
        throw TypeError("Incorrect " + (r2 ? r2 + " " : "") + "invocation");
      };
    }, {}], 10: [function(e2, t, r) {
      var o = e2("../internals/is-object");
      t.exports = function(e3) {
        if (o(e3)) return e3;
        throw TypeError(String(e3) + " is not an object");
      };
    }, { "../internals/is-object": 75 }], 11: [function(e2, t, r) {
      t.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView;
    }, {}], 12: [function(e2, t, r) {
      function o(e3) {
        return l(e3) && u(E, c(e3));
      }
      var n, s2 = e2("../internals/array-buffer-native"), i = e2("../internals/descriptors"), a2 = e2("../internals/global"), l = e2("../internals/is-object"), u = e2("../internals/has"), c = e2("../internals/classof"), d = e2("../internals/create-non-enumerable-property"), h = e2("../internals/redefine"), f = e2("../internals/object-define-property").f, p = e2("../internals/object-get-prototype-of"), m = e2("../internals/object-set-prototype-of"), y = e2("../internals/well-known-symbol"), e2 = e2("../internals/uid"), g = a2.Int8Array, v = g && g.prototype, b = a2.Uint8ClampedArray, b = b && b.prototype, _ = g && p(g), j = v && p(v), x2 = Object.prototype, w = x2.isPrototypeOf, y = y("toStringTag"), S = e2("TYPED_ARRAY_TAG"), T = s2 && !!m && "Opera" !== c(a2.opera), e2 = false, E = { Int8Array: 1, Uint8Array: 1, Uint8ClampedArray: 1, Int16Array: 2, Uint16Array: 2, Int32Array: 4, Uint32Array: 4, Float32Array: 4, Float64Array: 8 };
      for (n in E) a2[n] || (T = false);
      if ((!T || "function" != typeof _ || _ === Function.prototype) && (_ = function() {
        throw TypeError("Incorrect invocation");
      }, T)) for (n in E) a2[n] && m(a2[n], _);
      if ((!T || !j || j === x2) && (j = _.prototype, T)) for (n in E) a2[n] && m(a2[n].prototype, j);
      if (T && p(b) !== j && m(b, j), i && !u(j, y)) for (n in e2 = true, f(j, y, { get: function() {
        return l(this) ? this[S] : void 0;
      } }), E) a2[n] && d(a2[n], S, n);
      t.exports = { NATIVE_ARRAY_BUFFER_VIEWS: T, TYPED_ARRAY_TAG: e2 && S, aTypedArray: function(e3) {
        if (o(e3)) return e3;
        throw TypeError("Target is not a typed array");
      }, aTypedArrayConstructor: function(e3) {
        if (m) {
          if (w.call(_, e3)) return e3;
        } else for (var t2 in E) if (u(E, n)) {
          t2 = a2[t2];
          if (t2 && (e3 === t2 || w.call(t2, e3))) return e3;
        }
        throw TypeError("Target is not a typed array constructor");
      }, exportTypedArrayMethod: function(e3, t2, r2) {
        if (i) {
          if (r2) for (var o3 in E) {
            o3 = a2[o3];
            o3 && u(o3.prototype, e3) && delete o3.prototype[e3];
          }
          j[e3] && !r2 || h(j, e3, !r2 && T && v[e3] || t2);
        }
      }, exportTypedArrayStaticMethod: function(e3, t2, r2) {
        var o3, n2;
        if (i) {
          if (m) {
            if (r2) for (o3 in E) (n2 = a2[o3]) && u(n2, e3) && delete n2[e3];
            if (_[e3] && !r2) return;
            try {
              return h(_, e3, !r2 && T && g[e3] || t2);
            } catch (e4) {
            }
          }
          for (o3 in E) !(n2 = a2[o3]) || n2[e3] && !r2 || h(n2, e3, t2);
        }
      }, isView: function(e3) {
        e3 = c(e3);
        return "DataView" === e3 || u(E, e3);
      }, isTypedArray: o, TypedArray: _, TypedArrayPrototype: j };
    }, { "../internals/array-buffer-native": 11, "../internals/classof": 29, "../internals/create-non-enumerable-property": 38, "../internals/descriptors": 43, "../internals/global": 60, "../internals/has": 61, "../internals/is-object": 75, "../internals/object-define-property": 93, "../internals/object-get-prototype-of": 98, "../internals/object-set-prototype-of": 102, "../internals/redefine": 110, "../internals/uid": 147, "../internals/well-known-symbol": 150 }], 13: [function(e2, t, D) {
      function r(e3) {
        return [255 & e3];
      }
      function o(e3) {
        return [255 & e3, e3 >> 8 & 255];
      }
      function n(e3) {
        return [255 & e3, e3 >> 8 & 255, e3 >> 16 & 255, e3 >> 24 & 255];
      }
      function s2(e3) {
        return e3[3] << 24 | e3[2] << 16 | e3[1] << 8 | e3[0];
      }
      function i(e3) {
        return C(e3, 23, 4);
      }
      function F(e3) {
        return C(e3, 52, 8);
      }
      function a2(e3, t2) {
        H(e3[w], t2, { get: function() {
          return b(this)[t2];
        } });
      }
      function l(e3, t2, r2, o3) {
        if (r2 = m(r2), e3 = b(e3), r2 + t2 > e3.byteLength) throw O(S);
        var n2 = b(e3.buffer).bytes, r2 = r2 + e3.byteOffset, e3 = n2.slice(r2, r2 + t2);
        return o3 ? e3 : e3.reverse();
      }
      function u(e3, t2, r2, o3, n2, s3) {
        if (r2 = m(r2), e3 = b(e3), r2 + t2 > e3.byteLength) throw O(S);
        for (var i2 = b(e3.buffer).bytes, a3 = r2 + e3.byteOffset, l2 = o3(+n2), u2 = 0; u2 < t2; u2++) i2[a3 + u2] = l2[s3 ? u2 : t2 - u2 - 1];
      }
      var c = e2("../internals/global"), d = e2("../internals/descriptors"), U = e2("../internals/array-buffer-native"), N = e2("../internals/create-non-enumerable-property"), h = e2("../internals/redefine-all"), f = e2("../internals/fails"), p = e2("../internals/an-instance"), B = e2("../internals/to-integer"), G = e2("../internals/to-length"), m = e2("../internals/to-index"), y = e2("../internals/ieee754"), V = e2("../internals/object-get-prototype-of"), g = e2("../internals/object-set-prototype-of"), z = e2("../internals/object-get-own-property-names").f, H = e2("../internals/object-define-property").f, W = e2("../internals/array-fill"), v = e2("../internals/set-to-string-tag"), e2 = e2("../internals/internal-state"), b = e2.get, _ = e2.set, j = "ArrayBuffer", x2 = "DataView", w = "prototype", S = "Wrong index", T = c[j], E = T, M = c[x2], e2 = M && M[w], k = Object.prototype, O = c.RangeError, C = y.pack, A = y.unpack;
      if (U) {
        if (!f(function() {
          T(1);
        }) || !f(function() {
          new T(-1);
        }) || f(function() {
          return new T(), new T(1.5), new T(NaN), T.name != j;
        })) {
          for (var P, c = (E = function(e3) {
            return p(this, E), new T(m(e3));
          })[w] = T[w], L = z(T), R = 0; L.length > R; ) (P = L[R++]) in E || N(E, P, T[P]);
          c.constructor = E;
        }
        g && V(e2) !== k && g(e2, k);
        var y = new M(new E(2)), I = e2.setInt8;
        y.setInt8(0, 2147483648), y.setInt8(1, 2147483649), !y.getInt8(0) && y.getInt8(1) || h(e2, { setInt8: function(e3, t2) {
          I.call(this, e3, t2 << 24 >> 24);
        }, setUint8: function(e3, t2) {
          I.call(this, e3, t2 << 24 >> 24);
        } }, { unsafe: true });
      } else E = function(e3) {
        p(this, E, j);
        e3 = m(e3);
        _(this, { bytes: W.call(new Array(e3), 0), byteLength: e3 }), d || (this.byteLength = e3);
      }, M = function(e3, t2, r2) {
        p(this, M, x2), p(e3, E, x2);
        var o3 = b(e3).byteLength, t2 = B(t2);
        if (t2 < 0 || o3 < t2) throw O("Wrong offset");
        if (o3 < t2 + (r2 = void 0 === r2 ? o3 - t2 : G(r2))) throw O("Wrong length");
        _(this, { buffer: e3, byteLength: r2, byteOffset: t2 }), d || (this.buffer = e3, this.byteLength = r2, this.byteOffset = t2);
      }, d && (a2(E, "byteLength"), a2(M, "buffer"), a2(M, "byteLength"), a2(M, "byteOffset")), h(M[w], { getInt8: function(e3) {
        return l(this, 1, e3)[0] << 24 >> 24;
      }, getUint8: function(e3) {
        return l(this, 1, e3)[0];
      }, getInt16: function(e3) {
        e3 = l(this, 2, e3, 1 < arguments.length ? arguments[1] : void 0);
        return (e3[1] << 8 | e3[0]) << 16 >> 16;
      }, getUint16: function(e3) {
        e3 = l(this, 2, e3, 1 < arguments.length ? arguments[1] : void 0);
        return e3[1] << 8 | e3[0];
      }, getInt32: function(e3) {
        return s2(l(this, 4, e3, 1 < arguments.length ? arguments[1] : void 0));
      }, getUint32: function(e3) {
        return s2(l(this, 4, e3, 1 < arguments.length ? arguments[1] : void 0)) >>> 0;
      }, getFloat32: function(e3) {
        return A(l(this, 4, e3, 1 < arguments.length ? arguments[1] : void 0), 23);
      }, getFloat64: function(e3) {
        return A(l(this, 8, e3, 1 < arguments.length ? arguments[1] : void 0), 52);
      }, setInt8: function(e3, t2) {
        u(this, 1, e3, r, t2);
      }, setUint8: function(e3, t2) {
        u(this, 1, e3, r, t2);
      }, setInt16: function(e3, t2) {
        u(this, 2, e3, o, t2, 2 < arguments.length ? arguments[2] : void 0);
      }, setUint16: function(e3, t2) {
        u(this, 2, e3, o, t2, 2 < arguments.length ? arguments[2] : void 0);
      }, setInt32: function(e3, t2) {
        u(this, 4, e3, n, t2, 2 < arguments.length ? arguments[2] : void 0);
      }, setUint32: function(e3, t2) {
        u(this, 4, e3, n, t2, 2 < arguments.length ? arguments[2] : void 0);
      }, setFloat32: function(e3, t2) {
        u(this, 4, e3, i, t2, 2 < arguments.length ? arguments[2] : void 0);
      }, setFloat64: function(e3, t2) {
        u(this, 8, e3, F, t2, 2 < arguments.length ? arguments[2] : void 0);
      } });
      v(E, j), v(M, x2), t.exports = { ArrayBuffer: E, DataView: M };
    }, { "../internals/an-instance": 9, "../internals/array-buffer-native": 11, "../internals/array-fill": 15, "../internals/create-non-enumerable-property": 38, "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 60, "../internals/ieee754": 66, "../internals/internal-state": 71, "../internals/object-define-property": 93, "../internals/object-get-own-property-names": 96, "../internals/object-get-prototype-of": 98, "../internals/object-set-prototype-of": 102, "../internals/redefine-all": 109, "../internals/set-to-string-tag": 119, "../internals/to-index": 135, "../internals/to-integer": 137, "../internals/to-length": 138 }], 14: [function(e2, t, r) {
      var l = e2("../internals/to-object"), u = e2("../internals/to-absolute-index"), c = e2("../internals/to-length"), d = Math.min;
      t.exports = [].copyWithin || function(e3, t2) {
        var r2 = l(this), o = c(r2.length), n = u(e3, o), s2 = u(t2, o), e3 = 2 < arguments.length ? arguments[2] : void 0, i = d((void 0 === e3 ? o : u(e3, o)) - s2, o - n), a2 = 1;
        for (s2 < n && n < s2 + i && (a2 = -1, s2 += i - 1, n += i - 1); 0 < i--; ) s2 in r2 ? r2[n] = r2[s2] : delete r2[n], n += a2, s2 += a2;
        return r2;
      };
    }, { "../internals/to-absolute-index": 134, "../internals/to-length": 138, "../internals/to-object": 139 }], 15: [function(e2, t, r) {
      var i = e2("../internals/to-object"), a2 = e2("../internals/to-absolute-index"), l = e2("../internals/to-length");
      t.exports = function(e3) {
        for (var t2 = i(this), r2 = l(t2.length), o = arguments.length, n = a2(1 < o ? arguments[1] : void 0, r2), o = 2 < o ? arguments[2] : void 0, s2 = void 0 === o ? r2 : a2(o, r2); n < s2; ) t2[n++] = e3;
        return t2;
      };
    }, { "../internals/to-absolute-index": 134, "../internals/to-length": 138, "../internals/to-object": 139 }], 16: [function(e2, t, r) {
      var o = e2("../internals/array-iteration").forEach, n = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), n = n("forEach"), e2 = e2("forEach");
      t.exports = n && e2 ? [].forEach : function(e3) {
        return o(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      };
    }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23 }], 17: [function(e2, t, r) {
      var f = e2("../internals/function-bind-context"), p = e2("../internals/to-object"), m = e2("../internals/call-with-safe-iteration-closing"), y = e2("../internals/is-array-iterator-method"), g = e2("../internals/to-length"), v = e2("../internals/create-property"), b = e2("../internals/get-iterator-method");
      t.exports = function(e3) {
        var t2, r2, o, n, s2, i, a2 = p(e3), e3 = "function" == typeof this ? this : Array, l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = b(a2), h = 0;
        if (c && (u = f(u, 2 < l ? arguments[2] : void 0, 2)), null == d || e3 == Array && y(d)) for (r2 = new e3(t2 = g(a2.length)); h < t2; h++) i = c ? u(a2[h], h) : a2[h], v(r2, h, i);
        else for (s2 = (n = d.call(a2)).next, r2 = new e3(); !(o = s2.call(n)).done; h++) i = c ? m(n, u, [o.value, h], true) : o.value, v(r2, h, i);
        return r2.length = h, r2;
      };
    }, { "../internals/call-with-safe-iteration-closing": 26, "../internals/create-property": 40, "../internals/function-bind-context": 55, "../internals/get-iterator-method": 58, "../internals/is-array-iterator-method": 72, "../internals/to-length": 138, "../internals/to-object": 139 }], 18: [function(e2, t, r) {
      function o(a2) {
        return function(e3, t2, r2) {
          var o3, n = l(e3), s2 = u(n.length), i = c(r2, s2);
          if (a2 && t2 != t2) {
            for (; i < s2; ) if ((o3 = n[i++]) != o3) return true;
          } else for (; i < s2; i++) if ((a2 || i in n) && n[i] === t2) return a2 || i || 0;
          return !a2 && -1;
        };
      }
      var l = e2("../internals/to-indexed-object"), u = e2("../internals/to-length"), c = e2("../internals/to-absolute-index");
      t.exports = { includes: o(true), indexOf: o(false) };
    }, { "../internals/to-absolute-index": 134, "../internals/to-indexed-object": 136, "../internals/to-length": 138 }], 19: [function(e2, t, r) {
      function o(h) {
        var f = 1 == h, p = 2 == h, m = 3 == h, y = 4 == h, g = 6 == h, v = 5 == h || g;
        return function(e3, t2, r2, o3) {
          for (var n, s2, i = j(e3), a2 = _(i), l = b(t2, r2, 3), u = x2(a2.length), c = 0, t2 = o3 || w, d = f ? t2(e3, u) : p ? t2(e3, 0) : void 0; c < u; c++) if ((v || c in a2) && (s2 = l(n = a2[c], c, i), h)) {
            if (f) d[c] = s2;
            else if (s2) switch (h) {
              case 3:
                return true;
              case 5:
                return n;
              case 6:
                return c;
              case 2:
                S.call(d, n);
            }
            else if (y) return false;
          }
          return g ? -1 : m || y ? y : d;
        };
      }
      var b = e2("../internals/function-bind-context"), _ = e2("../internals/indexed-object"), j = e2("../internals/to-object"), x2 = e2("../internals/to-length"), w = e2("../internals/array-species-create"), S = [].push;
      t.exports = { forEach: o(0), map: o(1), filter: o(2), some: o(3), every: o(4), find: o(5), findIndex: o(6) };
    }, { "../internals/array-species-create": 25, "../internals/function-bind-context": 55, "../internals/indexed-object": 67, "../internals/to-length": 138, "../internals/to-object": 139 }], 20: [function(e2, t, r) {
      var n = e2("../internals/to-indexed-object"), s2 = e2("../internals/to-integer"), i = e2("../internals/to-length"), o = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), a2 = Math.min, l = [].lastIndexOf, u = !!l && 1 / [1].lastIndexOf(1, -0) < 0, o = o("lastIndexOf"), e2 = e2("indexOf", { ACCESSORS: true, 1: 0 });
      t.exports = u || !o || !e2 ? function(e3) {
        if (u) return l.apply(this, arguments) || 0;
        var t2 = n(this), r2 = i(t2.length), o3 = r2 - 1;
        for ((o3 = 1 < arguments.length ? a2(o3, s2(arguments[1])) : o3) < 0 && (o3 = r2 + o3); 0 <= o3; o3--) if (o3 in t2 && t2[o3] === e3) return o3 || 0;
        return -1;
      } : l;
    }, { "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/to-indexed-object": 136, "../internals/to-integer": 137, "../internals/to-length": 138 }], 21: [function(e2, t, r) {
      var o = e2("../internals/fails"), n = e2("../internals/well-known-symbol"), s2 = e2("../internals/engine-v8-version"), i = n("species");
      t.exports = function(t2) {
        return 51 <= s2 || !o(function() {
          var e3 = [];
          return (e3.constructor = {})[i] = function() {
            return { foo: 1 };
          }, 1 !== e3[t2](Boolean).foo;
        });
      };
    }, { "../internals/engine-v8-version": 48, "../internals/fails": 51, "../internals/well-known-symbol": 150 }], 22: [function(e2, t, r) {
      var o = e2("../internals/fails");
      t.exports = function(e3, t2) {
        var r2 = [][e3];
        return !!r2 && o(function() {
          r2.call(null, t2 || function() {
            throw 1;
          }, 1);
        });
      };
    }, { "../internals/fails": 51 }], 23: [function(e2, t, r) {
      function i(e3) {
        throw e3;
      }
      var a2 = e2("../internals/descriptors"), l = e2("../internals/fails"), u = e2("../internals/has"), c = Object.defineProperty, d = {};
      t.exports = function(e3, t2) {
        var r2, o, n, s2;
        return u(d, e3) ? d[e3] : (r2 = [][e3], o = !!u(t2 = t2 || {}, "ACCESSORS") && t2.ACCESSORS, n = u(t2, 0) ? t2[0] : i, s2 = u(t2, 1) ? t2[1] : void 0, d[e3] = !!r2 && !l(function() {
          if (o && !a2) return true;
          var e4 = { length: -1 };
          o ? c(e4, 1, { enumerable: true, get: i }) : e4[1] = 1, r2.call(e4, n, s2);
        }));
      };
    }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/has": 61 }], 24: [function(e2, t, r) {
      function o(u) {
        return function(e3, t2, r2, o3) {
          c(t2);
          var n = d(e3), s2 = h(n), i = f(n.length), a2 = u ? i - 1 : 0, l = u ? -1 : 1;
          if (r2 < 2) for (; ; ) {
            if (a2 in s2) {
              o3 = s2[a2], a2 += l;
              break;
            }
            if (a2 += l, u ? a2 < 0 : i <= a2) throw TypeError("Reduce of empty array with no initial value");
          }
          for (; u ? 0 <= a2 : a2 < i; a2 += l) a2 in s2 && (o3 = t2(o3, s2[a2], a2, n));
          return o3;
        };
      }
      var c = e2("../internals/a-function"), d = e2("../internals/to-object"), h = e2("../internals/indexed-object"), f = e2("../internals/to-length");
      t.exports = { left: o(false), right: o(true) };
    }, { "../internals/a-function": 5, "../internals/indexed-object": 67, "../internals/to-length": 138, "../internals/to-object": 139 }], 25: [function(e2, t, r) {
      var o = e2("../internals/is-object"), n = e2("../internals/is-array"), s2 = e2("../internals/well-known-symbol")("species");
      t.exports = function(e3, t2) {
        var r2;
        return new (void 0 === (r2 = n(e3) && ("function" == typeof (r2 = e3.constructor) && (r2 === Array || n(r2.prototype)) || o(r2) && null === (r2 = r2[s2])) ? void 0 : r2) ? Array : r2)(0 === t2 ? 0 : t2);
      };
    }, { "../internals/is-array": 73, "../internals/is-object": 75, "../internals/well-known-symbol": 150 }], 26: [function(e2, t, r) {
      var n = e2("../internals/an-object");
      t.exports = function(t2, e3, r2, o) {
        try {
          return o ? e3(n(r2)[0], r2[1]) : e3(r2);
        } catch (e4) {
          o = t2.return;
          throw void 0 !== o && n(o.call(t2)), e4;
        }
      };
    }, { "../internals/an-object": 10 }], 27: [function(e2, t, r) {
      var n = e2("../internals/well-known-symbol")("iterator"), s2 = false;
      try {
        var o = 0, i = { next: function() {
          return { done: !!o++ };
        }, return: function() {
          s2 = true;
        } };
        i[n] = function() {
          return this;
        }, Array.from(i, function() {
          throw 2;
        });
      } catch (e3) {
      }
      t.exports = function(e3, t2) {
        if (!t2 && !s2) return false;
        var r2 = false;
        try {
          var o3 = {};
          o3[n] = function() {
            return { next: function() {
              return { done: r2 = true };
            } };
          }, e3(o3);
        } catch (e4) {
        }
        return r2;
      };
    }, { "../internals/well-known-symbol": 150 }], 28: [function(e2, t, r) {
      var o = {}.toString;
      t.exports = function(e3) {
        return o.call(e3).slice(8, -1);
      };
    }, {}], 29: [function(e2, t, r) {
      var o = e2("../internals/to-string-tag-support"), n = e2("../internals/classof-raw"), s2 = e2("../internals/well-known-symbol")("toStringTag"), i = "Arguments" == n(/* @__PURE__ */ function() {
        return arguments;
      }());
      t.exports = o ? n : function(e3) {
        var t2;
        return void 0 === e3 ? "Undefined" : null === e3 ? "Null" : "string" == typeof (t2 = function(e4, t3) {
          try {
            return e4[t3];
          } catch (e5) {
          }
        }(e3 = Object(e3), s2)) ? t2 : i ? n(e3) : "Object" == (t2 = n(e3)) && "function" == typeof e3.callee ? "Arguments" : t2;
      };
    }, { "../internals/classof-raw": 28, "../internals/to-string-tag-support": 143, "../internals/well-known-symbol": 150 }], 30: [function(e2, t, r) {
      var u = e2("../internals/object-define-property").f, c = e2("../internals/object-create"), d = e2("../internals/redefine-all"), h = e2("../internals/function-bind-context"), f = e2("../internals/an-instance"), p = e2("../internals/iterate"), i = e2("../internals/define-iterator"), a2 = e2("../internals/set-species"), m = e2("../internals/descriptors"), y = e2("../internals/internal-metadata").fastKey, e2 = e2("../internals/internal-state"), g = e2.set, v = e2.getterFor;
      t.exports = { getConstructor: function(e3, r2, o, n) {
        function s2(e4, t2, r3) {
          var o3, n2 = l(e4), s3 = i2(e4, t2);
          return s3 ? s3.value = r3 : (n2.last = s3 = { index: o3 = y(t2, true), key: t2, value: r3, previous: t2 = n2.last, next: void 0, removed: false }, n2.first || (n2.first = s3), t2 && (t2.next = s3), m ? n2.size++ : e4.size++, "F" !== o3 && (n2.index[o3] = s3)), e4;
        }
        function i2(e4, t2) {
          var r3, e4 = l(e4), o3 = y(t2);
          if ("F" !== o3) return e4.index[o3];
          for (r3 = e4.first; r3; r3 = r3.next) if (r3.key == t2) return r3;
        }
        var a3 = e3(function(e4, t2) {
          f(e4, a3, r2), g(e4, { type: r2, index: c(null), first: void 0, last: void 0, size: 0 }), m || (e4.size = 0), null != t2 && p(t2, e4[n], e4, o);
        }), l = v(r2);
        return d(a3.prototype, { clear: function() {
          for (var e4 = l(this), t2 = e4.index, r3 = e4.first; r3; ) r3.removed = true, r3.previous && (r3.previous = r3.previous.next = void 0), delete t2[r3.index], r3 = r3.next;
          e4.first = e4.last = void 0, m ? e4.size = 0 : this.size = 0;
        }, delete: function(e4) {
          var t2, r3, o3 = l(this), e4 = i2(this, e4);
          return e4 && (t2 = e4.next, r3 = e4.previous, delete o3.index[e4.index], e4.removed = true, r3 && (r3.next = t2), t2 && (t2.previous = r3), o3.first == e4 && (o3.first = t2), o3.last == e4 && (o3.last = r3), m ? o3.size-- : this.size--), !!e4;
        }, forEach: function(e4) {
          for (var t2, r3 = l(this), o3 = h(e4, 1 < arguments.length ? arguments[1] : void 0, 3); t2 = t2 ? t2.next : r3.first; ) for (o3(t2.value, t2.key, this); t2 && t2.removed; ) t2 = t2.previous;
        }, has: function(e4) {
          return !!i2(this, e4);
        } }), d(a3.prototype, o ? { get: function(e4) {
          e4 = i2(this, e4);
          return e4 && e4.value;
        }, set: function(e4, t2) {
          return s2(this, 0 === e4 ? 0 : e4, t2);
        } } : { add: function(e4) {
          return s2(this, e4 = 0 === e4 ? 0 : e4, e4);
        } }), m && u(a3.prototype, "size", { get: function() {
          return l(this).size;
        } }), a3;
      }, setStrong: function(e3, t2, r2) {
        var o = t2 + " Iterator", n = v(t2), s2 = v(o);
        i(e3, t2, function(e4, t3) {
          g(this, { type: o, target: e4, state: n(e4), kind: t3, last: void 0 });
        }, function() {
          for (var e4 = s2(this), t3 = e4.kind, r3 = e4.last; r3 && r3.removed; ) r3 = r3.previous;
          return e4.target && (e4.last = r3 = r3 ? r3.next : e4.state.first) ? "keys" == t3 ? { value: r3.key, done: false } : "values" == t3 ? { value: r3.value, done: false } : { value: [r3.key, r3.value], done: false } : { value: e4.target = void 0, done: true };
        }, r2 ? "entries" : "values", !r2, true), a2(t2);
      } };
    }, { "../internals/an-instance": 9, "../internals/define-iterator": 41, "../internals/descriptors": 43, "../internals/function-bind-context": 55, "../internals/internal-metadata": 70, "../internals/internal-state": 71, "../internals/iterate": 78, "../internals/object-create": 91, "../internals/object-define-property": 93, "../internals/redefine-all": 109, "../internals/set-species": 118 }], 31: [function(e2, t, r) {
      function l(e3) {
        return e3.frozen || (e3.frozen = new o());
      }
      function o() {
        this.entries = [];
      }
      function n(e3, t2) {
        return i(e3.entries, function(e4) {
          return e4[0] === t2;
        });
      }
      var u = e2("../internals/redefine-all"), c = e2("../internals/internal-metadata").getWeakData, d = e2("../internals/an-object"), h = e2("../internals/is-object"), f = e2("../internals/an-instance"), p = e2("../internals/iterate"), s2 = e2("../internals/array-iteration"), m = e2("../internals/has"), e2 = e2("../internals/internal-state"), y = e2.set, g = e2.getterFor, i = s2.find, a2 = s2.findIndex, v = 0;
      o.prototype = { get: function(e3) {
        e3 = n(this, e3);
        if (e3) return e3[1];
      }, has: function(e3) {
        return !!n(this, e3);
      }, set: function(e3, t2) {
        var r2 = n(this, e3);
        r2 ? r2[1] = t2 : this.entries.push([e3, t2]);
      }, delete: function(t2) {
        var e3 = a2(this.entries, function(e4) {
          return e4[0] === t2;
        });
        return ~e3 && this.entries.splice(e3, 1), !!~e3;
      } }, t.exports = { getConstructor: function(e3, r2, o3, n2) {
        function s3(e4, t2, r3) {
          var o4 = a3(e4), n3 = c(d(t2), true);
          return true === n3 ? l(o4).set(t2, r3) : n3[o4.id] = r3, e4;
        }
        var i2 = e3(function(e4, t2) {
          f(e4, i2, r2), y(e4, { type: r2, id: v++, frozen: void 0 }), null != t2 && p(t2, e4[n2], e4, o3);
        }), a3 = g(r2);
        return u(i2.prototype, { delete: function(e4) {
          var t2, r3 = a3(this);
          return !!h(e4) && (true === (t2 = c(e4)) ? l(r3).delete(e4) : t2 && m(t2, r3.id) && delete t2[r3.id]);
        }, has: function(e4) {
          var t2, r3 = a3(this);
          return !!h(e4) && (true === (t2 = c(e4)) ? l(r3).has(e4) : t2 && m(t2, r3.id));
        } }), u(i2.prototype, o3 ? { get: function(e4) {
          var t2, r3 = a3(this);
          if (h(e4)) return true === (t2 = c(e4)) ? l(r3).get(e4) : t2 ? t2[r3.id] : void 0;
        }, set: function(e4, t2) {
          return s3(this, e4, t2);
        } } : { add: function(e4) {
          return s3(this, e4, true);
        } }), i2;
      } };
    }, { "../internals/an-instance": 9, "../internals/an-object": 10, "../internals/array-iteration": 19, "../internals/has": 61, "../internals/internal-metadata": 70, "../internals/internal-state": 71, "../internals/is-object": 75, "../internals/iterate": 78, "../internals/redefine-all": 109 }], 32: [function(e2, t, r) {
      var y = e2("../internals/export"), g = e2("../internals/global"), v = e2("../internals/is-forced"), b = e2("../internals/redefine"), _ = e2("../internals/internal-metadata"), j = e2("../internals/iterate"), x2 = e2("../internals/an-instance"), w = e2("../internals/is-object"), S = e2("../internals/fails"), T = e2("../internals/check-correctness-of-iteration"), E = e2("../internals/set-to-string-tag"), M = e2("../internals/inherit-if-required");
      t.exports = function(r2, e3, t2) {
        function o(e4) {
          var r3 = f[e4];
          b(f, e4, "add" == e4 ? function(e5) {
            return r3.call(this, 0 === e5 ? 0 : e5), this;
          } : "delete" == e4 ? function(e5) {
            return !(c && !w(e5)) && r3.call(this, 0 === e5 ? 0 : e5);
          } : "get" == e4 ? function(e5) {
            return c && !w(e5) ? void 0 : r3.call(this, 0 === e5 ? 0 : e5);
          } : "has" == e4 ? function(e5) {
            return !(c && !w(e5)) && r3.call(this, 0 === e5 ? 0 : e5);
          } : function(e5, t3) {
            return r3.call(this, 0 === e5 ? 0 : e5, t3), this;
          });
        }
        var n, s2, i, a2, l, u = -1 !== r2.indexOf("Map"), c = -1 !== r2.indexOf("Weak"), d = u ? "set" : "add", h = g[r2], f = h && h.prototype, p = h, m = {};
        return v(r2, "function" != typeof h || !(c || f.forEach && !S(function() {
          new h().entries().next();
        }))) ? (p = t2.getConstructor(e3, r2, u, d), _.REQUIRED = true) : v(r2, true) && (s2 = (n = new p())[d](c ? {} : -0, 1) != n, i = S(function() {
          n.has(1);
        }), a2 = T(function(e4) {
          new h(e4);
        }), l = !c && S(function() {
          for (var e4 = new h(), t3 = 5; t3--; ) e4[d](t3, t3);
          return !e4.has(-0);
        }), a2 || (((p = e3(function(e4, t3) {
          x2(e4, p, r2);
          e4 = M(new h(), e4, p);
          return null != t3 && j(t3, e4[d], e4, u), e4;
        })).prototype = f).constructor = p), (i || l) && (o("delete"), o("has"), u && o("get")), (l || s2) && o(d), c && f.clear && delete f.clear), m[r2] = p, y({ global: true, forced: p != h }, m), E(p, r2), c || t2.setStrong(p, r2, u), p;
      };
    }, { "../internals/an-instance": 9, "../internals/check-correctness-of-iteration": 27, "../internals/export": 50, "../internals/fails": 51, "../internals/global": 60, "../internals/inherit-if-required": 68, "../internals/internal-metadata": 70, "../internals/is-forced": 74, "../internals/is-object": 75, "../internals/iterate": 78, "../internals/redefine": 110, "../internals/set-to-string-tag": 119 }], 33: [function(e2, t, r) {
      var a2 = e2("../internals/has"), l = e2("../internals/own-keys"), u = e2("../internals/object-get-own-property-descriptor"), c = e2("../internals/object-define-property");
      t.exports = function(e3, t2) {
        for (var r2 = l(t2), o = c.f, n = u.f, s2 = 0; s2 < r2.length; s2++) {
          var i = r2[s2];
          a2(e3, i) || o(e3, i, n(t2, i));
        }
      };
    }, { "../internals/has": 61, "../internals/object-define-property": 93, "../internals/object-get-own-property-descriptor": 94, "../internals/own-keys": 105 }], 34: [function(e2, t, r) {
      var o = e2("../internals/well-known-symbol")("match");
      t.exports = function(t2) {
        var r2 = /./;
        try {
          "/./"[t2](r2);
        } catch (e3) {
          try {
            return r2[o] = false, "/./"[t2](r2);
          } catch (e4) {
          }
        }
        return false;
      };
    }, { "../internals/well-known-symbol": 150 }], 35: [function(e2, t, r) {
      e2 = e2("../internals/fails");
      t.exports = !e2(function() {
        function e3() {
        }
        return e3.prototype.constructor = null, Object.getPrototypeOf(new e3()) !== e3.prototype;
      });
    }, { "../internals/fails": 51 }], 36: [function(e2, t, r) {
      var s2 = e2("../internals/require-object-coercible"), i = /"/g;
      t.exports = function(e3, t2, r2, o) {
        var e3 = String(s2(e3)), n = "<" + t2;
        return "" !== r2 && (n += " " + r2 + '="' + String(o).replace(i, "&quot;") + '"'), n + ">" + e3 + "</" + t2 + ">";
      };
    }, { "../internals/require-object-coercible": 115 }], 37: [function(e2, t, r) {
      function o() {
        return this;
      }
      var n = e2("../internals/iterators-core").IteratorPrototype, s2 = e2("../internals/object-create"), i = e2("../internals/create-property-descriptor"), a2 = e2("../internals/set-to-string-tag"), l = e2("../internals/iterators");
      t.exports = function(e3, t2, r2) {
        t2 += " Iterator";
        return e3.prototype = s2(n, { next: i(1, r2) }), a2(e3, t2, false, true), l[t2] = o, e3;
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/iterators": 80, "../internals/iterators-core": 79, "../internals/object-create": 91, "../internals/set-to-string-tag": 119 }], 38: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), n = e2("../internals/object-define-property"), s2 = e2("../internals/create-property-descriptor");
      t.exports = o ? function(e3, t2, r2) {
        return n.f(e3, t2, s2(1, r2));
      } : function(e3, t2, r2) {
        return e3[t2] = r2, e3;
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/object-define-property": 93 }], 39: [function(e2, t, r) {
      t.exports = function(e3, t2) {
        return { enumerable: !(1 & e3), configurable: !(2 & e3), writable: !(4 & e3), value: t2 };
      };
    }, {}], 40: [function(e2, t, r) {
      var o = e2("../internals/to-primitive"), n = e2("../internals/object-define-property"), s2 = e2("../internals/create-property-descriptor");
      t.exports = function(e3, t2, r2) {
        t2 = o(t2);
        t2 in e3 ? n.f(e3, t2, s2(0, r2)) : e3[t2] = r2;
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/object-define-property": 93, "../internals/to-primitive": 142 }], 41: [function(e2, t, r) {
      function m() {
        return this;
      }
      var y = e2("../internals/export"), g = e2("../internals/create-iterator-constructor"), v = e2("../internals/object-get-prototype-of"), b = e2("../internals/object-set-prototype-of"), _ = e2("../internals/set-to-string-tag"), j = e2("../internals/create-non-enumerable-property"), x2 = e2("../internals/redefine"), o = e2("../internals/well-known-symbol"), w = e2("../internals/is-pure"), S = e2("../internals/iterators"), e2 = e2("../internals/iterators-core"), T = e2.IteratorPrototype, E = e2.BUGGY_SAFARI_ITERATORS, M = o("iterator"), k = "values", O = "entries";
      t.exports = function(e3, t2, r2, o3, n, s2, i) {
        g(r2, t2, o3);
        function a2(e4) {
          if (e4 === n && f) return f;
          if (!E && e4 in d) return d[e4];
          switch (e4) {
            case "keys":
            case k:
            case O:
              return function() {
                return new r2(this, e4);
              };
          }
          return function() {
            return new r2(this);
          };
        }
        var l, u, o3 = t2 + " Iterator", c = false, d = e3.prototype, h = d[M] || d["@@iterator"] || n && d[n], f = !E && h || a2(n), p = "Array" == t2 && d.entries || h;
        if (p && (p = v(p.call(new e3())), T !== Object.prototype && p.next && (w || v(p) === T || (b ? b(p, T) : "function" != typeof p[M] && j(p, M, m)), _(p, o3, true, true), w && (S[o3] = m))), n == k && h && h.name !== k && (c = true, f = function() {
          return h.call(this);
        }), w && !i || d[M] === f || j(d, M, f), S[t2] = f, n) if (l = { values: a2(k), keys: s2 ? f : a2("keys"), entries: a2(O) }, i) for (u in l) !E && !c && u in d || x2(d, u, l[u]);
        else y({ target: t2, proto: true, forced: E || c }, l);
        return l;
      };
    }, { "../internals/create-iterator-constructor": 37, "../internals/create-non-enumerable-property": 38, "../internals/export": 50, "../internals/is-pure": 76, "../internals/iterators": 80, "../internals/iterators-core": 79, "../internals/object-get-prototype-of": 98, "../internals/object-set-prototype-of": 102, "../internals/redefine": 110, "../internals/set-to-string-tag": 119, "../internals/well-known-symbol": 150 }], 42: [function(e2, t, r) {
      var o = e2("../internals/path"), n = e2("../internals/has"), s2 = e2("../internals/well-known-symbol-wrapped"), i = e2("../internals/object-define-property").f;
      t.exports = function(e3) {
        var t2 = o.Symbol || (o.Symbol = {});
        n(t2, e3) || i(t2, e3, { value: s2.f(e3) });
      };
    }, { "../internals/has": 61, "../internals/object-define-property": 93, "../internals/path": 106, "../internals/well-known-symbol-wrapped": 149 }], 43: [function(e2, t, r) {
      e2 = e2("../internals/fails");
      t.exports = !e2(function() {
        return 7 != Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1];
      });
    }, { "../internals/fails": 51 }], 44: [function(e2, t, r) {
      var o = e2("../internals/global"), e2 = e2("../internals/is-object"), n = o.document, s2 = e2(n) && e2(n.createElement);
      t.exports = function(e3) {
        return s2 ? n.createElement(e3) : {};
      };
    }, { "../internals/global": 60, "../internals/is-object": 75 }], 45: [function(e2, t, r) {
      t.exports = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 };
    }, {}], 46: [function(e2, t, r) {
      e2 = e2("../internals/engine-user-agent");
      t.exports = /(iphone|ipod|ipad).*applewebkit/i.test(e2);
    }, { "../internals/engine-user-agent": 47 }], 47: [function(e2, t, r) {
      e2 = e2("../internals/get-built-in");
      t.exports = e2("navigator", "userAgent") || "";
    }, { "../internals/get-built-in": 57 }], 48: [function(e2, t, r) {
      var o, n, s2 = e2("../internals/global"), e2 = e2("../internals/engine-user-agent"), s2 = s2.process, s2 = s2 && s2.versions, s2 = s2 && s2.v8;
      s2 ? n = (o = s2.split("."))[0] + o[1] : e2 && (!(o = e2.match(/Edge\/(\d+)/)) || 74 <= o[1]) && (o = e2.match(/Chrome\/(\d+)/)) && (n = o[1]), t.exports = n && +n;
    }, { "../internals/engine-user-agent": 47, "../internals/global": 60 }], 49: [function(e2, t, r) {
      t.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
    }, {}], 50: [function(e2, t, r) {
      var u = e2("../internals/global"), c = e2("../internals/object-get-own-property-descriptor").f, d = e2("../internals/create-non-enumerable-property"), h = e2("../internals/redefine"), f = e2("../internals/set-global"), p = e2("../internals/copy-constructor-properties"), m = e2("../internals/is-forced");
      t.exports = function(e3, t2) {
        var r2, o, n, s2 = e3.target, i = e3.global, a2 = e3.stat, l = i ? u : a2 ? u[s2] || f(s2, {}) : (u[s2] || {}).prototype;
        if (l) for (r2 in t2) {
          if (o = t2[r2], n = e3.noTargetGet ? (n = c(l, r2)) && n.value : l[r2], !m(i ? r2 : s2 + (a2 ? "." : "#") + r2, e3.forced) && void 0 !== n) {
            if (typeof o == typeof n) continue;
            p(o, n);
          }
          (e3.sham || n && n.sham) && d(o, "sham", true), h(l, r2, o, e3);
        }
      };
    }, { "../internals/copy-constructor-properties": 33, "../internals/create-non-enumerable-property": 38, "../internals/global": 60, "../internals/is-forced": 74, "../internals/object-get-own-property-descriptor": 94, "../internals/redefine": 110, "../internals/set-global": 117 }], 51: [function(e2, t, r) {
      t.exports = function(e3) {
        try {
          return !!e3();
        } catch (e4) {
          return true;
        }
      };
    }, {}], 52: [function(e2, t, r) {
      e2("../modules/es.regexp.exec");
      var u = e2("../internals/redefine"), c = e2("../internals/fails"), d = e2("../internals/well-known-symbol"), h = e2("../internals/regexp-exec"), f = e2("../internals/create-non-enumerable-property"), p = d("species"), m = !c(function() {
        var e3 = /./;
        return e3.exec = function() {
          var e4 = [];
          return e4.groups = { a: "7" }, e4;
        }, "7" !== "".replace(e3, "$<a>");
      }), y = "$0" === "a".replace(/./, "$0"), e2 = d("replace"), g = !!/./[e2] && "" === /./[e2]("a", "$0"), v = !c(function() {
        var e3 = /(?:)/, t2 = e3.exec, e3 = (e3.exec = function() {
          return t2.apply(this, arguments);
        }, "ab".split(e3));
        return 2 !== e3.length || "a" !== e3[0] || "b" !== e3[1];
      });
      t.exports = function(r2, e3, t2, o) {
        var s2, n, i = d(r2), a2 = !c(function() {
          var e4 = {};
          return e4[i] = function() {
            return 7;
          }, 7 != ""[r2](e4);
        }), l = a2 && !c(function() {
          var e4 = false, t3 = /a/;
          return "split" === r2 && ((t3 = { constructor: {} }).constructor[p] = function() {
            return t3;
          }, t3.flags = "", t3[i] = /./[i]), t3.exec = function() {
            return e4 = true, null;
          }, t3[i](""), !e4;
        });
        a2 && l && ("replace" !== r2 || m && y && !g) && ("split" !== r2 || v) || (s2 = /./[i], t2 = (l = t2(i, ""[r2], function(e4, t3, r3, o3, n2) {
          return t3.exec === h ? a2 && !n2 ? { done: true, value: s2.call(t3, r3, o3) } : { done: true, value: e4.call(r3, t3, o3) } : { done: false };
        }, { REPLACE_KEEPS_$0: y, REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: g }))[0], n = l[1], u(String.prototype, r2, t2), u(RegExp.prototype, i, 2 == e3 ? function(e4, t3) {
          return n.call(e4, this, t3);
        } : function(e4) {
          return n.call(e4, this);
        })), o && f(RegExp.prototype[i], "sham", true);
      };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/fails": 51, "../internals/redefine": 110, "../internals/regexp-exec": 112, "../internals/well-known-symbol": 150, "../modules/es.regexp.exec": 195 }], 53: [function(e2, t, r) {
      function h(e3, t2, r2, o, n, s2, i, a2) {
        for (var l, u = n, c = 0, d = !!i && m(i, a2, 3); c < o; ) {
          if (c in r2) {
            if (l = d ? d(r2[c], c, t2) : r2[c], 0 < s2 && f(l)) u = h(e3, t2, l, p(l.length), u, s2 - 1) - 1;
            else {
              if (9007199254740991 <= u) throw TypeError("Exceed the acceptable array length");
              e3[u] = l;
            }
            u++;
          }
          c++;
        }
        return u;
      }
      var f = e2("../internals/is-array"), p = e2("../internals/to-length"), m = e2("../internals/function-bind-context");
      t.exports = h;
    }, { "../internals/function-bind-context": 55, "../internals/is-array": 73, "../internals/to-length": 138 }], 54: [function(e2, t, r) {
      e2 = e2("../internals/fails");
      t.exports = !e2(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      });
    }, { "../internals/fails": 51 }], 55: [function(e2, t, r) {
      var s2 = e2("../internals/a-function");
      t.exports = function(o, n, e3) {
        if (s2(o), void 0 === n) return o;
        switch (e3) {
          case 0:
            return function() {
              return o.call(n);
            };
          case 1:
            return function(e4) {
              return o.call(n, e4);
            };
          case 2:
            return function(e4, t2) {
              return o.call(n, e4, t2);
            };
          case 3:
            return function(e4, t2, r2) {
              return o.call(n, e4, t2, r2);
            };
        }
        return function() {
          return o.apply(n, arguments);
        };
      };
    }, { "../internals/a-function": 5 }], 56: [function(e2, t, r) {
      var o = e2("../internals/a-function"), n = e2("../internals/is-object"), c = [].slice, d = {};
      t.exports = Function.bind || function(i) {
        var a2 = o(this), l = c.call(arguments, 1), u = function() {
          var e3 = l.concat(c.call(arguments));
          if (this instanceof u) {
            var t2 = a2, r2 = e3.length, o3 = e3;
            if (!(r2 in d)) {
              for (var n2 = [], s2 = 0; s2 < r2; s2++) n2[s2] = "a[" + s2 + "]";
              d[r2] = Function("C,a", "return new C(" + n2.join(",") + ")");
            }
            return d[r2](t2, o3);
          }
          return a2.apply(i, e3);
        };
        return n(a2.prototype) && (u.prototype = a2.prototype), u;
      };
    }, { "../internals/a-function": 5, "../internals/is-object": 75 }], 57: [function(e2, t, r) {
      function o(e3) {
        return "function" == typeof e3 ? e3 : void 0;
      }
      var n = e2("../internals/path"), s2 = e2("../internals/global");
      t.exports = function(e3, t2) {
        return arguments.length < 2 ? o(n[e3]) || o(s2[e3]) : n[e3] && n[e3][t2] || s2[e3] && s2[e3][t2];
      };
    }, { "../internals/global": 60, "../internals/path": 106 }], 58: [function(e2, t, r) {
      var o = e2("../internals/classof"), n = e2("../internals/iterators"), s2 = e2("../internals/well-known-symbol")("iterator");
      t.exports = function(e3) {
        if (null != e3) return e3[s2] || e3["@@iterator"] || n[o(e3)];
      };
    }, { "../internals/classof": 29, "../internals/iterators": 80, "../internals/well-known-symbol": 150 }], 59: [function(e2, t, r) {
      var o = e2("../internals/an-object"), n = e2("../internals/get-iterator-method");
      t.exports = function(e3) {
        var t2 = n(e3);
        if ("function" != typeof t2) throw TypeError(String(e3) + " is not iterable");
        return o(t2.call(e3));
      };
    }, { "../internals/an-object": 10, "../internals/get-iterator-method": 58 }], 60: [function(e2, r, t) {
      !(function(e3) {
        function t2(e4) {
          return e4 && e4.Math == Math && e4;
        }
        r.exports = t2("object" == typeof globalThis && globalThis) || t2("object" == typeof window && window) || t2("object" == typeof self && self) || t2("object" == typeof e3 && e3) || Function("return this")();
      }).call(this, "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {}], 61: [function(e2, t, r) {
      var o = {}.hasOwnProperty;
      t.exports = function(e3, t2) {
        return o.call(e3, t2);
      };
    }, {}], 62: [function(e2, t, r) {
      t.exports = {};
    }, {}], 63: [function(e2, t, r) {
      var o = e2("../internals/global");
      t.exports = function(e3, t2) {
        var r2 = o.console;
        r2 && r2.error && (1 === arguments.length ? r2.error(e3) : r2.error(e3, t2));
      };
    }, { "../internals/global": 60 }], 64: [function(e2, t, r) {
      e2 = e2("../internals/get-built-in");
      t.exports = e2("document", "documentElement");
    }, { "../internals/get-built-in": 57 }], 65: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), n = e2("../internals/fails"), s2 = e2("../internals/document-create-element");
      t.exports = !o && !n(function() {
        return 7 != Object.defineProperty(s2("div"), "a", { get: function() {
          return 7;
        } }).a;
      });
    }, { "../internals/descriptors": 43, "../internals/document-create-element": 44, "../internals/fails": 51 }], 66: [function(e2, t, r) {
      var h = Math.abs, f = Math.pow, p = Math.floor, m = Math.log, y = Math.LN2;
      t.exports = { pack: function(e3, t2, r2) {
        var o, n, s2, i = new Array(r2), a2 = 8 * r2 - t2 - 1, r2 = (1 << a2) - 1, l = r2 >> 1, u = 23 === t2 ? f(2, -24) - f(2, -77) : 0, c = e3 < 0 || 0 === e3 && 1 / e3 < 0 ? 1 : 0, d = 0;
        for ((e3 = h(e3)) != e3 || e3 === 1 / 0 ? (n = e3 != e3 ? 1 : 0, o = r2) : (o = p(m(e3) / y), e3 * (s2 = f(2, -o)) < 1 && (o--, s2 *= 2), 2 <= (e3 += 1 <= o + l ? u / s2 : u * f(2, 1 - l)) * s2 && (o++, s2 /= 2), r2 <= o + l ? (n = 0, o = r2) : 1 <= o + l ? (n = (e3 * s2 - 1) * f(2, t2), o += l) : (n = e3 * f(2, l - 1) * f(2, t2), o = 0)); 8 <= t2; i[d++] = 255 & n, n /= 256, t2 -= 8) ;
        for (o = o << t2 | n, a2 += t2; 0 < a2; i[d++] = 255 & o, o /= 256, a2 -= 8) ;
        return i[--d] |= 128 * c, i;
      }, unpack: function(e3, t2) {
        var r2, o = e3.length, n = 8 * o - t2 - 1, s2 = (1 << n) - 1, i = s2 >> 1, a2 = n - 7, l = o - 1, n = e3[l--], u = 127 & n;
        for (n >>= 7; 0 < a2; u = 256 * u + e3[l], l--, a2 -= 8) ;
        for (r2 = u & (1 << -a2) - 1, u >>= -a2, a2 += t2; 0 < a2; r2 = 256 * r2 + e3[l], l--, a2 -= 8) ;
        if (0 === u) u = 1 - i;
        else {
          if (u === s2) return r2 ? NaN : n ? -1 / 0 : 1 / 0;
          r2 += f(2, t2), u -= i;
        }
        return (n ? -1 : 1) * r2 * f(2, u - t2);
      } };
    }, {}], 67: [function(e2, t, r) {
      var o = e2("../internals/fails"), n = e2("../internals/classof-raw"), s2 = "".split;
      t.exports = o(function() {
        return !Object("z").propertyIsEnumerable(0);
      }) ? function(e3) {
        return "String" == n(e3) ? s2.call(e3, "") : Object(e3);
      } : Object;
    }, { "../internals/classof-raw": 28, "../internals/fails": 51 }], 68: [function(e2, t, r) {
      var o = e2("../internals/is-object"), n = e2("../internals/object-set-prototype-of");
      t.exports = function(e3, t2, r2) {
        return n && "function" == typeof (t2 = t2.constructor) && t2 !== r2 && o(t2 = t2.prototype) && t2 !== r2.prototype && n(e3, t2), e3;
      };
    }, { "../internals/is-object": 75, "../internals/object-set-prototype-of": 102 }], 69: [function(e2, t, r) {
      var e2 = e2("../internals/shared-store"), o = Function.toString;
      "function" != typeof e2.inspectSource && (e2.inspectSource = function(e3) {
        return o.call(e3);
      }), t.exports = e2.inspectSource;
    }, { "../internals/shared-store": 121 }], 70: [function(e2, t, r) {
      function o(e3) {
        a2(e3, c, { value: { objectID: "O" + ++d, weakData: {} } });
      }
      var n = e2("../internals/hidden-keys"), s2 = e2("../internals/is-object"), i = e2("../internals/has"), a2 = e2("../internals/object-define-property").f, l = e2("../internals/uid"), u = e2("../internals/freezing"), c = l("meta"), d = 0, h = Object.isExtensible || function() {
        return true;
      }, f = t.exports = { REQUIRED: false, fastKey: function(e3, t2) {
        if (!s2(e3)) return "symbol" == typeof e3 ? e3 : ("string" == typeof e3 ? "S" : "P") + e3;
        if (!i(e3, c)) {
          if (!h(e3)) return "F";
          if (!t2) return "E";
          o(e3);
        }
        return e3[c].objectID;
      }, getWeakData: function(e3, t2) {
        if (!i(e3, c)) {
          if (!h(e3)) return true;
          if (!t2) return false;
          o(e3);
        }
        return e3[c].weakData;
      }, onFreeze: function(e3) {
        return u && f.REQUIRED && h(e3) && !i(e3, c) && o(e3), e3;
      } };
      n[c] = true;
    }, { "../internals/freezing": 54, "../internals/has": 61, "../internals/hidden-keys": 62, "../internals/is-object": 75, "../internals/object-define-property": 93, "../internals/uid": 147 }], 71: [function(e2, t, r) {
      var o, n, s2, i, a2, l, u, c, d = e2("../internals/native-weak-map"), h = e2("../internals/global"), f = e2("../internals/is-object"), p = e2("../internals/create-non-enumerable-property"), m = e2("../internals/has"), y = e2("../internals/shared-key"), e2 = e2("../internals/hidden-keys"), h = h.WeakMap;
      u = d ? (o = new h(), n = o.get, s2 = o.has, i = o.set, a2 = function(e3, t2) {
        return i.call(o, e3, t2), t2;
      }, l = function(e3) {
        return n.call(o, e3) || {};
      }, function(e3) {
        return s2.call(o, e3);
      }) : (e2[c = y("state")] = true, a2 = function(e3, t2) {
        return p(e3, c, t2), t2;
      }, l = function(e3) {
        return m(e3, c) ? e3[c] : {};
      }, function(e3) {
        return m(e3, c);
      }), t.exports = { set: a2, get: l, has: u, enforce: function(e3) {
        return u(e3) ? l(e3) : a2(e3, {});
      }, getterFor: function(t2) {
        return function(e3) {
          if (f(e3) && (e3 = l(e3)).type === t2) return e3;
          throw TypeError("Incompatible receiver, " + t2 + " required");
        };
      } };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 60, "../internals/has": 61, "../internals/hidden-keys": 62, "../internals/is-object": 75, "../internals/native-weak-map": 86, "../internals/shared-key": 120 }], 72: [function(e2, t, r) {
      var o = e2("../internals/well-known-symbol"), n = e2("../internals/iterators"), s2 = o("iterator"), i = Array.prototype;
      t.exports = function(e3) {
        return void 0 !== e3 && (n.Array === e3 || i[s2] === e3);
      };
    }, { "../internals/iterators": 80, "../internals/well-known-symbol": 150 }], 73: [function(e2, t, r) {
      var o = e2("../internals/classof-raw");
      t.exports = Array.isArray || function(e3) {
        return "Array" == o(e3);
      };
    }, { "../internals/classof-raw": 28 }], 74: [function(e2, t, r) {
      function o(e3, t2) {
        return (e3 = a2[i(e3)]) == u || e3 != l && ("function" == typeof t2 ? n(t2) : !!t2);
      }
      var n = e2("../internals/fails"), s2 = /#|\.prototype\./, i = o.normalize = function(e3) {
        return String(e3).replace(s2, ".").toLowerCase();
      }, a2 = o.data = {}, l = o.NATIVE = "N", u = o.POLYFILL = "P";
      t.exports = o;
    }, { "../internals/fails": 51 }], 75: [function(e2, t, r) {
      t.exports = function(e3) {
        return "object" == typeof e3 ? null !== e3 : "function" == typeof e3;
      };
    }, {}], 76: [function(e2, t, r) {
      t.exports = false;
    }, {}], 77: [function(e2, t, r) {
      var o = e2("../internals/is-object"), n = e2("../internals/classof-raw"), s2 = e2("../internals/well-known-symbol")("match");
      t.exports = function(e3) {
        var t2;
        return o(e3) && (void 0 !== (t2 = e3[s2]) ? !!t2 : "RegExp" == n(e3));
      };
    }, { "../internals/classof-raw": 28, "../internals/is-object": 75, "../internals/well-known-symbol": 150 }], 78: [function(e2, t, r) {
      function h(e3, t2) {
        this.stopped = e3, this.result = t2;
      }
      var f = e2("../internals/an-object"), p = e2("../internals/is-array-iterator-method"), m = e2("../internals/to-length"), y = e2("../internals/function-bind-context"), g = e2("../internals/get-iterator-method"), v = e2("../internals/call-with-safe-iteration-closing");
      (t.exports = function(e3, t2, r2, o, n) {
        var s2, i, a2, l, u, c, d = y(t2, r2, o ? 2 : 1);
        if (n) s2 = e3;
        else {
          if ("function" != typeof (t2 = g(e3))) throw TypeError("Target is not iterable");
          if (p(t2)) {
            for (i = 0, a2 = m(e3.length); i < a2; i++) if ((l = o ? d(f(c = e3[i])[0], c[1]) : d(e3[i])) && l instanceof h) return l;
            return new h(false);
          }
          s2 = t2.call(e3);
        }
        for (u = s2.next; !(c = u.call(s2)).done; ) if ("object" == typeof (l = v(s2, d, c.value, o)) && l && l instanceof h) return l;
        return new h(false);
      }).stop = function(e3) {
        return new h(true, e3);
      };
    }, { "../internals/an-object": 10, "../internals/call-with-safe-iteration-closing": 26, "../internals/function-bind-context": 55, "../internals/get-iterator-method": 58, "../internals/is-array-iterator-method": 72, "../internals/to-length": 138 }], 79: [function(e2, t, r) {
      var o, n, s2 = e2("../internals/object-get-prototype-of"), i = e2("../internals/create-non-enumerable-property"), a2 = e2("../internals/has"), l = e2("../internals/well-known-symbol"), e2 = e2("../internals/is-pure"), l = l("iterator"), u = false;
      [].keys && ("next" in (n = [].keys()) ? (s2 = s2(s2(n))) !== Object.prototype && (o = s2) : u = true), null == o && (o = {}), e2 || a2(o, l) || i(o, l, function() {
        return this;
      }), t.exports = { IteratorPrototype: o, BUGGY_SAFARI_ITERATORS: u };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/has": 61, "../internals/is-pure": 76, "../internals/object-get-prototype-of": 98, "../internals/well-known-symbol": 150 }], 80: [function(e2, t, r) {
      t.exports = {};
    }, {}], 81: [function(e2, t, r) {
      t.exports = Math.sign || function(e3) {
        return 0 == (e3 = +e3) || e3 != e3 ? e3 : e3 < 0 ? -1 : 1;
      };
    }, {}], 82: [function(e2, t, r) {
      var o, n, s2, i, a2, l, u, c, d = e2("../internals/global"), h = e2("../internals/object-get-own-property-descriptor").f, f = e2("../internals/classof-raw"), p = e2("../internals/task").set, e2 = e2("../internals/engine-is-ios"), m = d.MutationObserver || d.WebKitMutationObserver, y = d.process, g = d.Promise, v = "process" == f(y), f = h(d, "queueMicrotask"), h = f && f.value;
      h || (o = function() {
        var e3, t2;
        for (v && (e3 = y.domain) && e3.exit(); n; ) {
          t2 = n.fn, n = n.next;
          try {
            t2();
          } catch (e4) {
            throw n ? i() : s2 = void 0, e4;
          }
        }
        s2 = void 0, e3 && e3.enter();
      }, i = v ? function() {
        y.nextTick(o);
      } : m && !e2 ? (a2 = true, l = document.createTextNode(""), new m(o).observe(l, { characterData: true }), function() {
        l.data = a2 = !a2;
      }) : g && g.resolve ? (u = g.resolve(void 0), c = u.then, function() {
        c.call(u, o);
      }) : function() {
        p.call(d, o);
      }), t.exports = h || function(e3) {
        e3 = { fn: e3, next: void 0 };
        s2 && (s2.next = e3), n || (n = e3, i()), s2 = e3;
      };
    }, { "../internals/classof-raw": 28, "../internals/engine-is-ios": 46, "../internals/global": 60, "../internals/object-get-own-property-descriptor": 94, "../internals/task": 132 }], 83: [function(e2, t, r) {
      e2 = e2("../internals/global");
      t.exports = e2.Promise;
    }, { "../internals/global": 60 }], 84: [function(e2, t, r) {
      e2 = e2("../internals/fails");
      t.exports = !!Object.getOwnPropertySymbols && !e2(function() {
        return !String(Symbol());
      });
    }, { "../internals/fails": 51 }], 85: [function(e2, t, r) {
      var o = e2("../internals/fails"), n = e2("../internals/well-known-symbol"), s2 = e2("../internals/is-pure"), i = n("iterator");
      t.exports = !o(function() {
        var e3 = new URL("b?a=1&b=2&c=3", "http://a"), r2 = e3.searchParams, o3 = "";
        return e3.pathname = "c%20d", r2.forEach(function(e4, t2) {
          r2.delete("b"), o3 += t2 + e4;
        }), s2 && !e3.toJSON || !r2.sort || "http://a/c%20d?a=1&c=3" !== e3.href || "3" !== r2.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !r2[i] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://тест").host || "#%D0%B1" !== new URL("http://a#б").hash || "a1c3" !== o3 || "x" !== new URL("http://x", void 0).host;
      });
    }, { "../internals/fails": 51, "../internals/is-pure": 76, "../internals/well-known-symbol": 150 }], 86: [function(e2, t, r) {
      var o = e2("../internals/global"), e2 = e2("../internals/inspect-source"), o = o.WeakMap;
      t.exports = "function" == typeof o && /native code/.test(e2(o));
    }, { "../internals/global": 60, "../internals/inspect-source": 69 }], 87: [function(e2, t, r) {
      function o(e3) {
        var r2, o3;
        this.promise = new e3(function(e4, t2) {
          if (void 0 !== r2 || void 0 !== o3) throw TypeError("Bad Promise constructor");
          r2 = e4, o3 = t2;
        }), this.resolve = n(r2), this.reject = n(o3);
      }
      var n = e2("../internals/a-function");
      t.exports.f = function(e3) {
        return new o(e3);
      };
    }, { "../internals/a-function": 5 }], 88: [function(e2, t, r) {
      var o = e2("../internals/is-regexp");
      t.exports = function(e3) {
        if (o(e3)) throw TypeError("The method doesn't accept regular expressions");
        return e3;
      };
    }, { "../internals/is-regexp": 77 }], 89: [function(e2, t, r) {
      var o = e2("../internals/global").isFinite;
      t.exports = Number.isFinite || function(e3) {
        return "number" == typeof e3 && o(e3);
      };
    }, { "../internals/global": 60 }], 90: [function(e2, t, r) {
      var h = e2("../internals/descriptors"), o = e2("../internals/fails"), f = e2("../internals/object-keys"), p = e2("../internals/object-get-own-property-symbols"), m = e2("../internals/object-property-is-enumerable"), y = e2("../internals/to-object"), g = e2("../internals/indexed-object"), n = Object.assign, s2 = Object.defineProperty;
      t.exports = !n || o(function() {
        var e3, t2, r2, o3;
        return !(!h || 1 === n({ b: 1 }, n(s2({}, "a", { enumerable: true, get: function() {
          s2(this, "b", { value: 3, enumerable: false });
        } }), { b: 2 })).b) || (t2 = {}, o3 = "abcdefghijklmnopqrst", (e3 = {})[r2 = Symbol()] = 7, o3.split("").forEach(function(e4) {
          t2[e4] = e4;
        }), 7 != n({}, e3)[r2] || f(n({}, t2)).join("") != o3);
      }) ? function(e3, t2) {
        for (var r2 = y(e3), o3 = arguments.length, n2 = 1, s3 = p.f, i = m.f; n2 < o3; ) for (var a2, l = g(arguments[n2++]), u = s3 ? f(l).concat(s3(l)) : f(l), c = u.length, d = 0; d < c; ) a2 = u[d++], h && !i.call(l, a2) || (r2[a2] = l[a2]);
        return r2;
      } : n;
    }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/indexed-object": 67, "../internals/object-get-own-property-symbols": 97, "../internals/object-keys": 100, "../internals/object-property-is-enumerable": 101, "../internals/to-object": 139 }], 91: [function(e2, t, r) {
      function o() {
      }
      var n, s2 = e2("../internals/an-object"), i = e2("../internals/object-define-properties"), a2 = e2("../internals/enum-bug-keys"), l = e2("../internals/hidden-keys"), u = e2("../internals/html"), c = e2("../internals/document-create-element"), e2 = e2("../internals/shared-key"), d = "prototype", h = "script", f = e2("IE_PROTO"), p = function(e3) {
        return "<" + h + ">" + e3 + "</" + h + ">";
      }, m = function() {
        try {
          n = document.domain && new ActiveXObject("htmlfile");
        } catch (e4) {
        }
        m = n ? ((e3 = n).write(p("")), e3.close(), t2 = e3.parentWindow.Object, e3 = null, t2) : (e3 = c("iframe"), t2 = "java" + h + ":", e3.style.display = "none", u.appendChild(e3), e3.src = String(t2), (t2 = e3.contentWindow.document).open(), t2.write(p("document.F=Object")), t2.close(), t2.F);
        for (var e3, t2, r2 = a2.length; r2--; ) delete m[d][a2[r2]];
        return m();
      };
      l[f] = true, t.exports = Object.create || function(e3, t2) {
        var r2;
        return null !== e3 ? (o[d] = s2(e3), r2 = new o(), o[d] = null, r2[f] = e3) : r2 = m(), void 0 === t2 ? r2 : i(r2, t2);
      };
    }, { "../internals/an-object": 10, "../internals/document-create-element": 44, "../internals/enum-bug-keys": 49, "../internals/hidden-keys": 62, "../internals/html": 64, "../internals/object-define-properties": 92, "../internals/shared-key": 120 }], 92: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), i = e2("../internals/object-define-property"), a2 = e2("../internals/an-object"), l = e2("../internals/object-keys");
      t.exports = o ? Object.defineProperties : function(e3, t2) {
        a2(e3);
        for (var r2, o3 = l(t2), n = o3.length, s2 = 0; s2 < n; ) i.f(e3, r2 = o3[s2++], t2[r2]);
        return e3;
      };
    }, { "../internals/an-object": 10, "../internals/descriptors": 43, "../internals/object-define-property": 93, "../internals/object-keys": 100 }], 93: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), n = e2("../internals/ie8-dom-define"), s2 = e2("../internals/an-object"), i = e2("../internals/to-primitive"), a2 = Object.defineProperty;
      r.f = o ? a2 : function(e3, t2, r2) {
        if (s2(e3), t2 = i(t2, true), s2(r2), n) try {
          return a2(e3, t2, r2);
        } catch (e4) {
        }
        if ("get" in r2 || "set" in r2) throw TypeError("Accessors not supported");
        return "value" in r2 && (e3[t2] = r2.value), e3;
      };
    }, { "../internals/an-object": 10, "../internals/descriptors": 43, "../internals/ie8-dom-define": 65, "../internals/to-primitive": 142 }], 94: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), n = e2("../internals/object-property-is-enumerable"), s2 = e2("../internals/create-property-descriptor"), i = e2("../internals/to-indexed-object"), a2 = e2("../internals/to-primitive"), l = e2("../internals/has"), u = e2("../internals/ie8-dom-define"), c = Object.getOwnPropertyDescriptor;
      r.f = o ? c : function(e3, t2) {
        if (e3 = i(e3), t2 = a2(t2, true), u) try {
          return c(e3, t2);
        } catch (e4) {
        }
        if (l(e3, t2)) return s2(!n.f.call(e3, t2), e3[t2]);
      };
    }, { "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/has": 61, "../internals/ie8-dom-define": 65, "../internals/object-property-is-enumerable": 101, "../internals/to-indexed-object": 136, "../internals/to-primitive": 142 }], 95: [function(e2, t, r) {
      var o = e2("../internals/to-indexed-object"), n = e2("../internals/object-get-own-property-names").f, s2 = {}.toString, i = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      t.exports.f = function(e3) {
        if (!i || "[object Window]" != s2.call(e3)) return n(o(e3));
        try {
          return n(e3);
        } catch (e4) {
          return i.slice();
        }
      };
    }, { "../internals/object-get-own-property-names": 96, "../internals/to-indexed-object": 136 }], 96: [function(e2, t, r) {
      var o = e2("../internals/object-keys-internal"), n = e2("../internals/enum-bug-keys").concat("length", "prototype");
      r.f = Object.getOwnPropertyNames || function(e3) {
        return o(e3, n);
      };
    }, { "../internals/enum-bug-keys": 49, "../internals/object-keys-internal": 99 }], 97: [function(e2, t, r) {
      r.f = Object.getOwnPropertySymbols;
    }, {}], 98: [function(e2, t, r) {
      var o = e2("../internals/has"), n = e2("../internals/to-object"), s2 = e2("../internals/shared-key"), e2 = e2("../internals/correct-prototype-getter"), i = s2("IE_PROTO"), a2 = Object.prototype;
      t.exports = e2 ? Object.getPrototypeOf : function(e3) {
        return e3 = n(e3), o(e3, i) ? e3[i] : "function" == typeof e3.constructor && e3 instanceof e3.constructor ? e3.constructor.prototype : e3 instanceof Object ? a2 : null;
      };
    }, { "../internals/correct-prototype-getter": 35, "../internals/has": 61, "../internals/shared-key": 120, "../internals/to-object": 139 }], 99: [function(e2, t, r) {
      var i = e2("../internals/has"), a2 = e2("../internals/to-indexed-object"), l = e2("../internals/array-includes").indexOf, u = e2("../internals/hidden-keys");
      t.exports = function(e3, t2) {
        var r2, o = a2(e3), n = 0, s2 = [];
        for (r2 in o) !i(u, r2) && i(o, r2) && s2.push(r2);
        for (; t2.length > n; ) !i(o, r2 = t2[n++]) || ~l(s2, r2) || s2.push(r2);
        return s2;
      };
    }, { "../internals/array-includes": 18, "../internals/has": 61, "../internals/hidden-keys": 62, "../internals/to-indexed-object": 136 }], 100: [function(e2, t, r) {
      var o = e2("../internals/object-keys-internal"), n = e2("../internals/enum-bug-keys");
      t.exports = Object.keys || function(e3) {
        return o(e3, n);
      };
    }, { "../internals/enum-bug-keys": 49, "../internals/object-keys-internal": 99 }], 101: [function(e2, t, r) {
      var o = {}.propertyIsEnumerable, n = Object.getOwnPropertyDescriptor, s2 = n && !o.call({ 1: 2 }, 1);
      r.f = s2 ? function(e3) {
        e3 = n(this, e3);
        return !!e3 && e3.enumerable;
      } : o;
    }, {}], 102: [function(e2, t, r) {
      var n = e2("../internals/an-object"), s2 = e2("../internals/a-possible-prototype");
      t.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var r2, o = false, e3 = {};
        try {
          (r2 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(e3, []), o = e3 instanceof Array;
        } catch (e4) {
        }
        return function(e4, t2) {
          return n(e4), s2(t2), o ? r2.call(e4, t2) : e4.__proto__ = t2, e4;
        };
      }() : void 0);
    }, { "../internals/a-possible-prototype": 6, "../internals/an-object": 10 }], 103: [function(e2, t, r) {
      function o(a2) {
        return function(e3) {
          for (var t2, r2 = c(e3), o3 = u(r2), n = o3.length, s2 = 0, i = []; s2 < n; ) t2 = o3[s2++], l && !d.call(r2, t2) || i.push(a2 ? [t2, r2[t2]] : r2[t2]);
          return i;
        };
      }
      var l = e2("../internals/descriptors"), u = e2("../internals/object-keys"), c = e2("../internals/to-indexed-object"), d = e2("../internals/object-property-is-enumerable").f;
      t.exports = { entries: o(true), values: o(false) };
    }, { "../internals/descriptors": 43, "../internals/object-keys": 100, "../internals/object-property-is-enumerable": 101, "../internals/to-indexed-object": 136 }], 104: [function(e2, t, r) {
      var o = e2("../internals/to-string-tag-support"), n = e2("../internals/classof");
      t.exports = o ? {}.toString : function() {
        return "[object " + n(this) + "]";
      };
    }, { "../internals/classof": 29, "../internals/to-string-tag-support": 143 }], 105: [function(e2, t, r) {
      var o = e2("../internals/get-built-in"), n = e2("../internals/object-get-own-property-names"), s2 = e2("../internals/object-get-own-property-symbols"), i = e2("../internals/an-object");
      t.exports = o("Reflect", "ownKeys") || function(e3) {
        var t2 = n.f(i(e3)), r2 = s2.f;
        return r2 ? t2.concat(r2(e3)) : t2;
      };
    }, { "../internals/an-object": 10, "../internals/get-built-in": 57, "../internals/object-get-own-property-names": 96, "../internals/object-get-own-property-symbols": 97 }], 106: [function(e2, t, r) {
      e2 = e2("../internals/global");
      t.exports = e2;
    }, { "../internals/global": 60 }], 107: [function(e2, t, r) {
      t.exports = function(e3) {
        try {
          return { error: false, value: e3() };
        } catch (e4) {
          return { error: true, value: e4 };
        }
      };
    }, {}], 108: [function(e2, t, r) {
      var o = e2("../internals/an-object"), n = e2("../internals/is-object"), s2 = e2("../internals/new-promise-capability");
      t.exports = function(e3, t2) {
        return o(e3), n(t2) && t2.constructor === e3 ? t2 : ((0, (e3 = s2.f(e3)).resolve)(t2), e3.promise);
      };
    }, { "../internals/an-object": 10, "../internals/is-object": 75, "../internals/new-promise-capability": 87 }], 109: [function(e2, t, r) {
      var n = e2("../internals/redefine");
      t.exports = function(e3, t2, r2) {
        for (var o in t2) n(e3, o, t2[o], r2);
        return e3;
      };
    }, { "../internals/redefine": 110 }], 110: [function(e2, t, r) {
      var i = e2("../internals/global"), a2 = e2("../internals/create-non-enumerable-property"), l = e2("../internals/has"), u = e2("../internals/set-global"), o = e2("../internals/inspect-source"), e2 = e2("../internals/internal-state"), n = e2.get, c = e2.enforce, d = String(String).split("String");
      (t.exports = function(e3, t2, r2, o3) {
        var n2 = !!o3 && !!o3.unsafe, s2 = !!o3 && !!o3.enumerable, o3 = !!o3 && !!o3.noTargetGet;
        "function" == typeof r2 && ("string" != typeof t2 || l(r2, "name") || a2(r2, "name", t2), c(r2).source = d.join("string" == typeof t2 ? t2 : "")), e3 === i ? s2 ? e3[t2] = r2 : u(t2, r2) : (n2 ? !o3 && e3[t2] && (s2 = true) : delete e3[t2], s2 ? e3[t2] = r2 : a2(e3, t2, r2));
      })(Function.prototype, "toString", function() {
        return "function" == typeof this && n(this).source || o(this);
      });
    }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 60, "../internals/has": 61, "../internals/inspect-source": 69, "../internals/internal-state": 71, "../internals/set-global": 117 }], 111: [function(e2, t, r) {
      var o = e2("./classof-raw"), n = e2("./regexp-exec");
      t.exports = function(e3, t2) {
        var r2 = e3.exec;
        if ("function" == typeof r2) {
          r2 = r2.call(e3, t2);
          if ("object" != typeof r2) throw TypeError("RegExp exec method returned something other than an Object or null");
          return r2;
        }
        if ("RegExp" !== o(e3)) throw TypeError("RegExp#exec called on incompatible receiver");
        return n.call(e3, t2);
      };
    }, { "./classof-raw": 28, "./regexp-exec": 112 }], 112: [function(e2, t, r) {
      var o, n, d = e2("./regexp-flags"), e2 = e2("./regexp-sticky-helpers"), h = RegExp.prototype.exec, f = String.prototype.replace, s2 = h, p = (o = /a/, n = /b*/g, h.call(o, "a"), h.call(n, "a"), 0 !== o.lastIndex || 0 !== n.lastIndex), m = e2.UNSUPPORTED_Y || e2.BROKEN_CARET, y = void 0 !== /()??/.exec("")[1];
      t.exports = s2 = p || y || m ? function(e3) {
        var t2, r2, o3, n2, s3 = this, i = m && s3.sticky, a2 = d.call(s3), l = s3.source, u = 0, c = e3;
        return i && (-1 === (a2 = a2.replace("y", "")).indexOf("g") && (a2 += "g"), c = String(e3).slice(s3.lastIndex), 0 < s3.lastIndex && (!s3.multiline || s3.multiline && "\n" !== e3[s3.lastIndex - 1]) && (l = "(?: " + l + ")", c = " " + c, u++), r2 = new RegExp("^(?:" + l + ")", a2)), y && (r2 = new RegExp("^" + l + "$(?!\\s)", a2)), p && (t2 = s3.lastIndex), o3 = h.call(i ? r2 : s3, c), i ? o3 ? (o3.input = o3.input.slice(u), o3[0] = o3[0].slice(u), o3.index = s3.lastIndex, s3.lastIndex += o3[0].length) : s3.lastIndex = 0 : p && o3 && (s3.lastIndex = s3.global ? o3.index + o3[0].length : t2), y && o3 && 1 < o3.length && f.call(o3[0], r2, function() {
          for (n2 = 1; n2 < arguments.length - 2; n2++) void 0 === arguments[n2] && (o3[n2] = void 0);
        }), o3;
      } : s2;
    }, { "./regexp-flags": 113, "./regexp-sticky-helpers": 114 }], 113: [function(e2, t, r) {
      var o = e2("../internals/an-object");
      t.exports = function() {
        var e3 = o(this), t2 = "";
        return e3.global && (t2 += "g"), e3.ignoreCase && (t2 += "i"), e3.multiline && (t2 += "m"), e3.dotAll && (t2 += "s"), e3.unicode && (t2 += "u"), e3.sticky && (t2 += "y"), t2;
      };
    }, { "../internals/an-object": 10 }], 114: [function(e2, t, r) {
      e2 = e2("./fails");
      function o(e3, t2) {
        return RegExp(e3, t2);
      }
      r.UNSUPPORTED_Y = e2(function() {
        var e3 = o("a", "y");
        return e3.lastIndex = 2, null != e3.exec("abcd");
      }), r.BROKEN_CARET = e2(function() {
        var e3 = o("^r", "gy");
        return e3.lastIndex = 2, null != e3.exec("str");
      });
    }, { "./fails": 51 }], 115: [function(e2, t, r) {
      t.exports = function(e3) {
        if (null == e3) throw TypeError("Can't call method on " + e3);
        return e3;
      };
    }, {}], 116: [function(e2, t, r) {
      t.exports = Object.is || function(e3, t2) {
        return e3 === t2 ? 0 !== e3 || 1 / e3 == 1 / t2 : e3 != e3 && t2 != t2;
      };
    }, {}], 117: [function(e2, t, r) {
      var o = e2("../internals/global"), n = e2("../internals/create-non-enumerable-property");
      t.exports = function(t2, r2) {
        try {
          n(o, t2, r2);
        } catch (e3) {
          o[t2] = r2;
        }
        return r2;
      };
    }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 60 }], 118: [function(e2, t, r) {
      var o = e2("../internals/get-built-in"), n = e2("../internals/object-define-property"), s2 = e2("../internals/well-known-symbol"), i = e2("../internals/descriptors"), a2 = s2("species");
      t.exports = function(e3) {
        var e3 = o(e3), t2 = n.f;
        i && e3 && !e3[a2] && t2(e3, a2, { configurable: true, get: function() {
          return this;
        } });
      };
    }, { "../internals/descriptors": 43, "../internals/get-built-in": 57, "../internals/object-define-property": 93, "../internals/well-known-symbol": 150 }], 119: [function(e2, t, r) {
      var o = e2("../internals/object-define-property").f, n = e2("../internals/has"), s2 = e2("../internals/well-known-symbol")("toStringTag");
      t.exports = function(e3, t2, r2) {
        e3 && !n(e3 = r2 ? e3 : e3.prototype, s2) && o(e3, s2, { configurable: true, value: t2 });
      };
    }, { "../internals/has": 61, "../internals/object-define-property": 93, "../internals/well-known-symbol": 150 }], 120: [function(e2, t, r) {
      var o = e2("../internals/shared"), n = e2("../internals/uid"), s2 = o("keys");
      t.exports = function(e3) {
        return s2[e3] || (s2[e3] = n(e3));
      };
    }, { "../internals/shared": 122, "../internals/uid": 147 }], 121: [function(e2, t, r) {
      var o = e2("../internals/global"), e2 = e2("../internals/set-global"), n = "__core-js_shared__", o = o[n] || e2(n, {});
      t.exports = o;
    }, { "../internals/global": 60, "../internals/set-global": 117 }], 122: [function(e2, t, r) {
      var o = e2("../internals/is-pure"), n = e2("../internals/shared-store");
      (t.exports = function(e3, t2) {
        return n[e3] || (n[e3] = void 0 !== t2 ? t2 : {});
      })("versions", []).push({ version: "3.6.5", mode: o ? "pure" : "global", copyright: "© 2020 Denis Pushkarev (zloirock.ru)" });
    }, { "../internals/is-pure": 76, "../internals/shared-store": 121 }], 123: [function(e2, t, r) {
      var o = e2("../internals/an-object"), n = e2("../internals/a-function"), s2 = e2("../internals/well-known-symbol")("species");
      t.exports = function(e3, t2) {
        var e3 = o(e3).constructor;
        return void 0 === e3 || null == (e3 = o(e3)[s2]) ? t2 : n(e3);
      };
    }, { "../internals/a-function": 5, "../internals/an-object": 10, "../internals/well-known-symbol": 150 }], 124: [function(e2, t, r) {
      var o = e2("../internals/fails");
      t.exports = function(t2) {
        return o(function() {
          var e3 = ""[t2]('"');
          return e3 !== e3.toLowerCase() || 3 < e3.split('"').length;
        });
      };
    }, { "../internals/fails": 51 }], 125: [function(e2, t, r) {
      function o(n) {
        return function(e3, t2) {
          var r2, e3 = String(i(e3)), t2 = s2(t2), o3 = e3.length;
          return t2 < 0 || o3 <= t2 ? n ? "" : void 0 : (r2 = e3.charCodeAt(t2)) < 55296 || 56319 < r2 || t2 + 1 === o3 || (o3 = e3.charCodeAt(t2 + 1)) < 56320 || 57343 < o3 ? n ? e3.charAt(t2) : r2 : n ? e3.slice(t2, t2 + 2) : o3 - 56320 + (r2 - 55296 << 10) + 65536;
        };
      }
      var s2 = e2("../internals/to-integer"), i = e2("../internals/require-object-coercible");
      t.exports = { codeAt: o(false), charAt: o(true) };
    }, { "../internals/require-object-coercible": 115, "../internals/to-integer": 137 }], 126: [function(e2, t, r) {
      e2 = e2("../internals/engine-user-agent");
      t.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(e2);
    }, { "../internals/engine-user-agent": 47 }], 127: [function(e2, t, r) {
      function o(n) {
        return function(e3, t2, r2) {
          var e3 = String(a2(e3)), o3 = e3.length, r2 = void 0 === r2 ? " " : String(r2), t2 = s2(t2);
          return t2 <= o3 || "" == r2 ? e3 : ((o3 = i.call(r2, l((t2 = t2 - o3) / r2.length))).length > t2 && (o3 = o3.slice(0, t2)), n ? e3 + o3 : o3 + e3);
        };
      }
      var s2 = e2("../internals/to-length"), i = e2("../internals/string-repeat"), a2 = e2("../internals/require-object-coercible"), l = Math.ceil;
      t.exports = { start: o(false), end: o(true) };
    }, { "../internals/require-object-coercible": 115, "../internals/string-repeat": 129, "../internals/to-length": 138 }], 128: [function(e2, t, r) {
      function g(e3) {
        return e3 + 22 + 75 * (e3 < 26);
      }
      function s2(e3) {
        var t2, r2 = [], o = (e3 = function(e4) {
          for (var t3 = [], r3 = 0, o3 = e4.length; r3 < o3; ) {
            var n2, s4 = e4.charCodeAt(r3++);
            55296 <= s4 && s4 <= 56319 && r3 < o3 ? 56320 == (64512 & (n2 = e4.charCodeAt(r3++))) ? t3.push(((1023 & s4) << 10) + (1023 & n2) + 65536) : (t3.push(s4), r3--) : t3.push(s4);
          }
          return t3;
        }(e3)).length, n = 128, s3 = 0, i2 = 72;
        for (c = 0; c < e3.length; c++) (t2 = e3[c]) < 128 && r2.push(E(t2));
        var a3 = r2.length, l = a3;
        for (a3 && r2.push("-"); l < o; ) {
          for (var u = v, c = 0; c < e3.length; c++) n <= (t2 = e3[c]) && t2 < u && (u = t2);
          var d = l + 1;
          if (u - n > T((v - s3) / d)) throw RangeError(w);
          for (s3 += (u - n) * d, n = u, c = 0; c < e3.length; c++) {
            if ((t2 = e3[c]) < n && ++s3 > v) throw RangeError(w);
            if (t2 == n) {
              for (var h = s3, f = b; ; f += b) {
                var p = f <= i2 ? 1 : i2 + _ <= f ? _ : f - i2;
                if (h < p) break;
                var m = h - p, y = b - p;
                r2.push(E(g(p + m % y))), h = T(m / y);
              }
              r2.push(E(g(h))), i2 = function(e4, t3, r3) {
                var o3 = 0;
                for (e4 = r3 ? T(e4 / x2) : e4 >> 1, e4 += T(e4 / t3); S * _ >> 1 < e4; o3 += b) e4 = T(e4 / S);
                return T(o3 + (S + 1) * e4 / (e4 + j));
              }(s3, d, l == a3), s3 = 0, ++l;
            }
          }
          ++s3, ++n;
        }
        return r2.join("");
      }
      var v = 2147483647, b = 36, _ = 26, j = 38, x2 = 700, i = /[^\0-\u007E]/, a2 = /[.\u3002\uFF0E\uFF61]/g, w = "Overflow: input needs wider integers to process", S = b - 1, T = Math.floor, E = String.fromCharCode;
      t.exports = function(e3) {
        for (var t2, r2 = [], o = e3.toLowerCase().replace(a2, ".").split("."), n = 0; n < o.length; n++) t2 = o[n], r2.push(i.test(t2) ? "xn--" + s2(t2) : t2);
        return r2.join(".");
      };
    }, {}], 129: [function(e2, t, r) {
      var n = e2("../internals/to-integer"), s2 = e2("../internals/require-object-coercible");
      t.exports = "".repeat || function(e3) {
        var t2 = String(s2(this)), r2 = "", o = n(e3);
        if (o < 0 || o == 1 / 0) throw RangeError("Wrong number of repetitions");
        for (; 0 < o; (o >>>= 1) && (t2 += t2)) 1 & o && (r2 += t2);
        return r2;
      };
    }, { "../internals/require-object-coercible": 115, "../internals/to-integer": 137 }], 130: [function(e2, t, r) {
      var o = e2("../internals/fails"), n = e2("../internals/whitespaces");
      t.exports = function(e3) {
        return o(function() {
          return !!n[e3]() || "​᠎" != "​᠎"[e3]() || n[e3].name !== e3;
        });
      };
    }, { "../internals/fails": 51, "../internals/whitespaces": 151 }], 131: [function(e2, t, r) {
      function o(t2) {
        return function(e3) {
          e3 = String(n(e3));
          return 1 & t2 && (e3 = e3.replace(s2, "")), e3 = 2 & t2 ? e3.replace(i, "") : e3;
        };
      }
      var n = e2("../internals/require-object-coercible"), e2 = "[" + e2("../internals/whitespaces") + "]", s2 = RegExp("^" + e2 + e2 + "*"), i = RegExp(e2 + e2 + "*$");
      t.exports = { start: o(1), end: o(2), trim: o(3) };
    }, { "../internals/require-object-coercible": 115, "../internals/whitespaces": 151 }], 132: [function(e2, t, r) {
      function o(e3) {
        return function() {
          x2(e3);
        };
      }
      function n(e3) {
        x2(e3.data);
      }
      function s2(e3) {
        a2.postMessage(e3 + "", f.protocol + "//" + f.host);
      }
      var i, a2 = e2("../internals/global"), l = e2("../internals/fails"), u = e2("../internals/classof-raw"), c = e2("../internals/function-bind-context"), d = e2("../internals/html"), h = e2("../internals/document-create-element"), e2 = e2("../internals/engine-is-ios"), f = a2.location, p = a2.setImmediate, m = a2.clearImmediate, y = a2.process, g = a2.MessageChannel, v = a2.Dispatch, b = 0, _ = {}, j = "onreadystatechange", x2 = function(e3) {
        var t2;
        _.hasOwnProperty(e3) && (t2 = _[e3], delete _[e3], t2());
      };
      p && m || (p = function(e3) {
        for (var t2 = [], r2 = 1; r2 < arguments.length; ) t2.push(arguments[r2++]);
        return _[++b] = function() {
          ("function" == typeof e3 ? e3 : Function(e3)).apply(void 0, t2);
        }, i(b), b;
      }, m = function(e3) {
        delete _[e3];
      }, "process" == u(y) ? i = function(e3) {
        y.nextTick(o(e3));
      } : v && v.now ? i = function(e3) {
        v.now(o(e3));
      } : g && !e2 ? (e2 = (u = new g()).port2, u.port1.onmessage = n, i = c(e2.postMessage, e2, 1)) : !a2.addEventListener || "function" != typeof postMessage || a2.importScripts || l(s2) || "file:" === f.protocol ? i = j in h("script") ? function(e3) {
        d.appendChild(h("script"))[j] = function() {
          d.removeChild(this), x2(e3);
        };
      } : function(e3) {
        setTimeout(o(e3), 0);
      } : (i = s2, a2.addEventListener("message", n, false))), t.exports = { set: p, clear: m };
    }, { "../internals/classof-raw": 28, "../internals/document-create-element": 44, "../internals/engine-is-ios": 46, "../internals/fails": 51, "../internals/function-bind-context": 55, "../internals/global": 60, "../internals/html": 64 }], 133: [function(e2, t, r) {
      var o = e2("../internals/classof-raw");
      t.exports = function(e3) {
        if ("number" != typeof e3 && "Number" != o(e3)) throw TypeError("Incorrect invocation");
        return +e3;
      };
    }, { "../internals/classof-raw": 28 }], 134: [function(e2, t, r) {
      var o = e2("../internals/to-integer"), n = Math.max, s2 = Math.min;
      t.exports = function(e3, t2) {
        e3 = o(e3);
        return e3 < 0 ? n(e3 + t2, 0) : s2(e3, t2);
      };
    }, { "../internals/to-integer": 137 }], 135: [function(e2, t, r) {
      var o = e2("../internals/to-integer"), n = e2("../internals/to-length");
      t.exports = function(e3) {
        if (void 0 === e3) return 0;
        var e3 = o(e3), t2 = n(e3);
        if (e3 !== t2) throw RangeError("Wrong length or index");
        return t2;
      };
    }, { "../internals/to-integer": 137, "../internals/to-length": 138 }], 136: [function(e2, t, r) {
      var o = e2("../internals/indexed-object"), n = e2("../internals/require-object-coercible");
      t.exports = function(e3) {
        return o(n(e3));
      };
    }, { "../internals/indexed-object": 67, "../internals/require-object-coercible": 115 }], 137: [function(e2, t, r) {
      var o = Math.ceil, n = Math.floor;
      t.exports = function(e3) {
        return isNaN(e3 = +e3) ? 0 : (0 < e3 ? n : o)(e3);
      };
    }, {}], 138: [function(e2, t, r) {
      var o = e2("../internals/to-integer"), n = Math.min;
      t.exports = function(e3) {
        return 0 < e3 ? n(o(e3), 9007199254740991) : 0;
      };
    }, { "../internals/to-integer": 137 }], 139: [function(e2, t, r) {
      var o = e2("../internals/require-object-coercible");
      t.exports = function(e3) {
        return Object(o(e3));
      };
    }, { "../internals/require-object-coercible": 115 }], 140: [function(e2, t, r) {
      var o = e2("../internals/to-positive-integer");
      t.exports = function(e3, t2) {
        e3 = o(e3);
        if (e3 % t2) throw RangeError("Wrong offset");
        return e3;
      };
    }, { "../internals/to-positive-integer": 141 }], 141: [function(e2, t, r) {
      var o = e2("../internals/to-integer");
      t.exports = function(e3) {
        e3 = o(e3);
        if (e3 < 0) throw RangeError("The argument can't be less than 0");
        return e3;
      };
    }, { "../internals/to-integer": 137 }], 142: [function(e2, t, r) {
      var n = e2("../internals/is-object");
      t.exports = function(e3, t2) {
        if (!n(e3)) return e3;
        var r2, o;
        if (t2 && "function" == typeof (r2 = e3.toString) && !n(o = r2.call(e3)) || "function" == typeof (r2 = e3.valueOf) && !n(o = r2.call(e3)) || !t2 && "function" == typeof (r2 = e3.toString) && !n(o = r2.call(e3))) return o;
        throw TypeError("Can't convert object to primitive value");
      };
    }, { "../internals/is-object": 75 }], 143: [function(e2, t, r) {
      var o = {};
      o[e2("../internals/well-known-symbol")("toStringTag")] = "z", t.exports = "[object z]" === String(o);
    }, { "../internals/well-known-symbol": 150 }], 144: [function(e2, t, D) {
      function f(e3, t2) {
        for (var r2 = 0, o3 = t2.length, n2 = new (K(e3))(o3); r2 < o3; ) n2[r2] = t2[r2++];
        return n2;
      }
      function r(e3, t2) {
        E(e3, t2, { get: function() {
          return T(this)[t2];
        } });
      }
      function p(e3) {
        return e3 instanceof k || "ArrayBuffer" == (e3 = B(e3)) || "SharedArrayBuffer" == e3;
      }
      function o(e3, t2) {
        return L(e3) && "symbol" != typeof t2 && t2 in e3 && String(+t2) == String(t2);
      }
      function n(e3, t2) {
        return o(e3, t2 = d(t2, true)) ? U(2, e3[t2]) : X(e3, t2);
      }
      function s2(e3, t2, r2) {
        return !(o(e3, t2 = d(t2, true)) && b(r2) && h(r2, "value")) || h(r2, "get") || h(r2, "set") || r2.configurable || h(r2, "writable") && !r2.writable || h(r2, "enumerable") && !r2.enumerable ? E(e3, t2, r2) : (e3[t2] = r2.value, e3);
      }
      var a2 = e2("../internals/export"), l = e2("../internals/global"), i = e2("../internals/descriptors"), F = e2("../internals/typed-array-constructors-require-wrappers"), u = e2("../internals/array-buffer-view-core"), c = e2("../internals/array-buffer"), m = e2("../internals/an-instance"), U = e2("../internals/create-property-descriptor"), y = e2("../internals/create-non-enumerable-property"), N = e2("../internals/to-length"), g = e2("../internals/to-index"), v = e2("../internals/to-offset"), d = e2("../internals/to-primitive"), h = e2("../internals/has"), B = e2("../internals/classof"), b = e2("../internals/is-object"), G = e2("../internals/object-create"), _ = e2("../internals/object-set-prototype-of"), V = e2("../internals/object-get-own-property-names").f, j = e2("../internals/typed-array-from"), z = e2("../internals/array-iteration").forEach, H = e2("../internals/set-species"), x2 = e2("../internals/object-define-property"), w = e2("../internals/object-get-own-property-descriptor"), S = e2("../internals/internal-state"), W = e2("../internals/inherit-if-required"), T = S.get, q = S.set, E = x2.f, X = w.f, Y = Math.round, M = l.RangeError, k = c.ArrayBuffer, Z = c.DataView, O = u.NATIVE_ARRAY_BUFFER_VIEWS, C = u.TYPED_ARRAY_TAG, A = u.TypedArray, P = u.TypedArrayPrototype, K = u.aTypedArrayConstructor, L = u.isTypedArray, R = "BYTES_PER_ELEMENT", I = "Wrong length";
      i ? (O || (w.f = n, x2.f = s2, r(P, "buffer"), r(P, "byteOffset"), r(P, "byteLength"), r(P, "length")), a2({ target: "Object", stat: true, forced: !O }, { getOwnPropertyDescriptor: n, defineProperty: s2 }), t.exports = function(e3, t2, n2) {
        function u2(e4, o4) {
          E(e4, o4, { get: function() {
            var e5 = this, t3 = o4;
            return (e5 = T(e5)).view[r2](t3 * c2 + e5.byteOffset, true);
          }, set: function(e5) {
            var t3 = this, r3 = o4;
            t3 = T(t3), n2 && (e5 = (e5 = Y(e5)) < 0 ? 0 : 255 < e5 ? 255 : 255 & e5), t3.view[s3](r3 * c2 + t3.byteOffset, e5, true);
          }, enumerable: true });
        }
        var c2 = e3.match(/\d+$/)[0] / 8, d2 = e3 + (n2 ? "Clamped" : "") + "Array", r2 = "get" + e3, s3 = "set" + e3, i2 = l[d2], h2 = i2, e3 = h2 && h2.prototype, o3 = {};
        O ? F && (h2 = t2(function(e4, t3, r3, o4) {
          return m(e4, h2, d2), W(b(t3) ? p(t3) ? void 0 !== o4 ? new i2(t3, v(r3, c2), o4) : void 0 !== r3 ? new i2(t3, v(r3, c2)) : new i2(t3) : L(t3) ? f(h2, t3) : j.call(h2, t3) : new i2(g(t3)), e4, h2);
        }), _ && _(h2, A), z(V(i2), function(e4) {
          e4 in h2 || y(h2, e4, i2[e4]);
        }), h2.prototype = e3) : (h2 = t2(function(e4, t3, r3, o4) {
          m(e4, h2, d2);
          var n3, s4, i3 = 0, a3 = 0;
          if (b(t3)) {
            if (!p(t3)) return L(t3) ? f(h2, t3) : j.call(h2, t3);
            var l2 = t3, a3 = v(r3, c2), r3 = t3.byteLength;
            if (void 0 === o4) {
              if (r3 % c2) throw M(I);
              if ((n3 = r3 - a3) < 0) throw M(I);
            } else if (r3 < (n3 = N(o4) * c2) + a3) throw M(I);
            s4 = n3 / c2;
          } else s4 = g(t3), l2 = new k(n3 = s4 * c2);
          for (q(e4, { buffer: l2, byteOffset: a3, byteLength: n3, length: s4, view: new Z(l2) }); i3 < s4; ) u2(e4, i3++);
        }), _ && _(h2, A), e3 = h2.prototype = G(P)), e3.constructor !== h2 && y(e3, "constructor", h2), C && y(e3, C, d2), o3[d2] = h2, a2({ global: true, forced: h2 != i2, sham: !O }, o3), R in h2 || y(h2, R, c2), R in e3 || y(e3, R, c2), H(d2);
      }) : t.exports = function() {
      };
    }, { "../internals/an-instance": 9, "../internals/array-buffer": 13, "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/classof": 29, "../internals/create-non-enumerable-property": 38, "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 60, "../internals/has": 61, "../internals/inherit-if-required": 68, "../internals/internal-state": 71, "../internals/is-object": 75, "../internals/object-create": 91, "../internals/object-define-property": 93, "../internals/object-get-own-property-descriptor": 94, "../internals/object-get-own-property-names": 96, "../internals/object-set-prototype-of": 102, "../internals/set-species": 118, "../internals/to-index": 135, "../internals/to-length": 138, "../internals/to-offset": 140, "../internals/to-primitive": 142, "../internals/typed-array-constructors-require-wrappers": 145, "../internals/typed-array-from": 146 }], 145: [function(e2, t, r) {
      var o = e2("../internals/global"), n = e2("../internals/fails"), s2 = e2("../internals/check-correctness-of-iteration"), e2 = e2("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS, i = o.ArrayBuffer, a2 = o.Int8Array;
      t.exports = !e2 || !n(function() {
        a2(1);
      }) || !n(function() {
        new a2(-1);
      }) || !s2(function(e3) {
        new a2(), new a2(null), new a2(1.5), new a2(e3);
      }, true) || n(function() {
        return 1 !== new a2(new i(2), 1, void 0).length;
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/check-correctness-of-iteration": 27, "../internals/fails": 51, "../internals/global": 60 }], 146: [function(e2, t, r) {
      var h = e2("../internals/to-object"), f = e2("../internals/to-length"), p = e2("../internals/get-iterator-method"), m = e2("../internals/is-array-iterator-method"), y = e2("../internals/function-bind-context"), g = e2("../internals/array-buffer-view-core").aTypedArrayConstructor;
      t.exports = function(e3) {
        var t2, r2, o, n, s2, i, a2 = h(e3), l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = p(a2);
        if (null != d && !m(d)) for (i = (s2 = d.call(a2)).next, a2 = []; !(n = i.call(s2)).done; ) a2.push(n.value);
        for (c && 2 < l && (u = y(u, arguments[2], 2)), r2 = f(a2.length), o = new (g(this))(r2), t2 = 0; t2 < r2; t2++) o[t2] = c ? u(a2[t2], t2) : a2[t2];
        return o;
      };
    }, { "../internals/array-buffer-view-core": 12, "../internals/function-bind-context": 55, "../internals/get-iterator-method": 58, "../internals/is-array-iterator-method": 72, "../internals/to-length": 138, "../internals/to-object": 139 }], 147: [function(e2, t, r) {
      var o = 0, n = Math.random();
      t.exports = function(e3) {
        return "Symbol(" + String(void 0 === e3 ? "" : e3) + ")_" + (++o + n).toString(36);
      };
    }, {}], 148: [function(e2, t, r) {
      e2 = e2("../internals/native-symbol");
      t.exports = e2 && !Symbol.sham && "symbol" == typeof Symbol.iterator;
    }, { "../internals/native-symbol": 84 }], 149: [function(e2, t, r) {
      e2 = e2("../internals/well-known-symbol");
      r.f = e2;
    }, { "../internals/well-known-symbol": 150 }], 150: [function(e2, t, r) {
      var o = e2("../internals/global"), n = e2("../internals/shared"), s2 = e2("../internals/has"), i = e2("../internals/uid"), a2 = e2("../internals/native-symbol"), e2 = e2("../internals/use-symbol-as-uid"), l = n("wks"), u = o.Symbol, c = e2 ? u : u && u.withoutSetter || i;
      t.exports = function(e3) {
        return s2(l, e3) || (a2 && s2(u, e3) ? l[e3] = u[e3] : l[e3] = c("Symbol." + e3)), l[e3];
      };
    }, { "../internals/global": 60, "../internals/has": 61, "../internals/native-symbol": 84, "../internals/shared": 122, "../internals/uid": 147, "../internals/use-symbol-as-uid": 148 }], 151: [function(e2, t, r) {
      t.exports = "	\n\v\f\r                　\u2028\u2029\uFEFF";
    }, {}], 152: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/global"), s2 = e2("../internals/array-buffer"), e2 = e2("../internals/set-species"), i = "ArrayBuffer", s2 = s2[i];
      o({ global: true, forced: n[i] !== s2 }, { ArrayBuffer: s2 }), e2(i);
    }, { "../internals/array-buffer": 13, "../internals/export": 50, "../internals/global": 60, "../internals/set-species": 118 }], 153: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), d = e2("../internals/is-array"), h = e2("../internals/is-object"), f = e2("../internals/to-object"), p = e2("../internals/to-length"), m = e2("../internals/create-property"), y = e2("../internals/array-species-create"), s2 = e2("../internals/array-method-has-species-support"), i = e2("../internals/well-known-symbol"), e2 = e2("../internals/engine-v8-version"), g = i("isConcatSpreadable"), v = 9007199254740991, b = "Maximum allowed index exceeded", i = 51 <= e2 || !n(function() {
        var e3 = [];
        return e3[g] = false, e3.concat()[0] !== e3;
      }), e2 = s2("concat");
      o({ target: "Array", proto: true, forced: !i || !e2 }, { concat: function(e3) {
        for (var t2, r2, o3, n2, s3, i2 = f(this), a2 = y(i2, 0), l = 0, u = -1, c = arguments.length; u < c; u++) if (s3 = void 0, !h(n2 = o3 = -1 === u ? i2 : arguments[u]) || (void 0 !== (s3 = n2[g]) ? !s3 : !d(n2))) {
          if (v <= l) throw TypeError(b);
          m(a2, l++, o3);
        } else {
          if (r2 = p(o3.length), v < l + r2) throw TypeError(b);
          for (t2 = 0; t2 < r2; t2++, l++) t2 in o3 && m(a2, l, o3[t2]);
        }
        return a2.length = l, a2;
      } });
    }, { "../internals/array-method-has-species-support": 21, "../internals/array-species-create": 25, "../internals/create-property": 40, "../internals/engine-v8-version": 48, "../internals/export": 50, "../internals/fails": 51, "../internals/is-array": 73, "../internals/is-object": 75, "../internals/to-length": 138, "../internals/to-object": 139, "../internals/well-known-symbol": 150 }], 154: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-copy-within"), e2 = e2("../internals/add-to-unscopables");
      o({ target: "Array", proto: true }, { copyWithin: n }), e2("copyWithin");
    }, { "../internals/add-to-unscopables": 7, "../internals/array-copy-within": 14, "../internals/export": 50 }], 155: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").every, s2 = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("every"), e2 = e2("every");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { every: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 156: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-fill"), e2 = e2("../internals/add-to-unscopables");
      o({ target: "Array", proto: true }, { fill: n }), e2("fill");
    }, { "../internals/add-to-unscopables": 7, "../internals/array-fill": 15, "../internals/export": 50 }], 157: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").filter, s2 = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("filter"), e2 = e2("filter");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { filter: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 158: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").findIndex, s2 = e2("../internals/add-to-unscopables"), e2 = e2("../internals/array-method-uses-to-length"), i = "findIndex", a2 = true, e2 = e2(i);
      i in [] && Array(1)[i](function() {
        a2 = false;
      }), o({ target: "Array", proto: true, forced: a2 || !e2 }, { findIndex: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } }), s2(i);
    }, { "../internals/add-to-unscopables": 7, "../internals/array-iteration": 19, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 159: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/flatten-into-array"), s2 = e2("../internals/to-object"), i = e2("../internals/to-length"), a2 = e2("../internals/a-function"), l = e2("../internals/array-species-create");
      o({ target: "Array", proto: true }, { flatMap: function(e3) {
        var t2, r2 = s2(this), o3 = i(r2.length);
        return a2(e3), (t2 = l(r2, 0)).length = n(t2, r2, r2, o3, 0, 1, e3, 1 < arguments.length ? arguments[1] : void 0), t2;
      } });
    }, { "../internals/a-function": 5, "../internals/array-species-create": 25, "../internals/export": 50, "../internals/flatten-into-array": 53, "../internals/to-length": 138, "../internals/to-object": 139 }], 160: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/flatten-into-array"), s2 = e2("../internals/to-object"), i = e2("../internals/to-length"), a2 = e2("../internals/to-integer"), l = e2("../internals/array-species-create");
      o({ target: "Array", proto: true }, { flat: function() {
        var e3 = arguments.length ? arguments[0] : void 0, t2 = s2(this), r2 = i(t2.length), o3 = l(t2, 0);
        return o3.length = n(o3, t2, t2, r2, 0, void 0 === e3 ? 1 : a2(e3)), o3;
      } });
    }, { "../internals/array-species-create": 25, "../internals/export": 50, "../internals/flatten-into-array": 53, "../internals/to-integer": 137, "../internals/to-length": 138, "../internals/to-object": 139 }], 161: [function(e2, t, r) {
      var o = e2("../internals/export"), e2 = e2("../internals/array-for-each");
      o({ target: "Array", proto: true, forced: [].forEach != e2 }, { forEach: e2 });
    }, { "../internals/array-for-each": 16, "../internals/export": 50 }], 162: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-from");
      o({ target: "Array", stat: true, forced: !e2("../internals/check-correctness-of-iteration")(function(e3) {
        Array.from(e3);
      }) }, { from: n });
    }, { "../internals/array-from": 17, "../internals/check-correctness-of-iteration": 27, "../internals/export": 50 }], 163: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-includes").includes, s2 = e2("../internals/add-to-unscopables");
      o({ target: "Array", proto: true, forced: !e2("../internals/array-method-uses-to-length")("indexOf", { ACCESSORS: true, 1: 0 }) }, { includes: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } }), s2("includes");
    }, { "../internals/add-to-unscopables": 7, "../internals/array-includes": 18, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 164: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-includes").indexOf, s2 = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), i = [].indexOf, a2 = !!i && 1 / [1].indexOf(1, -0) < 0, s2 = s2("indexOf"), e2 = e2("indexOf", { ACCESSORS: true, 1: 0 });
      o({ target: "Array", proto: true, forced: a2 || !s2 || !e2 }, { indexOf: function(e3) {
        return a2 ? i.apply(this, arguments) || 0 : n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/array-includes": 18, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 165: [function(e2, t, r) {
      var o = e2("../internals/to-indexed-object"), n = e2("../internals/add-to-unscopables"), s2 = e2("../internals/iterators"), i = e2("../internals/internal-state"), e2 = e2("../internals/define-iterator"), a2 = "Array Iterator", l = i.set, u = i.getterFor(a2);
      t.exports = e2(Array, "Array", function(e3, t2) {
        l(this, { type: a2, target: o(e3), index: 0, kind: t2 });
      }, function() {
        var e3 = u(this), t2 = e3.target, r2 = e3.kind, o3 = e3.index++;
        return !t2 || o3 >= t2.length ? { value: e3.target = void 0, done: true } : "keys" == r2 ? { value: o3, done: false } : "values" == r2 ? { value: t2[o3], done: false } : { value: [o3, t2[o3]], done: false };
      }, "values"), s2.Arguments = s2.Array, n("keys"), n("values"), n("entries");
    }, { "../internals/add-to-unscopables": 7, "../internals/define-iterator": 41, "../internals/internal-state": 71, "../internals/iterators": 80, "../internals/to-indexed-object": 136 }], 166: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/indexed-object"), s2 = e2("../internals/to-indexed-object"), e2 = e2("../internals/array-method-is-strict"), i = [].join, n = n != Object, e2 = e2("join", ",");
      o({ target: "Array", proto: true, forced: n || !e2 }, { join: function(e3) {
        return i.call(s2(this), void 0 === e3 ? "," : e3);
      } });
    }, { "../internals/array-method-is-strict": 22, "../internals/export": 50, "../internals/indexed-object": 67, "../internals/to-indexed-object": 136 }], 167: [function(e2, t, r) {
      var o = e2("../internals/export"), e2 = e2("../internals/array-last-index-of");
      o({ target: "Array", proto: true, forced: e2 !== [].lastIndexOf }, { lastIndexOf: e2 });
    }, { "../internals/array-last-index-of": 20, "../internals/export": 50 }], 168: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").map, s2 = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("map"), e2 = e2("map");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { map: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 169: [function(e2, t, r) {
      var o = e2("../internals/export"), u = e2("../internals/is-object"), c = e2("../internals/is-array"), d = e2("../internals/to-absolute-index"), h = e2("../internals/to-length"), f = e2("../internals/to-indexed-object"), p = e2("../internals/create-property"), n = e2("../internals/well-known-symbol"), s2 = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("slice"), e2 = e2("slice", { ACCESSORS: true, 0: 0, 1: 2 }), m = n("species"), y = [].slice, g = Math.max;
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { slice: function(e3, t2) {
        var r2, o3, n2, s3 = f(this), i = h(s3.length), a2 = d(e3, i), l = d(void 0 === t2 ? i : t2, i);
        if (c(s3) && ((r2 = "function" == typeof (r2 = s3.constructor) && (r2 === Array || c(r2.prototype)) || u(r2) && null === (r2 = r2[m]) ? void 0 : r2) === Array || void 0 === r2)) return y.call(s3, a2, l);
        for (o3 = new (void 0 === r2 ? Array : r2)(g(l - a2, 0)), n2 = 0; a2 < l; a2++, n2++) a2 in s3 && p(o3, n2, s3[a2]);
        return o3.length = n2, o3;
      } });
    }, { "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/create-property": 40, "../internals/export": 50, "../internals/is-array": 73, "../internals/is-object": 75, "../internals/to-absolute-index": 134, "../internals/to-indexed-object": 136, "../internals/to-length": 138, "../internals/well-known-symbol": 150 }], 170: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/array-iteration").some, s2 = e2("../internals/array-method-is-strict"), e2 = e2("../internals/array-method-uses-to-length"), s2 = s2("some"), e2 = e2("some");
      o({ target: "Array", proto: true, forced: !s2 || !e2 }, { some: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 171: [function(e2, t, r) {
      var o = e2("../internals/export"), d = e2("../internals/to-absolute-index"), h = e2("../internals/to-integer"), f = e2("../internals/to-length"), p = e2("../internals/to-object"), m = e2("../internals/array-species-create"), y = e2("../internals/create-property"), n = e2("../internals/array-method-has-species-support"), e2 = e2("../internals/array-method-uses-to-length"), n = n("splice"), e2 = e2("splice", { ACCESSORS: true, 0: 0, 1: 2 }), g = Math.max, v = Math.min;
      o({ target: "Array", proto: true, forced: !n || !e2 }, { splice: function(e3, t2) {
        var r2, o3, n2, s2, i, a2, l = p(this), u = f(l.length), c = d(e3, u), e3 = arguments.length;
        if (0 === e3 ? r2 = o3 = 0 : o3 = 1 === e3 ? (r2 = 0, u - c) : (r2 = e3 - 2, v(g(h(t2), 0), u - c)), 9007199254740991 < u + r2 - o3) throw TypeError("Maximum allowed length exceeded");
        for (n2 = m(l, o3), s2 = 0; s2 < o3; s2++) (i = c + s2) in l && y(n2, s2, l[i]);
        if (r2 < (n2.length = o3)) {
          for (s2 = c; s2 < u - o3; s2++) a2 = s2 + r2, (i = s2 + o3) in l ? l[a2] = l[i] : delete l[a2];
          for (s2 = u; u - o3 + r2 < s2; s2--) delete l[s2 - 1];
        } else if (o3 < r2) for (s2 = u - o3; c < s2; s2--) a2 = s2 + r2 - 1, (i = s2 + o3 - 1) in l ? l[a2] = l[i] : delete l[a2];
        for (s2 = 0; s2 < r2; s2++) l[s2 + c] = arguments[s2 + 2];
        return l.length = u - o3 + r2, n2;
      } });
    }, { "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/array-species-create": 25, "../internals/create-property": 40, "../internals/export": 50, "../internals/to-absolute-index": 134, "../internals/to-integer": 137, "../internals/to-length": 138, "../internals/to-object": 139 }], 172: [function(e2, t, r) {
      e2("../internals/add-to-unscopables")("flatMap");
    }, { "../internals/add-to-unscopables": 7 }], 173: [function(e2, t, r) {
      e2("../internals/add-to-unscopables")("flat");
    }, { "../internals/add-to-unscopables": 7 }], 174: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), e2 = e2("../internals/object-define-property").f, n = Function.prototype, s2 = n.toString, i = /^\s*function ([^ (]*)/;
      !o || "name" in n || e2(n, "name", { configurable: true, get: function() {
        try {
          return s2.call(this).match(i)[1];
        } catch (e3) {
          return "";
        }
      } });
    }, { "../internals/descriptors": 43, "../internals/object-define-property": 93 }], 175: [function(e2, t, r) {
      var o = e2("../internals/collection"), e2 = e2("../internals/collection-strong");
      t.exports = o("Map", function(e3) {
        return function() {
          return e3(this, arguments.length ? arguments[0] : void 0);
        };
      }, e2);
    }, { "../internals/collection": 32, "../internals/collection-strong": 30 }], 176: [function(e2, t, r) {
      var e2 = e2("../internals/export"), o = Math.hypot, l = Math.abs, u = Math.sqrt;
      e2({ target: "Math", stat: true, forced: !!o && o(1 / 0, NaN) !== 1 / 0 }, { hypot: function(e3, t2) {
        for (var r2, o3, n = 0, s2 = 0, i = arguments.length, a2 = 0; s2 < i; ) a2 < (r2 = l(arguments[s2++])) ? (n = n * (o3 = a2 / r2) * o3 + 1, a2 = r2) : n += 0 < r2 ? (o3 = r2 / a2) * o3 : r2;
        return a2 === 1 / 0 ? 1 / 0 : a2 * u(n);
      } });
    }, { "../internals/export": 50 }], 177: [function(e2, t, r) {
      var e2 = e2("../internals/export"), o = Math.log, n = Math.LN2;
      e2({ target: "Math", stat: true }, { log2: function(e3) {
        return o(e3) / n;
      } });
    }, { "../internals/export": 50 }], 178: [function(e2, t, r) {
      e2("../internals/export")({ target: "Math", stat: true }, { sign: e2("../internals/math-sign") });
    }, { "../internals/export": 50, "../internals/math-sign": 81 }], 179: [function(e2, t, r) {
      function o(e3) {
        var t2, r2, o3, n2, s3, i2, a3, l2 = d(e3, false);
        if ("string" == typeof l2 && 2 < l2.length) {
          if (43 === (e3 = (l2 = g(l2)).charCodeAt(0)) || 45 === e3) {
            if (88 === (t2 = l2.charCodeAt(2)) || 120 === t2) return NaN;
          } else if (48 === e3) {
            switch (l2.charCodeAt(1)) {
              case 66:
              case 98:
                r2 = 2, o3 = 49;
                break;
              case 79:
              case 111:
                r2 = 8, o3 = 55;
                break;
              default:
                return +l2;
            }
            for (s3 = (n2 = l2.slice(2)).length, i2 = 0; i2 < s3; i2++) if ((a3 = n2.charCodeAt(i2)) < 48 || o3 < a3) return NaN;
            return parseInt(n2, r2);
          }
        }
        return +l2;
      }
      var n = e2("../internals/descriptors"), s2 = e2("../internals/global"), i = e2("../internals/is-forced"), a2 = e2("../internals/redefine"), l = e2("../internals/has"), u = e2("../internals/classof-raw"), c = e2("../internals/inherit-if-required"), d = e2("../internals/to-primitive"), h = e2("../internals/fails"), f = e2("../internals/object-create"), p = e2("../internals/object-get-own-property-names").f, m = e2("../internals/object-get-own-property-descriptor").f, y = e2("../internals/object-define-property").f, g = e2("../internals/string-trim").trim, v = "Number", b = s2[v], _ = b.prototype, j = u(f(_)) == v;
      if (i(v, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
        for (var x2, w = function(e3) {
          var e3 = arguments.length < 1 ? 0 : e3, t2 = this;
          return t2 instanceof w && (j ? h(function() {
            _.valueOf.call(t2);
          }) : u(t2) != v) ? c(new b(o(e3)), t2, w) : o(e3);
        }, S = n ? p(b) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), T = 0; S.length > T; T++) l(b, x2 = S[T]) && !l(w, x2) && y(w, x2, m(b, x2));
        (w.prototype = _).constructor = w, a2(s2, v, w);
      }
    }, { "../internals/classof-raw": 28, "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 60, "../internals/has": 61, "../internals/inherit-if-required": 68, "../internals/is-forced": 74, "../internals/object-create": 91, "../internals/object-define-property": 93, "../internals/object-get-own-property-descriptor": 94, "../internals/object-get-own-property-names": 96, "../internals/redefine": 110, "../internals/string-trim": 131, "../internals/to-primitive": 142 }], 180: [function(e2, t, r) {
      e2("../internals/export")({ target: "Number", stat: true }, { EPSILON: Math.pow(2, -52) });
    }, { "../internals/export": 50 }], 181: [function(e2, t, r) {
      e2("../internals/export")({ target: "Number", stat: true }, { isFinite: e2("../internals/number-is-finite") });
    }, { "../internals/export": 50, "../internals/number-is-finite": 89 }], 182: [function(e2, t, r) {
      function c(e3, t2, r2) {
        return 0 === t2 ? r2 : t2 % 2 == 1 ? c(e3, t2 - 1, r2 * e3) : c(e3 * e3, t2 / 2, r2);
      }
      var o = e2("../internals/export"), d = e2("../internals/to-integer"), h = e2("../internals/this-number-value"), f = e2("../internals/string-repeat"), e2 = e2("../internals/fails"), n = 1 .toFixed, p = Math.floor;
      o({ target: "Number", proto: true, forced: n && ("0.000" !== 8e-5.toFixed(3) || "1" !== 0.9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 1000000000000000100 .toFixed(0)) || !e2(function() {
        n.call({});
      }) }, { toFixed: function(e3) {
        function t2(e4, t3) {
          for (var r3 = -1, o4 = t3; ++r3 < 6; ) o4 += e4 * a2[r3], a2[r3] = o4 % 1e7, o4 = p(o4 / 1e7);
        }
        function r2(e4) {
          for (var t3 = 6, r3 = 0; 0 <= --t3; ) r3 += a2[t3], a2[t3] = p(r3 / e4), r3 = r3 % e4 * 1e7;
        }
        function o3() {
          for (var e4, t3 = 6, r3 = ""; 0 <= --t3; ) "" === r3 && 0 !== t3 && 0 === a2[t3] || (e4 = String(a2[t3]), r3 = "" === r3 ? e4 : r3 + f.call("0", 7 - e4.length) + e4);
          return r3;
        }
        var n2, s2, i = h(this), e3 = d(e3), a2 = [0, 0, 0, 0, 0, 0], l = "", u = "0";
        if (e3 < 0 || 20 < e3) throw RangeError("Incorrect fraction digits");
        if (i != i) return "NaN";
        if (i <= -1e21 || 1e21 <= i) return String(i);
        if (i < 0 && (l = "-", i = -i), 1e-21 < i) if (i = (n2 = function(e4) {
          for (var t3 = 0, r3 = e4; 4096 <= r3; ) t3 += 12, r3 /= 4096;
          for (; 2 <= r3; ) t3 += 1, r3 /= 2;
          return t3;
        }(i * c(2, 69, 1)) - 69) < 0 ? i * c(2, -n2, 1) : i / c(2, n2, 1), i *= 4503599627370496, 0 < (n2 = 52 - n2)) {
          for (t2(0, i), s2 = e3; 7 <= s2; ) t2(1e7, 0), s2 -= 7;
          for (t2(c(10, s2, 1), 0), s2 = n2 - 1; 23 <= s2; ) r2(1 << 23), s2 -= 23;
          r2(1 << s2), t2(1, 1), r2(2), u = o3();
        } else t2(0, i), t2(1 << -n2, 0), u = o3() + f.call("0", e3);
        return u = 0 < e3 ? l + ((i = u.length) <= e3 ? "0." + f.call("0", e3 - i) + u : u.slice(0, i - e3) + "." + u.slice(i - e3)) : l + u;
      } });
    }, { "../internals/export": 50, "../internals/fails": 51, "../internals/string-repeat": 129, "../internals/this-number-value": 133, "../internals/to-integer": 137 }], 183: [function(e2, t, r) {
      var o = e2("../internals/export"), e2 = e2("../internals/object-assign");
      o({ target: "Object", stat: true, forced: Object.assign !== e2 }, { assign: e2 });
    }, { "../internals/export": 50, "../internals/object-assign": 90 }], 184: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/object-to-array").entries;
      o({ target: "Object", stat: true }, { entries: function(e3) {
        return n(e3);
      } });
    }, { "../internals/export": 50, "../internals/object-to-array": 103 }], 185: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/iterate"), s2 = e2("../internals/create-property");
      o({ target: "Object", stat: true }, { fromEntries: function(e3) {
        var r2 = {};
        return n(e3, function(e4, t2) {
          s2(r2, e4, t2);
        }, void 0, true), r2;
      } });
    }, { "../internals/create-property": 40, "../internals/export": 50, "../internals/iterate": 78 }], 186: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), s2 = e2("../internals/to-indexed-object"), i = e2("../internals/object-get-own-property-descriptor").f, e2 = e2("../internals/descriptors"), n = n(function() {
        i(1);
      });
      o({ target: "Object", stat: true, forced: !e2 || n, sham: !e2 }, { getOwnPropertyDescriptor: function(e3, t2) {
        return i(s2(e3), t2);
      } });
    }, { "../internals/descriptors": 43, "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-own-property-descriptor": 94, "../internals/to-indexed-object": 136 }], 187: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), e2 = e2("../internals/object-get-own-property-names-external").f;
      o({ target: "Object", stat: true, forced: n(function() {
        return !Object.getOwnPropertyNames(1);
      }) }, { getOwnPropertyNames: e2 });
    }, { "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-own-property-names-external": 95 }], 188: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/fails"), s2 = e2("../internals/to-object"), i = e2("../internals/object-get-prototype-of"), e2 = e2("../internals/correct-prototype-getter");
      o({ target: "Object", stat: true, forced: n(function() {
        i(1);
      }), sham: !e2 }, { getPrototypeOf: function(e3) {
        return i(s2(e3));
      } });
    }, { "../internals/correct-prototype-getter": 35, "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-prototype-of": 98, "../internals/to-object": 139 }], 189: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/to-object"), s2 = e2("../internals/object-keys");
      o({ target: "Object", stat: true, forced: e2("../internals/fails")(function() {
        s2(1);
      }) }, { keys: function(e3) {
        return s2(n(e3));
      } });
    }, { "../internals/export": 50, "../internals/fails": 51, "../internals/object-keys": 100, "../internals/to-object": 139 }], 190: [function(e2, t, r) {
      var o = e2("../internals/to-string-tag-support"), n = e2("../internals/redefine"), e2 = e2("../internals/object-to-string");
      o || n(Object.prototype, "toString", e2, { unsafe: true });
    }, { "../internals/object-to-string": 104, "../internals/redefine": 110, "../internals/to-string-tag-support": 143 }], 191: [function(e2, D, F) {
      var r, t, o, n, s2 = e2("../internals/export"), i = e2("../internals/is-pure"), g = e2("../internals/global"), a2 = e2("../internals/get-built-in"), l = e2("../internals/native-promise-constructor"), U = e2("../internals/redefine"), N = e2("../internals/redefine-all"), B = e2("../internals/set-to-string-tag"), G = e2("../internals/set-species"), V = e2("../internals/is-object"), c = e2("../internals/a-function"), z = e2("../internals/an-instance"), H = e2("../internals/classof-raw"), W = e2("../internals/inspect-source"), d = e2("../internals/iterate"), q = e2("../internals/check-correctness-of-iteration"), X = e2("../internals/species-constructor"), v = e2("../internals/task").set, u = e2("../internals/microtask"), h = e2("../internals/promise-resolve"), Y = e2("../internals/host-report-errors"), f = e2("../internals/new-promise-capability"), b = e2("../internals/perform"), p = e2("../internals/internal-state"), Z = e2("../internals/is-forced"), m = e2("../internals/well-known-symbol"), y = e2("../internals/engine-v8-version"), K = m("species"), _ = "Promise", j = p.get, Q = p.set, J = p.getterFor(_), x2 = l, w = g.TypeError, S = g.document, T = g.process, E = a2("fetch"), M = f.f, $ = M, k = "process" == H(T), ee = !!(S && S.createEvent && g.dispatchEvent), O = "unhandledrejection", te = "rejectionhandled", C = 1, re = 2, A = 1, oe = 2, e2 = Z(_, function() {
        var e3, t2;
        if (!(W(x2) !== String(x2))) {
          if (66 === y) return true;
          if (!k && "function" != typeof PromiseRejectionEvent) return true;
        }
        return !(!i || x2.prototype.finally) || !(51 <= y && /native code/.test(x2)) && (t2 = function(e4) {
          e4(function() {
          }, function() {
          });
        }, ((e3 = x2.resolve(1)).constructor = {})[K] = t2, !(e3.then(function() {
        }) instanceof t2));
      }), m = e2 || !q(function(e3) {
        x2.all(e3).catch(function() {
        });
      }), ne = function(e3) {
        var t2;
        return !(!V(e3) || "function" != typeof (t2 = e3.then)) && t2;
      }, P = function(f2, p2, m2) {
        var y2;
        p2.notified || (p2.notified = true, y2 = p2.reactions, u(function() {
          for (var r2, o3, e3 = p2.value, t2 = p2.state == C, n2 = 0; y2.length > n2; ) {
            var s3, i2, a3, l2 = y2[n2++], u2 = t2 ? l2.ok : l2.fail, c2 = l2.resolve, d2 = l2.reject, h2 = l2.domain;
            try {
              u2 ? (t2 || (p2.rejection === oe && function(e4, t3) {
                v.call(g, function() {
                  if (k) T.emit("rejectionHandled", e4);
                  else se(te, e4, t3.value);
                });
              }(f2, p2), p2.rejection = A), true === u2 ? s3 = e3 : (h2 && h2.enter(), s3 = u2(e3), h2 && (h2.exit(), a3 = true)), s3 === l2.promise ? d2(w("Promise-chain cycle")) : (i2 = ne(s3)) ? i2.call(s3, c2, d2) : c2(s3)) : d2(e3);
            } catch (e4) {
              h2 && !a3 && h2.exit(), d2(e4);
            }
          }
          p2.reactions = [], p2.notified = false, m2 && !p2.rejection && (r2 = f2, o3 = p2, v.call(g, function() {
            var e4 = o3.value, t3 = ie(o3);
            if (t3 && (t3 = b(function() {
              k ? T.emit("unhandledRejection", e4, r2) : se(O, r2, e4);
            }), o3.rejection = k || ie(o3) ? oe : A, t3.error)) throw t3.value;
          }));
        }));
      }, se = function(e3, t2, r2) {
        var o3;
        ee ? ((o3 = S.createEvent("Event")).promise = t2, o3.reason = r2, o3.initEvent(e3, false, true), g.dispatchEvent(o3)) : o3 = { promise: t2, reason: r2 }, (t2 = g["on" + e3]) ? t2(o3) : e3 === O && Y("Unhandled promise rejection", r2);
      }, ie = function(e3) {
        return e3.rejection !== A && !e3.parent;
      }, L = function(t2, r2, o3, n2) {
        return function(e3) {
          t2(r2, o3, e3, n2);
        };
      }, R = function(e3, t2, r2, o3) {
        t2.done || (t2.done = true, (t2 = o3 ? o3 : t2).value = r2, t2.state = re, P(e3, t2, true));
      }, I = function(r2, o3, e3, t2) {
        if (!o3.done) {
          o3.done = true, t2 && (o3 = t2);
          try {
            if (r2 === e3) throw w("Promise can't be resolved itself");
            var n2 = ne(e3);
            n2 ? u(function() {
              var t3 = { done: false };
              try {
                n2.call(e3, L(I, r2, t3, o3), L(R, r2, t3, o3));
              } catch (e4) {
                R(r2, t3, e4, o3);
              }
            }) : (o3.value = e3, o3.state = C, P(r2, o3, false));
          } catch (e4) {
            R(r2, { done: false }, e4, o3);
          }
        }
      };
      e2 && (x2 = function(e3) {
        z(this, x2, _), c(e3), r.call(this);
        var t2 = j(this);
        try {
          e3(L(I, this, t2), L(R, this, t2));
        } catch (e4) {
          R(this, t2, e4);
        }
      }, (r = function(e3) {
        Q(this, { type: _, done: false, notified: false, parent: false, reactions: [], rejection: false, state: 0, value: void 0 });
      }).prototype = N(x2.prototype, { then: function(e3, t2) {
        var r2 = J(this), o3 = M(X(this, x2));
        return o3.ok = "function" != typeof e3 || e3, o3.fail = "function" == typeof t2 && t2, o3.domain = k ? T.domain : void 0, r2.parent = true, r2.reactions.push(o3), 0 != r2.state && P(this, r2, false), o3.promise;
      }, catch: function(e3) {
        return this.then(void 0, e3);
      } }), t = function() {
        var e3 = new r(), t2 = j(e3);
        this.promise = e3, this.resolve = L(I, e3, t2), this.reject = L(R, e3, t2);
      }, f.f = M = function(e3) {
        return e3 === x2 || e3 === o ? new t() : $(e3);
      }, i || "function" != typeof l || (n = l.prototype.then, U(l.prototype, "then", function(e3, t2) {
        var r2 = this;
        return new x2(function(e4, t3) {
          n.call(r2, e4, t3);
        }).then(e3, t2);
      }, { unsafe: true }), "function" == typeof E && s2({ global: true, enumerable: true, forced: true }, { fetch: function(e3) {
        return h(x2, E.apply(g, arguments));
      } }))), s2({ global: true, wrap: true, forced: e2 }, { Promise: x2 }), B(x2, _, false, true), G(_), o = a2(_), s2({ target: _, stat: true, forced: e2 }, { reject: function(e3) {
        var t2 = M(this);
        return t2.reject.call(void 0, e3), t2.promise;
      } }), s2({ target: _, stat: true, forced: i || e2 }, { resolve: function(e3) {
        return h(i && this === o ? x2 : this, e3);
      } }), s2({ target: _, stat: true, forced: m }, { all: function(e3) {
        var a3 = this, t2 = M(a3), l2 = t2.resolve, u2 = t2.reject, r2 = b(function() {
          var o3 = c(a3.resolve), n2 = [], s3 = 0, i2 = 1;
          d(e3, function(e4) {
            var t3 = s3++, r3 = false;
            n2.push(void 0), i2++, o3.call(a3, e4).then(function(e5) {
              r3 || (r3 = true, n2[t3] = e5, --i2 || l2(n2));
            }, u2);
          }), --i2 || l2(n2);
        });
        return r2.error && u2(r2.value), t2.promise;
      }, race: function(e3) {
        var r2 = this, o3 = M(r2), n2 = o3.reject, t2 = b(function() {
          var t3 = c(r2.resolve);
          d(e3, function(e4) {
            t3.call(r2, e4).then(o3.resolve, n2);
          });
        });
        return t2.error && n2(t2.value), o3.promise;
      } });
    }, { "../internals/a-function": 5, "../internals/an-instance": 9, "../internals/check-correctness-of-iteration": 27, "../internals/classof-raw": 28, "../internals/engine-v8-version": 48, "../internals/export": 50, "../internals/get-built-in": 57, "../internals/global": 60, "../internals/host-report-errors": 63, "../internals/inspect-source": 69, "../internals/internal-state": 71, "../internals/is-forced": 74, "../internals/is-object": 75, "../internals/is-pure": 76, "../internals/iterate": 78, "../internals/microtask": 82, "../internals/native-promise-constructor": 83, "../internals/new-promise-capability": 87, "../internals/perform": 107, "../internals/promise-resolve": 108, "../internals/redefine": 110, "../internals/redefine-all": 109, "../internals/set-species": 118, "../internals/set-to-string-tag": 119, "../internals/species-constructor": 123, "../internals/task": 132, "../internals/well-known-symbol": 150 }], 192: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/get-built-in"), s2 = e2("../internals/a-function"), i = e2("../internals/an-object"), a2 = e2("../internals/is-object"), l = e2("../internals/object-create"), u = e2("../internals/function-bind"), e2 = e2("../internals/fails"), c = n("Reflect", "construct"), d = e2(function() {
        function e3() {
        }
        return !(c(function() {
        }, [], e3) instanceof e3);
      }), h = !e2(function() {
        c(function() {
        });
      }), n = d || h;
      o({ target: "Reflect", stat: true, forced: n, sham: n }, { construct: function(e3, t2) {
        s2(e3), i(t2);
        var r2 = arguments.length < 3 ? e3 : s2(arguments[2]);
        if (h && !d) return c(e3, t2, r2);
        if (e3 == r2) {
          switch (t2.length) {
            case 0:
              return new e3();
            case 1:
              return new e3(t2[0]);
            case 2:
              return new e3(t2[0], t2[1]);
            case 3:
              return new e3(t2[0], t2[1], t2[2]);
            case 4:
              return new e3(t2[0], t2[1], t2[2], t2[3]);
          }
          var o3 = [null];
          return o3.push.apply(o3, t2), new (u.apply(e3, o3))();
        }
        o3 = r2.prototype, r2 = l(a2(o3) ? o3 : Object.prototype), o3 = Function.apply.call(e3, r2, t2);
        return a2(o3) ? o3 : r2;
      } });
    }, { "../internals/a-function": 5, "../internals/an-object": 10, "../internals/export": 50, "../internals/fails": 51, "../internals/function-bind": 56, "../internals/get-built-in": 57, "../internals/is-object": 75, "../internals/object-create": 91 }], 193: [function(e2, t, r) {
      var o = e2("../internals/export"), s2 = e2("../internals/is-object"), i = e2("../internals/an-object"), a2 = e2("../internals/has"), l = e2("../internals/object-get-own-property-descriptor"), u = e2("../internals/object-get-prototype-of");
      o({ target: "Reflect", stat: true }, { get: function e3(t2, r2) {
        var o3, n = arguments.length < 3 ? t2 : arguments[2];
        return i(t2) === n ? t2[r2] : (o3 = l.f(t2, r2)) ? a2(o3, "value") ? o3.value : void 0 === o3.get ? void 0 : o3.get.call(n) : s2(o3 = u(t2)) ? e3(o3, r2, n) : void 0;
      } });
    }, { "../internals/an-object": 10, "../internals/export": 50, "../internals/has": 61, "../internals/is-object": 75, "../internals/object-get-own-property-descriptor": 94, "../internals/object-get-prototype-of": 98 }], 194: [function(e2, t, r) {
      var o = e2("../internals/descriptors"), n = e2("../internals/global"), s2 = e2("../internals/is-forced"), i = e2("../internals/inherit-if-required"), a2 = e2("../internals/object-define-property").f, l = e2("../internals/object-get-own-property-names").f, u = e2("../internals/is-regexp"), c = e2("../internals/regexp-flags"), d = e2("../internals/regexp-sticky-helpers"), h = e2("../internals/redefine"), f = e2("../internals/fails"), p = e2("../internals/internal-state").set, m = e2("../internals/set-species"), y = e2("../internals/well-known-symbol")("match"), g = n.RegExp, v = g.prototype, b = /a/g, _ = /a/g, j = new g(b) !== b, x2 = d.UNSUPPORTED_Y;
      if (o && s2("RegExp", !j || x2 || f(function() {
        return _[y] = false, g(b) != b || g(_) == _ || "/a/i" != g(b, "i");
      }))) {
        for (var w = function(e3, t2) {
          var r2, o3 = this instanceof w, n2 = u(e3), s3 = void 0 === t2;
          if (!o3 && n2 && e3.constructor === w && s3) return e3;
          j ? n2 && !s3 && (e3 = e3.source) : e3 instanceof w && (s3 && (t2 = c.call(e3)), e3 = e3.source), x2 && (r2 = !!t2 && -1 < t2.indexOf("y")) && (t2 = t2.replace(/y/g, ""));
          n2 = i(j ? new g(e3, t2) : g(e3, t2), o3 ? this : v, w);
          return x2 && r2 && p(n2, { sticky: r2 }), n2;
        }, S = l(g), T = 0; S.length > T; ) !function(t2) {
          t2 in w || a2(w, t2, { configurable: true, get: function() {
            return g[t2];
          }, set: function(e3) {
            g[t2] = e3;
          } });
        }(S[T++]);
        (v.constructor = w).prototype = v, h(n, "RegExp", w);
      }
      m("RegExp");
    }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 60, "../internals/inherit-if-required": 68, "../internals/internal-state": 71, "../internals/is-forced": 74, "../internals/is-regexp": 77, "../internals/object-define-property": 93, "../internals/object-get-own-property-names": 96, "../internals/redefine": 110, "../internals/regexp-flags": 113, "../internals/regexp-sticky-helpers": 114, "../internals/set-species": 118, "../internals/well-known-symbol": 150 }], 195: [function(e2, t, r) {
      var o = e2("../internals/export"), e2 = e2("../internals/regexp-exec");
      o({ target: "RegExp", proto: true, forced: /./.exec !== e2 }, { exec: e2 });
    }, { "../internals/export": 50, "../internals/regexp-exec": 112 }], 196: [function(e2, t, r) {
      var o = e2("../internals/redefine"), n = e2("../internals/an-object"), s2 = e2("../internals/fails"), i = e2("../internals/regexp-flags"), e2 = "toString", a2 = RegExp.prototype, l = a2[e2], s2 = s2(function() {
        return "/a/b" != l.call({ source: "a", flags: "b" });
      }), u = l.name != e2;
      (s2 || u) && o(RegExp.prototype, e2, function() {
        var e3 = n(this), t2 = String(e3.source), r2 = e3.flags;
        return "/" + t2 + "/" + String(void 0 === r2 && e3 instanceof RegExp && !("flags" in a2) ? i.call(e3) : r2);
      }, { unsafe: true });
    }, { "../internals/an-object": 10, "../internals/fails": 51, "../internals/redefine": 110, "../internals/regexp-flags": 113 }], 197: [function(e2, t, r) {
      var o = e2("../internals/collection"), e2 = e2("../internals/collection-strong");
      t.exports = o("Set", function(e3) {
        return function() {
          return e3(this, arguments.length ? arguments[0] : void 0);
        };
      }, e2);
    }, { "../internals/collection": 32, "../internals/collection-strong": 30 }], 198: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/object-get-own-property-descriptor").f, s2 = e2("../internals/to-length"), i = e2("../internals/not-a-regexp"), a2 = e2("../internals/require-object-coercible"), l = e2("../internals/correct-is-regexp-logic"), e2 = e2("../internals/is-pure"), u = "".endsWith, c = Math.min, l = l("endsWith");
      o({ target: "String", proto: true, forced: !!(e2 || l || (!(o = n(String.prototype, "endsWith")) || o.writable)) && !l }, { endsWith: function(e3) {
        var t2 = String(a2(this)), r2 = (i(e3), 1 < arguments.length ? arguments[1] : void 0), o3 = s2(t2.length), r2 = void 0 === r2 ? o3 : c(s2(r2), o3), o3 = String(e3);
        return u ? u.call(t2, o3, r2) : t2.slice(r2 - o3.length, r2) === o3;
      } });
    }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/is-pure": 76, "../internals/not-a-regexp": 88, "../internals/object-get-own-property-descriptor": 94, "../internals/require-object-coercible": 115, "../internals/to-length": 138 }], 199: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/not-a-regexp"), s2 = e2("../internals/require-object-coercible");
      o({ target: "String", proto: true, forced: !e2("../internals/correct-is-regexp-logic")("includes") }, { includes: function(e3) {
        return !!~String(s2(this)).indexOf(n(e3), 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/not-a-regexp": 88, "../internals/require-object-coercible": 115 }], 200: [function(e2, t, r) {
      var o = e2("../internals/string-multibyte").charAt, n = e2("../internals/internal-state"), e2 = e2("../internals/define-iterator"), s2 = "String Iterator", i = n.set, a2 = n.getterFor(s2);
      e2(String, "String", function(e3) {
        i(this, { type: s2, string: String(e3), index: 0 });
      }, function() {
        var e3 = a2(this), t2 = e3.string, r2 = e3.index;
        return r2 >= t2.length ? { value: void 0, done: true } : (t2 = o(t2, r2), e3.index += t2.length, { value: t2, done: false });
      });
    }, { "../internals/define-iterator": 41, "../internals/internal-state": 71, "../internals/string-multibyte": 125 }], 201: [function(e2, t, r) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), c = e2("../internals/an-object"), d = e2("../internals/to-length"), n = e2("../internals/require-object-coercible"), h = e2("../internals/advance-string-index"), f = e2("../internals/regexp-exec-abstract");
      o("match", 1, function(o3, l, u) {
        return [function(e3) {
          var t2 = n(this), r2 = null == e3 ? void 0 : e3[o3];
          return void 0 !== r2 ? r2.call(e3, t2) : new RegExp(e3)[o3](String(t2));
        }, function(e3) {
          var t2 = u(l, e3, this);
          if (t2.done) return t2.value;
          var r2 = c(e3), o4 = String(this);
          if (!r2.global) return f(r2, o4);
          for (var n2 = r2.unicode, s2 = [], i = r2.lastIndex = 0; null !== (a2 = f(r2, o4)); ) {
            var a2 = String(a2[0]);
            "" === (s2[i] = a2) && (r2.lastIndex = h(o4, d(r2.lastIndex), n2)), i++;
          }
          return 0 === i ? null : s2;
        }];
      });
    }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 111, "../internals/require-object-coercible": 115, "../internals/to-length": 138 }], 202: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/string-pad").start;
      o({ target: "String", proto: true, forced: e2("../internals/string-pad-webkit-bug") }, { padStart: function(e3) {
        return n(this, e3, 1 < arguments.length ? arguments[1] : void 0);
      } });
    }, { "../internals/export": 50, "../internals/string-pad": 127, "../internals/string-pad-webkit-bug": 126 }], 203: [function(e2, t, r) {
      e2("../internals/export")({ target: "String", proto: true }, { repeat: e2("../internals/string-repeat") });
    }, { "../internals/export": 50, "../internals/string-repeat": 129 }], 204: [function(e2, t, r) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), T = e2("../internals/an-object"), E = e2("../internals/to-object"), M = e2("../internals/to-length"), k = e2("../internals/to-integer"), s2 = e2("../internals/require-object-coercible"), O = e2("../internals/advance-string-index"), C = e2("../internals/regexp-exec-abstract"), A = Math.max, P = Math.min, L = Math.floor, R = /\$([$&'`]|\d\d?|<[^>]*>)/g, I = /\$([$&'`]|\d\d?)/g;
      o("replace", 2, function(n, _, j, e3) {
        var x2 = e3.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE, w = e3.REPLACE_KEEPS_$0, S = x2 ? "$" : "$0";
        return [function(e4, t2) {
          var r2 = s2(this), o3 = null == e4 ? void 0 : e4[n];
          return void 0 !== o3 ? o3.call(e4, r2, t2) : _.call(String(r2), e4, t2);
        }, function(e4, t2) {
          if (!x2 && w || "string" == typeof t2 && -1 === t2.indexOf(S)) {
            var r2 = j(_, e4, this, t2);
            if (r2.done) return r2.value;
          }
          for (var o3, n2 = T(e4), s3 = String(this), i = "function" == typeof t2, a2 = (i || (t2 = String(t2)), n2.global), l = (a2 && (o3 = n2.unicode, n2.lastIndex = 0), []); null !== (f = C(n2, s3)) && (l.push(f), a2); ) "" === String(f[0]) && (n2.lastIndex = O(s3, M(n2.lastIndex), o3));
          for (var u, c = "", d = 0, h = 0; h < l.length; h++) {
            for (var f = l[h], p = String(f[0]), m = A(P(k(f.index), s3.length), 0), y = [], g = 1; g < f.length; g++) y.push(void 0 === (u = f[g]) ? u : String(u));
            var v = f.groups, b = i ? (b = [p].concat(y, m, s3), void 0 !== v && b.push(v), String(t2.apply(void 0, b))) : function(s4, i2, a3, l2, u2, e5) {
              var c2 = a3 + s4.length, d2 = l2.length, t3 = I;
              void 0 !== u2 && (u2 = E(u2), t3 = R);
              return _.call(e5, t3, function(e6, t4) {
                var r3;
                switch (t4.charAt(0)) {
                  case "$":
                    return "$";
                  case "&":
                    return s4;
                  case "`":
                    return i2.slice(0, a3);
                  case "'":
                    return i2.slice(c2);
                  case "<":
                    r3 = u2[t4.slice(1, -1)];
                    break;
                  default:
                    var o4, n3 = +t4;
                    if (0 == n3) return e6;
                    if (d2 < n3) return 0 !== (o4 = L(n3 / 10)) && o4 <= d2 ? void 0 === l2[o4 - 1] ? t4.charAt(1) : l2[o4 - 1] + t4.charAt(1) : e6;
                    r3 = l2[n3 - 1];
                }
                return void 0 === r3 ? "" : r3;
              });
            }(p, s3, m, y, v, t2);
            d <= m && (c += s3.slice(d, m) + b, d = m + p.length);
          }
          return c + s3.slice(d);
        }];
      });
    }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 111, "../internals/require-object-coercible": 115, "../internals/to-integer": 137, "../internals/to-length": 138, "../internals/to-object": 139 }], 205: [function(e2, t, r) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), i = e2("../internals/an-object"), a2 = e2("../internals/require-object-coercible"), l = e2("../internals/same-value"), u = e2("../internals/regexp-exec-abstract");
      o("search", 1, function(o3, n, s2) {
        return [function(e3) {
          var t2 = a2(this), r2 = null == e3 ? void 0 : e3[o3];
          return void 0 !== r2 ? r2.call(e3, t2) : new RegExp(e3)[o3](String(t2));
        }, function(e3) {
          var t2, r2 = s2(n, e3, this);
          return r2.done ? r2.value : (r2 = i(e3), e3 = String(this), t2 = r2.lastIndex, l(t2, 0) || (r2.lastIndex = 0), e3 = u(r2, e3), l(r2.lastIndex, t2) || (r2.lastIndex = t2), null === e3 ? -1 : e3.index);
        }];
      });
    }, { "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 111, "../internals/require-object-coercible": 115, "../internals/same-value": 116 }], 206: [function(e2, t, r) {
      var o = e2("../internals/fix-regexp-well-known-symbol-logic"), c = e2("../internals/is-regexp"), g = e2("../internals/an-object"), d = e2("../internals/require-object-coercible"), v = e2("../internals/species-constructor"), b = e2("../internals/advance-string-index"), _ = e2("../internals/to-length"), j = e2("../internals/regexp-exec-abstract"), h = e2("../internals/regexp-exec"), e2 = e2("../internals/fails"), f = [].push, x2 = Math.min, w = 4294967295, S = !e2(function() {
        return !RegExp(w, "y");
      });
      o("split", 2, function(n, p, m) {
        var y = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(e3, t2) {
          var r2 = String(d(this)), o3 = void 0 === t2 ? w : t2 >>> 0;
          if (0 == o3) return [];
          if (void 0 === e3) return [r2];
          if (!c(e3)) return p.call(r2, e3, o3);
          for (var n2, s2, i, a2 = [], t2 = (e3.ignoreCase ? "i" : "") + (e3.multiline ? "m" : "") + (e3.unicode ? "u" : "") + (e3.sticky ? "y" : ""), l = 0, u = new RegExp(e3.source, t2 + "g"); (n2 = h.call(u, r2)) && !(l < (s2 = u.lastIndex) && (a2.push(r2.slice(l, n2.index)), 1 < n2.length && n2.index < r2.length && f.apply(a2, n2.slice(1)), i = n2[0].length, l = s2, a2.length >= o3)); ) u.lastIndex === n2.index && u.lastIndex++;
          return l === r2.length ? !i && u.test("") || a2.push("") : a2.push(r2.slice(l)), a2.length > o3 ? a2.slice(0, o3) : a2;
        } : "0".split(void 0, 0).length ? function(e3, t2) {
          return void 0 === e3 && 0 === t2 ? [] : p.call(this, e3, t2);
        } : p;
        return [function(e3, t2) {
          var r2 = d(this), o3 = null == e3 ? void 0 : e3[n];
          return void 0 !== o3 ? o3.call(e3, r2, t2) : y.call(String(r2), e3, t2);
        }, function(e3, t2) {
          var r2 = m(y, e3, this, t2, y !== p);
          if (r2.done) return r2.value;
          var r2 = g(e3), o3 = String(this), e3 = v(r2, RegExp), n2 = r2.unicode, s2 = (r2.ignoreCase ? "i" : "") + (r2.multiline ? "m" : "") + (r2.unicode ? "u" : "") + (S ? "y" : "g"), i = new e3(S ? r2 : "^(?:" + r2.source + ")", s2), a2 = void 0 === t2 ? w : t2 >>> 0;
          if (0 == a2) return [];
          if (0 === o3.length) return null === j(i, o3) ? [o3] : [];
          for (var l = 0, u = 0, c2 = []; u < o3.length; ) {
            i.lastIndex = S ? u : 0;
            var d2, h2 = j(i, S ? o3 : o3.slice(u));
            if (null === h2 || (d2 = x2(_(i.lastIndex + (S ? 0 : u)), o3.length)) === l) u = b(o3, u, n2);
            else {
              if (c2.push(o3.slice(l, u)), c2.length === a2) return c2;
              for (var f2 = 1; f2 <= h2.length - 1; f2++) if (c2.push(h2[f2]), c2.length === a2) return c2;
              u = l = d2;
            }
          }
          return c2.push(o3.slice(l)), c2;
        }];
      }, !S);
    }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fails": 51, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/is-regexp": 77, "../internals/regexp-exec": 112, "../internals/regexp-exec-abstract": 111, "../internals/require-object-coercible": 115, "../internals/species-constructor": 123, "../internals/to-length": 138 }], 207: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/object-get-own-property-descriptor").f, s2 = e2("../internals/to-length"), i = e2("../internals/not-a-regexp"), a2 = e2("../internals/require-object-coercible"), l = e2("../internals/correct-is-regexp-logic"), e2 = e2("../internals/is-pure"), u = "".startsWith, c = Math.min, l = l("startsWith");
      o({ target: "String", proto: true, forced: !!(e2 || l || (!(o = n(String.prototype, "startsWith")) || o.writable)) && !l }, { startsWith: function(e3) {
        var t2 = String(a2(this)), r2 = (i(e3), s2(c(1 < arguments.length ? arguments[1] : void 0, t2.length))), e3 = String(e3);
        return u ? u.call(t2, e3, r2) : t2.slice(r2, r2 + e3.length) === e3;
      } });
    }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/is-pure": 76, "../internals/not-a-regexp": 88, "../internals/object-get-own-property-descriptor": 94, "../internals/require-object-coercible": 115, "../internals/to-length": 138 }], 208: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/create-html");
      o({ target: "String", proto: true, forced: e2("../internals/string-html-forced")("sub") }, { sub: function() {
        return n(this, "sub", "", "");
      } });
    }, { "../internals/create-html": 36, "../internals/export": 50, "../internals/string-html-forced": 124 }], 209: [function(e2, t, r) {
      var o = e2("../internals/export"), n = e2("../internals/string-trim").trim;
      o({ target: "String", proto: true, forced: e2("../internals/string-trim-forced")("trim") }, { trim: function() {
        return n(this);
      } });
    }, { "../internals/export": 50, "../internals/string-trim": 131, "../internals/string-trim-forced": 130 }], 210: [function(e2, t, r) {
      var o, n, s2, i, a2, l = e2("../internals/export"), u = e2("../internals/descriptors"), c = e2("../internals/global"), d = e2("../internals/has"), h = e2("../internals/is-object"), f = e2("../internals/object-define-property").f, e2 = e2("../internals/copy-constructor-properties"), p = c.Symbol;
      !u || "function" != typeof p || "description" in p.prototype && void 0 === p().description || (o = {}, e2(n = function() {
        var e3 = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]), t2 = this instanceof n ? new p(e3) : void 0 === e3 ? p() : p(e3);
        return "" === e3 && (o[t2] = true), t2;
      }, p), (c = n.prototype = p.prototype).constructor = n, s2 = c.toString, i = "Symbol(test)" == String(p("test")), a2 = /^Symbol\((.*)\)[^)]+$/, f(c, "description", { configurable: true, get: function() {
        var e3 = h(this) ? this.valueOf() : this, t2 = s2.call(e3);
        return d(o, e3) ? "" : "" === (e3 = i ? t2.slice(7, -1) : t2.replace(a2, "$1")) ? void 0 : e3;
      } }), l({ global: true, forced: true }, { Symbol: n }));
    }, { "../internals/copy-constructor-properties": 33, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 60, "../internals/has": 61, "../internals/is-object": 75, "../internals/object-define-property": 93 }], 211: [function(e2, t, r) {
      e2("../internals/define-well-known-symbol")("iterator");
    }, { "../internals/define-well-known-symbol": 42 }], 212: [function(e2, D, F) {
      function o(e3, t2) {
        var r2 = E[e3] = f(w[j]);
        return ie(r2, { type: _, tag: e3, description: t2 }), s2 || (r2.description = t2), r2;
      }
      function r(t2, e3) {
        u(t2);
        var r2 = c(e3), e3 = q(r2).concat(I(r2));
        return v(e3, function(e4) {
          s2 && !R.call(r2, e4) || L(t2, e4, r2[e4]);
        }), t2;
      }
      function t(e3, t2) {
        var r2, e3 = c(e3), t2 = d(t2, true);
        if (e3 !== x2 || !l(E, t2) || l(M, t2)) return !(r2 = le(e3, t2)) || !l(E, t2) || l(e3, b) && e3[b][t2] || (r2.enumerable = true), r2;
      }
      function U(e3) {
        var e3 = ue(c(e3)), t2 = [];
        return v(e3, function(e4) {
          l(E, e4) || l(ee, e4) || t2.push(e4);
        }), t2;
      }
      var n = e2("../internals/export"), N = e2("../internals/global"), B = e2("../internals/get-built-in"), G = e2("../internals/is-pure"), s2 = e2("../internals/descriptors"), i = e2("../internals/native-symbol"), V = e2("../internals/use-symbol-as-uid"), a2 = e2("../internals/fails"), l = e2("../internals/has"), z = e2("../internals/is-array"), H = e2("../internals/is-object"), u = e2("../internals/an-object"), W = e2("../internals/to-object"), c = e2("../internals/to-indexed-object"), d = e2("../internals/to-primitive"), h = e2("../internals/create-property-descriptor"), f = e2("../internals/object-create"), q = e2("../internals/object-keys"), X = e2("../internals/object-get-own-property-names"), Y = e2("../internals/object-get-own-property-names-external"), p = e2("../internals/object-get-own-property-symbols"), Z = e2("../internals/object-get-own-property-descriptor"), K = e2("../internals/object-define-property"), Q = e2("../internals/object-property-is-enumerable"), J = e2("../internals/create-non-enumerable-property"), m = e2("../internals/redefine"), y = e2("../internals/shared"), $ = e2("../internals/shared-key"), ee = e2("../internals/hidden-keys"), te = e2("../internals/uid"), re = e2("../internals/well-known-symbol"), oe = e2("../internals/well-known-symbol-wrapped"), ne = e2("../internals/define-well-known-symbol"), se = e2("../internals/set-to-string-tag"), g = e2("../internals/internal-state"), v = e2("../internals/array-iteration").forEach, b = $("hidden"), _ = "Symbol", j = "prototype", e2 = re("toPrimitive"), ie = g.set, ae = g.getterFor(_), x2 = Object[j], w = N.Symbol, S = B("JSON", "stringify"), le = Z.f, T = K.f, ue = Y.f, ce = Q.f, E = y("symbols"), M = y("op-symbols"), k = y("string-to-symbol-registry"), O = y("symbol-to-string-registry"), $ = y("wks"), g = N.QObject, C = !g || !g[j] || !g[j].findChild, A = s2 && a2(function() {
        return 7 != f(T({}, "a", { get: function() {
          return T(this, "a", { value: 7 }).a;
        } })).a;
      }) ? function(e3, t2, r2) {
        var o3 = le(x2, t2);
        o3 && delete x2[t2], T(e3, t2, r2), o3 && e3 !== x2 && T(x2, t2, o3);
      } : T, P = V ? function(e3) {
        return "symbol" == typeof e3;
      } : function(e3) {
        return Object(e3) instanceof w;
      }, L = function(e3, t2, r2) {
        e3 === x2 && L(M, t2, r2), u(e3);
        t2 = d(t2, true);
        return u(r2), (l(E, t2) ? (r2.enumerable ? (l(e3, b) && e3[b][t2] && (e3[b][t2] = false), r2 = f(r2, { enumerable: h(0, false) })) : (l(e3, b) || T(e3, b, h(1, {})), e3[b][t2] = true), A) : T)(e3, t2, r2);
      }, R = function(e3) {
        var e3 = d(e3, true), t2 = ce.call(this, e3);
        return !(this === x2 && l(E, e3) && !l(M, e3)) && (!(t2 || !l(this, e3) || !l(E, e3) || l(this, b) && this[b][e3]) || t2);
      }, I = function(e3) {
        var t2 = e3 === x2, e3 = ue(t2 ? M : c(e3)), r2 = [];
        return v(e3, function(e4) {
          !l(E, e4) || t2 && !l(x2, e4) || r2.push(E[e4]);
        }), r2;
      };
      i || (m((w = function() {
        if (this instanceof w) throw TypeError("Symbol is not a constructor");
        var e3 = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0, t2 = te(e3), r2 = function(e4) {
          this === x2 && r2.call(M, e4), l(this, b) && l(this[b], t2) && (this[b][t2] = false), A(this, t2, h(1, e4));
        };
        return s2 && C && A(x2, t2, { configurable: true, set: r2 }), o(t2, e3);
      })[j], "toString", function() {
        return ae(this).tag;
      }), m(w, "withoutSetter", function(e3) {
        return o(te(e3), e3);
      }), Q.f = R, K.f = L, Z.f = t, X.f = Y.f = U, p.f = I, oe.f = function(e3) {
        return o(re(e3), e3);
      }, s2 && (T(w[j], "description", { configurable: true, get: function() {
        return ae(this).description;
      } }), G || m(x2, "propertyIsEnumerable", R, { unsafe: true }))), n({ global: true, wrap: true, forced: !i, sham: !i }, { Symbol: w }), v(q($), function(e3) {
        ne(e3);
      }), n({ target: _, stat: true, forced: !i }, { for: function(e3) {
        var t2, e3 = String(e3);
        return l(k, e3) ? k[e3] : (t2 = w(e3), k[e3] = t2, O[t2] = e3, t2);
      }, keyFor: function(e3) {
        if (!P(e3)) throw TypeError(e3 + " is not a symbol");
        if (l(O, e3)) return O[e3];
      }, useSetter: function() {
        C = true;
      }, useSimple: function() {
        C = false;
      } }), n({ target: "Object", stat: true, forced: !i, sham: !s2 }, { create: function(e3, t2) {
        return void 0 === t2 ? f(e3) : r(f(e3), t2);
      }, defineProperty: L, defineProperties: r, getOwnPropertyDescriptor: t }), n({ target: "Object", stat: true, forced: !i }, { getOwnPropertyNames: U, getOwnPropertySymbols: I }), n({ target: "Object", stat: true, forced: a2(function() {
        p.f(1);
      }) }, { getOwnPropertySymbols: function(e3) {
        return p.f(W(e3));
      } }), S && n({ target: "JSON", stat: true, forced: !i || a2(function() {
        var e3 = w();
        return "[null]" != S([e3]) || "{}" != S({ a: e3 }) || "{}" != S(Object(e3));
      }) }, { stringify: function(e3, t2, r2) {
        for (var o3, n2 = [e3], s3 = 1; s3 < arguments.length; ) n2.push(arguments[s3++]);
        if ((H(o3 = t2) || void 0 !== e3) && !P(e3)) return z(t2) || (t2 = function(e4, t3) {
          if ("function" == typeof o3 && (t3 = o3.call(this, e4, t3)), !P(t3)) return t3;
        }), n2[1] = t2, S.apply(null, n2);
      } }), w[j][e2] || J(w[j], e2, w[j].valueOf), se(w, _), ee[b] = true;
    }, { "../internals/an-object": 10, "../internals/array-iteration": 19, "../internals/create-non-enumerable-property": 38, "../internals/create-property-descriptor": 39, "../internals/define-well-known-symbol": 42, "../internals/descriptors": 43, "../internals/export": 50, "../internals/fails": 51, "../internals/get-built-in": 57, "../internals/global": 60, "../internals/has": 61, "../internals/hidden-keys": 62, "../internals/internal-state": 71, "../internals/is-array": 73, "../internals/is-object": 75, "../internals/is-pure": 76, "../internals/native-symbol": 84, "../internals/object-create": 91, "../internals/object-define-property": 93, "../internals/object-get-own-property-descriptor": 94, "../internals/object-get-own-property-names": 96, "../internals/object-get-own-property-names-external": 95, "../internals/object-get-own-property-symbols": 97, "../internals/object-keys": 100, "../internals/object-property-is-enumerable": 101, "../internals/redefine": 110, "../internals/set-to-string-tag": 119, "../internals/shared": 122, "../internals/shared-key": 120, "../internals/to-indexed-object": 136, "../internals/to-object": 139, "../internals/to-primitive": 142, "../internals/uid": 147, "../internals/use-symbol-as-uid": 148, "../internals/well-known-symbol": 150, "../internals/well-known-symbol-wrapped": 149 }], 213: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-copy-within"), s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("copyWithin", function(e3, t2) {
        return n.call(s2(this), e3, t2, 2 < arguments.length ? arguments[2] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-copy-within": 14 }], 214: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").every, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("every", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 215: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-fill"), s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("fill", function(e3) {
        return n.apply(s2(this), arguments);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-fill": 15 }], 216: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), s2 = e2("../internals/array-iteration").filter, i = e2("../internals/species-constructor"), a2 = o.aTypedArray, l = o.aTypedArrayConstructor;
      (0, o.exportTypedArrayMethod)("filter", function(e3) {
        for (var t2 = s2(a2(this), e3, 1 < arguments.length ? arguments[1] : void 0), e3 = i(this, this.constructor), r2 = 0, o3 = t2.length, n = new (l(e3))(o3); r2 < o3; ) n[r2] = t2[r2++];
        return n;
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/species-constructor": 123 }], 217: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").findIndex, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("findIndex", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 218: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").find, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("find", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 219: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Float32", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 220: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Float64", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 221: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").forEach, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("forEach", function(e3) {
        n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 222: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-includes").includes, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("includes", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-includes": 18 }], 223: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-includes").indexOf, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("indexOf", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-includes": 18 }], 224: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Int16", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 225: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Int32", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 226: [function(e2, t, r) {
      function o() {
        return a2.call(c(this));
      }
      var n = e2("../internals/global"), s2 = e2("../internals/array-buffer-view-core"), i = e2("../modules/es.array.iterator"), e2 = e2("../internals/well-known-symbol")("iterator"), n = n.Uint8Array, a2 = i.values, l = i.keys, u = i.entries, c = s2.aTypedArray, i = s2.exportTypedArrayMethod, s2 = n && n.prototype[e2], n = !!s2 && ("values" == s2.name || null == s2.name);
      i("entries", function() {
        return u.call(c(this));
      }), i("keys", function() {
        return l.call(c(this));
      }), i("values", o, !n), i(e2, o, !n);
    }, { "../internals/array-buffer-view-core": 12, "../internals/global": 60, "../internals/well-known-symbol": 150, "../modules/es.array.iterator": 165 }], 227: [function(e2, t, r) {
      var e2 = e2("../internals/array-buffer-view-core"), o = e2.aTypedArray, e2 = e2.exportTypedArrayMethod, n = [].join;
      e2("join", function(e3) {
        return n.apply(o(this), arguments);
      });
    }, { "../internals/array-buffer-view-core": 12 }], 228: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-last-index-of"), s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("lastIndexOf", function(e3) {
        return n.apply(s2(this), arguments);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-last-index-of": 20 }], 229: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").map, s2 = e2("../internals/species-constructor"), i = o.aTypedArray, a2 = o.aTypedArrayConstructor;
      (0, o.exportTypedArrayMethod)("map", function(e3) {
        return n(i(this), e3, 1 < arguments.length ? arguments[1] : void 0, function(e4, t2) {
          return new (a2(s2(e4, e4.constructor)))(t2);
        });
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/species-constructor": 123 }], 230: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-reduce").right, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("reduceRight", function(e3) {
        return n(s2(this), e3, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-reduce": 24 }], 231: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-reduce").left, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("reduce", function(e3) {
        return n(s2(this), e3, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-reduce": 24 }], 232: [function(e2, t, r) {
      var e2 = e2("../internals/array-buffer-view-core"), n = e2.aTypedArray, e2 = e2.exportTypedArrayMethod, s2 = Math.floor;
      e2("reverse", function() {
        for (var e3, t2 = n(this).length, r2 = s2(t2 / 2), o = 0; o < r2; ) e3 = this[o], this[o++] = this[--t2], this[t2] = e3;
        return this;
      });
    }, { "../internals/array-buffer-view-core": 12 }], 233: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), i = e2("../internals/to-length"), a2 = e2("../internals/to-offset"), l = e2("../internals/to-object"), e2 = e2("../internals/fails"), u = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("set", function(e3) {
        u(this);
        var t2 = a2(1 < arguments.length ? arguments[1] : void 0, 1), r2 = this.length, o3 = l(e3), n = i(o3.length), s2 = 0;
        if (r2 < n + t2) throw RangeError("Wrong length");
        for (; s2 < n; ) this[t2 + s2] = o3[s2++];
      }, e2(function() {
        new Int8Array(1).set({});
      }));
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/to-length": 138, "../internals/to-object": 139, "../internals/to-offset": 140 }], 234: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), i = e2("../internals/species-constructor"), e2 = e2("../internals/fails"), a2 = o.aTypedArray, l = o.aTypedArrayConstructor, o = o.exportTypedArrayMethod, u = [].slice;
      o("slice", function(e3, t2) {
        for (var r2 = u.call(a2(this), e3, t2), e3 = i(this, this.constructor), o3 = 0, n = r2.length, s2 = new (l(e3))(n); o3 < n; ) s2[o3] = r2[o3++];
        return s2;
      }, e2(function() {
        new Int8Array(1).slice();
      }));
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/species-constructor": 123 }], 235: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/array-iteration").some, s2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("some", function(e3) {
        return n(s2(this), e3, 1 < arguments.length ? arguments[1] : void 0);
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 236: [function(e2, t, r) {
      var e2 = e2("../internals/array-buffer-view-core"), o = e2.aTypedArray, e2 = e2.exportTypedArrayMethod, n = [].sort;
      e2("sort", function(e3) {
        return n.call(o(this), e3);
      });
    }, { "../internals/array-buffer-view-core": 12 }], 237: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core"), n = e2("../internals/to-length"), s2 = e2("../internals/to-absolute-index"), i = e2("../internals/species-constructor"), a2 = o.aTypedArray;
      (0, o.exportTypedArrayMethod)("subarray", function(e3, t2) {
        var r2 = a2(this), o3 = r2.length, e3 = s2(e3, o3);
        return new (i(r2, r2.constructor))(r2.buffer, r2.byteOffset + e3 * r2.BYTES_PER_ELEMENT, n((void 0 === t2 ? o3 : s2(t2, o3)) - e3));
      });
    }, { "../internals/array-buffer-view-core": 12, "../internals/species-constructor": 123, "../internals/to-absolute-index": 134, "../internals/to-length": 138 }], 238: [function(e2, t, r) {
      var o = e2("../internals/global"), n = e2("../internals/array-buffer-view-core"), e2 = e2("../internals/fails"), s2 = o.Int8Array, i = n.aTypedArray, o = n.exportTypedArrayMethod, a2 = [].toLocaleString, l = [].slice, u = !!s2 && e2(function() {
        a2.call(new s2(1));
      });
      o("toLocaleString", function() {
        return a2.apply(u ? l.call(i(this)) : i(this), arguments);
      }, e2(function() {
        return [1, 2].toLocaleString() != new s2([1, 2]).toLocaleString();
      }) || !e2(function() {
        s2.prototype.toLocaleString.call([1, 2]);
      }));
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/global": 60 }], 239: [function(e2, t, r) {
      var o = e2("../internals/array-buffer-view-core").exportTypedArrayMethod, n = e2("../internals/fails"), e2 = e2("../internals/global").Uint8Array, e2 = e2 && e2.prototype || {}, s2 = [].toString, i = [].join, n = (n(function() {
        s2.call({});
      }) && (s2 = function() {
        return i.call(this);
      }), e2.toString != s2);
      o("toString", s2, n);
    }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/global": 60 }], 240: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Uint16", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 241: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Uint32", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 242: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Uint8", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      });
    }, { "../internals/typed-array-constructor": 144 }], 243: [function(e2, t, r) {
      e2("../internals/typed-array-constructor")("Uint8", function(o) {
        return function(e3, t2, r2) {
          return o(this, e3, t2, r2);
        };
      }, true);
    }, { "../internals/typed-array-constructor": 144 }], 244: [function(e2, t, r) {
      function o(e3) {
        return function() {
          return e3(this, arguments.length ? arguments[0] : void 0);
        };
      }
      var n, s2, i, a2, l, u = e2("../internals/global"), c = e2("../internals/redefine-all"), d = e2("../internals/internal-metadata"), h = e2("../internals/collection"), f = e2("../internals/collection-weak"), p = e2("../internals/is-object"), m = e2("../internals/internal-state").enforce, e2 = e2("../internals/native-weak-map"), u = !u.ActiveXObject && "ActiveXObject" in u, y = Object.isExtensible, t = t.exports = h("WeakMap", o, f);
      e2 && u && (n = f.getConstructor(o, "WeakMap", true), d.REQUIRED = true, h = t.prototype, s2 = h.delete, i = h.has, a2 = h.get, l = h.set, c(h, { delete: function(e3) {
        var t2;
        return p(e3) && !y(e3) ? ((t2 = m(this)).frozen || (t2.frozen = new n()), s2.call(this, e3) || t2.frozen.delete(e3)) : s2.call(this, e3);
      }, has: function(e3) {
        var t2;
        return p(e3) && !y(e3) ? ((t2 = m(this)).frozen || (t2.frozen = new n()), i.call(this, e3) || t2.frozen.has(e3)) : i.call(this, e3);
      }, get: function(e3) {
        var t2;
        return !p(e3) || y(e3) || ((t2 = m(this)).frozen || (t2.frozen = new n()), i.call(this, e3)) ? a2.call(this, e3) : t2.frozen.get(e3);
      }, set: function(e3, t2) {
        var r2;
        return !p(e3) || y(e3) || ((r2 = m(this)).frozen || (r2.frozen = new n()), i.call(this, e3)) ? l.call(this, e3, t2) : r2.frozen.set(e3, t2), this;
      } }));
    }, { "../internals/collection": 32, "../internals/collection-weak": 31, "../internals/global": 60, "../internals/internal-metadata": 70, "../internals/internal-state": 71, "../internals/is-object": 75, "../internals/native-weak-map": 86, "../internals/redefine-all": 109 }], 245: [function(e2, t, r) {
      var o, n = e2("../internals/global"), s2 = e2("../internals/dom-iterables"), i = e2("../internals/array-for-each"), a2 = e2("../internals/create-non-enumerable-property");
      for (o in s2) {
        var l = n[o], l = l && l.prototype;
        if (l && l.forEach !== i) try {
          a2(l, "forEach", i);
        } catch (e3) {
          l.forEach = i;
        }
      }
    }, { "../internals/array-for-each": 16, "../internals/create-non-enumerable-property": 38, "../internals/dom-iterables": 45, "../internals/global": 60 }], 246: [function(e2, t, r) {
      var o, n = e2("../internals/global"), s2 = e2("../internals/dom-iterables"), i = e2("../modules/es.array.iterator"), a2 = e2("../internals/create-non-enumerable-property"), e2 = e2("../internals/well-known-symbol"), l = e2("iterator"), u = e2("toStringTag"), c = i.values;
      for (o in s2) {
        var d = n[o], h = d && d.prototype;
        if (h) {
          if (h[l] !== c) try {
            a2(h, l, c);
          } catch (e3) {
            h[l] = c;
          }
          if (h[u] || a2(h, u, o), s2[o]) {
            for (var f in i) if (h[f] !== i[f]) try {
              a2(h, f, i[f]);
            } catch (e3) {
              h[f] = i[f];
            }
          }
        }
      }
    }, { "../internals/create-non-enumerable-property": 38, "../internals/dom-iterables": 45, "../internals/global": 60, "../internals/well-known-symbol": 150, "../modules/es.array.iterator": 165 }], 247: [function(e2, t, D) {
      e2("../modules/es.array.iterator");
      function n(t2) {
        try {
          return decodeURIComponent(t2);
        } catch (e3) {
          return t2;
        }
      }
      function r(e3) {
        return B[e3];
      }
      function s2(e3) {
        return encodeURIComponent(e3).replace(N, r);
      }
      function c(e3) {
        this.entries.length = 0, R(this.entries, e3);
      }
      function u(e3, t2) {
        if (e3 < t2) throw TypeError("Not enough arguments");
      }
      function d() {
        y(this, d, k);
        var e3, t2, r2, o3, n2, s3, i2, a3, l2 = 0 < arguments.length ? arguments[0] : void 0, u2 = [];
        if (C(this, { type: k, entries: u2, updateURL: function() {
        }, updateSearchParams: c }), void 0 !== l2) if (j(l2)) if ("function" == typeof (e3 = T(l2))) for (r2 = (t2 = e3.call(l2)).next; !(o3 = r2.call(t2)).done; ) {
          if ((s3 = (n2 = (o3 = S(_(o3.value))).next).call(o3)).done || (i2 = n2.call(o3)).done || !n2.call(o3).done) throw TypeError("Expected sequence with length 2");
          u2.push({ key: s3.value + "", value: i2.value + "" });
        }
        else for (a3 in l2) g(l2, a3) && u2.push({ key: a3, value: l2[a3] + "" });
        else R(u2, "string" == typeof l2 ? "?" === l2.charAt(0) ? l2.slice(1) : l2 : l2 + "");
      }
      var o = e2("../internals/export"), i = e2("../internals/get-built-in"), a2 = e2("../internals/native-url"), l = e2("../internals/redefine"), h = e2("../internals/redefine-all"), f = e2("../internals/set-to-string-tag"), p = e2("../internals/create-iterator-constructor"), m = e2("../internals/internal-state"), y = e2("../internals/an-instance"), g = e2("../internals/has"), v = e2("../internals/function-bind-context"), b = e2("../internals/classof"), _ = e2("../internals/an-object"), j = e2("../internals/is-object"), x2 = e2("../internals/object-create"), w = e2("../internals/create-property-descriptor"), S = e2("../internals/get-iterator"), T = e2("../internals/get-iterator-method"), e2 = e2("../internals/well-known-symbol"), E = i("fetch"), M = i("Headers"), i = e2("iterator"), k = "URLSearchParams", O = k + "Iterator", C = m.set, A = m.getterFor(k), F = m.getterFor(O), U = /\+/g, P = Array(4), L = function(e3) {
        var t2, r2 = e3.replace(U, " "), o3 = 4;
        try {
          return decodeURIComponent(r2);
        } catch (e4) {
          for (; o3; ) r2 = r2.replace((t2 = o3--, P[t2 - 1] || (P[t2 - 1] = RegExp("((?:%[\\da-f]{2}){" + t2 + "})", "gi"))), n);
          return r2;
        }
      }, N = /[!'()~]|%20/g, B = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" }, R = function(e3, t2) {
        if (t2) for (var r2, o3 = t2.split("&"), n2 = 0; n2 < o3.length; ) (r2 = o3[n2++]).length && (r2 = r2.split("="), e3.push({ key: L(r2.shift()), value: L(r2.join("=")) }));
      }, I = p(function(e3, t2) {
        C(this, { type: O, iterator: S(A(e3).entries), kind: t2 });
      }, "Iterator", function() {
        var e3 = F(this), t2 = e3.kind, e3 = e3.iterator.next(), r2 = e3.value;
        return e3.done || (e3.value = "keys" === t2 ? r2.key : "values" === t2 ? r2.value : [r2.key, r2.value]), e3;
      }), e2 = d.prototype;
      h(e2, { append: function(e3, t2) {
        u(arguments.length, 2);
        var r2 = A(this);
        r2.entries.push({ key: e3 + "", value: t2 + "" }), r2.updateURL();
      }, delete: function(e3) {
        u(arguments.length, 1);
        for (var t2 = A(this), r2 = t2.entries, o3 = e3 + "", n2 = 0; n2 < r2.length; ) r2[n2].key === o3 ? r2.splice(n2, 1) : n2++;
        t2.updateURL();
      }, get: function(e3) {
        u(arguments.length, 1);
        for (var t2 = A(this).entries, r2 = e3 + "", o3 = 0; o3 < t2.length; o3++) if (t2[o3].key === r2) return t2[o3].value;
        return null;
      }, getAll: function(e3) {
        u(arguments.length, 1);
        for (var t2 = A(this).entries, r2 = e3 + "", o3 = [], n2 = 0; n2 < t2.length; n2++) t2[n2].key === r2 && o3.push(t2[n2].value);
        return o3;
      }, has: function(e3) {
        u(arguments.length, 1);
        for (var t2 = A(this).entries, r2 = e3 + "", o3 = 0; o3 < t2.length; ) if (t2[o3++].key === r2) return true;
        return false;
      }, set: function(e3, t2) {
        u(arguments.length, 1);
        for (var r2, o3 = A(this), n2 = o3.entries, s3 = false, i2 = e3 + "", a3 = t2 + "", l2 = 0; l2 < n2.length; l2++) (r2 = n2[l2]).key === i2 && (s3 ? n2.splice(l2--, 1) : (s3 = true, r2.value = a3));
        s3 || n2.push({ key: i2, value: a3 }), o3.updateURL();
      }, sort: function() {
        for (var e3, t2, r2 = A(this), o3 = r2.entries, n2 = o3.slice(), s3 = o3.length = 0; s3 < n2.length; s3++) {
          for (e3 = n2[s3], t2 = 0; t2 < s3; t2++) if (o3[t2].key > e3.key) {
            o3.splice(t2, 0, e3);
            break;
          }
          t2 === s3 && o3.push(e3);
        }
        r2.updateURL();
      }, forEach: function(e3) {
        for (var t2, r2 = A(this).entries, o3 = v(e3, 1 < arguments.length ? arguments[1] : void 0, 3), n2 = 0; n2 < r2.length; ) o3((t2 = r2[n2++]).value, t2.key, this);
      }, keys: function() {
        return new I(this, "keys");
      }, values: function() {
        return new I(this, "values");
      }, entries: function() {
        return new I(this, "entries");
      } }, { enumerable: true }), l(e2, i, e2.entries), l(e2, "toString", function() {
        for (var e3, t2 = A(this).entries, r2 = [], o3 = 0; o3 < t2.length; ) e3 = t2[o3++], r2.push(s2(e3.key) + "=" + s2(e3.value));
        return r2.join("&");
      }, { enumerable: true }), f(d, k), o({ global: true, forced: !a2 }, { URLSearchParams: d }), a2 || "function" != typeof E || "function" != typeof M || o({ global: true, enumerable: true, forced: true }, { fetch: function(e3) {
        var t2, r2, o3, e3 = [e3];
        return 1 < arguments.length && (j(t2 = arguments[1]) && (r2 = t2.body, b(r2) === k && ((o3 = t2.headers ? new M(t2.headers) : new M()).has("content-type") || o3.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), t2 = x2(t2, { body: w(0, String(r2)), headers: w(0, o3) }))), e3.push(t2)), E.apply(this, e3);
      } }), t.exports = { URLSearchParams: d, getState: A };
    }, { "../internals/an-instance": 9, "../internals/an-object": 10, "../internals/classof": 29, "../internals/create-iterator-constructor": 37, "../internals/create-property-descriptor": 39, "../internals/export": 50, "../internals/function-bind-context": 55, "../internals/get-built-in": 57, "../internals/get-iterator": 59, "../internals/get-iterator-method": 58, "../internals/has": 61, "../internals/internal-state": 71, "../internals/is-object": 75, "../internals/native-url": 85, "../internals/object-create": 91, "../internals/redefine": 110, "../internals/redefine-all": 109, "../internals/set-to-string-tag": 119, "../internals/well-known-symbol": 150, "../modules/es.array.iterator": 165 }], 248: [function(e2, y, F) {
      e2("../modules/es.string.iterator");
      function c(e3) {
        var t2, r2, o3, n2;
        if ("number" == typeof e3) {
          for (t2 = [], r2 = 0; r2 < 4; r2++) t2.unshift(e3 % 256), e3 = Y(e3 / 256);
          return t2.join(".");
        }
        if ("object" != typeof e3) return e3;
        for (t2 = "", o3 = le(e3), r2 = 0; r2 < 8; r2++) n2 && 0 === e3[r2] || (n2 = n2 && false, o3 === r2 ? (t2 += r2 ? ":" : "::", n2 = true) : (t2 += e3[r2].toString(16), r2 < 7 && (t2 += ":")));
        return "[" + t2 + "]";
      }
      function n(e3) {
        return !e3.host || e3.cannotBeABaseURL || "file" == e3.scheme;
      }
      function a2(e3, t2, r2, o3) {
        var n2, s3, i2, a3 = r2 || me, l2 = 0, u2 = "", c2 = false, d2 = false, h2 = false;
        for (r2 || (e3.scheme = "", e3.username = "", e3.password = "", e3.host = null, e3.port = null, e3.path = [], e3.query = null, e3.fragment = null, e3.cannotBeABaseURL = false, t2 = t2.replace(ie, "")), t2 = t2.replace(ae, ""), n2 = b(t2); l2 <= n2.length; ) {
          switch (s3 = n2[l2], a3) {
            case me:
              if (!s3 || !J.test(s3)) {
                if (r2) return _;
                a3 = ge;
                continue;
              }
              u2 += s3.toLowerCase(), a3 = ye;
              break;
            case ye:
              if (s3 && ($.test(s3) || "+" == s3 || "-" == s3 || "." == s3)) u2 += s3.toLowerCase();
              else {
                if (":" != s3) {
                  if (r2) return _;
                  u2 = "", a3 = ge, l2 = 0;
                  continue;
                }
                if (r2 && (k(e3) != v(M, u2) || "file" == u2 && (O(e3) || null !== e3.port) || "file" == e3.scheme && !e3.host)) return;
                if (e3.scheme = u2, r2) return void (k(e3) && M[e3.scheme] == e3.port && (e3.port = null));
                u2 = "", "file" == e3.scheme ? a3 = Ee : k(e3) && o3 && o3.scheme == e3.scheme ? a3 = ve : k(e3) ? a3 = xe : "/" == n2[l2 + 1] ? (a3 = be, l2++) : (e3.cannotBeABaseURL = true, e3.path.push(""), a3 = Oe);
              }
              break;
            case ge:
              if (!o3 || o3.cannotBeABaseURL && "#" != s3) return _;
              if (o3.cannotBeABaseURL && "#" == s3) {
                e3.scheme = o3.scheme, e3.path = o3.path.slice(), e3.query = o3.query, e3.fragment = "", e3.cannotBeABaseURL = true, a3 = D;
                break;
              }
              a3 = "file" == o3.scheme ? Ee : _e;
              continue;
            case ve:
              if ("/" != s3 || "/" != n2[l2 + 1]) {
                a3 = _e;
                continue;
              }
              a3 = A, l2++;
              break;
            case be:
              if ("/" == s3) {
                a3 = P;
                break;
              }
              a3 = R;
              continue;
            case _e:
              if (e3.scheme = o3.scheme, s3 == g) e3.username = o3.username, e3.password = o3.password, e3.host = o3.host, e3.port = o3.port, e3.path = o3.path.slice(), e3.query = o3.query;
              else if ("/" == s3 || "\\" == s3 && k(e3)) a3 = je;
              else if ("?" == s3) e3.username = o3.username, e3.password = o3.password, e3.host = o3.host, e3.port = o3.port, e3.path = o3.path.slice(), e3.query = "", a3 = I;
              else {
                if ("#" != s3) {
                  e3.username = o3.username, e3.password = o3.password, e3.host = o3.host, e3.port = o3.port, e3.path = o3.path.slice(), e3.path.pop(), a3 = R;
                  continue;
                }
                e3.username = o3.username, e3.password = o3.password, e3.host = o3.host, e3.port = o3.port, e3.path = o3.path.slice(), e3.query = o3.query, e3.fragment = "", a3 = D;
              }
              break;
            case je:
              if (!k(e3) || "/" != s3 && "\\" != s3) {
                if ("/" != s3) {
                  e3.username = o3.username, e3.password = o3.password, e3.host = o3.host, e3.port = o3.port, a3 = R;
                  continue;
                }
                a3 = P;
              } else a3 = A;
              break;
            case xe:
              if (a3 = A, "/" != s3 || "/" != u2.charAt(l2 + 1)) continue;
              l2++;
              break;
            case A:
              if ("/" == s3 || "\\" == s3) break;
              a3 = P;
              continue;
            case P:
              if ("@" == s3) {
                c2 && (u2 = "%40" + u2);
                for (var c2 = true, f2 = b(u2), p2 = 0; p2 < f2.length; p2++) {
                  var m2 = f2[p2];
                  ":" != m2 || h2 ? (m2 = E(m2, T), h2 ? e3.password += m2 : e3.username += m2) : h2 = true;
                }
                u2 = "";
              } else if (s3 == g || "/" == s3 || "?" == s3 || "#" == s3 || "\\" == s3 && k(e3)) {
                if (c2 && "" == u2) return K;
                l2 -= b(u2).length + 1, u2 = "", a3 = we;
              } else u2 += s3;
              break;
            case we:
            case Se:
              if (r2 && "file" == e3.scheme) {
                a3 = ke;
                continue;
              }
              if (":" != s3 || d2) {
                if (s3 == g || "/" == s3 || "?" == s3 || "#" == s3 || "\\" == s3 && k(e3)) {
                  if (k(e3) && "" == u2) return j;
                  if (r2 && "" == u2 && (O(e3) || null !== e3.port)) return;
                  if (i2 = w(e3, u2)) return i2;
                  if (u2 = "", a3 = L, r2) return;
                  continue;
                }
                "[" == s3 ? d2 = true : "]" == s3 && (d2 = false), u2 += s3;
              } else {
                if ("" == u2) return j;
                if (i2 = w(e3, u2)) return i2;
                if (u2 = "", a3 = Te, r2 == Se) return;
              }
              break;
            case Te:
              if (!x2.test(s3)) {
                if (s3 == g || "/" == s3 || "?" == s3 || "#" == s3 || "\\" == s3 && k(e3) || r2) {
                  if ("" != u2) {
                    var y2 = parseInt(u2, 10);
                    if (65535 < y2) return Q;
                    e3.port = k(e3) && y2 === M[e3.scheme] ? null : y2, u2 = "";
                  }
                  if (r2) return;
                  a3 = L;
                  continue;
                }
                return Q;
              }
              u2 += s3;
              break;
            case Ee:
              if (e3.scheme = "file", "/" == s3 || "\\" == s3) a3 = Me;
              else {
                if (!o3 || "file" != o3.scheme) {
                  a3 = R;
                  continue;
                }
                if (s3 == g) e3.host = o3.host, e3.path = o3.path.slice(), e3.query = o3.query;
                else if ("?" == s3) e3.host = o3.host, e3.path = o3.path.slice(), e3.query = "", a3 = I;
                else {
                  if ("#" != s3) {
                    de(n2.slice(l2).join("")) || (e3.host = o3.host, e3.path = o3.path.slice(), he(e3)), a3 = R;
                    continue;
                  }
                  e3.host = o3.host, e3.path = o3.path.slice(), e3.query = o3.query, e3.fragment = "", a3 = D;
                }
              }
              break;
            case Me:
              if ("/" == s3 || "\\" == s3) {
                a3 = ke;
                break;
              }
              o3 && "file" == o3.scheme && !de(n2.slice(l2).join("")) && (C(o3.path[0], true) ? e3.path.push(o3.path[0]) : e3.host = o3.host), a3 = R;
              continue;
            case ke:
              if (s3 == g || "/" == s3 || "\\" == s3 || "?" == s3 || "#" == s3) {
                if (!r2 && C(u2)) a3 = R;
                else {
                  if ("" == u2) {
                    if (e3.host = "", r2) return;
                  } else {
                    if (i2 = w(e3, u2)) return i2;
                    if ("localhost" == e3.host && (e3.host = ""), r2) return;
                    u2 = "";
                  }
                  a3 = L;
                }
                continue;
              }
              u2 += s3;
              break;
            case L:
              if (k(e3)) {
                if (a3 = R, "/" != s3 && "\\" != s3) continue;
              } else if (r2 || "?" != s3) if (r2 || "#" != s3) {
                if (s3 != g && (a3 = R, "/" != s3)) continue;
              } else e3.fragment = "", a3 = D;
              else e3.query = "", a3 = I;
              break;
            case R:
              if (s3 == g || "/" == s3 || "\\" == s3 && k(e3) || !r2 && ("?" == s3 || "#" == s3)) {
                if (pe(u2) ? (he(e3), "/" == s3 || "\\" == s3 && k(e3) || e3.path.push("")) : fe(u2) ? "/" == s3 || "\\" == s3 && k(e3) || e3.path.push("") : ("file" == e3.scheme && !e3.path.length && C(u2) && (e3.host && (e3.host = ""), u2 = u2.charAt(0) + ":"), e3.path.push(u2)), u2 = "", "file" == e3.scheme && (s3 == g || "?" == s3 || "#" == s3)) for (; 1 < e3.path.length && "" === e3.path[0]; ) e3.path.shift();
                "?" == s3 ? (e3.query = "", a3 = I) : "#" == s3 && (e3.fragment = "", a3 = D);
              } else u2 += E(s3, ce);
              break;
            case Oe:
              "?" == s3 ? (e3.query = "", a3 = I) : "#" == s3 ? (e3.fragment = "", a3 = D) : s3 != g && (e3.path[0] += E(s3, S));
              break;
            case I:
              r2 || "#" != s3 ? s3 != g && ("'" == s3 && k(e3) ? e3.query += "%27" : e3.query += "#" == s3 ? "%23" : E(s3, S)) : (e3.fragment = "", a3 = D);
              break;
            case D:
              s3 != g && (e3.fragment += E(s3, ue));
          }
          l2++;
        }
      }
      function l(e3) {
        var t2, r2, o3 = G(this, l, "URL"), n2 = 1 < arguments.length ? arguments[1] : void 0, e3 = String(e3), s3 = X(o3, { type: "URL" });
        if (void 0 !== n2) {
          if (n2 instanceof l) t2 = p(n2);
          else if (r2 = a2(t2 = {}, String(n2))) throw TypeError(r2);
        }
        if (r2 = a2(s3, e3, null, t2)) throw TypeError(r2);
        var i2 = s3.searchParams = new q();
        (n2 = f(i2)).updateSearchParams(s3.query), n2.updateURL = function() {
          s3.query = String(i2) || null;
        }, u || (o3.href = m.call(o3), o3.origin = Ce.call(o3), o3.protocol = Ae.call(o3), o3.username = Pe.call(o3), o3.password = Le.call(o3), o3.host = Re.call(o3), o3.hostname = Ie.call(o3), o3.port = De.call(o3), o3.pathname = Fe.call(o3), o3.search = Ue.call(o3), o3.searchParams = Ne.call(o3), o3.hash = Be.call(o3));
      }
      function t(e3, t2) {
        return { get: e3, set: t2, configurable: true, enumerable: true };
      }
      var g, r, o, U = e2("../internals/export"), u = e2("../internals/descriptors"), N = e2("../internals/native-url"), s2 = e2("../internals/global"), B = e2("../internals/object-define-properties"), i = e2("../internals/redefine"), G = e2("../internals/an-instance"), v = e2("../internals/has"), d = e2("../internals/object-assign"), b = e2("../internals/array-from"), V = e2("../internals/string-multibyte").codeAt, z = e2("../internals/string-punycode-to-ascii"), H = e2("../internals/set-to-string-tag"), W = e2("../modules/web.url-search-params"), e2 = e2("../internals/internal-state"), h = s2.URL, q = W.URLSearchParams, f = W.getState, X = e2.set, p = e2.getterFor("URL"), Y = Math.floor, Z = Math.pow, K = "Invalid authority", _ = "Invalid scheme", j = "Invalid host", Q = "Invalid port", J = /[A-Za-z]/, $ = /[\d+-.A-Za-z]/, x2 = /\d/, ee = /^(0x|0X)/, te = /^[0-7]+$/, re = /^\d+$/, oe = /^[\dA-Fa-f]+$/, ne = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, se = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, ie = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, ae = /[\u0009\u000A\u000D]/g, w = function(e3, t2) {
        var r2, o3, n2;
        if ("[" == t2.charAt(0)) return "]" == t2.charAt(t2.length - 1) && (r2 = function(e4) {
          var t3 = [0, 0, 0, 0, 0, 0, 0, 0], r3 = 0, o4 = null, n3 = 0, s3, i2, a3, l2, u2, c2, d2, h2 = function() {
            return e4.charAt(n3);
          };
          if (h2() == ":") {
            if (e4.charAt(1) != ":") return;
            n3 += 2;
            r3++;
            o4 = r3;
          }
          while (h2()) {
            if (r3 == 8) return;
            if (h2() == ":") {
              if (o4 !== null) return;
              n3++;
              r3++;
              o4 = r3;
              continue;
            }
            s3 = i2 = 0;
            while (i2 < 4 && oe.test(h2())) {
              s3 = s3 * 16 + parseInt(h2(), 16);
              n3++;
              i2++;
            }
            if (h2() == ".") {
              if (i2 == 0) return;
              n3 -= i2;
              if (r3 > 6) return;
              a3 = 0;
              while (h2()) {
                l2 = null;
                if (a3 > 0) if (h2() == "." && a3 < 4) n3++;
                else return;
                if (!x2.test(h2())) return;
                while (x2.test(h2())) {
                  u2 = parseInt(h2(), 10);
                  if (l2 === null) l2 = u2;
                  else if (l2 == 0) return;
                  else l2 = l2 * 10 + u2;
                  if (l2 > 255) return;
                  n3++;
                }
                t3[r3] = t3[r3] * 256 + l2;
                a3++;
                if (a3 == 2 || a3 == 4) r3++;
              }
              if (a3 != 4) return;
              break;
            } else if (h2() == ":") {
              n3++;
              if (!h2()) return;
            } else if (h2()) return;
            t3[r3++] = s3;
          }
          if (o4 !== null) {
            c2 = r3 - o4;
            r3 = 7;
            while (r3 != 0 && c2 > 0) {
              d2 = t3[r3];
              t3[r3--] = t3[o4 + c2 - 1];
              t3[o4 + --c2] = d2;
            }
          } else if (r3 != 8) return;
          return t3;
        }(t2.slice(1, -1))) ? void (e3.host = r2) : j;
        if (k(e3)) return t2 = z(t2), ne.test(t2) || null === (r2 = function(e4) {
          var t3 = e4.split("."), r3, o4, n3, s3, i2, a3, l2;
          if (t3.length && t3[t3.length - 1] == "") t3.pop();
          if ((r3 = t3.length) > 4) return e4;
          for (o4 = [], n3 = 0; n3 < r3; n3++) {
            s3 = t3[n3];
            if (s3 == "") return e4;
            i2 = 10;
            if (s3.length > 1 && s3.charAt(0) == "0") {
              i2 = ee.test(s3) ? 16 : 8;
              s3 = s3.slice(i2 == 8 ? 1 : 2);
            }
            if (s3 === "") a3 = 0;
            else {
              if (!(i2 == 10 ? re : i2 == 8 ? te : oe).test(s3)) return e4;
              a3 = parseInt(s3, i2);
            }
            o4.push(a3);
          }
          for (n3 = 0; n3 < r3; n3++) {
            a3 = o4[n3];
            if (n3 == r3 - 1) {
              if (a3 >= Z(256, 5 - r3)) return null;
            } else if (a3 > 255) return null;
          }
          for (l2 = o4.pop(), n3 = 0; n3 < o4.length; n3++) l2 += o4[n3] * Z(256, 3 - n3);
          return l2;
        }(t2)) ? j : void (e3.host = r2);
        if (se.test(t2)) return j;
        for (r2 = "", o3 = b(t2), n2 = 0; n2 < o3.length; n2++) r2 += E(o3[n2], S);
        e3.host = r2;
      }, le = function(e3) {
        for (var t2 = null, r2 = 1, o3 = null, n2 = 0, s3 = 0; s3 < 8; s3++) 0 !== e3[s3] ? (r2 < n2 && (t2 = o3, r2 = n2), o3 = null, n2 = 0) : (null === o3 && (o3 = s3), ++n2);
        return r2 < n2 && (t2 = o3, r2 = n2), t2;
      }, S = {}, ue = d({}, S, { " ": 1, '"': 1, "<": 1, ">": 1, "`": 1 }), ce = d({}, ue, { "#": 1, "?": 1, "{": 1, "}": 1 }), T = d({}, ce, { "/": 1, ":": 1, ";": 1, "=": 1, "@": 1, "[": 1, "\\": 1, "]": 1, "^": 1, "|": 1 }), E = function(e3, t2) {
        var r2 = V(e3, 0);
        return 32 < r2 && r2 < 127 && !v(t2, e3) ? e3 : encodeURIComponent(e3);
      }, M = { ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443 }, k = function(e3) {
        return v(M, e3.scheme);
      }, O = function(e3) {
        return "" != e3.username || "" != e3.password;
      }, C = function(e3, t2) {
        return 2 == e3.length && J.test(e3.charAt(0)) && (":" == (e3 = e3.charAt(1)) || !t2 && "|" == e3);
      }, de = function(e3) {
        return 1 < e3.length && C(e3.slice(0, 2)) && (2 == e3.length || "/" === (e3 = e3.charAt(2)) || "\\" === e3 || "?" === e3 || "#" === e3);
      }, he = function(e3) {
        var t2 = e3.path, r2 = t2.length;
        !r2 || "file" == e3.scheme && 1 == r2 && C(t2[0], true) || t2.pop();
      }, fe = function(e3) {
        return "." === e3 || "%2e" === e3.toLowerCase();
      }, pe = function(e3) {
        return ".." === (e3 = e3.toLowerCase()) || "%2e." === e3 || ".%2e" === e3 || "%2e%2e" === e3;
      }, me = {}, ye = {}, ge = {}, ve = {}, be = {}, _e = {}, je = {}, xe = {}, A = {}, P = {}, we = {}, Se = {}, Te = {}, Ee = {}, Me = {}, ke = {}, L = {}, R = {}, Oe = {}, I = {}, D = {}, s2 = l.prototype, m = function() {
        var e3 = p(this), t2 = e3.scheme, r2 = e3.username, o3 = e3.password, n2 = e3.host, s3 = e3.port, i2 = e3.path, a3 = e3.query, l2 = e3.fragment, u2 = t2 + ":";
        return null !== n2 ? (u2 += "//", O(e3) && (u2 += r2 + (o3 ? ":" + o3 : "") + "@"), u2 += c(n2), null !== s3 && (u2 += ":" + s3)) : "file" == t2 && (u2 += "//"), u2 += e3.cannotBeABaseURL ? i2[0] : i2.length ? "/" + i2.join("/") : "", null !== a3 && (u2 += "?" + a3), null !== l2 && (u2 += "#" + l2), u2;
      }, Ce = function() {
        var e3 = p(this), t2 = e3.scheme, r2 = e3.port;
        if ("blob" == t2) try {
          return new URL(t2.path[0]).origin;
        } catch (e4) {
          return "null";
        }
        return "file" != t2 && k(e3) ? t2 + "://" + c(e3.host) + (null !== r2 ? ":" + r2 : "") : "null";
      }, Ae = function() {
        return p(this).scheme + ":";
      }, Pe = function() {
        return p(this).username;
      }, Le = function() {
        return p(this).password;
      }, Re = function() {
        var e3 = p(this), t2 = e3.host, e3 = e3.port;
        return null === t2 ? "" : null === e3 ? c(t2) : c(t2) + ":" + e3;
      }, Ie = function() {
        var e3 = p(this).host;
        return null === e3 ? "" : c(e3);
      }, De = function() {
        var e3 = p(this).port;
        return null === e3 ? "" : String(e3);
      }, Fe = function() {
        var e3 = p(this), t2 = e3.path;
        return e3.cannotBeABaseURL ? t2[0] : t2.length ? "/" + t2.join("/") : "";
      }, Ue = function() {
        var e3 = p(this).query;
        return e3 ? "?" + e3 : "";
      }, Ne = function() {
        return p(this).searchParams;
      }, Be = function() {
        var e3 = p(this).fragment;
        return e3 ? "#" + e3 : "";
      };
      u && B(s2, { href: t(m, function(e3) {
        var t2 = p(this), e3 = String(e3), e3 = a2(t2, e3);
        if (e3) throw TypeError(e3);
        f(t2.searchParams).updateSearchParams(t2.query);
      }), origin: t(Ce), protocol: t(Ae, function(e3) {
        var t2 = p(this);
        a2(t2, String(e3) + ":", me);
      }), username: t(Pe, function(e3) {
        var t2 = p(this), r2 = b(String(e3));
        if (!n(t2)) {
          t2.username = "";
          for (var o3 = 0; o3 < r2.length; o3++) t2.username += E(r2[o3], T);
        }
      }), password: t(Le, function(e3) {
        var t2 = p(this), r2 = b(String(e3));
        if (!n(t2)) {
          t2.password = "";
          for (var o3 = 0; o3 < r2.length; o3++) t2.password += E(r2[o3], T);
        }
      }), host: t(Re, function(e3) {
        var t2 = p(this);
        t2.cannotBeABaseURL || a2(t2, String(e3), we);
      }), hostname: t(Ie, function(e3) {
        var t2 = p(this);
        t2.cannotBeABaseURL || a2(t2, String(e3), Se);
      }), port: t(De, function(e3) {
        var t2 = p(this);
        n(t2) || ("" == (e3 = String(e3)) ? t2.port = null : a2(t2, e3, Te));
      }), pathname: t(Fe, function(e3) {
        var t2 = p(this);
        t2.cannotBeABaseURL || (t2.path = [], a2(t2, e3 + "", L));
      }), search: t(Ue, function(e3) {
        var t2 = p(this);
        "" == (e3 = String(e3)) ? t2.query = null : ("?" == e3.charAt(0) && (e3 = e3.slice(1)), t2.query = "", a2(t2, e3, I)), f(t2.searchParams).updateSearchParams(t2.query);
      }), searchParams: t(Ne), hash: t(Be, function(e3) {
        var t2 = p(this);
        "" == (e3 = String(e3)) ? t2.fragment = null : ("#" == e3.charAt(0) && (e3 = e3.slice(1)), t2.fragment = "", a2(t2, e3, D));
      }) }), i(s2, "toJSON", function() {
        return m.call(this);
      }, { enumerable: true }), i(s2, "toString", function() {
        return m.call(this);
      }, { enumerable: true }), h && (r = h.createObjectURL, o = h.revokeObjectURL, r && i(l, "createObjectURL", function(e3) {
        return r.apply(h, arguments);
      }), o && i(l, "revokeObjectURL", function(e3) {
        return o.apply(h, arguments);
      })), H(l, "URL"), U({ global: true, forced: !N, sham: !u }, { URL: l });
    }, { "../internals/an-instance": 9, "../internals/array-from": 17, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 60, "../internals/has": 61, "../internals/internal-state": 71, "../internals/native-url": 85, "../internals/object-assign": 90, "../internals/object-define-properties": 92, "../internals/redefine": 110, "../internals/set-to-string-tag": 119, "../internals/string-multibyte": 125, "../internals/string-punycode-to-ascii": 128, "../modules/es.string.iterator": 200, "../modules/web.url-search-params": 247 }], 249: [function(e2, t, r) {
      t.exports = e2("./").polyfill();
    }, { "./": 250 }], 250: [function(V, r, o) {
      !(function(B, G) {
        var e2, t;
        e2 = this, t = function() {
          function l(e4) {
            return "function" == typeof e4;
          }
          var r2 = Array.isArray || function(e4) {
            return "[object Array]" === Object.prototype.toString.call(e4);
          }, o3 = 0, t2 = void 0, n = void 0, i = function(e4, t3) {
            d[o3] = e4, d[o3 + 1] = t3, 2 === (o3 += 2) && (n ? n(h) : D());
          };
          var e3 = "undefined" != typeof window ? window : void 0, s2 = e3 || {}, s2 = s2.MutationObserver || s2.WebKitMutationObserver, a2 = "undefined" == typeof self && void 0 !== B && "[object process]" === {}.toString.call(B), u = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
          function c() {
            var e4 = setTimeout;
            return function() {
              return e4(h, 1);
            };
          }
          var d = new Array(1e3);
          function h() {
            for (var e4 = 0; e4 < o3; e4 += 2) (0, d[e4])(d[e4 + 1]), d[e4] = void 0, d[e4 + 1] = void 0;
            o3 = 0;
          }
          function f() {
            try {
              var e4 = Function("return this")().require("vertx");
              return void 0 !== (t2 = e4.runOnLoop || e4.runOnContext) ? function() {
                t2(h);
              } : c();
            } catch (e5) {
              return c();
            }
          }
          var p, m, y, D = void 0;
          function g(e4, t3) {
            var r3, o4 = this, n2 = new this.constructor(_), s3 = (void 0 === n2[b] && P(n2), o4._state);
            return s3 ? (r3 = arguments[s3 - 1], i(function() {
              return C(s3, n2, r3, o4._result);
            })) : k(o4, n2, e4, t3), n2;
          }
          function v(e4) {
            var t3;
            return e4 && "object" == typeof e4 && e4.constructor === this ? e4 : (T(t3 = new this(_), e4), t3);
          }
          var D = a2 ? function() {
            return B.nextTick(h);
          } : s2 ? (m = 0, a2 = new s2(h), y = document.createTextNode(""), a2.observe(y, { characterData: true }), function() {
            y.data = m = ++m % 2;
          }) : u ? ((p = new MessageChannel()).port1.onmessage = h, function() {
            return p.port2.postMessage(0);
          }) : (void 0 === e3 && "function" == typeof V ? f : c)(), b = Math.random().toString(36).substring(2);
          function _() {
          }
          var j = void 0, x2 = 1, w = 2;
          function F(e4, o4, n2) {
            i(function(t3) {
              var r3 = false, e5 = function(e6, t4, r4, o5) {
                try {
                  e6.call(t4, r4, o5);
                } catch (e7) {
                  return e7;
                }
              }(n2, o4, function(e6) {
                r3 || (r3 = true, (o4 !== e6 ? T : E)(t3, e6));
              }, function(e6) {
                r3 || (r3 = true, M(t3, e6));
              }, t3._label);
              !r3 && e5 && (r3 = true, M(t3, e5));
            }, e4);
          }
          function S(e4, t3, r3) {
            var o4, n2;
            t3.constructor === e4.constructor && r3 === g && t3.constructor.resolve === v ? (o4 = e4, (n2 = t3)._state === x2 ? E(o4, n2._result) : n2._state === w ? M(o4, n2._result) : k(n2, void 0, function(e5) {
              return T(o4, e5);
            }, function(e5) {
              return M(o4, e5);
            })) : void 0 !== r3 && l(r3) ? F(e4, t3, r3) : E(e4, t3);
          }
          function T(t3, e4) {
            if (t3 === e4) M(t3, new TypeError("You cannot resolve a promise with itself"));
            else if (r3 = typeof e4, null === e4 || "object" != r3 && "function" != r3) E(t3, e4);
            else {
              r3 = void 0;
              try {
                r3 = e4.then;
              } catch (e5) {
                return void M(t3, e5);
              }
              S(t3, e4, r3);
            }
            var r3;
          }
          function U(e4) {
            e4._onerror && e4._onerror(e4._result), O(e4);
          }
          function E(e4, t3) {
            e4._state === j && (e4._result = t3, e4._state = x2, 0 !== e4._subscribers.length && i(O, e4));
          }
          function M(e4, t3) {
            e4._state === j && (e4._state = w, e4._result = t3, i(U, e4));
          }
          function k(e4, t3, r3, o4) {
            var n2 = e4._subscribers, s3 = n2.length;
            e4._onerror = null, n2[s3] = t3, n2[s3 + x2] = r3, n2[s3 + w] = o4, 0 === s3 && e4._state && i(O, e4);
          }
          function O(e4) {
            var t3 = e4._subscribers, r3 = e4._state;
            if (0 !== t3.length) {
              for (var o4, n2 = void 0, s3 = e4._result, i2 = 0; i2 < t3.length; i2 += 3) o4 = t3[i2], n2 = t3[i2 + r3], o4 ? C(r3, o4, n2, s3) : n2(s3);
              e4._subscribers.length = 0;
            }
          }
          function C(e4, t3, r3, o4) {
            var n2 = l(r3), s3 = void 0, i2 = void 0, a3 = true;
            if (n2) {
              try {
                s3 = r3(o4);
              } catch (e5) {
                a3 = false, i2 = e5;
              }
              if (t3 === s3) return void M(t3, new TypeError("A promises callback cannot return that same promise."));
            } else s3 = o4;
            t3._state === j && (n2 && a3 ? T(t3, s3) : false === a3 ? M(t3, i2) : e4 === x2 ? E(t3, s3) : e4 === w && M(t3, s3));
          }
          var A = 0;
          function P(e4) {
            e4[b] = A++, e4._state = void 0, e4._result = void 0, e4._subscribers = [];
          }
          L.prototype._enumerate = function(e4) {
            for (var t3 = 0; this._state === j && t3 < e4.length; t3++) this._eachEntry(e4[t3], t3);
          }, L.prototype._eachEntry = function(t3, e4) {
            var r3 = this._instanceConstructor, o4 = r3.resolve;
            if (o4 === v) {
              var n2, s3 = void 0, i2 = void 0, a3 = false;
              try {
                s3 = t3.then;
              } catch (e5) {
                a3 = true, i2 = e5;
              }
              s3 === g && t3._state !== j ? this._settledAt(t3._state, e4, t3._result) : "function" != typeof s3 ? (this._remaining--, this._result[e4] = t3) : r3 === R ? (n2 = new r3(_), a3 ? M(n2, i2) : S(n2, t3, s3), this._willSettleAt(n2, e4)) : this._willSettleAt(new r3(function(e5) {
                return e5(t3);
              }), e4);
            } else this._willSettleAt(o4(t3), e4);
          }, L.prototype._settledAt = function(e4, t3, r3) {
            var o4 = this.promise;
            o4._state === j && (this._remaining--, e4 === w ? M(o4, r3) : this._result[t3] = r3), 0 === this._remaining && E(o4, this._result);
          }, L.prototype._willSettleAt = function(e4, t3) {
            var r3 = this;
            k(e4, void 0, function(e5) {
              return r3._settledAt(x2, t3, e5);
            }, function(e5) {
              return r3._settledAt(w, t3, e5);
            });
          };
          var N = L;
          function L(e4, t3) {
            this._instanceConstructor = e4, this.promise = new e4(_), this.promise[b] || P(this.promise), r2(t3) ? (this.length = t3.length, this._remaining = t3.length, this._result = new Array(this.length), 0 !== this.length && (this.length = this.length || 0, this._enumerate(t3), 0 !== this._remaining) || E(this.promise, this._result)) : M(this.promise, new Error("Array Methods must be provided an Array"));
          }
          I.prototype.catch = function(e4) {
            return this.then(null, e4);
          }, I.prototype.finally = function(t3) {
            var r3 = this.constructor;
            return l(t3) ? this.then(function(e4) {
              return r3.resolve(t3()).then(function() {
                return e4;
              });
            }, function(e4) {
              return r3.resolve(t3()).then(function() {
                throw e4;
              });
            }) : this.then(t3, t3);
          };
          var R = I;
          function I(e4) {
            if (this[b] = A++, this._result = this._state = void 0, this._subscribers = [], _ !== e4) {
              if ("function" != typeof e4) throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
              if (!(this instanceof I)) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
              var t3 = this;
              try {
                e4(function(e5) {
                  T(t3, e5);
                }, function(e5) {
                  M(t3, e5);
                });
              } catch (e5) {
                M(t3, e5);
              }
            }
          }
          return R.prototype.then = g, R.all = function(e4) {
            return new N(this, e4).promise;
          }, R.race = function(n2) {
            var s3 = this;
            return r2(n2) ? new s3(function(e4, t3) {
              for (var r3 = n2.length, o4 = 0; o4 < r3; o4++) s3.resolve(n2[o4]).then(e4, t3);
            }) : new s3(function(e4, t3) {
              return t3(new TypeError("You must pass an array to race."));
            });
          }, R.resolve = v, R.reject = function(e4) {
            var t3 = new this(_);
            return M(t3, e4), t3;
          }, R._setScheduler = function(e4) {
            n = e4;
          }, R._setAsap = function(e4) {
            i = e4;
          }, R._asap = i, R.polyfill = function() {
            var e4 = void 0;
            if (void 0 !== G) e4 = G;
            else if ("undefined" != typeof self) e4 = self;
            else try {
              e4 = Function("return this")();
            } catch (e5) {
              throw new Error("polyfill failed because global object is unavailable in this environment");
            }
            var t3 = e4.Promise;
            if (t3) {
              var r3 = null;
              try {
                r3 = Object.prototype.toString.call(t3.resolve());
              } catch (e5) {
              }
              if ("[object Promise]" === r3 && !t3.cast) return;
            }
            e4.Promise = R;
          }, R.Promise = R;
        }, "object" == typeof o && void 0 !== r ? r.exports = t() : e2.ES6Promise = t();
      }).call(this, V("_process"), "undefined" != typeof commonjsGlobal ? commonjsGlobal : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, { _process: 259 }], 251: [function(e2, t, r) {
      var o, n;
      o = this, n = function(e3, t2) {
        var r2 = 5e3, o3 = "callback";
        function d(t3) {
          try {
            delete window[t3];
          } catch (e4) {
            window[t3] = void 0;
          }
        }
        function h(e4) {
          e4 = document.getElementById(e4);
          e4 && document.getElementsByTagName("head")[0].removeChild(e4);
        }
        t2.exports = function(s2) {
          var i = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], a2 = s2, l = i.timeout || r2, u = i.jsonpCallback || o3, c = void 0;
          return new Promise(function(t3, e4) {
            var r3 = i.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), o4 = u + "_" + r3, n2 = (window[r3] = function(e5) {
              t3({ ok: true, json: function() {
                return Promise.resolve(e5);
              } }), c && clearTimeout(c), h(o4), d(r3);
            }, a2 += -1 === a2.indexOf("?") ? "?" : "&", document.createElement("script"));
            n2.setAttribute("src", "" + a2 + u + "=" + r3), i.charset && n2.setAttribute("charset", i.charset), n2.id = o4, document.getElementsByTagName("head")[0].appendChild(n2), c = setTimeout(function() {
              e4(new Error("JSONP request to " + s2 + " timed out")), d(r3), h(o4), window[r3] = function() {
                d(r3);
              };
            }, l), n2.onerror = function() {
              e4(new Error("JSONP request to " + s2 + " failed")), d(r3), h(o4), c && clearTimeout(c);
            };
          });
        };
      }, void 0 !== r && void 0 !== t ? n(0, t) : (n(n = { exports: {} }, n), o.fetchJsonp = n.exports);
    }, {}], 252: [function(e2, t, r) {
      var o = function(a2) {
        var l, u, c, d, h, f, t2, p, m, o3, e3;
        if (!(void 0 === a2 || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) return e3 = a2.document, l = function() {
          return a2.URL || a2.webkitURL || a2;
        }, u = e3.createElementNS("http://www.w3.org/1999/xhtml", "a"), c = "download" in u, d = /constructor/i.test(a2.HTMLElement) || a2.safari, h = /CriOS\/[\d]+/.test(navigator.userAgent), f = function(e4) {
          (a2.setImmediate || a2.setTimeout)(function() {
            throw e4;
          }, 0);
        }, t2 = 4e4, p = function(e4) {
          setTimeout(function() {
            "string" == typeof e4 ? l().revokeObjectURL(e4) : e4.remove();
          }, t2);
        }, m = function(e4) {
          return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e4.type) ? new Blob([String.fromCharCode(65279), e4], { type: e4.type }) : e4;
        }, e3 = (o3 = function(e4, r2, t3) {
          t3 || (e4 = m(e4));
          var o4, n, s2 = this, t3 = "application/octet-stream" === e4.type, i = function() {
            for (var e5 = s2, t4 = "writestart progress write writeend".split(" "), r3 = void 0, o5 = (t4 = [].concat(t4)).length; o5--; ) {
              var n2 = e5["on" + t4[o5]];
              if ("function" == typeof n2) try {
                n2.call(e5, r3 || e5);
              } catch (e6) {
                f(e6);
              }
            }
          };
          s2.readyState = s2.INIT, c ? (o4 = l().createObjectURL(e4), setTimeout(function() {
            var e5, t4;
            u.href = o4, u.download = r2, e5 = u, t4 = new MouseEvent("click"), e5.dispatchEvent(t4), i(), p(o4), s2.readyState = s2.DONE;
          })) : (h || t3 && d) && a2.FileReader ? ((n = new FileReader()).onloadend = function() {
            var e5 = h ? n.result : n.result.replace(/^data:[^;]*;/, "data:attachment/file;");
            a2.open(e5, "_blank") || (a2.location.href = e5), e5 = void 0, s2.readyState = s2.DONE, i();
          }, n.readAsDataURL(e4), s2.readyState = s2.INIT) : (o4 = o4 || l().createObjectURL(e4), !t3 && a2.open(o4, "_blank") || (a2.location.href = o4), s2.readyState = s2.DONE, i(), p(o4));
        }).prototype, "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e4, t3, r2) {
          return t3 = t3 || e4.name || "download", r2 || (e4 = m(e4)), navigator.msSaveOrOpenBlob(e4, t3);
        } : (e3.abort = function() {
        }, e3.readyState = e3.INIT = 0, e3.WRITING = 1, e3.DONE = 2, e3.error = e3.onwritestart = e3.onprogress = e3.onwrite = e3.onabort = e3.onerror = e3.onwriteend = null, function(e4, t3, r2) {
          return new o3(e4, t3 || e4.name || "download", r2);
        });
      }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
      void 0 !== t && t.exports ? t.exports.saveAs = o : null != s;
    }, {}], 253: [function(e2, t, r) {
      var o, n = Object.defineProperty, s2 = (n(r, "__esModule", { value: true }), r), i = { GIFEncoder: () => h, applyPalette: () => function(e3, t2, r2 = "rgb565") {
        if (!e3 || !e3.buffer) throw new Error("quantize() expected RGBA Uint8Array data");
        if (!(e3 instanceof Uint8Array || e3 instanceof Uint8ClampedArray)) throw new Error("quantize() expected RGBA Uint8Array data");
        if (256 < t2.length) throw new Error("applyPalette() only works with 256 colors or less");
        const o3 = new Uint32Array(e3.buffer), n2 = o3.length, s3 = "rgb444" === r2 ? 4096 : 65536, i2 = new Uint8Array(n2), a3 = new Array(s3);
        if ("rgba4444" === r2) for (let e4 = 0; e4 < n2; e4++) {
          var l2 = o3[e4], u2 = l2 >> 24 & 255, c2 = l2 >> 16 & 255, d2 = l2 >> 8 & 255, l2 = 255 & l2, h2 = A(l2, d2, c2, u2), h2 = h2 in a3 ? a3[h2] : a3[h2] = function(t3, r3, o4, n3, s4) {
            let i3 = 0, a4 = 1e100;
            for (let e5 = 0; e5 < s4.length; e5++) {
              var l3, u3 = s4[e5], c3 = v(u3[3] - n3);
              c3 > a4 || (l3 = u3[0], (c3 += v(l3 - t3)) > a4 || (l3 = u3[1], (c3 += v(l3 - r3)) > a4 || (l3 = u3[2], (c3 += v(l3 - o4)) > a4 || (a4 = c3, i3 = e5))));
            }
            return i3;
          }(l2, d2, c2, u2, t2);
          i2[e4] = h2;
        }
        else {
          const g = "rgb444" === r2 ? P : C;
          for (let e4 = 0; e4 < n2; e4++) {
            var f2 = o3[e4], p = f2 >> 16 & 255, m = f2 >> 8 & 255, f2 = 255 & f2, y = g(f2, m, p), y = y in a3 ? a3[y] : a3[y] = function(t3, r3, o4, n3) {
              let s4 = 0, i3 = 1e100;
              for (let e5 = 0; e5 < n3.length; e5++) {
                var a4, l3 = n3[e5], u3 = v(l3[0] - t3);
                u3 > i3 || (a4 = l3[1], (u3 += v(a4 - r3)) > i3 || (a4 = l3[2], (u3 += v(a4 - o4)) > i3 || (i3 = u3, s4 = e5)));
              }
              return s4;
            }(f2, m, p, t2);
            i2[e4] = y;
          }
        }
        return i2;
      }, default: () => f, nearestColor: () => function(e3, t2, r2 = u) {
        return e3[l(e3, t2, r2)];
      }, nearestColorIndex: () => l, nearestColorIndexWithDistance: () => d, prequantize: () => function(e3, { roundRGB: r2 = 5, roundAlpha: o3 = 10, oneBitAlpha: n2 = null } = {}) {
        const s3 = new Uint32Array(e3.buffer);
        for (let t2 = 0; t2 < s3.length; t2++) {
          var i2 = s3[t2];
          let e4 = i2 >> 24 & 255;
          var a3, l2 = i2 >> 16 & 255, u2 = i2 >> 8 & 255, i2 = 255 & i2;
          e4 = c(e4, o3), n2 && (a3 = "number" == typeof n2 ? n2 : 127, e4 = e4 <= a3 ? 0 : 255), i2 = c(i2, r2), u2 = c(u2, r2), l2 = c(l2, r2), s3[t2] = e4 << 24 | l2 << 16 | u2 << 8 | i2 << 0;
        }
      }, quantize: () => function(e3, t2, r2 = {}) {
        var { format: o3 = "rgb565", clearAlpha: n2 = true, clearAlphaColor: s3 = 0, clearAlphaThreshold: i2 = 0, oneBitAlpha: a3 = false } = r2;
        if (!e3 || !e3.buffer) throw new Error("quantize() expected RGBA Uint8Array data");
        if (!(e3 instanceof Uint8Array || e3 instanceof Uint8ClampedArray)) throw new Error("quantize() expected RGBA Uint8Array data");
        e3 = new Uint32Array(e3.buffer);
        let l2 = false !== r2.useSqrt;
        const u2 = "rgba4444" === o3, c2 = function(r3, e4) {
          const t3 = "rgb444" === e4 ? 4096 : 65536, o4 = new Array(t3), n3 = r3.length;
          if ("rgba4444" === e4) for (let t4 = 0; t4 < n3; ++t4) {
            var s4 = r3[t4], i3 = s4 >> 24 & 255, a4 = s4 >> 16 & 255, l3 = s4 >> 8 & 255, s4 = 255 & s4, u3 = A(s4, l3, a4, i3);
            let e5 = u3 in o4 ? o4[u3] : o4[u3] = D();
            e5.rc += s4, e5.gc += l3, e5.bc += a4, e5.ac += i3, e5.cnt++;
          }
          else if ("rgb444" === e4) for (let t4 = 0; t4 < n3; ++t4) {
            var c3 = r3[t4], d3 = c3 >> 16 & 255, h3 = c3 >> 8 & 255, c3 = 255 & c3, f3 = P(c3, h3, d3);
            let e5 = f3 in o4 ? o4[f3] : o4[f3] = D();
            e5.rc += c3, e5.gc += h3, e5.bc += d3, e5.cnt++;
          }
          else for (let t4 = 0; t4 < n3; ++t4) {
            var p2 = r3[t4], m2 = p2 >> 16 & 255, y2 = p2 >> 8 & 255, p2 = 255 & p2, g2 = C(p2, y2, m2);
            let e5 = g2 in o4 ? o4[g2] : o4[g2] = D();
            e5.rc += p2, e5.gc += y2, e5.bc += m2, e5.cnt++;
          }
          return o4;
        }(e3, o3), d2 = c2.length, h2 = d2 - 1, f2 = new Uint32Array(d2 + 1);
        for (var p = 0, m = 0; m < d2; ++m) {
          const O2 = c2[m];
          null != O2 && (E2 = 1 / O2.cnt, u2 && (O2.ac *= E2), O2.rc *= E2, O2.gc *= E2, O2.bc *= E2, c2[p++] = O2);
        }
        R(t2) / p < 0.022 && (l2 = false);
        for (var y, g, v2, m = 0; m < p - 1; ++m) c2[m].fw = m + 1, c2[m + 1].bk = m, l2 && (c2[m].cnt = Math.sqrt(c2[m].cnt));
        l2 && (c2[m].cnt = Math.sqrt(c2[m].cnt));
        for (m = 0; m < p; ++m) {
          I(c2, m);
          var b = c2[m].err;
          for (g = ++f2[0]; 1 < g && (v2 = g >> 1, !(c2[y = f2[v2]].err <= b)); g = v2) f2[g] = y;
          f2[g] = m;
        }
        var _, j = p - t2;
        for (m = 0; m < j; ) {
          for (; ; ) {
            var x2 = f2[1];
            if ((_ = c2[x2]).tm >= _.mtm && c2[_.nn].mtm <= _.tm) break;
            _.mtm == h2 ? x2 = f2[1] = f2[f2[0]--] : (I(c2, x2), _.tm = m);
            b = c2[x2].err;
            for (g = 1; (v2 = g + g) <= f2[0] && (v2 < f2[0] && c2[f2[v2]].err > c2[f2[v2 + 1]].err && v2++, !(b <= c2[y = f2[v2]].err)); g = v2) f2[g] = y;
            f2[g] = x2;
          }
          var w = c2[_.nn], S2 = _.cnt, T2 = w.cnt, E2 = 1 / (S2 + T2);
          u2 && (_.ac = E2 * (S2 * _.ac + T2 * w.ac)), _.rc = E2 * (S2 * _.rc + T2 * w.rc), _.gc = E2 * (S2 * _.gc + T2 * w.gc), _.bc = E2 * (S2 * _.bc + T2 * w.bc), _.cnt += w.cnt, _.mtm = ++m, c2[w.bk].fw = w.fw, c2[w.fw].bk = w.bk, w.mtm = h2;
        }
        let M2 = [];
        for (m = 0; ; 0) {
          let e4 = L(Math.round(c2[m].rc), 0, 255), t3 = L(Math.round(c2[m].gc), 0, 255), r3 = L(Math.round(c2[m].bc), 0, 255), o4 = 255;
          u2 && (o4 = L(Math.round(c2[m].ac), 0, 255), a3 && (k2 = "number" == typeof a3 ? a3 : 127, o4 = o4 <= k2 ? 0 : 255), n2 && o4 <= i2 && (e4 = t3 = r3 = s3, o4 = 0));
          var k2 = u2 ? [e4, t3, r3, o4] : [e4, t3, r3];
          if (function(t4, r4) {
            for (let e5 = 0; e5 < t4.length; e5++) {
              var o5 = t4[e5], n3 = o5[0] === r4[0] && o5[1] === r4[1] && o5[2] === r4[2], o5 = !(4 <= o5.length && 4 <= r4.length) || o5[3] === r4[3];
              if (n3 && o5) return true;
            }
            return false;
          }(M2, k2) || M2.push(k2), 0 == (m = c2[m].fw)) break;
        }
        return M2;
      }, snapColorsToPalette: () => function(r2, o3, e3 = 5) {
        if (r2.length && o3.length) {
          var n2 = r2.map((e4) => e4.slice(0, 3)), s3 = e3 * e3, i2 = r2[0].length;
          for (let t2 = 0; t2 < o3.length; t2++) {
            let e4 = o3[t2];
            e4 = e4.length < i2 ? [e4[0], e4[1], e4[2], 255] : e4.length > i2 ? e4.slice(0, 3) : e4.slice();
            var a3 = d(n2, e4.slice(0, 3), u), l2 = a3[0], a3 = a3[1];
            0 < a3 && a3 <= s3 && (r2[l2] = e4);
          }
        }
      } };
      for (o in i) n(s2, o, { get: i[o], enumerable: true });
      var a2 = { trailer: 59 };
      function M(e3 = 256) {
        let n2 = 0, s3 = new Uint8Array(e3);
        return { get buffer() {
          return s3.buffer;
        }, reset() {
          n2 = 0;
        }, bytesView() {
          return s3.subarray(0, n2);
        }, bytes() {
          return s3.slice(0, n2);
        }, writeByte(e4) {
          i2(n2 + 1), s3[n2] = e4, n2++;
        }, writeBytes(t2, r2 = 0, o3 = t2.length) {
          i2(n2 + o3);
          for (let e4 = 0; e4 < o3; e4++) s3[n2++] = t2[e4 + r2];
        }, writeBytesView(e4, t2 = 0, r2 = e4.byteLength) {
          i2(n2 + r2), s3.set(e4.subarray(t2, t2 + r2), n2), n2 += r2;
        } };
        function i2(e4) {
          var t2 = s3.length;
          if (!(e4 <= t2)) {
            e4 = Math.max(e4, t2 * (t2 < 1048576 ? 2 : 1.125) >>> 0), 0 != t2 && (e4 = Math.max(e4, 256));
            const r2 = s3;
            s3 = new Uint8Array(e4), 0 < n2 && s3.set(r2.subarray(0, n2), 0);
          }
        }
      }
      var k = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535];
      var S = function(e3, t2, r2, o3, n2 = M(512), s3 = new Uint8Array(256), i2 = new Int32Array(5003), a3 = new Int32Array(5003)) {
        var l2 = i2.length, o3 = Math.max(2, o3);
        s3.fill(0), a3.fill(0), i2.fill(-1);
        let u2 = 0, c2 = 0;
        var d2 = o3 + 1;
        const h2 = d2;
        let f2 = false, p = h2, m = (1 << p) - 1;
        var y = 1 << d2 - 1;
        const g = 1 + y;
        let v2 = 2 + y, b = 0, _ = r2[0], j = 0;
        for (let e4 = l2; e4 < 65536; e4 *= 2) ++j;
        j = 8 - j, n2.writeByte(o3), E2(y);
        var x2 = r2.length;
        for (let t3 = 1; t3 < x2; t3++) e: {
          var w = r2[t3], S2 = (w << 12) + _;
          let e4 = w << j ^ _;
          if (i2[e4] === S2) _ = a3[e4];
          else {
            for (var T2 = 0 === e4 ? 1 : l2 - e4; 0 <= i2[e4]; ) if ((e4 -= T2) < 0 && (e4 += l2), i2[e4] === S2) {
              _ = a3[e4];
              break e;
            }
            E2(_), _ = w, v2 < 4096 ? (a3[e4] = v2++, i2[e4] = S2) : (i2.fill(-1), v2 = 2 + y, f2 = true, E2(y));
          }
        }
        return E2(_), E2(g), n2.writeByte(0), n2.bytesView();
        function E2(e4) {
          for (u2 &= k[c2], 0 < c2 ? u2 |= e4 << c2 : u2 = e4, c2 += p; 8 <= c2; ) s3[b++] = 255 & u2, 254 <= b && (n2.writeByte(b), n2.writeBytesView(s3, 0, b), b = 0), u2 >>= 8, c2 -= 8;
          if ((v2 > m || f2) && (f2 ? (p = h2, m = (1 << p) - 1, f2 = false) : (++p, m = 12 === p ? 1 << p : (1 << p) - 1)), e4 == g) {
            for (; 0 < c2; ) s3[b++] = 255 & u2, 254 <= b && (n2.writeByte(b), n2.writeBytesView(s3, 0, b), b = 0), u2 >>= 8, c2 -= 8;
            0 < b && (n2.writeByte(b), n2.writeBytesView(s3, 0, b), b = 0);
          }
        }
      };
      function C(e3, t2, r2) {
        return e3 << 8 & 63488 | t2 << 2 & 992 | r2 >> 3;
      }
      function A(e3, t2, r2, o3) {
        return e3 >> 4 | 240 & t2 | (240 & r2) << 4 | (240 & o3) << 8;
      }
      function P(e3, t2, r2) {
        return e3 >> 4 << 8 | 240 & t2 | r2 >> 4;
      }
      function L(e3, t2, r2) {
        return e3 < t2 ? t2 : r2 < e3 ? r2 : e3;
      }
      function R(e3) {
        return e3 * e3;
      }
      function I(e3, t2, r2) {
        var o3 = 0, n2 = 1e100;
        const s3 = e3[t2];
        for (var i2 = s3.cnt, a3 = s3.ac, l2 = s3.rc, u2 = s3.gc, c2 = s3.bc, d2 = s3.fw; 0 != d2; d2 = e3[d2].fw) {
          var h2, f2 = e3[d2], p = f2.cnt, p = i2 * p / (i2 + p);
          n2 <= p || (h2 = 0, n2 <= (h2 += p * R(f2.rc - l2)) || n2 <= (h2 += p * R(f2.gc - u2)) || n2 <= (h2 += p * R(f2.bc - c2)) || (n2 = h2, o3 = d2));
        }
        s3.err = n2, s3.nn = o3;
      }
      function D() {
        return { ac: 0, rc: 0, gc: 0, bc: 0, cnt: 0, nn: 0, fw: 0, bk: 0, tm: 0, mtm: 0, err: 0 };
      }
      function u(e3, t2) {
        for (var r2 = 0, o3 = 0; o3 < e3.length; o3++) {
          var n2 = e3[o3] - t2[o3];
          r2 += n2 * n2;
        }
        return r2;
      }
      function c(e3, t2) {
        return 1 < t2 ? Math.round(e3 / t2) * t2 : e3;
      }
      function v(e3) {
        return e3 * e3;
      }
      function l(t2, r2, o3 = u) {
        let n2 = 1 / 0, s3 = -1;
        for (let e3 = 0; e3 < t2.length; e3++) {
          var i2 = o3(r2, t2[e3]);
          i2 < n2 && (n2 = i2, s3 = e3);
        }
        return s3;
      }
      function d(t2, r2, o3 = u) {
        let n2 = 1 / 0, s3 = -1;
        for (let e3 = 0; e3 < t2.length; e3++) {
          var i2 = o3(r2, t2[e3]);
          i2 < n2 && (n2 = i2, s3 = e3);
        }
        return [s3, n2];
      }
      function h(e3 = {}) {
        const { initialCapacity: t2 = 4096, auto: g = true } = e3, v2 = M(t2);
        const b = new Uint8Array(256), _ = new Int32Array(5003), j = new Int32Array(5003);
        let x2 = false;
        return { reset() {
          v2.reset(), x2 = false;
        }, finish() {
          v2.writeByte(a2.trailer);
        }, bytes() {
          return v2.bytes();
        }, bytesView() {
          return v2.bytesView();
        }, get buffer() {
          return v2.buffer;
        }, get stream() {
          return v2;
        }, writeHeader: w, writeFrame(e4, t3, r2, o3 = {}) {
          var { transparent: n2 = false, transparentIndex: s3 = 0, delay: i2 = 0, palette: a3 = null, repeat: l2 = 0, colorDepth: u2 = 8, dispose: c2 = -1 } = o3;
          let d2 = false;
          if (g ? x2 || (d2 = true, w(), x2 = true) : d2 = Boolean(o3.first), t3 = Math.max(0, Math.floor(t3)), r2 = Math.max(0, Math.floor(r2)), d2) {
            if (!a3) throw new Error("First frame must include a { palette } option");
            var [o3, h2, f2, p, m = 8] = [v2, t3, r2, a3, u2];
            p = F(p.length) - 1, m = 128 | m - 1 << 4 | p, E(o3, h2), E(o3, f2), o3.writeBytes([m, 0, 0]), T(v2, a3), 0 <= l2 && (p = v2, h2 = l2, p.writeByte(33), p.writeByte(255), p.writeByte(11), O(p, "NETSCAPE2.0"), p.writeByte(3), p.writeByte(1), E(p, h2), p.writeByte(0));
          }
          var y, f2 = Math.round(i2 / 10), o3 = v2, m = c2, l2 = f2, h2 = n2, p = s3, i2 = (o3.writeByte(33), o3.writeByte(249), o3.writeByte(4), p < 0 && (p = 0, h2 = false), h2 = h2 ? (y = 1, 2) : y = 0, 0 <= m && (h2 = 7 & m), h2 <<= 2, o3.writeByte(0 | h2 | y), E(o3, l2), o3.writeByte(p || 0), o3.writeByte(0), Boolean(a3) && !d2);
          c2 = v2, n2 = t3, s3 = r2, y = i2 ? a3 : null, c2.writeByte(44), E(c2, 0), E(c2, 0), E(c2, n2), E(c2, s3), y ? (n2 = F(y.length) - 1, c2.writeByte(128 | n2)) : c2.writeByte(0), i2 && T(v2, a3), [l2, o3, s3, n2, c2 = 8, i2, a3, e4] = [v2, e4, t3, r2, u2, b, _, j], S(s3, n2, o3, c2, l2, i2, a3, e4);
        } };
        function w() {
          O(v2, "GIF89a");
        }
      }
      function T(r2, o3) {
        var e3 = 1 << F(o3.length);
        for (let t2 = 0; t2 < e3; t2++) {
          let e4 = [0, 0, 0];
          t2 < o3.length && (e4 = o3[t2]), r2.writeByte(e4[0]), r2.writeByte(e4[1]), r2.writeByte(e4[2]);
        }
      }
      function E(e3, t2) {
        e3.writeByte(255 & t2), e3.writeByte(t2 >> 8 & 255);
      }
      function O(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) e3.writeByte(t2.charCodeAt(r2));
      }
      function F(e3) {
        return Math.max(Math.ceil(Math.log2(e3)), 1);
      }
      var f = h;
    }, {}], 254: [function(e2, t, r) {
      r.read = function(e3, t2, r2, o, n) {
        var s2, i, a2 = 8 * n - o - 1, l = (1 << a2) - 1, u = l >> 1, c = -7, d = r2 ? n - 1 : 0, h = r2 ? -1 : 1, n = e3[t2 + d];
        for (d += h, s2 = n & (1 << -c) - 1, n >>= -c, c += a2; 0 < c; s2 = 256 * s2 + e3[t2 + d], d += h, c -= 8) ;
        for (i = s2 & (1 << -c) - 1, s2 >>= -c, c += o; 0 < c; i = 256 * i + e3[t2 + d], d += h, c -= 8) ;
        if (0 === s2) s2 = 1 - u;
        else {
          if (s2 === l) return i ? NaN : 1 / 0 * (n ? -1 : 1);
          i += Math.pow(2, o), s2 -= u;
        }
        return (n ? -1 : 1) * i * Math.pow(2, s2 - o);
      }, r.write = function(e3, t2, r2, o, n, s2) {
        var i, a2, l = 8 * s2 - n - 1, u = (1 << l) - 1, c = u >> 1, d = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, h = o ? 0 : s2 - 1, f = o ? 1 : -1, s2 = t2 < 0 || 0 === t2 && 1 / t2 < 0 ? 1 : 0;
        for (t2 = Math.abs(t2), isNaN(t2) || t2 === 1 / 0 ? (a2 = isNaN(t2) ? 1 : 0, i = u) : (i = Math.floor(Math.log(t2) / Math.LN2), t2 * (o = Math.pow(2, -i)) < 1 && (i--, o *= 2), 2 <= (t2 += 1 <= i + c ? d / o : d * Math.pow(2, 1 - c)) * o && (i++, o /= 2), u <= i + c ? (a2 = 0, i = u) : 1 <= i + c ? (a2 = (t2 * o - 1) * Math.pow(2, n), i += c) : (a2 = t2 * Math.pow(2, c - 1) * Math.pow(2, n), i = 0)); 8 <= n; e3[r2 + h] = 255 & a2, h += f, a2 /= 256, n -= 8) ;
        for (i = i << n | a2, l += n; 0 < l; e3[r2 + h] = 255 & i, h += f, i /= 256, l -= 8) ;
        e3[r2 + h - f] |= 128 * s2;
      };
    }, {}], 255: [function(o, e2, c) {
      var t;
      function y(e3, t2) {
        return e3.b === t2.b && e3.a === t2.a;
      }
      function g(e3, t2) {
        return e3.b < t2.b || e3.b === t2.b && e3.a <= t2.a;
      }
      function v(e3, t2, r2) {
        var o3 = t2.b - e3.b, n2 = r2.b - t2.b;
        return 0 < o3 + n2 ? o3 < n2 ? t2.a - e3.a + o3 / (o3 + n2) * (e3.a - r2.a) : t2.a - r2.a + n2 / (o3 + n2) * (r2.a - e3.a) : 0;
      }
      function b(e3, t2, r2) {
        var o3 = t2.b - e3.b, n2 = r2.b - t2.b;
        return 0 < o3 + n2 ? (t2.a - r2.a) * o3 + (t2.a - e3.a) * n2 : 0;
      }
      function _(e3, t2) {
        return e3.a < t2.a || e3.a === t2.a && e3.b <= t2.b;
      }
      function V(e3, t2, r2) {
        var o3 = t2.a - e3.a, n2 = r2.a - t2.a;
        return 0 < o3 + n2 ? o3 < n2 ? t2.b - e3.b + o3 / (o3 + n2) * (e3.b - r2.b) : t2.b - r2.b + n2 / (o3 + n2) * (r2.b - e3.b) : 0;
      }
      function z(e3, t2, r2) {
        var o3 = t2.a - e3.a, n2 = r2.a - t2.a;
        return 0 < o3 + n2 ? (t2.b - r2.b) * o3 + (t2.b - e3.b) * n2 : 0;
      }
      function j(e3, t2, r2, o3) {
        return (e3 = e3 < 0 ? 0 : e3) <= (r2 = r2 < 0 ? 0 : r2) ? 0 === r2 ? (t2 + o3) / 2 : t2 + e3 / (e3 + r2) * (o3 - t2) : o3 + r2 / (e3 + r2) * (t2 - o3);
      }
      function d(e3) {
        var t2 = s2(e3.b);
        return n(t2, e3.c), n(t2.b, e3.c), i(t2, e3.a), t2;
      }
      function x2(e3, t2) {
        var r2 = false, o3 = false;
        e3 !== t2 && (t2.a !== e3.a && (o3 = true, E(t2.a, e3.a)), t2.d !== e3.d && (r2 = true, a2(t2.d, e3.d)), T(t2, e3), o3 || (n(t2, e3.a), e3.a.c = e3), r2 || (i(t2, e3.d), e3.d.a = e3));
      }
      function m(e3) {
        var t2 = e3.b, r2 = false;
        e3.d !== e3.b.d && (r2 = true, a2(e3.d, e3.b.d)), e3.c === e3 ? E(e3.a, null) : (e3.b.d.a = e3.b.e, e3.a.c = e3.c, T(e3, e3.b.e), r2 || i(e3, e3.d)), t2.c === t2 ? (E(t2.a, null), a2(t2.d, null)) : (e3.d.a = t2.b.e, t2.a.c = t2.c, T(t2, t2.b.e)), H(e3);
      }
      function w(e3) {
        var t2 = s2(e3), r2 = t2.b;
        return T(t2, e3.e), t2.a = e3.b.a, n(r2, t2.a), t2.d = r2.d = e3.d, t2 = t2.b, T(e3.b, e3.b.b.e), T(e3.b, t2), e3.b.a = t2.a, t2.b.a.c = t2.b, t2.b.d = e3.b.d, t2.f = e3.f, t2.b.f = e3.b.f, t2;
      }
      function S(e3, t2) {
        var r2 = false, o3 = s2(e3), n2 = o3.b;
        return t2.d !== e3.d && (r2 = true, a2(t2.d, e3.d)), T(o3, e3.e), T(n2, t2), o3.a = e3.b.a, n2.a = t2.a, o3.d = n2.d = e3.d, e3.d.a = n2, r2 || i(o3, e3.d), o3;
      }
      function s2(e3) {
        var t2 = new u(), r2 = new u(), o3 = e3.b.h;
        return (((r2.h = o3).b.h = t2).h = e3).b.h = r2, t2.b = r2, ((t2.c = t2).e = r2).b = t2, (r2.c = r2).e = t2;
      }
      function T(e3, t2) {
        var r2 = e3.c, o3 = t2.c;
        r2.b.e = t2, (o3.b.e = e3).c = o3, t2.c = r2;
      }
      function n(e3, t2) {
        var r2 = t2.f, o3 = new D(t2, r2);
        for (r2.e = o3, r2 = (t2.f = o3).c = e3; r2.a = o3, (r2 = r2.c) !== e3; ) ;
      }
      function i(e3, t2) {
        var r2 = t2.d, o3 = new te(t2, r2);
        for (r2.b = o3, (t2.d = o3).a = e3, o3.c = t2.c, r2 = e3; r2.d = o3, (r2 = r2.e) !== e3; ) ;
      }
      function H(e3) {
        var t2 = e3.h;
        e3 = e3.b.h, (t2.b.h = e3).b.h = t2;
      }
      function E(e3, t2) {
        for (var r2 = e3.c, o3 = r2; o3.a = t2, (o3 = o3.c) !== r2; ) ;
        r2 = e3.f, ((o3 = e3.e).f = r2).e = o3;
      }
      function a2(e3, t2) {
        for (var r2 = e3.a, o3 = r2; o3.d = t2, (o3 = o3.e) !== r2; ) ;
        r2 = e3.d, ((o3 = e3.b).d = r2).b = o3;
      }
      function W(e3) {
        var t2 = 0;
        return Math.abs(e3[1]) > Math.abs(e3[0]) && (t2 = 1), t2 = Math.abs(e3[2]) > Math.abs(e3[t2]) ? 2 : t2;
      }
      function M(e3, t2) {
        e3.f += t2.f, e3.b.f += t2.b.f;
      }
      function h(e3, t2, r2) {
        return e3 = e3.a, t2 = t2.a, r2 = r2.a, t2.b.a === e3 ? r2.b.a === e3 ? g(t2.a, r2.a) ? b(r2.b.a, t2.a, r2.a) <= 0 : 0 <= b(t2.b.a, r2.a, t2.a) : b(r2.b.a, e3, r2.a) <= 0 : r2.b.a === e3 ? 0 <= b(t2.b.a, e3, t2.a) : (t2 = v(t2.b.a, e3, t2.a), (e3 = v(r2.b.a, e3, r2.a)) <= t2);
      }
      function k(e3) {
        e3.a.i = null;
        var t2 = e3.e;
        t2.a.c = t2.c, t2.c.a = t2.a, e3.e = null;
      }
      function O(e3, t2) {
        m(e3.a), e3.c = false, (e3.a = t2).i = e3;
      }
      function C(e3) {
        for (var t2 = e3.a.a; (e3 = G(e3)).a.a === t2; ) ;
        return e3.c && (O(e3, t2 = S(B(e3).a.b, e3.a.e)), e3 = G(e3)), e3;
      }
      function q(e3, t2, r2) {
        var o3 = new N();
        return o3.a = r2, o3.e = p(e3.f, t2.e, o3), r2.i = o3;
      }
      function X(e3, t2) {
        switch (e3.s) {
          case 100130:
            return 0 != (1 & t2);
          case 100131:
            return 0 !== t2;
          case 100132:
            return 0 < t2;
          case 100133:
            return t2 < 0;
          case 100134:
            return 2 <= t2 || t2 <= -2;
        }
        return false;
      }
      function f(e3) {
        var t2 = e3.a, r2 = t2.d;
        r2.c = e3.d, r2.a = t2, k(e3);
      }
      function A(e3, t2, r2) {
        for (t2 = (e3 = t2).a; e3 !== r2; ) {
          e3.c = false;
          var o3 = B(e3), n2 = o3.a;
          if (n2.a !== t2.a) {
            if (!o3.c) {
              f(e3);
              break;
            }
            O(o3, n2 = S(t2.c.b, n2.b));
          }
          t2.c !== n2 && (x2(n2.b.e, n2), x2(t2, n2)), f(e3), t2 = o3.a, e3 = o3;
        }
        return t2;
      }
      function P(e3, t2, r2, o3, n2, s3) {
        for (var i2 = true; q(e3, t2, r2.b), (r2 = r2.c) !== o3; ) ;
        for (null === n2 && (n2 = B(t2).a.b.c); (r2 = (o3 = B(t2)).a.b).a === n2.a; ) r2.c !== n2 && (x2(r2.b.e, r2), x2(n2.b.e, r2)), o3.f = t2.f - r2.f, o3.d = X(e3, o3.f), t2.b = true, !i2 && R(e3, t2) && (M(r2, n2), k(t2), m(n2)), i2 = false, t2 = o3, n2 = r2;
        t2.b = true, s3 && Q(e3, t2);
      }
      function Y(e3, t2, r2, o3, n2) {
        var s3 = [t2.g[0], t2.g[1], t2.g[2]];
        t2.d = null, t2.d = e3.o && e3.o(s3, r2, o3, e3.c) || null, null === t2.d && (n2 ? e3.n || (l(e3, 100156), e3.n = true) : t2.d = r2[0]);
      }
      function L(e3, t2, r2) {
        var o3 = [null, null, null, null];
        o3[0] = t2.a.d, o3[1] = r2.a.d, Y(e3, t2.a, o3, [0.5, 0.5, 0, 0], false), x2(t2, r2);
      }
      function Z(e3, t2, r2, o3, n2) {
        var s3 = Math.abs(t2.b - e3.b) + Math.abs(t2.a - e3.a), i2 = Math.abs(r2.b - e3.b) + Math.abs(r2.a - e3.a), a3 = n2 + 1;
        o3[n2] = 0.5 * i2 / (s3 + i2), o3[a3] = 0.5 * s3 / (s3 + i2), e3.g[0] += o3[n2] * t2.g[0] + o3[a3] * r2.g[0], e3.g[1] += o3[n2] * t2.g[1] + o3[a3] * r2.g[1], e3.g[2] += o3[n2] * t2.g[2] + o3[a3] * r2.g[2];
      }
      function R(e3, t2) {
        var r2 = B(t2), o3 = t2.a, n2 = r2.a;
        if (g(o3.a, n2.a)) {
          if (0 < b(n2.b.a, o3.a, n2.a)) return;
          if (y(o3.a, n2.a)) {
            if (o3.a !== n2.a) {
              var r2 = e3.e, s3 = o3.a.h;
              if (0 <= s3) {
                var i2 = (r2 = r2.b).d, a3 = r2.e, l2 = r2.c, u2 = l2[s3];
                i2[u2] = i2[r2.a], (l2[i2[u2]] = u2) <= --r2.a && (u2 <= 1 || g(a3[i2[u2 >> 1]], a3[i2[u2]]) ? U : ue)(r2, u2), a3[s3] = null, l2[s3] = r2.b, r2.b = s3;
              } else for (r2.c[-(s3 + 1)] = null; 0 < r2.a && null === r2.c[r2.d[r2.a - 1]]; ) --r2.a;
              L(e3, n2.b.e, o3);
            }
          } else w(n2.b), x2(o3, n2.b.e), t2.b = r2.b = true;
        } else {
          if (b(o3.b.a, n2.a, o3.a) < 0) return;
          G(t2).b = t2.b = true, w(o3.b), x2(n2.b.e, o3);
        }
        return 1;
      }
      function K(e3, t2) {
        var r2 = B(t2), o3 = t2.a, n2 = r2.a, s3 = o3.a, i2 = n2.a, a3 = o3.b.a, l2 = n2.b.a, u2 = new D();
        if (b(a3, e3.a, s3), b(l2, e3.a, i2), !(s3 === i2 || Math.min(s3.a, a3.a) > Math.max(i2.a, l2.a))) {
          if (g(s3, i2)) {
            if (0 < b(l2, s3, i2)) return;
          } else if (b(a3, i2, s3) < 0) return;
          var c2, d2, h2 = a3, f2 = s3, p2 = l2, m2 = i2;
          if (g(h2, f2) || (c2 = h2, h2 = f2, f2 = c2), g(p2, m2) || (c2 = p2, p2 = m2, m2 = c2), g(h2, p2) || (c2 = h2, h2 = p2, p2 = c2, c2 = f2, f2 = m2, m2 = c2), g(p2, f2) ? g(f2, m2) ? ((c2 = v(h2, p2, f2)) + (d2 = v(p2, f2, m2)) < 0 && (c2 = -c2, d2 = -d2), u2.b = j(c2, p2.b, d2, f2.b)) : ((c2 = b(h2, p2, f2)) + (d2 = -b(h2, m2, f2)) < 0 && (c2 = -c2, d2 = -d2), u2.b = j(c2, p2.b, d2, m2.b)) : u2.b = (p2.b + f2.b) / 2, _(h2, f2) || (c2 = h2, h2 = f2, f2 = c2), _(p2, m2) || (c2 = p2, p2 = m2, m2 = c2), _(h2, p2) || (c2 = h2, h2 = p2, p2 = c2, c2 = f2, f2 = m2, m2 = c2), _(p2, f2) ? _(f2, m2) ? ((c2 = V(h2, p2, f2)) + (d2 = V(p2, f2, m2)) < 0 && (c2 = -c2, d2 = -d2), u2.a = j(c2, p2.a, d2, f2.a)) : ((c2 = z(h2, p2, f2)) + (d2 = -z(h2, m2, f2)) < 0 && (c2 = -c2, d2 = -d2), u2.a = j(c2, p2.a, d2, m2.a)) : u2.a = (p2.a + f2.a) / 2, g(u2, e3.a) && (u2.b = e3.a.b, u2.a = e3.a.a), h2 = g(s3, i2) ? s3 : i2, g(h2, u2) && (u2.b = h2.b, u2.a = h2.a), y(u2, s3) || y(u2, i2)) return R(e3, t2), 0;
          if (!y(a3, e3.a) && 0 <= b(a3, e3.a, u2) || !y(l2, e3.a) && b(l2, e3.a, u2) <= 0) {
            if (l2 === e3.a) w(o3.b), x2(n2.b, o3), o3 = B(t2 = C(t2)).a, A(e3, B(t2), r2), P(e3, t2, o3.b.e, o3, o3, true);
            else {
              if (a3 !== e3.a) return 0 <= b(a3, e3.a, u2) && (G(t2).b = t2.b = true, w(o3.b), o3.a.b = e3.a.b, o3.a.a = e3.a.a), void (b(l2, e3.a, u2) <= 0 && (t2.b = r2.b = true, w(n2.b), n2.a.b = e3.a.b, n2.a.a = e3.a.a));
              for (w(n2.b), x2(o3.e, n2.b.e), i2 = (s3 = r2 = t2).a.b.a; (s3 = G(s3)).a.b.a === i2; ) ;
              s3 = B(t2 = s3).a.b.c, r2.a = n2.b.e, P(e3, t2, (n2 = A(e3, r2, null)).c, o3.b.c, s3, true);
            }
            return 1;
          }
          w(o3.b), w(n2.b), x2(n2.b.e, o3), o3.a.b = u2.b, o3.a.a = u2.a, o3.a.h = ne(e3.e, o3.a), o3 = o3.a, n2 = [0, 0, 0, 0], u2 = [s3.d, a3.d, i2.d, l2.d], o3.g[0] = o3.g[1] = o3.g[2] = 0, Z(o3, s3, a3, n2, 0), Z(o3, i2, l2, n2, 2), Y(e3, o3, u2, n2, true), G(t2).b = t2.b = r2.b = true;
        }
      }
      function Q(e3, t2) {
        for (var r2 = B(t2); ; ) {
          for (; r2.b; ) r2 = B(t2 = r2);
          if (!t2.b && (null === (t2 = G(r2 = t2)) || !t2.b)) break;
          t2.b = false;
          var o3 = t2.a, n2 = r2.a;
          if (s3 = o3.b.a !== n2.b.a) e: {
            var s3, i2 = B(s3 = t2), a3 = s3.a, l2 = i2.a, u2 = void 0;
            if (g(a3.b.a, l2.b.a)) {
              if (b(a3.b.a, l2.b.a, a3.a) < 0) {
                s3 = false;
                break e;
              }
              G(s3).b = s3.b = true, u2 = w(a3), x2(l2.b, u2), u2.d.c = s3.d;
            } else {
              if (0 < b(l2.b.a, a3.b.a, l2.a)) {
                s3 = false;
                break e;
              }
              s3.b = i2.b = true, u2 = w(l2), x2(a3.e, l2.b), u2.b.d.c = s3.d;
            }
            s3 = true;
          }
          if (s3 && (r2.c ? (k(r2), m(n2), n2 = (r2 = B(t2)).a) : t2.c && (k(t2), m(o3), o3 = (t2 = G(r2)).a)), o3.a !== n2.a) {
            if (o3.b.a === n2.b.a || t2.c || r2.c || o3.b.a !== e3.a && n2.b.a !== e3.a) R(e3, t2);
            else if (K(e3, t2)) break;
          }
          o3.a === n2.a && o3.b.a === n2.b.a && (M(n2, o3), k(t2), m(o3), t2 = G(r2));
        }
      }
      function J(e3, t2) {
        var r2 = new N(), o3 = d(e3.b);
        o3.a.b = 4e150, o3.a.a = t2, o3.b.a.b = -4e150, o3.b.a.a = t2, e3.a = o3.b.a, r2.a = o3, r2.f = 0, r2.d = false, r2.c = false, r2.h = true, r2.b = false, o3 = p(o3 = e3.f, o3.a, r2), r2.e = o3;
      }
      function $(e3) {
        this.a = new ee(), this.b = e3, this.c = h;
      }
      function p(e3, t2, r2) {
        for (; null !== (t2 = t2.c).b && !e3.c(e3.b, t2.b, r2); ) ;
        return e3 = new ee(r2, t2.a, t2), t2.a.c = e3, t2.a = e3;
      }
      function ee(e3, t2, r2) {
        this.b = e3 || null, this.a = t2 || this, this.c = r2 || this;
      }
      function r() {
        this.d = 0, this.p = this.b = this.q = null, this.j = [0, 0, 0], this.s = 100130, this.n = false, this.o = this.a = this.e = this.f = null, this.m = false, this.c = this.r = this.i = this.k = this.l = this.h = null;
      }
      function I(e3, t2) {
        if (e3.d !== t2) for (; e3.d !== t2; ) if (e3.d < t2) switch (e3.d) {
          case 0:
            l(e3, 100151), e3.u(null);
            break;
          case 1:
            l(e3, 100152), e3.t();
        }
        else switch (e3.d) {
          case 2:
            l(e3, 100154), e3.v();
            break;
          case 1:
            l(e3, 100153), e3.w();
        }
      }
      function l(e3, t2) {
        e3.p && e3.p(t2, e3.c);
      }
      function te(e3, t2) {
        this.b = e3 || this, this.d = t2 || this, this.a = null, this.c = false;
      }
      function u() {
        (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
      }
      function re() {
        this.c = new D(), this.a = new te(), this.b = new u(), this.d = new u(), this.b.b = this.d, this.d.b = this.b;
      }
      function D(e3, t2) {
        this.e = e3 || this, this.f = t2 || this, this.d = this.c = null, this.g = [0, 0, 0], this.h = this.a = this.b = 0;
      }
      function oe() {
        this.c = [], this.d = null, this.a = 0, this.e = false, this.b = new ie();
      }
      function ne(e3, t2) {
        var r2, o3, n2;
        return e3.e ? (2 * (o3 = ++(r2 = e3.b).a) > r2.f && (r2.f *= 2, r2.c = ae(r2.c, r2.f + 1)), 0 === r2.b ? n2 = o3 : (n2 = r2.b, r2.b = r2.c[r2.b]), r2.e[n2] = t2, r2.c[n2] = o3, r2.d[o3] = n2, r2.h && ue(r2, o3), n2) : (r2 = e3.a++, e3.c[r2] = t2, -(r2 + 1));
      }
      function se(e3) {
        if (0 === e3.a) return le(e3.b);
        var t2 = e3.c[e3.d[e3.a - 1]];
        if (0 !== e3.b.a && g(F(e3.b), t2)) return le(e3.b);
        for (; --e3.a, 0 < e3.a && null === e3.c[e3.d[e3.a - 1]]; ) ;
        return t2;
      }
      function ie() {
        this.d = ae([0], 33), this.e = [null, null], this.c = [0, 0], this.a = 0, this.f = 32, this.b = 0, this.h = false, this.d[1] = 1;
      }
      function ae(e3, t2) {
        for (var r2 = Array(t2), o3 = 0; o3 < e3.length; o3++) r2[o3] = e3[o3];
        for (; o3 < t2; o3++) r2[o3] = 0;
        return r2;
      }
      function F(e3) {
        return e3.e[e3.d[1]];
      }
      function le(e3) {
        var t2 = e3.d, r2 = e3.e, o3 = e3.c, n2 = t2[1], s3 = r2[n2];
        return 0 < e3.a && (t2[1] = t2[e3.a], o3[t2[1]] = 1, r2[n2] = null, o3[n2] = e3.b, e3.b = n2, 0 < --e3.a && U(e3, 1)), s3;
      }
      function U(e3, t2) {
        for (var r2 = e3.d, o3 = e3.e, n2 = e3.c, s3 = t2, i2 = r2[s3]; ; ) {
          var a3 = s3 << 1, l2 = (a3 < e3.a && g(o3[r2[a3 + 1]], o3[r2[a3]]) && (a3 += 1), r2[a3]);
          if (a3 > e3.a || g(o3[i2], o3[l2])) {
            n2[r2[s3] = i2] = s3;
            break;
          }
          n2[r2[s3] = l2] = s3, s3 = a3;
        }
      }
      function ue(e3, t2) {
        for (var r2 = e3.d, o3 = e3.e, n2 = e3.c, s3 = t2, i2 = r2[s3]; ; ) {
          var a3 = s3 >> 1, l2 = r2[a3];
          if (0 == a3 || g(o3[l2], o3[i2])) {
            n2[r2[s3] = i2] = s3;
            break;
          }
          n2[r2[s3] = l2] = s3, s3 = a3;
        }
      }
      function N() {
        this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = false;
      }
      function B(e3) {
        return e3.e.c.b;
      }
      function G(e3) {
        return e3.e.a.b;
      }
      (t = r.prototype).x = function() {
        I(this, 0);
      }, t.B = function(e3, t2) {
        switch (e3) {
          case 100142:
            return;
          case 100140:
            switch (t2) {
              case 100130:
              case 100131:
              case 100132:
              case 100133:
              case 100134:
                return void (this.s = t2);
            }
            break;
          case 100141:
            return void (this.m = !!t2);
          default:
            return void l(this, 100900);
        }
        l(this, 100901);
      }, t.y = function(e3) {
        switch (e3) {
          case 100142:
            return 0;
          case 100140:
            return this.s;
          case 100141:
            return this.m;
          default:
            l(this, 100900);
        }
        return false;
      }, t.A = function(e3, t2, r2) {
        this.j[0] = e3, this.j[1] = t2, this.j[2] = r2;
      }, t.z = function(e3, t2) {
        var r2 = t2 || null;
        switch (e3) {
          case 100100:
          case 100106:
            this.h = r2;
            break;
          case 100104:
          case 100110:
            this.l = r2;
            break;
          case 100101:
          case 100107:
            this.k = r2;
            break;
          case 100102:
          case 100108:
            this.i = r2;
            break;
          case 100103:
          case 100109:
            this.p = r2;
            break;
          case 100105:
          case 100111:
            this.o = r2;
            break;
          case 100112:
            this.r = r2;
            break;
          default:
            l(this, 100900);
        }
      }, t.C = function(e3, t2) {
        var r2 = false, o3 = [0, 0, 0];
        I(this, 2);
        for (var n2 = 0; n2 < 3; ++n2) {
          var s3 = e3[n2];
          s3 < -1e150 && (s3 = -1e150, r2 = true), 1e150 < s3 && (s3 = 1e150, r2 = true), o3[n2] = s3;
        }
        r2 && l(this, 100155), null === (r2 = this.q) ? x2(r2 = d(this.b), r2.b) : (w(r2), r2 = r2.e), r2.a.d = t2, r2.a.g[0] = o3[0], r2.a.g[1] = o3[1], r2.a.g[2] = o3[2], r2.f = 1, r2.b.f = -1, this.q = r2;
      }, t.u = function(e3) {
        I(this, 0), this.d = 1, this.b = new re(), this.c = e3;
      }, t.t = function() {
        I(this, 1), this.d = 2, this.q = null;
      }, t.v = function() {
        I(this, 2), this.d = 1;
      }, t.w = function() {
        I(this, 1), this.d = 0;
        var e3, t2, r2 = this.j[0], o3 = this.j[1], n2 = this.j[2], s3 = false, i2 = [r2, o3, n2];
        if (0 === r2 && 0 === o3 && 0 === n2) {
          for (var o3 = [-2e150, -2e150, -2e150], a3 = [2e150, 2e150, 2e150], n2 = [], l2 = [], r2 = (s3 = this.b.c).e; r2 !== s3; r2 = r2.e) for (var u2 = 0; u2 < 3; ++u2) {
            var c2 = r2.g[u2];
            c2 < a3[u2] && (a3[u2] = c2, l2[u2] = r2), c2 > o3[u2] && (o3[u2] = c2, n2[u2] = r2);
          }
          if (o3[1] - a3[1] > o3[r2 = 0] - a3[0] && (r2 = 1), a3[r2 = o3[2] - a3[2] > o3[r2] - a3[r2] ? 2 : r2] >= o3[r2]) i2[0] = 0, i2[1] = 0, i2[2] = 1;
          else {
            for (a3 = l2[r2], n2 = n2[r2], l2 = [o3 = 0, 0, 0], a3 = [a3.g[0] - n2.g[0], a3.g[1] - n2.g[1], a3.g[2] - n2.g[2]], u2 = [0, 0, 0], r2 = s3.e; r2 !== s3; r2 = r2.e) u2[0] = r2.g[0] - n2.g[0], u2[1] = r2.g[1] - n2.g[1], u2[2] = r2.g[2] - n2.g[2], l2[0] = a3[1] * u2[2] - a3[2] * u2[1], l2[1] = a3[2] * u2[0] - a3[0] * u2[2], l2[2] = a3[0] * u2[1] - a3[1] * u2[0], o3 < (c2 = l2[0] * l2[0] + l2[1] * l2[1] + l2[2] * l2[2]) && (o3 = c2, i2[0] = l2[0], i2[1] = l2[1], i2[2] = l2[2]);
            o3 <= 0 && (i2[0] = i2[1] = i2[2] = 0, i2[W(a3)] = 1);
          }
          s3 = true;
        }
        for (l2 = W(i2), r2 = this.b.c, o3 = (l2 + 1) % 3, n2 = (l2 + 2) % 3, l2 = 0 < i2[l2] ? 1 : -1, i2 = r2.e; i2 !== r2; i2 = i2.e) i2.b = i2.g[o3], i2.a = l2 * i2.g[n2];
        if (s3) {
          for (i2 = 0, r2 = (s3 = this.b.a).b; r2 !== s3; r2 = r2.b) if (!((o3 = r2.a).f <= 0)) for (; i2 += (o3.a.b - o3.b.a.b) * (o3.a.a + o3.b.a.a), (o3 = o3.e) !== r2.a; ) ;
          if (i2 < 0) for (s3 = (i2 = this.b.c).e; s3 !== i2; s3 = s3.e) s3.a = -s3.a;
        }
        for (this.n = false, i2 = this.b.b, r2 = i2.h; r2 !== i2; r2 = s3) s3 = r2.h, o3 = r2.e, y(r2.a, r2.b.a) && r2.e.e !== r2 && (L(this, o3, r2), m(r2), o3 = (r2 = o3).e), o3.e === r2 && (o3 !== r2 && (o3 !== s3 && o3 !== s3.b || (s3 = s3.h), m(o3)), r2 !== s3 && r2 !== s3.b || (s3 = s3.h), m(r2));
        for (this.e = i2 = new oe(), s3 = this.b.c, r2 = s3.e; r2 !== s3; r2 = r2.e) r2.h = ne(i2, r2);
        var d2 = i2;
        d2.d = [];
        for (var h2 = 0; h2 < d2.a; h2++) d2.d[h2] = h2;
        d2.d.sort(/* @__PURE__ */ function(r3) {
          return function(e4, t3) {
            return g(r3[e4], r3[t3]) ? 1 : -1;
          };
        }(d2.c)), d2.e = true;
        for (var f2 = d2.b, p2 = f2.a; 1 <= p2; --p2) U(f2, p2);
        for (f2.h = true, this.f = new $(this), J(this, -4e150), J(this, 4e150); null !== (i2 = se(this.e)); ) {
          for (; ; ) {
            e: if (0 === (r2 = this.e).a) s3 = F(r2.b);
            else if (s3 = r2.c[r2.d[r2.a - 1]], 0 !== r2.b.a && g(r2 = F(r2.b), s3)) {
              s3 = r2;
              break e;
            }
            if (null === s3 || !y(s3, i2)) break;
            s3 = se(this.e), L(this, i2.c, s3.c);
          }
          !function e4(t3, r3) {
            for (var o4, n3 = (t3.a = r3).c; null === n3.i; ) if ((n3 = n3.c) === r3.c) {
              var n3 = t3, s4 = r3;
              (c3 = new N()).a = s4.c.b;
              for (var i3 = (a4 = n3.f).a; null !== (i3 = i3.a).b && !a4.c(a4.b, c3, i3.b); ) ;
              var a4, l3, u3 = B(a4 = i3.b), c3 = a4.a, i3 = u3.a;
              return void (0 === b(c3.b.a, s4, c3.a) ? y((c3 = a4.a).a, s4) || y(c3.b.a, s4) || (w(c3.b), a4.c && (m(c3.c), a4.c = false), x2(s4.c, c3), e4(n3, s4)) : (l3 = g(i3.b.a, c3.b.a) ? a4 : u3, u3 = void 0, a4.d || l3.c ? (u3 = l3 === a4 ? S(s4.c.b, c3.e) : S(i3.b.c.b, s4.c).b, l3.c ? O(l3, u3) : ((a4 = q(c3 = n3, a4, u3)).f = G(a4).f + a4.a.f, a4.d = X(c3, a4.f)), e4(n3, s4)) : P(n3, a4, s4.c, s4.c, null, true)));
            }
            a4 = (c3 = B(n3 = C(n3.i))).a, (c3 = A(t3, c3, null)).c === a4 ? (c3 = (a4 = c3).c, i3 = B(n3), u3 = n3.a, l3 = i3.a, o4 = false, u3.b.a !== l3.b.a && K(t3, n3), y(u3.a, t3.a) && (x2(c3.b.e, u3), c3 = B(n3 = C(n3)).a, A(t3, B(n3), i3), o4 = true), y(l3.a, t3.a) && (x2(a4, l3.b.e), a4 = A(t3, i3, null), o4 = true), o4 ? P(t3, n3, a4.c, c3, c3, true) : (s4 = g(l3.a, u3.a) ? l3.b.e : u3, P(t3, n3, s4 = S(a4.c.b, s4), s4.c, s4.c, false), s4.b.i.c = true, Q(t3, n3))) : P(t3, n3, c3.c, a4, a4, true);
          }(this, i2);
        }
        for (this.a = this.f.a.a.b.a.a, i2 = 0; null !== (s3 = this.f.a.a.b); ) s3.h || ++i2, k(s3);
        for (this.f = null, (i2 = this.e).b = null, i2.d = null, this.e = i2.c = null, i2 = this.b, r2 = i2.a.b; r2 !== i2.a; r2 = s3) s3 = r2.b, (r2 = r2.a).e.e === r2 && (M(r2.c, r2), m(r2));
        if (!this.n) {
          if (i2 = this.b, this.m) for (r2 = i2.b.h; r2 !== i2.b; r2 = s3) s3 = r2.h, r2.b.d.c !== r2.d.c ? r2.f = r2.d.c ? 1 : -1 : m(r2);
          else for (r2 = i2.a.b; r2 !== i2.a; r2 = s3) if (s3 = r2.b, r2.c) {
            for (r2 = r2.a; g(r2.b.a, r2.a); r2 = r2.c.b) ;
            for (; g(r2.a, r2.b.a); r2 = r2.e) ;
            for (o3 = r2.c.b, n2 = void 0; r2.e !== o3; ) if (g(r2.b.a, o3.a)) {
              for (; o3.e !== r2 && (g((t2 = o3.e).b.a, t2.a) || b(o3.a, o3.b.a, o3.e.b.a) <= 0); ) o3 = (n2 = S(o3.e, o3)).b;
              o3 = o3.c.b;
            } else {
              for (; o3.e !== r2 && (g((e3 = r2.c.b).a, e3.b.a) || 0 <= b(r2.b.a, r2.a, r2.c.b.a)); ) r2 = (n2 = S(r2, r2.c.b)).b;
              r2 = r2.e;
            }
            for (; o3.e.e !== r2; ) n2 = S(o3.e, o3), o3 = n2.b;
          }
          if (this.h || this.i || this.k || this.l) if (this.m) {
            for (s3 = (i2 = this.b).a.b; s3 !== i2.a; s3 = s3.b) if (s3.c) {
              for (this.h && this.h(2, this.c), r2 = s3.a; this.k && this.k(r2.a.d, this.c), (r2 = r2.e) !== s3.a; ) ;
              this.i && this.i(this.c);
            }
          } else {
            for (i2 = this.b, s3 = !!this.l, r2 = false, o3 = -1, n2 = i2.a.d; n2 !== i2.a; n2 = n2.d) if (n2.c) for (r2 || (this.h && this.h(4, this.c), r2 = true), l2 = n2.a; s3 && (a3 = l2.b.d.c ? 0 : 1, o3 !== a3 && (o3 = a3, this.l && this.l(!!o3, this.c))), this.k && this.k(l2.a.d, this.c), (l2 = l2.e) !== n2.a; ) ;
            r2 && this.i && this.i(this.c);
          }
          if (this.r) {
            for (i2 = this.b, r2 = i2.a.b; r2 !== i2.a; r2 = s3) if (s3 = r2.b, !r2.c) {
              for (n2 = (o3 = r2.a).e, l2 = void 0; n2 = (l2 = n2).e, (l2.d = null) === l2.b.d && (l2.c === l2 ? E(l2.a, null) : (l2.a.c = l2.c, T(l2, l2.b.e)), (a3 = l2.b).c === a3 ? E(a3.a, null) : (a3.a.c = a3.c, T(a3, a3.b.e)), H(l2)), l2 !== o3; ) ;
              o3 = r2.d, ((r2 = r2.b).d = o3).b = r2;
            }
            return this.r(this.b), void (this.c = this.b = null);
          }
        }
        this.b = this.c = null;
      }, this.libtess = { GluTesselator: r, windingRule: { GLU_TESS_WINDING_ODD: 100130, GLU_TESS_WINDING_NONZERO: 100131, GLU_TESS_WINDING_POSITIVE: 100132, GLU_TESS_WINDING_NEGATIVE: 100133, GLU_TESS_WINDING_ABS_GEQ_TWO: 100134 }, primitiveType: { GL_LINE_LOOP: 2, GL_TRIANGLES: 4, GL_TRIANGLE_STRIP: 5, GL_TRIANGLE_FAN: 6 }, errorType: { GLU_TESS_MISSING_BEGIN_POLYGON: 100151, GLU_TESS_MISSING_END_POLYGON: 100153, GLU_TESS_MISSING_BEGIN_CONTOUR: 100152, GLU_TESS_MISSING_END_CONTOUR: 100154, GLU_TESS_COORD_TOO_LARGE: 100155, GLU_TESS_NEED_COMBINE_CALLBACK: 100156 }, gluEnum: { GLU_TESS_MESH: 100112, GLU_TESS_TOLERANCE: 100142, GLU_TESS_WINDING_RULE: 100140, GLU_TESS_BOUNDARY_ONLY: 100141, GLU_INVALID_ENUM: 100900, GLU_INVALID_VALUE: 100901, GLU_TESS_BEGIN: 100100, GLU_TESS_VERTEX: 100101, GLU_TESS_END: 100102, GLU_TESS_ERROR: 100103, GLU_TESS_EDGE_FLAG: 100104, GLU_TESS_COMBINE: 100105, GLU_TESS_BEGIN_DATA: 100106, GLU_TESS_VERTEX_DATA: 100107, GLU_TESS_END_DATA: 100108, GLU_TESS_ERROR_DATA: 100109, GLU_TESS_EDGE_FLAG_DATA: 100110, GLU_TESS_COMBINE_DATA: 100111 } }, r.prototype.gluDeleteTess = r.prototype.x, r.prototype.gluTessProperty = r.prototype.B, r.prototype.gluGetTessProperty = r.prototype.y, r.prototype.gluTessNormal = r.prototype.A, r.prototype.gluTessCallback = r.prototype.z, r.prototype.gluTessVertex = r.prototype.C, r.prototype.gluTessBeginPolygon = r.prototype.u, r.prototype.gluTessBeginContour = r.prototype.t, r.prototype.gluTessEndContour = r.prototype.v, r.prototype.gluTessEndPolygon = r.prototype.w, void 0 !== e2 && (e2.exports = this.libtess);
    }, {}], 256: [function(e2, t, r) {
      function o(g, e3, t2, r2) {
        var v = 0, o3 = void 0 === (r2 = void 0 === r2 ? {} : r2).loop ? null : r2.loop, b = void 0 === r2.palette ? null : r2.palette;
        if (e3 <= 0 || t2 <= 0 || 65535 < e3 || 65535 < t2) throw new Error("Width/Height invalid.");
        function _(e4) {
          e4 = e4.length;
          if (e4 < 2 || 256 < e4 || e4 & e4 - 1) throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
          return e4;
        }
        g[v++] = 71, g[v++] = 73, g[v++] = 70, g[v++] = 56, g[v++] = 57, g[v++] = 97;
        var n = 0, s2 = 0;
        if (null !== b) {
          for (var i = _(b); i >>= 1; ) ++n;
          if (i = 1 << n, --n, void 0 !== r2.background) {
            if (i <= (s2 = r2.background)) throw new Error("Background index out of range.");
            if (0 === s2) throw new Error("Background index explicitly passed as 0.");
          }
        }
        if (g[v++] = 255 & e3, g[v++] = e3 >> 8 & 255, g[v++] = 255 & t2, g[v++] = t2 >> 8 & 255, g[v++] = (null !== b ? 128 : 0) | n, g[v++] = s2, g[v++] = 0, null !== b) for (var a2 = 0, l = b.length; a2 < l; ++a2) {
          var u = b[a2];
          g[v++] = u >> 16 & 255, g[v++] = u >> 8 & 255, g[v++] = 255 & u;
        }
        if (null !== o3) {
          if (o3 < 0 || 65535 < o3) throw new Error("Loop count invalid.");
          g[v++] = 33, g[v++] = 255, g[v++] = 11, g[v++] = 78, g[v++] = 69, g[v++] = 84, g[v++] = 83, g[v++] = 67, g[v++] = 65, g[v++] = 80, g[v++] = 69, g[v++] = 50, g[v++] = 46, g[v++] = 48, g[v++] = 3, g[v++] = 1, g[v++] = 255 & o3, g[v++] = o3 >> 8 & 255, g[v++] = 0;
        }
        var j = false;
        this.addFrame = function(e4, t3, r3, o4, n2, s3) {
          if (true === j && (--v, j = false), s3 = void 0 === s3 ? {} : s3, e4 < 0 || t3 < 0 || 65535 < e4 || 65535 < t3) throw new Error("x/y invalid.");
          if (r3 <= 0 || o4 <= 0 || 65535 < r3 || 65535 < o4) throw new Error("Width/Height invalid.");
          if (n2.length < r3 * o4) throw new Error("Not enough pixels for the frame size.");
          var i2 = true, a3 = s3.palette;
          if (null == a3 && (i2 = false, a3 = b), null == a3) throw new Error("Must supply either a local or global palette.");
          for (var l2 = _(a3), u2 = 0; l2 >>= 1; ) ++u2;
          var l2 = 1 << u2, c = void 0 === s3.delay ? 0 : s3.delay, d = void 0 === s3.disposal ? 0 : s3.disposal;
          if (d < 0 || 3 < d) throw new Error("Disposal out of range.");
          var h = false, f = 0;
          if (void 0 !== s3.transparent && null !== s3.transparent && (h = true, (f = s3.transparent) < 0 || l2 <= f)) throw new Error("Transparent color index.");
          if (0 === d && !h && 0 === c || (g[v++] = 33, g[v++] = 249, g[v++] = 4, g[v++] = d << 2 | (true === h ? 1 : 0), g[v++] = 255 & c, g[v++] = c >> 8 & 255, g[v++] = f, g[v++] = 0), g[v++] = 44, g[v++] = 255 & e4, g[v++] = e4 >> 8 & 255, g[v++] = 255 & t3, g[v++] = t3 >> 8 & 255, g[v++] = 255 & r3, g[v++] = r3 >> 8 & 255, g[v++] = 255 & o4, g[v++] = o4 >> 8 & 255, g[v++] = true === i2 ? 128 | u2 - 1 : 0, true === i2) for (var p = 0, m = a3.length; p < m; ++p) {
            var y = a3[p];
            g[v++] = y >> 16 & 255, g[v++] = y >> 8 & 255, g[v++] = 255 & y;
          }
          return v = function(t4, r4, e5, o5) {
            t4[r4++] = e5;
            var n3 = r4++, s4 = 1 << e5, i3 = s4 - 1, a4 = 1 + s4, l3 = 1 + a4, u3 = e5 + 1, c2 = 0, d2 = 0;
            function h2(e6) {
              for (; e6 <= c2; ) t4[r4++] = 255 & d2, d2 >>= 8, c2 -= 8, r4 === n3 + 256 && (t4[n3] = 255, n3 = r4++);
            }
            function f2(e6) {
              d2 |= e6 << c2, c2 += u3, h2(8);
            }
            var p2 = o5[0] & i3, m2 = {};
            f2(s4);
            for (var y2 = 1, g2 = o5.length; y2 < g2; ++y2) {
              var v2 = o5[y2] & i3, b2 = p2 << 8 | v2, _2 = m2[b2];
              if (void 0 === _2) {
                for (d2 |= p2 << c2, c2 += u3; 8 <= c2; ) t4[r4++] = 255 & d2, d2 >>= 8, c2 -= 8, r4 === n3 + 256 && (t4[n3] = 255, n3 = r4++);
                4096 === l3 ? (f2(s4), l3 = 1 + a4, u3 = e5 + 1, m2 = {}) : (1 << u3 <= l3 && ++u3, m2[b2] = l3++), p2 = v2;
              } else p2 = _2;
            }
            f2(p2), f2(a4), h2(1), n3 + 1 === r4 ? t4[n3] = 0 : (t4[n3] = r4 - n3 - 1, t4[r4++] = 0);
            return r4;
          }(g, v, u2 < 2 ? 2 : u2, n2);
        }, this.end = function() {
          return false === j && (g[v++] = 59, j = true), v;
        }, this.getOutputBuffer = function() {
          return g;
        }, this.setOutputBuffer = function(e4) {
          g = e4;
        }, this.getOutputBufferPosition = function() {
          return v;
        }, this.setOutputBufferPosition = function(e4) {
          v = e4;
        };
      }
      function E(e3, t2, r2, o3) {
        for (var n = e3[t2++], s2 = 1 << n, i = 1 + s2, a2 = 1 + i, l = n + 1, u = (1 << l) - 1, c = 0, d = 0, h = 0, f = e3[t2++], p = new Int32Array(4096), m = null; ; ) {
          for (; c < 16 && 0 !== f; ) d |= e3[t2++] << c, c += 8, 1 === f ? f = e3[t2++] : --f;
          if (c < l) break;
          var y = d & u;
          if (d >>= l, c -= l, y == s2) a2 = 1 + i, u = (1 << (l = n + 1)) - 1, m = null;
          else {
            if (y == i) break;
            for (var g = y < a2 ? y : m, v = 0, b = g; s2 < b; ) b = p[b] >> 8, ++v;
            var _ = b;
            if (o3 < h + v + (g !== y ? 1 : 0)) return void console.log("Warning, gif stream longer than expected.");
            r2[h++] = _;
            var j = h += v;
            for (g !== y && (r2[h++] = _), b = g; v--; ) b = p[b], r2[--j] = 255 & b, b >>= 8;
            null !== m && a2 < 4096 && (p[a2++] = m << 8 | _, u + 1 <= a2 && l < 12 && (++l, u = u << 1 | 1)), m = y;
          }
        }
        h !== o3 && console.log("Warning, gif stream shorter than expected.");
      }
      try {
        r.GifWriter = o, r.GifReader = function(b) {
          var e3 = 0;
          if (71 !== b[e3++] || 73 !== b[e3++] || 70 !== b[e3++] || 56 !== b[e3++] || 56 != (b[e3++] + 1 & 253) || 97 !== b[e3++]) throw new Error("Invalid GIF 87a/89a header.");
          var _ = b[e3++] | b[e3++] << 8, t2 = b[e3++] | b[e3++] << 8, r2 = b[e3++], o3 = 1 << 1 + (7 & r2), n = (b[e3++], b[e3++], null), s2 = null, i = (r2 >> 7 && (n = e3, e3 += 3 * (s2 = o3)), true), a2 = [], l = 0, u = null, c = 0, d = null;
          for (this.width = _, this.height = t2; i && e3 < b.length; ) switch (b[e3++]) {
            case 33:
              switch (b[e3++]) {
                case 255:
                  if (11 !== b[e3] || 78 == b[e3 + 1] && 69 == b[e3 + 2] && 84 == b[e3 + 3] && 83 == b[e3 + 4] && 67 == b[e3 + 5] && 65 == b[e3 + 6] && 80 == b[e3 + 7] && 69 == b[e3 + 8] && 50 == b[e3 + 9] && 46 == b[e3 + 10] && 48 == b[e3 + 11] && 3 == b[e3 + 12] && 1 == b[e3 + 13] && 0 == b[e3 + 16]) e3 += 14, d = b[e3++] | b[e3++] << 8, e3++;
                  else for (e3 += 12; ; ) {
                    if (!(0 <= (f = b[e3++]))) throw Error("Invalid block size");
                    if (0 === f) break;
                    e3 += f;
                  }
                  break;
                case 249:
                  if (4 !== b[e3++] || 0 !== b[e3 + 4]) throw new Error("Invalid graphics extension block.");
                  var h = b[e3++], l = b[e3++] | b[e3++] << 8, u = b[e3++];
                  0 == (1 & h) && (u = null), c = h >> 2 & 7, e3++;
                  break;
                case 254:
                  for (; ; ) {
                    if (!(0 <= (f = b[e3++]))) throw Error("Invalid block size");
                    if (0 === f) break;
                    e3 += f;
                  }
                  break;
                default:
                  throw new Error("Unknown graphic control label: 0x" + b[e3 - 1].toString(16));
              }
              break;
            case 44:
              var f, p = b[e3++] | b[e3++] << 8, m = b[e3++] | b[e3++] << 8, y = b[e3++] | b[e3++] << 8, g = b[e3++] | b[e3++] << 8, v = b[e3++], j = v >> 6 & 1, x2 = 1 << 1 + (7 & v), w = n, S = s2, T = false, v = (v >> 7 && (T = true, w = e3, e3 += 3 * (S = x2)), e3);
              for (e3++; ; ) {
                if (!(0 <= (f = b[e3++]))) throw Error("Invalid block size");
                if (0 === f) break;
                e3 += f;
              }
              a2.push({ x: p, y: m, width: y, height: g, has_local_palette: T, palette_offset: w, palette_size: S, data_offset: v, data_length: e3 - v, transparent_index: u, interlaced: !!j, delay: l, disposal: c });
              break;
            case 59:
              i = false;
              break;
            default:
              throw new Error("Unknown gif block: 0x" + b[e3 - 1].toString(16));
          }
          this.numFrames = function() {
            return a2.length;
          }, this.loopCount = function() {
            return d;
          }, this.frameInfo = function(e4) {
            if (e4 < 0 || e4 >= a2.length) throw new Error("Frame index out of range.");
            return a2[e4];
          }, this.decodeAndBlitFrameBGRA = function(e4, t3) {
            for (var e4 = this.frameInfo(e4), r3 = e4.width * e4.height, o4 = new Uint8Array(r3), n2 = (E(b, e4.data_offset, o4, r3), e4.palette_offset), s3 = e4.transparent_index, i2 = (null === s3 && (s3 = 256), e4.width), a3 = _ - i2, l2 = i2, u2 = 4 * (e4.y * _ + e4.x), c2 = 4 * ((e4.y + e4.height) * _ + e4.x), d2 = u2, h2 = 4 * a3, f2 = (true === e4.interlaced && (h2 += 4 * _ * 7), 8), p2 = 0, m2 = o4.length; p2 < m2; ++p2) {
              var y2, g2, v2 = o4[p2];
              0 === l2 && (l2 = i2, c2 <= (d2 += h2) && (h2 = 4 * a3 + 4 * _ * (f2 - 1), d2 = u2 + (i2 + a3) * (f2 << 1), f2 >>= 1)), v2 === s3 ? d2 += 4 : (y2 = b[n2 + 3 * v2], g2 = b[n2 + 3 * v2 + 1], v2 = b[n2 + 3 * v2 + 2], t3[d2++] = v2, t3[d2++] = g2, t3[d2++] = y2, t3[d2++] = 255), --l2;
            }
          }, this.decodeAndBlitFrameRGBA = function(e4, t3) {
            for (var e4 = this.frameInfo(e4), r3 = e4.width * e4.height, o4 = new Uint8Array(r3), n2 = (E(b, e4.data_offset, o4, r3), e4.palette_offset), s3 = e4.transparent_index, i2 = (null === s3 && (s3 = 256), e4.width), a3 = _ - i2, l2 = i2, u2 = 4 * (e4.y * _ + e4.x), c2 = 4 * ((e4.y + e4.height) * _ + e4.x), d2 = u2, h2 = 4 * a3, f2 = (true === e4.interlaced && (h2 += 4 * _ * 7), 8), p2 = 0, m2 = o4.length; p2 < m2; ++p2) {
              var y2, g2, v2 = o4[p2];
              0 === l2 && (l2 = i2, c2 <= (d2 += h2) && (h2 = 4 * a3 + 4 * _ * (f2 - 1), d2 = u2 + (i2 + a3) * (f2 << 1), f2 >>= 1)), v2 === s3 ? d2 += 4 : (y2 = b[n2 + 3 * v2], g2 = b[n2 + 3 * v2 + 1], v2 = b[n2 + 3 * v2 + 2], t3[d2++] = y2, t3[d2++] = g2, t3[d2++] = v2, t3[d2++] = 255), --l2;
            }
          };
        };
      } catch (e3) {
      }
    }, {}], 257: [function(Pr, r, o) {
      !(function(Ar) {
        var e2, t;
        e2 = this, t = function(_) {
          function D(e4) {
            if (null == this) throw TypeError();
            var t3, r3 = String(this), o4 = r3.length, e4 = e4 ? Number(e4) : 0;
            if (!((e4 = e4 != e4 ? 0 : e4) < 0 || o4 <= e4)) return 55296 <= (t3 = r3.charCodeAt(e4)) && t3 <= 56319 && e4 + 1 < o4 && 56320 <= (o4 = r3.charCodeAt(e4 + 1)) && o4 <= 57343 ? 1024 * (t3 - 55296) + o4 - 56320 + 65536 : t3;
          }
          String.prototype.codePointAt || ((F = function() {
            try {
              var e4 = {}, t3 = Object.defineProperty, r3 = t3(e4, e4, e4) && t3;
            } catch (e5) {
            }
            return r3;
          }()) ? F(String.prototype, "codePointAt", { value: D, configurable: true, writable: true }) : String.prototype.codePointAt = D);
          var F, U = 0, N = -3;
          function B() {
            this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
          }
          function G(e4, t3) {
            this.source = e4, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t3, this.destLen = 0, this.ltree = new B(), this.dtree = new B();
          }
          var V = new B(), z = new B(), H = new Uint8Array(30), W = new Uint16Array(30), q = new Uint8Array(30), X = new Uint16Array(30), Y = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), Z = new B(), v = new Uint8Array(320);
          function K(e4, t3, r3, o4) {
            for (var n2, s3 = 0; s3 < r3; ++s3) e4[s3] = 0;
            for (s3 = 0; s3 < 30 - r3; ++s3) e4[s3 + r3] = s3 / r3 | 0;
            for (n2 = o4, s3 = 0; s3 < 30; ++s3) t3[s3] = n2, n2 += 1 << e4[s3];
          }
          var Q = new Uint16Array(16);
          function J(e4, t3, r3, o4) {
            for (var n2, s3 = 0; s3 < 16; ++s3) e4.table[s3] = 0;
            for (s3 = 0; s3 < o4; ++s3) e4.table[t3[r3 + s3]]++;
            for (s3 = n2 = e4.table[0] = 0; s3 < 16; ++s3) Q[s3] = n2, n2 += e4.table[s3];
            for (s3 = 0; s3 < o4; ++s3) t3[r3 + s3] && (e4.trans[Q[t3[r3 + s3]]++] = s3);
          }
          function b(e4, t3, r3) {
            if (!t3) return r3;
            for (; e4.bitcount < 24; ) e4.tag |= e4.source[e4.sourceIndex++] << e4.bitcount, e4.bitcount += 8;
            var o4 = e4.tag & 65535 >>> 16 - t3;
            return e4.tag >>>= t3, e4.bitcount -= t3, o4 + r3;
          }
          function $(e4, t3) {
            for (; e4.bitcount < 24; ) e4.tag |= e4.source[e4.sourceIndex++] << e4.bitcount, e4.bitcount += 8;
            for (var r3 = 0, o4 = 0, n2 = 0, s3 = e4.tag; o4 = 2 * o4 + (1 & s3), s3 >>>= 1, r3 += t3.table[++n2], 0 <= (o4 -= t3.table[n2]); ) ;
            return e4.tag = s3, e4.bitcount -= n2, t3.trans[r3 + o4];
          }
          function ee(e4, t3, r3) {
            for (; ; ) {
              var o4 = $(e4, t3);
              if (256 === o4) return U;
              if (o4 < 256) e4.dest[e4.destLen++] = o4;
              else for (var n2, s3 = b(e4, H[o4 -= 257], W[o4]), o4 = $(e4, r3), i2 = n2 = e4.destLen - b(e4, q[o4], X[o4]); i2 < n2 + s3; ++i2) e4.dest[e4.destLen++] = e4.dest[i2];
            }
          }
          for (var e3 = V, te = z, t2 = 0; t2 < 7; ++t2) e3.table[t2] = 0;
          for (e3.table[7] = 24, e3.table[8] = 152, e3.table[9] = 112, t2 = 0; t2 < 24; ++t2) e3.trans[t2] = 256 + t2;
          for (t2 = 0; t2 < 144; ++t2) e3.trans[24 + t2] = t2;
          for (t2 = 0; t2 < 8; ++t2) e3.trans[168 + t2] = 280 + t2;
          for (t2 = 0; t2 < 112; ++t2) e3.trans[176 + t2] = 144 + t2;
          for (t2 = 0; t2 < 5; ++t2) te.table[t2] = 0;
          for (te.table[5] = 32, t2 = 0; t2 < 32; ++t2) te.trans[t2] = t2;
          K(H, W, 4, 3), K(q, X, 2, 1), H[28] = 0, W[28] = 258;
          var re = function(e4, t3) {
            var r3, o4, n2, s3 = new G(e4, t3);
            do {
              switch (n2 = void 0, (o4 = s3).bitcount-- || (o4.tag = o4.source[o4.sourceIndex++], o4.bitcount = 7), n2 = 1 & o4.tag, o4.tag >>>= 1, o4 = n2, b(s3, 2, 0)) {
                case 0:
                  r3 = function(e5) {
                    for (var t4, r4; 8 < e5.bitcount; ) e5.sourceIndex--, e5.bitcount -= 8;
                    if ((t4 = 256 * e5.source[e5.sourceIndex + 1] + e5.source[e5.sourceIndex]) !== (65535 & ~(256 * e5.source[e5.sourceIndex + 3] + e5.source[e5.sourceIndex + 2]))) return N;
                    for (e5.sourceIndex += 4, r4 = t4; r4; --r4) e5.dest[e5.destLen++] = e5.source[e5.sourceIndex++];
                    return e5.bitcount = 0, U;
                  }(s3);
                  break;
                case 1:
                  r3 = ee(s3, V, z);
                  break;
                case 2:
                  y2 = m2 = p2 = g2 = i2 = f2 = h2 = d2 = c2 = u2 = l2 = a3 = void 0;
                  for (var i2, a3 = s3, l2 = s3.ltree, u2 = s3.dtree, c2 = b(a3, 5, 257), d2 = b(a3, 5, 1), h2 = b(a3, 4, 4), f2 = 0; f2 < 19; ++f2) v[f2] = 0;
                  for (f2 = 0; f2 < h2; ++f2) {
                    var p2 = b(a3, 3, 0);
                    v[Y[f2]] = p2;
                  }
                  for (J(Z, v, 0, 19), i2 = 0; i2 < c2 + d2; ) {
                    var m2 = $(a3, Z);
                    switch (m2) {
                      case 16:
                        for (var y2 = v[i2 - 1], g2 = b(a3, 2, 3); g2; --g2) v[i2++] = y2;
                        break;
                      case 17:
                        for (g2 = b(a3, 3, 3); g2; --g2) v[i2++] = 0;
                        break;
                      case 18:
                        for (g2 = b(a3, 7, 11); g2; --g2) v[i2++] = 0;
                        break;
                      default:
                        v[i2++] = m2;
                    }
                  }
                  J(l2, v, 0, c2), J(u2, v, c2, d2), r3 = ee(s3, s3.ltree, s3.dtree);
                  break;
                default:
                  r3 = N;
              }
              if (r3 !== U) throw new Error("Data error");
            } while (!o4);
            return s3.destLen < s3.dest.length ? "function" == typeof s3.dest.slice ? s3.dest.slice(0, s3.destLen) : s3.dest.subarray(0, s3.destLen) : s3.dest;
          };
          function g(e4, t3, r3, o4, n2) {
            return Math.pow(1 - n2, 3) * e4 + 3 * Math.pow(1 - n2, 2) * n2 * t3 + 3 * (1 - n2) * Math.pow(n2, 2) * r3 + Math.pow(n2, 3) * o4;
          }
          function a2() {
            this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
          }
          function h() {
            this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
          }
          function oe(e4) {
            throw new Error(e4);
          }
          function ne(e4, t3) {
            e4 || oe(t3);
          }
          a2.prototype.isEmpty = function() {
            return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
          }, a2.prototype.addPoint = function(e4, t3) {
            "number" == typeof e4 && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e4, this.x2 = e4), e4 < this.x1 && (this.x1 = e4), e4 > this.x2 && (this.x2 = e4)), "number" == typeof t3 && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t3, this.y2 = t3), t3 < this.y1 && (this.y1 = t3), t3 > this.y2 && (this.y2 = t3));
          }, a2.prototype.addX = function(e4) {
            this.addPoint(e4, null);
          }, a2.prototype.addY = function(e4) {
            this.addPoint(null, e4);
          }, a2.prototype.addBezier = function(e4, t3, r3, o4, n2, s3, i2, a3) {
            var l2 = [e4, t3], u2 = [r3, o4], c2 = [n2, s3], d2 = [i2, a3];
            this.addPoint(e4, t3), this.addPoint(i2, a3);
            for (var h2 = 0; h2 <= 1; h2++) {
              var f2, p2 = 6 * l2[h2] - 12 * u2[h2] + 6 * c2[h2], m2 = -3 * l2[h2] + 9 * u2[h2] - 9 * c2[h2] + 3 * d2[h2], y2 = 3 * u2[h2] - 3 * l2[h2];
              0 == m2 ? 0 == p2 || 0 < (f2 = -y2 / p2) && f2 < 1 && (0 === h2 && this.addX(g(l2[h2], u2[h2], c2[h2], d2[h2], f2)), 1 === h2 && this.addY(g(l2[h2], u2[h2], c2[h2], d2[h2], f2))) : (f2 = Math.pow(p2, 2) - 4 * y2 * m2) < 0 || (0 < (y2 = (-p2 + Math.sqrt(f2)) / (2 * m2)) && y2 < 1 && (0 === h2 && this.addX(g(l2[h2], u2[h2], c2[h2], d2[h2], y2)), 1 === h2 && this.addY(g(l2[h2], u2[h2], c2[h2], d2[h2], y2))), 0 < (y2 = (-p2 - Math.sqrt(f2)) / (2 * m2)) && y2 < 1 && (0 === h2 && this.addX(g(l2[h2], u2[h2], c2[h2], d2[h2], y2)), 1 === h2 && this.addY(g(l2[h2], u2[h2], c2[h2], d2[h2], y2))));
            }
          }, a2.prototype.addQuad = function(e4, t3, r3, o4, n2, s3) {
            r3 = e4 + 2 / 3 * (r3 - e4), o4 = t3 + 2 / 3 * (o4 - t3);
            this.addBezier(e4, t3, r3, o4, r3 + 1 / 3 * (n2 - e4), o4 + 1 / 3 * (s3 - t3), n2, s3);
          }, h.prototype.moveTo = function(e4, t3) {
            this.commands.push({ type: "M", x: e4, y: t3 });
          }, h.prototype.lineTo = function(e4, t3) {
            this.commands.push({ type: "L", x: e4, y: t3 });
          }, h.prototype.curveTo = h.prototype.bezierCurveTo = function(e4, t3, r3, o4, n2, s3) {
            this.commands.push({ type: "C", x1: e4, y1: t3, x2: r3, y2: o4, x: n2, y: s3 });
          }, h.prototype.quadTo = h.prototype.quadraticCurveTo = function(e4, t3, r3, o4) {
            this.commands.push({ type: "Q", x1: e4, y1: t3, x: r3, y: o4 });
          }, h.prototype.close = h.prototype.closePath = function() {
            this.commands.push({ type: "Z" });
          }, h.prototype.extend = function(e4) {
            var t3;
            if (e4.commands) e4 = e4.commands;
            else if (e4 instanceof a2) return t3 = e4, this.moveTo(t3.x1, t3.y1), this.lineTo(t3.x2, t3.y1), this.lineTo(t3.x2, t3.y2), this.lineTo(t3.x1, t3.y2), void this.close();
            Array.prototype.push.apply(this.commands, e4);
          }, h.prototype.getBoundingBox = function() {
            for (var e4 = new a2(), t3 = 0, r3 = 0, o4 = 0, n2 = 0, s3 = 0; s3 < this.commands.length; s3++) {
              var i2 = this.commands[s3];
              switch (i2.type) {
                case "M":
                  e4.addPoint(i2.x, i2.y), t3 = o4 = i2.x, r3 = n2 = i2.y;
                  break;
                case "L":
                  e4.addPoint(i2.x, i2.y), o4 = i2.x, n2 = i2.y;
                  break;
                case "Q":
                  e4.addQuad(o4, n2, i2.x1, i2.y1, i2.x, i2.y), o4 = i2.x, n2 = i2.y;
                  break;
                case "C":
                  e4.addBezier(o4, n2, i2.x1, i2.y1, i2.x2, i2.y2, i2.x, i2.y), o4 = i2.x, n2 = i2.y;
                  break;
                case "Z":
                  o4 = t3, n2 = r3;
                  break;
                default:
                  throw new Error("Unexpected path command " + i2.type);
              }
            }
            return e4.isEmpty() && e4.addPoint(0, 0), e4;
          }, h.prototype.draw = function(e4) {
            e4.beginPath();
            for (var t3 = 0; t3 < this.commands.length; t3 += 1) {
              var r3 = this.commands[t3];
              "M" === r3.type ? e4.moveTo(r3.x, r3.y) : "L" === r3.type ? e4.lineTo(r3.x, r3.y) : "C" === r3.type ? e4.bezierCurveTo(r3.x1, r3.y1, r3.x2, r3.y2, r3.x, r3.y) : "Q" === r3.type ? e4.quadraticCurveTo(r3.x1, r3.y1, r3.x, r3.y) : "Z" === r3.type && e4.closePath();
            }
            this.fill && (e4.fillStyle = this.fill, e4.fill()), this.stroke && (e4.strokeStyle = this.stroke, e4.lineWidth = this.strokeWidth, e4.stroke());
          }, h.prototype.toPathData = function(n2) {
            function e4() {
              for (var e5 = arguments, t4 = "", r4 = 0; r4 < arguments.length; r4 += 1) {
                var o5 = e5[r4];
                0 <= o5 && 0 < r4 && (t4 += " "), t4 += (o5 = o5, Math.round(o5) === o5 ? "" + Math.round(o5) : o5.toFixed(n2));
              }
              return t4;
            }
            n2 = void 0 !== n2 ? n2 : 2;
            for (var t3 = "", r3 = 0; r3 < this.commands.length; r3 += 1) {
              var o4 = this.commands[r3];
              "M" === o4.type ? t3 += "M" + e4(o4.x, o4.y) : "L" === o4.type ? t3 += "L" + e4(o4.x, o4.y) : "C" === o4.type ? t3 += "C" + e4(o4.x1, o4.y1, o4.x2, o4.y2, o4.x, o4.y) : "Q" === o4.type ? t3 += "Q" + e4(o4.x1, o4.y1, o4.x, o4.y) : "Z" === o4.type && (t3 += "Z");
            }
            return t3;
          }, h.prototype.toSVG = function(e4) {
            var t3 = (t3 = '<path d="') + this.toPathData(e4) + '"';
            return this.fill && "black" !== this.fill && (null === this.fill ? t3 += ' fill="none"' : t3 += ' fill="' + this.fill + '"'), this.stroke && (t3 += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t3 += "/>";
          }, h.prototype.toDOMElement = function(e4) {
            var e4 = this.toPathData(e4), t3 = document.createElementNS("http://www.w3.org/2000/svg", "path");
            return t3.setAttribute("d", e4), t3;
          };
          var L = { fail: oe, argument: ne, assert: ne }, m = {}, w = {}, l = {};
          function r2(e4) {
            return function() {
              return e4;
            };
          }
          w.BYTE = function(e4) {
            return L.argument(0 <= e4 && e4 <= 255, "Byte value should be between 0 and 255."), [e4];
          }, l.BYTE = r2(1), w.CHAR = function(e4) {
            return [e4.charCodeAt(0)];
          }, l.CHAR = r2(1), w.CHARARRAY = function(e4) {
            for (var t3 = [], r3 = 0; r3 < e4.length; r3 += 1) t3[r3] = e4.charCodeAt(r3);
            return t3;
          }, l.CHARARRAY = function(e4) {
            return e4.length;
          }, w.USHORT = function(e4) {
            return [e4 >> 8 & 255, 255 & e4];
          }, l.USHORT = r2(2), w.SHORT = function(e4) {
            return [(e4 = 32768 <= e4 ? -(65536 - e4) : e4) >> 8 & 255, 255 & e4];
          }, l.SHORT = r2(2), w.UINT24 = function(e4) {
            return [e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.UINT24 = r2(3), w.ULONG = function(e4) {
            return [e4 >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.ULONG = r2(4), w.LONG = function(e4) {
            return [(e4 = 2147483648 <= e4 ? -(4294967296 - e4) : e4) >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.LONG = r2(4), w.FIXED = w.ULONG, l.FIXED = l.ULONG, w.FWORD = w.SHORT, l.FWORD = l.SHORT, w.UFWORD = w.USHORT, l.UFWORD = l.USHORT, w.LONGDATETIME = function(e4) {
            return [0, 0, 0, 0, e4 >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.LONGDATETIME = r2(8), w.TAG = function(e4) {
            return L.argument(4 === e4.length, "Tag should be exactly 4 ASCII characters."), [e4.charCodeAt(0), e4.charCodeAt(1), e4.charCodeAt(2), e4.charCodeAt(3)];
          }, l.TAG = r2(4), w.Card8 = w.BYTE, l.Card8 = l.BYTE, w.Card16 = w.USHORT, l.Card16 = l.USHORT, w.OffSize = w.BYTE, l.OffSize = l.BYTE, w.SID = w.USHORT, l.SID = l.USHORT, w.NUMBER = function(e4) {
            return -107 <= e4 && e4 <= 107 ? [e4 + 139] : 108 <= e4 && e4 <= 1131 ? [247 + ((e4 -= 108) >> 8), 255 & e4] : -1131 <= e4 && e4 <= -108 ? [251 + ((e4 = -e4 - 108) >> 8), 255 & e4] : -32768 <= e4 && e4 <= 32767 ? w.NUMBER16(e4) : w.NUMBER32(e4);
          }, l.NUMBER = function(e4) {
            return w.NUMBER(e4).length;
          }, w.NUMBER16 = function(e4) {
            return [28, e4 >> 8 & 255, 255 & e4];
          }, l.NUMBER16 = r2(3), w.NUMBER32 = function(e4) {
            return [29, e4 >> 24 & 255, e4 >> 16 & 255, e4 >> 8 & 255, 255 & e4];
          }, l.NUMBER32 = r2(5), w.REAL = function(e4) {
            for (var t3 = e4.toString(), r3 = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t3), o4 = (r3 && (r3 = parseFloat("1e" + ((r3[2] ? +r3[2] : 0) + r3[1].length)), t3 = (Math.round(e4 * r3) / r3).toString()), ""), n2 = 0, s3 = t3.length; n2 < s3; n2 += 1) {
              var i2 = t3[n2];
              o4 += "e" === i2 ? "-" === t3[++n2] ? "c" : "b" : "." === i2 ? "a" : "-" === i2 ? "e" : i2;
            }
            for (var a3 = [30], l2 = 0, u2 = (o4 += 1 & o4.length ? "f" : "ff").length; l2 < u2; l2 += 2) a3.push(parseInt(o4.substr(l2, 2), 16));
            return a3;
          }, l.REAL = function(e4) {
            return w.REAL(e4).length;
          }, w.NAME = w.CHARARRAY, l.NAME = l.CHARARRAY, w.STRING = w.CHARARRAY, l.STRING = l.CHARARRAY, m.UTF8 = function(e4, t3, r3) {
            for (var o4 = [], n2 = r3, s3 = 0; s3 < n2; s3++, t3 += 1) o4[s3] = e4.getUint8(t3);
            return String.fromCharCode.apply(null, o4);
          }, m.UTF16 = function(e4, t3, r3) {
            for (var o4 = [], n2 = r3 / 2, s3 = 0; s3 < n2; s3++, t3 += 2) o4[s3] = e4.getUint16(t3);
            return String.fromCharCode.apply(null, o4);
          }, w.UTF16 = function(e4) {
            for (var t3 = [], r3 = 0; r3 < e4.length; r3 += 1) {
              var o4 = e4.charCodeAt(r3);
              t3[t3.length] = o4 >> 8 & 255, t3[t3.length] = 255 & o4;
            }
            return t3;
          }, l.UTF16 = function(e4) {
            return 2 * e4.length;
          };
          var se, ie = { "x-mac-croatian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ", "x-mac-cyrillic": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю", "x-mac-gaelic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ", "x-mac-greek": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­", "x-mac-icelandic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-inuit": "ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł", "x-mac-ce": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ", macintosh: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-romanian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ", "x-mac-turkish": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ" }, ae = (m.MACSTRING = function(e4, t3, r3, o4) {
            var n2 = ie[o4];
            if (void 0 !== n2) {
              for (var s3 = "", i2 = 0; i2 < r3; i2++) {
                var a3 = e4.getUint8(t3 + i2);
                s3 += a3 <= 127 ? String.fromCharCode(a3) : n2[127 & a3];
              }
              return s3;
            }
          }, "function" == typeof WeakMap && /* @__PURE__ */ new WeakMap());
          function le(e4) {
            return -128 <= e4 && e4 <= 127;
          }
          w.MACSTRING = function(e4, t3) {
            var r3 = function(e5) {
              if (!se) for (var t4 in se = {}, ie) se[t4] = new String(t4);
              var r4 = se[e5];
              if (void 0 !== r4) {
                if (ae) {
                  var o5 = ae.get(r4);
                  if (void 0 !== o5) return o5;
                }
                var n3 = ie[e5];
                if (void 0 !== n3) {
                  for (var s4 = {}, i2 = 0; i2 < n3.length; i2++) s4[n3.charCodeAt(i2)] = i2 + 128;
                  return ae && ae.set(r4, s4), s4;
                }
              }
            }(t3);
            if (void 0 !== r3) {
              for (var o4 = [], n2 = 0; n2 < e4.length; n2++) {
                var s3 = e4.charCodeAt(n2);
                if (128 <= s3 && void 0 === (s3 = r3[s3])) return;
                o4[n2] = s3;
              }
              return o4;
            }
          }, l.MACSTRING = function(e4, t3) {
            e4 = w.MACSTRING(e4, t3);
            return void 0 !== e4 ? e4.length : 0;
          }, w.VARDELTAS = function(e4) {
            for (var t3 = 0, r3 = []; t3 < e4.length; ) var o4 = e4[t3], t3 = (0 === o4 ? function(e5, t4, r4) {
              for (var o5 = 0, n2 = e5.length; t4 < n2 && o5 < 64 && 0 === e5[t4]; ) ++t4, ++o5;
              return r4.push(128 | o5 - 1), t4;
            } : -128 <= o4 && o4 <= 127 ? function(e5, t4, r4) {
              for (var o5 = 0, n2 = e5.length, s3 = t4; s3 < n2 && o5 < 64; ) {
                var i2 = e5[s3];
                if (!le(i2)) break;
                if (0 === i2 && s3 + 1 < n2 && 0 === e5[s3 + 1]) break;
                ++s3, ++o5;
              }
              r4.push(o5 - 1);
              for (var a3 = t4; a3 < s3; ++a3) r4.push(e5[a3] + 256 & 255);
              return s3;
            } : function(e5, t4, r4) {
              for (var o5 = 0, n2 = e5.length, s3 = t4; s3 < n2 && o5 < 64; ) {
                var i2 = e5[s3];
                if (0 === i2) break;
                if (le(i2) && s3 + 1 < n2 && le(e5[s3 + 1])) break;
                ++s3, ++o5;
              }
              r4.push(64 | o5 - 1);
              for (var a3 = t4; a3 < s3; ++a3) {
                var l2 = e5[a3];
                r4.push(l2 + 65536 >> 8 & 255, l2 + 256 & 255);
              }
              return s3;
            })(e4, t3, r3);
            return r3;
          }, w.INDEX = function(e4) {
            for (var t3 = 1, r3 = [t3], o4 = [], n2 = 0; n2 < e4.length; n2 += 1) {
              var s3 = w.OBJECT(e4[n2]);
              Array.prototype.push.apply(o4, s3), t3 += s3.length, r3.push(t3);
            }
            if (0 === o4.length) return [0, 0];
            for (var i2 = [], a3 = 1 + Math.floor(Math.log(t3) / Math.log(2)) / 8 | 0, l2 = [void 0, w.BYTE, w.USHORT, w.UINT24, w.ULONG][a3], u2 = 0; u2 < r3.length; u2 += 1) {
              var c2 = l2(r3[u2]);
              Array.prototype.push.apply(i2, c2);
            }
            return Array.prototype.concat(w.Card16(e4.length), w.OffSize(a3), i2, o4);
          }, l.INDEX = function(e4) {
            return w.INDEX(e4).length;
          }, w.DICT = function(e4) {
            for (var t3 = [], r3 = Object.keys(e4), o4 = r3.length, n2 = 0; n2 < o4; n2 += 1) {
              var s3 = parseInt(r3[n2], 0), i2 = e4[s3];
              t3 = (t3 = t3.concat(w.OPERAND(i2.value, i2.type))).concat(w.OPERATOR(s3));
            }
            return t3;
          }, l.DICT = function(e4) {
            return w.DICT(e4).length;
          }, w.OPERATOR = function(e4) {
            return e4 < 1200 ? [e4] : [12, e4 - 1200];
          }, w.OPERAND = function(e4, t3) {
            var r3 = [];
            if (Array.isArray(t3)) for (var o4 = 0; o4 < t3.length; o4 += 1) L.argument(e4.length === t3.length, "Not enough arguments given for type" + t3), r3 = r3.concat(w.OPERAND(e4[o4], t3[o4]));
            else if ("SID" === t3) r3 = r3.concat(w.NUMBER(e4));
            else if ("offset" === t3) r3 = r3.concat(w.NUMBER32(e4));
            else if ("number" === t3) r3 = r3.concat(w.NUMBER(e4));
            else {
              if ("real" !== t3) throw new Error("Unknown operand type " + t3);
              r3 = r3.concat(w.REAL(e4));
            }
            return r3;
          }, w.OP = w.BYTE, l.OP = l.BYTE;
          var ue = "function" == typeof WeakMap && /* @__PURE__ */ new WeakMap();
          function n(e4, t3, r3) {
            for (var o4 = 0; o4 < t3.length; o4 += 1) {
              var n2 = t3[o4];
              this[n2.name] = n2.value;
            }
            if (this.tableName = e4, this.fields = t3, r3) for (var s3 = Object.keys(r3), i2 = 0; i2 < s3.length; i2 += 1) {
              var a3 = s3[i2], l2 = r3[a3];
              void 0 !== this[a3] && (this[a3] = l2);
            }
          }
          function ce(e4, t3, r3) {
            void 0 === r3 && (r3 = t3.length);
            var o4 = new Array(t3.length + 1);
            o4[0] = { name: e4 + "Count", type: "USHORT", value: r3 };
            for (var n2 = 0; n2 < t3.length; n2++) o4[n2 + 1] = { name: e4 + n2, type: "USHORT", value: t3[n2] };
            return o4;
          }
          function de(e4, t3, r3) {
            var o4 = t3.length, n2 = new Array(o4 + 1);
            n2[0] = { name: e4 + "Count", type: "USHORT", value: o4 };
            for (var s3 = 0; s3 < o4; s3++) n2[s3 + 1] = { name: e4 + s3, type: "TABLE", value: r3(t3[s3], s3) };
            return n2;
          }
          function he(e4, t3, r3) {
            var o4 = t3.length, n2 = [];
            n2[0] = { name: e4 + "Count", type: "USHORT", value: o4 };
            for (var s3 = 0; s3 < o4; s3++) n2 = n2.concat(r3(t3[s3], s3));
            return n2;
          }
          function fe(e4) {
            1 === e4.format ? n.call(this, "coverageTable", [{ name: "coverageFormat", type: "USHORT", value: 1 }].concat(ce("glyph", e4.glyphs))) : L.assert(false, "Can't create coverage table format 2 yet.");
          }
          function pe(e4) {
            n.call(this, "scriptListTable", he("scriptRecord", e4, function(e5, t3) {
              var r3 = e5.script, o4 = r3.defaultLangSys;
              return L.assert(!!o4, "Unable to write GSUB: script " + e5.tag + " has no default language system."), [{ name: "scriptTag" + t3, type: "TAG", value: e5.tag }, { name: "script" + t3, type: "TABLE", value: new n("scriptTable", [{ name: "defaultLangSys", type: "TABLE", value: new n("defaultLangSys", [{ name: "lookupOrder", type: "USHORT", value: 0 }, { name: "reqFeatureIndex", type: "USHORT", value: o4.reqFeatureIndex }].concat(ce("featureIndex", o4.featureIndexes))) }].concat(he("langSys", r3.langSysRecords, function(e6, t4) {
                var r4 = e6.langSys;
                return [{ name: "langSysTag" + t4, type: "TAG", value: e6.tag }, { name: "langSys" + t4, type: "TABLE", value: new n("langSys", [{ name: "lookupOrder", type: "USHORT", value: 0 }, { name: "reqFeatureIndex", type: "USHORT", value: r4.reqFeatureIndex }].concat(ce("featureIndex", r4.featureIndexes))) }];
              }))) }];
            }));
          }
          function me(e4) {
            n.call(this, "featureListTable", he("featureRecord", e4, function(e5, t3) {
              var r3 = e5.feature;
              return [{ name: "featureTag" + t3, type: "TAG", value: e5.tag }, { name: "feature" + t3, type: "TABLE", value: new n("featureTable", [{ name: "featureParams", type: "USHORT", value: r3.featureParams }].concat(ce("lookupListIndex", r3.lookupListIndexes))) }];
            }));
          }
          function ye(e4, r3) {
            n.call(this, "lookupListTable", de("lookup", e4, function(e5) {
              var t3 = r3[e5.lookupType];
              return L.assert(!!t3, "Unable to write GSUB lookup type " + e5.lookupType + " tables."), new n("lookupTable", [{ name: "lookupType", type: "USHORT", value: e5.lookupType }, { name: "lookupFlag", type: "USHORT", value: e5.lookupFlag }].concat(de("subtable", e5.subtables, t3)));
            }));
          }
          w.CHARSTRING = function(e4) {
            if (ue) {
              var t3 = ue.get(e4);
              if (void 0 !== t3) return t3;
            }
            for (var r3 = [], o4 = e4.length, n2 = 0; n2 < o4; n2 += 1) var s3 = e4[n2], r3 = r3.concat(w[s3.type](s3.value));
            return ue && ue.set(e4, r3), r3;
          }, l.CHARSTRING = function(e4) {
            return w.CHARSTRING(e4).length;
          }, w.OBJECT = function(e4) {
            var t3 = w[e4.type];
            return L.argument(void 0 !== t3, "No encoding function for type " + e4.type), t3(e4.value);
          }, l.OBJECT = function(e4) {
            var t3 = l[e4.type];
            return L.argument(void 0 !== t3, "No sizeOf function for type " + e4.type), t3(e4.value);
          }, w.TABLE = function(e4) {
            for (var t3 = [], r3 = e4.fields.length, o4 = [], n2 = [], s3 = 0; s3 < r3; s3 += 1) {
              var i2 = e4.fields[s3], a3 = w[i2.type], l2 = (L.argument(void 0 !== a3, "No encoding function for field type " + i2.type + " (" + i2.name + ")"), e4[i2.name]), a3 = a3(l2 = void 0 === l2 ? i2.value : l2);
              "TABLE" === i2.type ? (n2.push(t3.length), t3 = t3.concat([0, 0]), o4.push(a3)) : t3 = t3.concat(a3);
            }
            for (var u2 = 0; u2 < o4.length; u2 += 1) {
              var c2 = n2[u2], d2 = t3.length;
              L.argument(d2 < 65536, "Table " + e4.tableName + " too big."), t3[c2] = d2 >> 8, t3[c2 + 1] = 255 & d2, t3 = t3.concat(o4[u2]);
            }
            return t3;
          }, l.TABLE = function(e4) {
            for (var t3 = 0, r3 = e4.fields.length, o4 = 0; o4 < r3; o4 += 1) {
              var n2 = e4.fields[o4], s3 = l[n2.type], i2 = (L.argument(void 0 !== s3, "No sizeOf function for field type " + n2.type + " (" + n2.name + ")"), e4[n2.name]);
              t3 += s3(i2 = void 0 === i2 ? n2.value : i2), "TABLE" === n2.type && (t3 += 2);
            }
            return t3;
          }, w.RECORD = w.TABLE, l.RECORD = l.TABLE, w.LITERAL = function(e4) {
            return e4;
          }, l.LITERAL = function(e4) {
            return e4.length;
          }, n.prototype.encode = function() {
            return w.TABLE(this);
          }, n.prototype.sizeOf = function() {
            return l.TABLE(this);
          };
          var S = { Table: n, Record: n, Coverage: (fe.prototype = Object.create(n.prototype)).constructor = fe, ScriptList: (pe.prototype = Object.create(n.prototype)).constructor = pe, FeatureList: (me.prototype = Object.create(n.prototype)).constructor = me, LookupList: (ye.prototype = Object.create(n.prototype)).constructor = ye, ushortList: ce, tableList: de, recordList: he };
          function ge(e4, t3) {
            return e4.getUint8(t3);
          }
          function ve(e4, t3) {
            return e4.getUint16(t3, false);
          }
          function be(e4, t3) {
            return e4.getUint32(t3, false);
          }
          function _e(e4, t3) {
            return e4.getInt16(t3, false) + e4.getUint16(t3 + 2, false) / 65535;
          }
          var je = { byte: 1, uShort: 2, short: 2, uLong: 4, fixed: 4, longDateTime: 8, tag: 4 };
          function u(e4, t3) {
            this.data = e4, this.offset = t3, this.relativeOffset = 0;
          }
          u.prototype.parseByte = function() {
            var e4 = this.data.getUint8(this.offset + this.relativeOffset);
            return this.relativeOffset += 1, e4;
          }, u.prototype.parseChar = function() {
            var e4 = this.data.getInt8(this.offset + this.relativeOffset);
            return this.relativeOffset += 1, e4;
          }, u.prototype.parseCard8 = u.prototype.parseByte, u.prototype.parseCard16 = u.prototype.parseUShort = function() {
            var e4 = this.data.getUint16(this.offset + this.relativeOffset);
            return this.relativeOffset += 2, e4;
          }, u.prototype.parseSID = u.prototype.parseUShort, u.prototype.parseOffset16 = u.prototype.parseUShort, u.prototype.parseShort = function() {
            var e4 = this.data.getInt16(this.offset + this.relativeOffset);
            return this.relativeOffset += 2, e4;
          }, u.prototype.parseF2Dot14 = function() {
            var e4 = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
            return this.relativeOffset += 2, e4;
          }, u.prototype.parseOffset32 = u.prototype.parseULong = function() {
            var e4 = be(this.data, this.offset + this.relativeOffset);
            return this.relativeOffset += 4, e4;
          }, u.prototype.parseFixed = function() {
            var e4 = _e(this.data, this.offset + this.relativeOffset);
            return this.relativeOffset += 4, e4;
          }, u.prototype.parseString = function(e4) {
            var t3 = this.data, r3 = this.offset + this.relativeOffset, o4 = "";
            this.relativeOffset += e4;
            for (var n2 = 0; n2 < e4; n2++) o4 += String.fromCharCode(t3.getUint8(r3 + n2));
            return o4;
          }, u.prototype.parseTag = function() {
            return this.parseString(4);
          }, u.prototype.parseLongDateTime = function() {
            var e4 = be(this.data, this.offset + this.relativeOffset + 4);
            return e4 -= 2082844800, this.relativeOffset += 8, e4;
          }, u.prototype.parseVersion = function(e4) {
            var t3 = ve(this.data, this.offset + this.relativeOffset), r3 = ve(this.data, this.offset + this.relativeOffset + 2);
            return this.relativeOffset += 4, t3 + r3 / (e4 = void 0 === e4 ? 4096 : e4) / 10;
          }, u.prototype.skip = function(e4, t3) {
            this.relativeOffset += je[e4] * (t3 = void 0 === t3 ? 1 : t3);
          }, u.prototype.parseULongList = function(e4) {
            void 0 === e4 && (e4 = this.parseULong());
            for (var t3 = new Array(e4), r3 = this.data, o4 = this.offset + this.relativeOffset, n2 = 0; n2 < e4; n2++) t3[n2] = r3.getUint32(o4), o4 += 4;
            return this.relativeOffset += 4 * e4, t3;
          }, u.prototype.parseOffset16List = u.prototype.parseUShortList = function(e4) {
            void 0 === e4 && (e4 = this.parseUShort());
            for (var t3 = new Array(e4), r3 = this.data, o4 = this.offset + this.relativeOffset, n2 = 0; n2 < e4; n2++) t3[n2] = r3.getUint16(o4), o4 += 2;
            return this.relativeOffset += 2 * e4, t3;
          }, u.prototype.parseShortList = function(e4) {
            for (var t3 = new Array(e4), r3 = this.data, o4 = this.offset + this.relativeOffset, n2 = 0; n2 < e4; n2++) t3[n2] = r3.getInt16(o4), o4 += 2;
            return this.relativeOffset += 2 * e4, t3;
          }, u.prototype.parseByteList = function(e4) {
            for (var t3 = new Array(e4), r3 = this.data, o4 = this.offset + this.relativeOffset, n2 = 0; n2 < e4; n2++) t3[n2] = r3.getUint8(o4++);
            return this.relativeOffset += e4, t3;
          }, u.prototype.parseList = function(e4, t3) {
            t3 || (t3 = e4, e4 = this.parseUShort());
            for (var r3 = new Array(e4), o4 = 0; o4 < e4; o4++) r3[o4] = t3.call(this);
            return r3;
          }, u.prototype.parseList32 = function(e4, t3) {
            t3 || (t3 = e4, e4 = this.parseULong());
            for (var r3 = new Array(e4), o4 = 0; o4 < e4; o4++) r3[o4] = t3.call(this);
            return r3;
          }, u.prototype.parseRecordList = function(e4, t3) {
            t3 || (t3 = e4, e4 = this.parseUShort());
            for (var r3 = new Array(e4), o4 = Object.keys(t3), n2 = 0; n2 < e4; n2++) {
              for (var s3 = {}, i2 = 0; i2 < o4.length; i2++) {
                var a3 = o4[i2], l2 = t3[a3];
                s3[a3] = l2.call(this);
              }
              r3[n2] = s3;
            }
            return r3;
          }, u.prototype.parseRecordList32 = function(e4, t3) {
            t3 || (t3 = e4, e4 = this.parseULong());
            for (var r3 = new Array(e4), o4 = Object.keys(t3), n2 = 0; n2 < e4; n2++) {
              for (var s3 = {}, i2 = 0; i2 < o4.length; i2++) {
                var a3 = o4[i2], l2 = t3[a3];
                s3[a3] = l2.call(this);
              }
              r3[n2] = s3;
            }
            return r3;
          }, u.prototype.parseStruct = function(e4) {
            if ("function" == typeof e4) return e4.call(this);
            for (var t3 = Object.keys(e4), r3 = {}, o4 = 0; o4 < t3.length; o4++) {
              var n2 = t3[o4], s3 = e4[n2];
              r3[n2] = s3.call(this);
            }
            return r3;
          }, u.prototype.parseValueRecord = function(e4) {
            var t3;
            if (0 !== (e4 = void 0 === e4 ? this.parseUShort() : e4)) return t3 = {}, 1 & e4 && (t3.xPlacement = this.parseShort()), 2 & e4 && (t3.yPlacement = this.parseShort()), 4 & e4 && (t3.xAdvance = this.parseShort()), 8 & e4 && (t3.yAdvance = this.parseShort()), 16 & e4 && (t3.xPlaDevice = void 0, this.parseShort()), 32 & e4 && (t3.yPlaDevice = void 0, this.parseShort()), 64 & e4 && (t3.xAdvDevice = void 0, this.parseShort()), 128 & e4 && (t3.yAdvDevice = void 0, this.parseShort()), t3;
          }, u.prototype.parseValueRecordList = function() {
            for (var e4 = this.parseUShort(), t3 = this.parseUShort(), r3 = new Array(t3), o4 = 0; o4 < t3; o4++) r3[o4] = this.parseValueRecord(e4);
            return r3;
          }, u.prototype.parsePointer = function(e4) {
            var t3 = this.parseOffset16();
            if (0 < t3) return new u(this.data, this.offset + t3).parseStruct(e4);
          }, u.prototype.parsePointer32 = function(e4) {
            var t3 = this.parseOffset32();
            if (0 < t3) return new u(this.data, this.offset + t3).parseStruct(e4);
          }, u.prototype.parseListOfLists = function(e4) {
            for (var t3 = this.parseOffset16List(), r3 = t3.length, o4 = this.relativeOffset, n2 = new Array(r3), s3 = 0; s3 < r3; s3++) {
              var i2 = t3[s3];
              if (0 === i2) n2[s3] = void 0;
              else if (this.relativeOffset = i2, e4) {
                for (var a3 = this.parseOffset16List(), l2 = new Array(a3.length), u2 = 0; u2 < a3.length; u2++) this.relativeOffset = i2 + a3[u2], l2[u2] = e4.call(this);
                n2[s3] = l2;
              } else n2[s3] = this.parseUShortList();
            }
            return this.relativeOffset = o4, n2;
          }, u.prototype.parseCoverage = function() {
            var e4 = this.offset + this.relativeOffset, t3 = this.parseUShort(), r3 = this.parseUShort();
            if (1 === t3) return { format: 1, glyphs: this.parseUShortList(r3) };
            if (2 !== t3) throw new Error("0x" + e4.toString(16) + ": Coverage format must be 1 or 2.");
            for (var o4 = new Array(r3), n2 = 0; n2 < r3; n2++) o4[n2] = { start: this.parseUShort(), end: this.parseUShort(), index: this.parseUShort() };
            return { format: 2, ranges: o4 };
          }, u.prototype.parseClassDef = function() {
            var e4 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            if (1 === t3) return { format: 1, startGlyph: this.parseUShort(), classes: this.parseUShortList() };
            if (2 === t3) return { format: 2, ranges: this.parseRecordList({ start: u.uShort, end: u.uShort, classId: u.uShort }) };
            throw new Error("0x" + e4.toString(16) + ": ClassDef format must be 1 or 2.");
          }, u.list = function(e4, t3) {
            return function() {
              return this.parseList(e4, t3);
            };
          }, u.list32 = function(e4, t3) {
            return function() {
              return this.parseList32(e4, t3);
            };
          }, u.recordList = function(e4, t3) {
            return function() {
              return this.parseRecordList(e4, t3);
            };
          }, u.recordList32 = function(e4, t3) {
            return function() {
              return this.parseRecordList32(e4, t3);
            };
          }, u.pointer = function(e4) {
            return function() {
              return this.parsePointer(e4);
            };
          }, u.pointer32 = function(e4) {
            return function() {
              return this.parsePointer32(e4);
            };
          }, u.tag = u.prototype.parseTag, u.byte = u.prototype.parseByte, u.uShort = u.offset16 = u.prototype.parseUShort, u.uShortList = u.prototype.parseUShortList, u.uLong = u.offset32 = u.prototype.parseULong, u.uLongList = u.prototype.parseULongList, u.struct = u.prototype.parseStruct, u.coverage = u.prototype.parseCoverage, u.classDef = u.prototype.parseClassDef;
          var xe = { reserved: u.uShort, reqFeatureIndex: u.uShort, featureIndexes: u.uShortList }, R = (u.prototype.parseScriptList = function() {
            return this.parsePointer(u.recordList({ tag: u.tag, script: u.pointer({ defaultLangSys: u.pointer(xe), langSysRecords: u.recordList({ tag: u.tag, langSys: u.pointer(xe) }) }) })) || [];
          }, u.prototype.parseFeatureList = function() {
            return this.parsePointer(u.recordList({ tag: u.tag, feature: u.pointer({ featureParams: u.offset16, lookupListIndexes: u.uShortList }) })) || [];
          }, u.prototype.parseLookupList = function(o4) {
            return this.parsePointer(u.list(u.pointer(function() {
              var e4 = this.parseUShort(), t3 = (L.argument(1 <= e4 && e4 <= 9, "GPOS/GSUB lookup type " + e4 + " unknown."), this.parseUShort()), r3 = 16 & t3;
              return { lookupType: e4, lookupFlag: t3, subtables: this.parseList(u.pointer(o4[e4])), markFilteringSet: r3 ? this.parseUShort() : void 0 };
            }))) || [];
          }, u.prototype.parseFeatureVariationsList = function() {
            return this.parsePointer32(function() {
              var e4 = this.parseUShort(), t3 = this.parseUShort();
              return L.argument(1 === e4 && t3 < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({ conditionSetOffset: u.offset32, featureTableSubstitutionOffset: u.offset32 });
            }) || [];
          }, { getByte: ge, getCard8: ge, getUShort: ve, getCard16: ve, getShort: function(e4, t3) {
            return e4.getInt16(t3, false);
          }, getULong: be, getFixed: _e, getTag: function(e4, t3) {
            for (var r3 = "", o4 = t3; o4 < t3 + 4; o4 += 1) r3 += String.fromCharCode(e4.getInt8(o4));
            return r3;
          }, getOffset: function(e4, t3, r3) {
            for (var o4 = 0, n2 = 0; n2 < r3; n2 += 1) o4 = (o4 <<= 8) + e4.getUint8(t3 + n2);
            return o4;
          }, getBytes: function(e4, t3, r3) {
            for (var o4 = [], n2 = t3; n2 < r3; n2 += 1) o4.push(e4.getUint8(n2));
            return o4;
          }, bytesToString: function(e4) {
            for (var t3 = "", r3 = 0; r3 < e4.length; r3 += 1) t3 += String.fromCharCode(e4[r3]);
            return t3;
          }, Parser: u });
          var we = { parse: function(e4, t3) {
            for (var r3 = {}, o4 = (r3.version = R.getUShort(e4, t3), L.argument(0 === r3.version, "cmap table version should be 0."), r3.numTables = R.getUShort(e4, t3 + 2), -1), n2 = r3.numTables - 1; 0 <= n2; --n2) {
              var s3 = R.getUShort(e4, t3 + 4 + 8 * n2), i2 = R.getUShort(e4, t3 + 4 + 8 * n2 + 2);
              if (3 === s3 && (0 === i2 || 1 === i2 || 10 === i2) || 0 === s3 && (0 === i2 || 1 === i2 || 2 === i2 || 3 === i2 || 4 === i2)) {
                o4 = R.getULong(e4, t3 + 4 + 8 * n2 + 4);
                break;
              }
            }
            if (-1 === o4) throw new Error("No valid cmap sub-tables found.");
            var a3 = new R.Parser(e4, t3 + o4);
            if (r3.format = a3.parseUShort(), 12 === r3.format) {
              var l2, u2 = r3, c2 = a3;
              c2.parseUShort(), u2.length = c2.parseULong(), u2.language = c2.parseULong(), u2.groupCount = l2 = c2.parseULong(), u2.glyphIndexMap = {};
              for (var d2 = 0; d2 < l2; d2 += 1) for (var h2 = c2.parseULong(), f2 = c2.parseULong(), p2 = c2.parseULong(), m2 = h2; m2 <= f2; m2 += 1) u2.glyphIndexMap[m2] = p2, p2++;
            } else {
              if (4 !== r3.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r3.format + ").");
              var y2 = r3, g2 = e4, v2 = t3, b2 = o4;
              y2.length = a3.parseUShort(), y2.language = a3.parseUShort(), y2.segCount = _2 = a3.parseUShort() >> 1, a3.skip("uShort", 3), y2.glyphIndexMap = {};
              for (var _2, j2 = new R.Parser(g2, v2 + b2 + 14), x3 = new R.Parser(g2, v2 + b2 + 16 + 2 * _2), w2 = new R.Parser(g2, v2 + b2 + 16 + 4 * _2), S2 = new R.Parser(g2, v2 + b2 + 16 + 6 * _2), T2 = v2 + b2 + 16 + 8 * _2, E2 = 0; E2 < _2 - 1; E2 += 1) for (var M2 = void 0, k2 = j2.parseUShort(), O2 = x3.parseUShort(), C2 = w2.parseShort(), A2 = S2.parseUShort(), P2 = O2; P2 <= k2; P2 += 1) 0 !== A2 ? (T2 = (T2 = S2.offset + S2.relativeOffset - 2) + A2 + 2 * (P2 - O2), 0 !== (M2 = R.getUShort(g2, T2)) && (M2 = M2 + C2 & 65535)) : M2 = P2 + C2 & 65535, y2.glyphIndexMap[P2] = M2;
            }
            return r3;
          }, make: function(e4) {
            for (var t3 = true, r3 = e4.length - 1; 0 < r3; --r3) if (65535 < e4.get(r3).unicode) {
              console.log("Adding CMAP format 12 (needed!)"), t3 = false;
              break;
            }
            var o4, n2, s3 = [{ name: "version", type: "USHORT", value: 0 }, { name: "numTables", type: "USHORT", value: t3 ? 1 : 2 }, { name: "platformID", type: "USHORT", value: 3 }, { name: "encodingID", type: "USHORT", value: 1 }, { name: "offset", type: "ULONG", value: t3 ? 12 : 20 }], i2 = (s3 = (s3 = t3 ? s3 : s3.concat([{ name: "cmap12PlatformID", type: "USHORT", value: 3 }, { name: "cmap12EncodingID", type: "USHORT", value: 10 }, { name: "cmap12Offset", type: "ULONG", value: 0 }])).concat([{ name: "format", type: "USHORT", value: 4 }, { name: "cmap4Length", type: "USHORT", value: 0 }, { name: "language", type: "USHORT", value: 0 }, { name: "segCountX2", type: "USHORT", value: 0 }, { name: "searchRange", type: "USHORT", value: 0 }, { name: "entrySelector", type: "USHORT", value: 0 }, { name: "rangeShift", type: "USHORT", value: 0 }]), new S.Table("cmap", s3));
            for (i2.segments = [], r3 = 0; r3 < e4.length; r3 += 1) {
              for (var a3 = e4.get(r3), l2 = 0; l2 < a3.unicodes.length; l2 += 1) o4 = a3.unicodes[l2], n2 = r3, i2.segments.push({ end: o4, start: o4, delta: -(o4 - n2), offset: 0, glyphIndex: n2 });
              i2.segments = i2.segments.sort(function(e5, t4) {
                return e5.start - t4.start;
              });
            }
            i2.segments.push({ end: 65535, start: 65535, delta: 1, offset: 0 });
            var u2 = i2.segments.length, c2 = 0, d2 = [], h2 = [], f2 = [], p2 = [], m2 = [], y2 = [];
            for (r3 = 0; r3 < u2; r3 += 1) {
              var g2 = i2.segments[r3];
              g2.end <= 65535 && g2.start <= 65535 ? (d2 = d2.concat({ name: "end_" + r3, type: "USHORT", value: g2.end }), h2 = h2.concat({ name: "start_" + r3, type: "USHORT", value: g2.start }), f2 = f2.concat({ name: "idDelta_" + r3, type: "SHORT", value: g2.delta }), p2 = p2.concat({ name: "idRangeOffset_" + r3, type: "USHORT", value: g2.offset }), void 0 !== g2.glyphId && (m2 = m2.concat({ name: "glyph_" + r3, type: "USHORT", value: g2.glyphId }))) : c2 += 1, t3 || void 0 === g2.glyphIndex || (y2 = (y2 = (y2 = y2.concat({ name: "cmap12Start_" + r3, type: "ULONG", value: g2.start })).concat({ name: "cmap12End_" + r3, type: "ULONG", value: g2.end })).concat({ name: "cmap12Glyph_" + r3, type: "ULONG", value: g2.glyphIndex }));
            }
            return i2.segCountX2 = 2 * (u2 - c2), i2.searchRange = 2 * Math.pow(2, Math.floor(Math.log(u2 - c2) / Math.log(2))), i2.entrySelector = Math.log(i2.searchRange / 2) / Math.log(2), i2.rangeShift = i2.segCountX2 - i2.searchRange, i2.fields = i2.fields.concat(d2), i2.fields.push({ name: "reservedPad", type: "USHORT", value: 0 }), i2.fields = i2.fields.concat(h2), i2.fields = i2.fields.concat(f2), i2.fields = i2.fields.concat(p2), i2.fields = i2.fields.concat(m2), i2.cmap4Length = 14 + 2 * d2.length + 2 + 2 * h2.length + 2 * f2.length + 2 * p2.length + 2 * m2.length, t3 || (s3 = 16 + 4 * y2.length, i2.cmap12Offset = 20 + i2.cmap4Length, i2.fields = i2.fields.concat([{ name: "cmap12Format", type: "USHORT", value: 12 }, { name: "cmap12Reserved", type: "USHORT", value: 0 }, { name: "cmap12Length", type: "ULONG", value: s3 }, { name: "cmap12Language", type: "ULONG", value: 0 }, { name: "cmap12nGroups", type: "ULONG", value: y2.length / 3 }]), i2.fields = i2.fields.concat(y2)), i2;
          } }, Se = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], Te = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Ee = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], c = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
          function Me(e4) {
            this.font = e4;
          }
          function ke(e4) {
            this.cmap = e4;
          }
          function Oe(e4, t3) {
            this.encoding = e4, this.charset = t3;
          }
          function Ce(e4) {
            switch (e4.version) {
              case 1:
                this.names = c.slice();
                break;
              case 2:
                this.names = new Array(e4.numberOfGlyphs);
                for (var t3 = 0; t3 < e4.numberOfGlyphs; t3++) e4.glyphNameIndex[t3] < c.length ? this.names[t3] = c[e4.glyphNameIndex[t3]] : this.names[t3] = e4.names[e4.glyphNameIndex[t3] - c.length];
                break;
              case 2.5:
                this.names = new Array(e4.numberOfGlyphs);
                for (var r3 = 0; r3 < e4.numberOfGlyphs; r3++) this.names[r3] = c[r3 + e4.glyphNameIndex[r3]];
                break;
              default:
                this.names = [];
            }
          }
          Me.prototype.charToGlyphIndex = function(e4) {
            var t3 = e4.codePointAt(0), r3 = this.font.glyphs;
            if (r3) {
              for (var o4 = 0; o4 < r3.length; o4 += 1) for (var n2 = r3.get(o4), s3 = 0; s3 < n2.unicodes.length; s3 += 1) if (n2.unicodes[s3] === t3) return o4;
            }
            return null;
          }, ke.prototype.charToGlyphIndex = function(e4) {
            return this.cmap.glyphIndexMap[e4.codePointAt(0)] || 0;
          }, Oe.prototype.charToGlyphIndex = function(e4) {
            e4 = e4.codePointAt(0), e4 = this.encoding[e4];
            return this.charset.indexOf(e4);
          }, Ce.prototype.nameToGlyphIndex = function(e4) {
            return this.names.indexOf(e4);
          }, Ce.prototype.glyphIndexToName = function(e4) {
            return this.names[e4];
          };
          var d = { line: function(e4, t3, r3, o4, n2) {
            e4.beginPath(), e4.moveTo(t3, r3), e4.lineTo(o4, n2), e4.stroke();
          } };
          function f(e4) {
            this.bindConstructorValues(e4);
          }
          function Ae(t3, e4, r3) {
            Object.defineProperty(t3, e4, { get: function() {
              return t3.path, t3[r3];
            }, set: function(e5) {
              t3[r3] = e5;
            }, enumerable: true, configurable: true });
          }
          function Pe(e4, t3) {
            if (this.font = e4, this.glyphs = {}, Array.isArray(t3)) for (var r3 = 0; r3 < t3.length; r3++) this.glyphs[r3] = t3[r3];
            this.length = t3 && t3.length || 0;
          }
          f.prototype.bindConstructorValues = function(e4) {
            var t3;
            this.index = e4.index || 0, this.name = e4.name || null, this.unicode = e4.unicode || void 0, this.unicodes = e4.unicodes || void 0 !== e4.unicode ? [e4.unicode] : [], e4.xMin && (this.xMin = e4.xMin), e4.yMin && (this.yMin = e4.yMin), e4.xMax && (this.xMax = e4.xMax), e4.yMax && (this.yMax = e4.yMax), e4.advanceWidth && (this.advanceWidth = e4.advanceWidth), Object.defineProperty(this, "path", (e4 = e4.path, t3 = e4 || new h(), { configurable: true, get: function() {
              return t3 = "function" == typeof t3 ? t3() : t3;
            }, set: function(e5) {
              t3 = e5;
            } }));
          }, f.prototype.addUnicode = function(e4) {
            0 === this.unicodes.length && (this.unicode = e4), this.unicodes.push(e4);
          }, f.prototype.getBoundingBox = function() {
            return this.path.getBoundingBox();
          }, f.prototype.getPath = function(e4, t3, r3, o4, n2) {
            e4 = void 0 !== e4 ? e4 : 0, t3 = void 0 !== t3 ? t3 : 0, r3 = void 0 !== r3 ? r3 : 72;
            for (var s3, i2, a3 = (o4 = o4 || {}).xScale, l2 = o4.yScale, u2 = ((s3 = o4.hinting && n2 && n2.hinting ? this.path && n2.hinting.exec(this, r3) : s3) ? (i2 = n2.hinting.getCommands(s3), e4 = Math.round(e4), t3 = Math.round(t3), a3 = l2 = 1) : (i2 = this.path.commands, o4 = 1 / this.path.unitsPerEm * r3, void 0 === a3 && (a3 = o4), void 0 === l2 && (l2 = o4)), new h()), c2 = 0; c2 < i2.length; c2 += 1) {
              var d2 = i2[c2];
              "M" === d2.type ? u2.moveTo(e4 + d2.x * a3, t3 + -d2.y * l2) : "L" === d2.type ? u2.lineTo(e4 + d2.x * a3, t3 + -d2.y * l2) : "Q" === d2.type ? u2.quadraticCurveTo(e4 + d2.x1 * a3, t3 + -d2.y1 * l2, e4 + d2.x * a3, t3 + -d2.y * l2) : "C" === d2.type ? u2.curveTo(e4 + d2.x1 * a3, t3 + -d2.y1 * l2, e4 + d2.x2 * a3, t3 + -d2.y2 * l2, e4 + d2.x * a3, t3 + -d2.y * l2) : "Z" === d2.type && u2.closePath();
            }
            return u2;
          }, f.prototype.getContours = function() {
            if (void 0 === this.points) return [];
            for (var e4 = [], t3 = [], r3 = 0; r3 < this.points.length; r3 += 1) {
              var o4 = this.points[r3];
              t3.push(o4), o4.lastPointOfContour && (e4.push(t3), t3 = []);
            }
            return L.argument(0 === t3.length, "There are still points left in the current contour."), e4;
          }, f.prototype.getMetrics = function() {
            for (var e4 = this.path.commands, t3 = [], r3 = [], o4 = 0; o4 < e4.length; o4 += 1) {
              var n2 = e4[o4];
              "Z" !== n2.type && (t3.push(n2.x), r3.push(n2.y)), "Q" !== n2.type && "C" !== n2.type || (t3.push(n2.x1), r3.push(n2.y1)), "C" === n2.type && (t3.push(n2.x2), r3.push(n2.y2));
            }
            var s3 = { xMin: Math.min.apply(null, t3), yMin: Math.min.apply(null, r3), xMax: Math.max.apply(null, t3), yMax: Math.max.apply(null, r3), leftSideBearing: this.leftSideBearing };
            return isFinite(s3.xMin) || (s3.xMin = 0), isFinite(s3.xMax) || (s3.xMax = this.advanceWidth), isFinite(s3.yMin) || (s3.yMin = 0), isFinite(s3.yMax) || (s3.yMax = 0), s3.rightSideBearing = this.advanceWidth - s3.leftSideBearing - (s3.xMax - s3.xMin), s3;
          }, f.prototype.draw = function(e4, t3, r3, o4, n2) {
            this.getPath(t3, r3, o4, n2).draw(e4);
          }, f.prototype.drawPoints = function(i2, e4, t3, r3) {
            function o4(e5, t4, r4, o5) {
              var n3 = 2 * Math.PI;
              i2.beginPath();
              for (var s4 = 0; s4 < e5.length; s4 += 1) i2.moveTo(t4 + e5[s4].x * o5, r4 + e5[s4].y * o5), i2.arc(t4 + e5[s4].x * o5, r4 + e5[s4].y * o5, 2, 0, n3, false);
              i2.closePath(), i2.fill();
            }
            e4 = void 0 !== e4 ? e4 : 0, t3 = void 0 !== t3 ? t3 : 0;
            for (var r3 = 1 / this.path.unitsPerEm * (r3 = void 0 !== r3 ? r3 : 24), n2 = [], s3 = [], a3 = this.path, l2 = 0; l2 < a3.commands.length; l2 += 1) {
              var u2 = a3.commands[l2];
              void 0 !== u2.x && n2.push({ x: u2.x, y: -u2.y }), void 0 !== u2.x1 && s3.push({ x: u2.x1, y: -u2.y1 }), void 0 !== u2.x2 && s3.push({ x: u2.x2, y: -u2.y2 });
            }
            i2.fillStyle = "blue", o4(n2, e4, t3, r3), i2.fillStyle = "red", o4(s3, e4, t3, r3);
          }, f.prototype.drawMetrics = function(e4, t3, r3, o4) {
            t3 = void 0 !== t3 ? t3 : 0, r3 = void 0 !== r3 ? r3 : 0, o4 = 1 / this.path.unitsPerEm * (o4 = void 0 !== o4 ? o4 : 24), e4.lineWidth = 1, e4.strokeStyle = "black", d.line(e4, t3, -1e4, t3, 1e4), d.line(e4, -1e4, r3, 1e4, r3);
            var n2 = this.xMin || 0, s3 = this.yMin || 0, i2 = this.xMax || 0, a3 = this.yMax || 0, l2 = this.advanceWidth || 0;
            e4.strokeStyle = "blue", d.line(e4, t3 + n2 * o4, -1e4, t3 + n2 * o4, 1e4), d.line(e4, t3 + i2 * o4, -1e4, t3 + i2 * o4, 1e4), d.line(e4, -1e4, r3 + -s3 * o4, 1e4, r3 + -s3 * o4), d.line(e4, -1e4, r3 + -a3 * o4, 1e4, r3 + -a3 * o4), e4.strokeStyle = "green", d.line(e4, t3 + l2 * o4, -1e4, t3 + l2 * o4, 1e4);
          }, Pe.prototype.get = function(e4) {
            return "function" == typeof this.glyphs[e4] && (this.glyphs[e4] = this.glyphs[e4]()), this.glyphs[e4];
          }, Pe.prototype.push = function(e4, t3) {
            this.glyphs[e4] = t3, this.length++;
          };
          var p = { GlyphSet: Pe, glyphLoader: function(e4, t3) {
            return new f({ index: t3, font: e4 });
          }, ttfGlyphLoader: function(r3, e4, o4, n2, s3, i2) {
            return function() {
              var t3 = new f({ index: e4, font: r3 });
              return t3.path = function() {
                o4(t3, n2, s3);
                var e5 = i2(r3.glyphs, t3);
                return e5.unitsPerEm = r3.unitsPerEm, e5;
              }, Ae(t3, "xMin", "_xMin"), Ae(t3, "xMax", "_xMax"), Ae(t3, "yMin", "_yMin"), Ae(t3, "yMax", "_yMax"), t3;
            };
          }, cffGlyphLoader: function(r3, e4, o4, n2) {
            return function() {
              var t3 = new f({ index: e4, font: r3 });
              return t3.path = function() {
                var e5 = o4(r3, t3, n2);
                return e5.unitsPerEm = r3.unitsPerEm, e5;
              }, t3;
            };
          } };
          function Le(e4) {
            e4 = e4.length < 1240 ? 107 : e4.length < 33900 ? 1131 : 32768;
            return e4;
          }
          function y(e4, t3, r3) {
            var o4, n2 = [], s3 = [], i2 = R.getCard16(e4, t3);
            if (0 !== i2) {
              for (var a3 = R.getByte(e4, t3 + 2), l2 = t3 + (i2 + 1) * a3 + 2, u2 = t3 + 3, c2 = 0; c2 < i2 + 1; c2 += 1) n2.push(R.getOffset(e4, u2, a3)), u2 += a3;
              o4 = l2 + n2[i2];
            } else o4 = t3 + 2;
            for (var d2 = 0; d2 < n2.length - 1; d2 += 1) {
              var h2 = R.getBytes(e4, l2 + n2[d2], l2 + n2[d2 + 1]);
              r3 && (h2 = r3(h2)), s3.push(h2);
            }
            return { objects: s3, startOffset: t3, endOffset: o4 };
          }
          function Re(e4, t3) {
            if (28 === t3) return e4.parseByte() << 8 | e4.parseByte();
            if (29 === t3) return e4.parseByte() << 24 | e4.parseByte() << 16 | e4.parseByte() << 8 | e4.parseByte();
            if (30 === t3) {
              for (var r3 = e4, o4 = "", n2 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"]; ; ) {
                var s3 = r3.parseByte(), i2 = s3 >> 4, s3 = 15 & s3;
                if (15 == i2) break;
                if (o4 += n2[i2], 15 == s3) break;
                o4 += n2[s3];
              }
              return parseFloat(o4);
            }
            if (32 <= t3 && t3 <= 246) return t3 - 139;
            if (247 <= t3 && t3 <= 250) return 256 * (t3 - 247) + e4.parseByte() + 108;
            if (251 <= t3 && t3 <= 254) return 256 * -(t3 - 251) - e4.parseByte() - 108;
            throw new Error("Invalid b0 " + t3);
          }
          function Ie(e4, t3, r3) {
            var o4 = new R.Parser(e4, t3 = void 0 !== t3 ? t3 : 0), n2 = [], s3 = [];
            for (r3 = void 0 !== r3 ? r3 : e4.length; o4.relativeOffset < r3; ) {
              var i2 = o4.parseByte();
              i2 <= 21 ? (12 === i2 && (i2 = 1200 + o4.parseByte()), n2.push([i2, s3]), s3 = []) : s3.push(Re(o4, i2));
            }
            for (var a3 = n2, l2 = {}, u2 = 0; u2 < a3.length; u2 += 1) {
              var c2 = a3[u2][0], d2 = a3[u2][1], h2 = void 0, h2 = 1 === d2.length ? d2[0] : d2;
              if (l2.hasOwnProperty(c2) && !isNaN(l2[c2])) throw new Error("Object " + l2 + " already has key " + c2);
              l2[c2] = h2;
            }
            return l2;
          }
          function De(e4, t3) {
            return t3 = t3 <= 390 ? Se[t3] : e4[t3 - 391];
          }
          function Fe(e4, t3, r3) {
            for (var o4, n2 = {}, s3 = 0; s3 < t3.length; s3 += 1) {
              var i2 = t3[s3];
              if (Array.isArray(i2.type)) {
                var a3 = [];
                a3.length = i2.type.length;
                for (var l2 = 0; l2 < i2.type.length; l2++) void 0 === (o4 = void 0 !== e4[i2.op] ? e4[i2.op][l2] : void 0) && (o4 = void 0 !== i2.value && void 0 !== i2.value[l2] ? i2.value[l2] : null), "SID" === i2.type[l2] && (o4 = De(r3, o4)), a3[l2] = o4;
                n2[i2.name] = a3;
              } else void 0 === (o4 = e4[i2.op]) && (o4 = void 0 !== i2.value ? i2.value : null), "SID" === i2.type && (o4 = De(r3, o4)), n2[i2.name] = o4;
            }
            return n2;
          }
          var Ue = [{ name: "version", op: 0, type: "SID" }, { name: "notice", op: 1, type: "SID" }, { name: "copyright", op: 1200, type: "SID" }, { name: "fullName", op: 2, type: "SID" }, { name: "familyName", op: 3, type: "SID" }, { name: "weight", op: 4, type: "SID" }, { name: "isFixedPitch", op: 1201, type: "number", value: 0 }, { name: "italicAngle", op: 1202, type: "number", value: 0 }, { name: "underlinePosition", op: 1203, type: "number", value: -100 }, { name: "underlineThickness", op: 1204, type: "number", value: 50 }, { name: "paintType", op: 1205, type: "number", value: 0 }, { name: "charstringType", op: 1206, type: "number", value: 2 }, { name: "fontMatrix", op: 1207, type: ["real", "real", "real", "real", "real", "real"], value: [1e-3, 0, 0, 1e-3, 0, 0] }, { name: "uniqueId", op: 13, type: "number" }, { name: "fontBBox", op: 5, type: ["number", "number", "number", "number"], value: [0, 0, 0, 0] }, { name: "strokeWidth", op: 1208, type: "number", value: 0 }, { name: "xuid", op: 14, type: [], value: null }, { name: "charset", op: 15, type: "offset", value: 0 }, { name: "encoding", op: 16, type: "offset", value: 0 }, { name: "charStrings", op: 17, type: "offset", value: 0 }, { name: "private", op: 18, type: ["number", "offset"], value: [0, 0] }, { name: "ros", op: 1230, type: ["SID", "SID", "number"] }, { name: "cidFontVersion", op: 1231, type: "number", value: 0 }, { name: "cidFontRevision", op: 1232, type: "number", value: 0 }, { name: "cidFontType", op: 1233, type: "number", value: 0 }, { name: "cidCount", op: 1234, type: "number", value: 8720 }, { name: "uidBase", op: 1235, type: "number" }, { name: "fdArray", op: 1236, type: "offset" }, { name: "fdSelect", op: 1237, type: "offset" }, { name: "fontName", op: 1238, type: "SID" }], Ne = [{ name: "subrs", op: 19, type: "offset", value: 0 }, { name: "defaultWidthX", op: 20, type: "number", value: 0 }, { name: "nominalWidthX", op: 21, type: "number", value: 0 }];
          function Be(e4, t3, r3, o4) {
            return Fe(Ie(e4, t3, r3), Ne, o4);
          }
          function Ge(e4, t3, r3, o4) {
            for (var n2 = [], s3 = 0; s3 < r3.length; s3 += 1) {
              var i2 = new DataView(new Uint8Array(r3[s3]).buffer), i2 = (a3 = o4, Fe(Ie(i2, 0, i2.byteLength), Ue, a3)), a3 = (i2._subrs = [], i2._subrsBias = 0, i2.private[0]), l2 = i2.private[1];
              0 !== a3 && 0 !== l2 && (a3 = Be(e4, l2 + t3, a3, o4), i2._defaultWidthX = a3.defaultWidthX, i2._nominalWidthX = a3.nominalWidthX, 0 !== a3.subrs && (l2 = y(e4, l2 + a3.subrs + t3), i2._subrs = l2.objects, i2._subrsBias = Le(i2._subrs)), i2._privateDict = a3), n2.push(i2);
            }
            return n2;
          }
          function Ve(y2, g2, e4) {
            var v2, b2, _2, j2, t3, x3, w2, r3, S2, T2 = new h(), E2 = [], M2 = 0, k2 = false, O2 = false, C2 = 0, A2 = 0, P2 = (S2 = (y2.isCIDFont ? (t3 = y2.tables.cff.topDict._fdSelect[g2.index], t3 = y2.tables.cff.topDict._fdArray[t3], x3 = t3._subrs, w2 = t3._subrsBias, r3 = t3._defaultWidthX, t3) : (x3 = y2.tables.cff.topDict._subrs, w2 = y2.tables.cff.topDict._subrsBias, r3 = y2.tables.cff.topDict._defaultWidthX, y2.tables.cff.topDict))._nominalWidthX, r3);
            function L2(e5, t4) {
              O2 && T2.closePath(), T2.moveTo(e5, t4), O2 = true;
            }
            function R2() {
              E2.length % 2 == 0 || k2 || (P2 = E2.shift() + S2), M2 += E2.length >> 1, E2.length = 0, k2 = true;
            }
            return function e5(t4) {
              for (var r4, o4, n2, s3, i2, a3, l2, u2, c2, d2, h2, f2, p2 = 0; p2 < t4.length; ) {
                var m2 = t4[p2];
                switch (p2 += 1, m2) {
                  case 1:
                  case 3:
                    R2();
                    break;
                  case 4:
                    1 < E2.length && !k2 && (P2 = E2.shift() + S2, k2 = true), A2 += E2.pop(), L2(C2, A2);
                    break;
                  case 5:
                    for (; 0 < E2.length; ) C2 += E2.shift(), A2 += E2.shift(), T2.lineTo(C2, A2);
                    break;
                  case 6:
                    for (; 0 < E2.length && (C2 += E2.shift(), T2.lineTo(C2, A2), 0 !== E2.length); ) A2 += E2.shift(), T2.lineTo(C2, A2);
                    break;
                  case 7:
                    for (; 0 < E2.length && (A2 += E2.shift(), T2.lineTo(C2, A2), 0 !== E2.length); ) C2 += E2.shift(), T2.lineTo(C2, A2);
                    break;
                  case 8:
                    for (; 0 < E2.length; ) v2 = C2 + E2.shift(), b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2 + E2.shift(), A2 = j2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, C2, A2);
                    break;
                  case 10:
                    i2 = E2.pop() + w2, (a3 = x3[i2]) && e5(a3);
                    break;
                  case 11:
                    return;
                  case 12:
                    switch (m2 = t4[p2], p2 += 1, m2) {
                      case 35:
                        v2 = C2 + E2.shift(), b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = j2 + E2.shift(), c2 = l2 + E2.shift(), d2 = u2 + E2.shift(), h2 = c2 + E2.shift(), f2 = d2 + E2.shift(), C2 = h2 + E2.shift(), A2 = f2 + E2.shift(), E2.shift(), T2.curveTo(v2, b2, _2, j2, l2, u2), T2.curveTo(c2, d2, h2, f2, C2, A2);
                        break;
                      case 34:
                        v2 = C2 + E2.shift(), b2 = A2, _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = j2, c2 = l2 + E2.shift(), d2 = j2, h2 = c2 + E2.shift(), f2 = A2, C2 = h2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, l2, u2), T2.curveTo(c2, d2, h2, f2, C2, A2);
                        break;
                      case 36:
                        v2 = C2 + E2.shift(), b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = j2, c2 = l2 + E2.shift(), d2 = j2, h2 = c2 + E2.shift(), f2 = d2 + E2.shift(), C2 = h2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, l2, u2), T2.curveTo(c2, d2, h2, f2, C2, A2);
                        break;
                      case 37:
                        v2 = C2 + E2.shift(), b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), l2 = _2 + E2.shift(), u2 = j2 + E2.shift(), c2 = l2 + E2.shift(), d2 = u2 + E2.shift(), h2 = c2 + E2.shift(), f2 = d2 + E2.shift(), Math.abs(h2 - C2) > Math.abs(f2 - A2) ? C2 = h2 + E2.shift() : A2 = f2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, l2, u2), T2.curveTo(c2, d2, h2, f2, C2, A2);
                        break;
                      default:
                        console.log("Glyph " + g2.index + ": unknown operator 1200" + m2), E2.length = 0;
                    }
                    break;
                  case 14:
                    0 < E2.length && !k2 && (P2 = E2.shift() + S2, k2 = true), O2 && (T2.closePath(), O2 = false);
                    break;
                  case 18:
                    R2();
                    break;
                  case 19:
                  case 20:
                    R2(), p2 += M2 + 7 >> 3;
                    break;
                  case 21:
                    2 < E2.length && !k2 && (P2 = E2.shift() + S2, k2 = true), A2 += E2.pop(), L2(C2 += E2.pop(), A2);
                    break;
                  case 22:
                    1 < E2.length && !k2 && (P2 = E2.shift() + S2, k2 = true), L2(C2 += E2.pop(), A2);
                    break;
                  case 23:
                    R2();
                    break;
                  case 24:
                    for (; 2 < E2.length; ) v2 = C2 + E2.shift(), b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2 + E2.shift(), A2 = j2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, C2, A2);
                    C2 += E2.shift(), A2 += E2.shift(), T2.lineTo(C2, A2);
                    break;
                  case 25:
                    for (; 6 < E2.length; ) C2 += E2.shift(), A2 += E2.shift(), T2.lineTo(C2, A2);
                    v2 = C2 + E2.shift(), b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2 + E2.shift(), A2 = j2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, C2, A2);
                    break;
                  case 26:
                    for (E2.length % 2 && (C2 += E2.shift()); 0 < E2.length; ) v2 = C2, b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2, A2 = j2 + E2.shift(), T2.curveTo(v2, b2, _2, j2, C2, A2);
                    break;
                  case 27:
                    for (E2.length % 2 && (A2 += E2.shift()); 0 < E2.length; ) v2 = C2 + E2.shift(), b2 = A2, _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2 + E2.shift(), A2 = j2, T2.curveTo(v2, b2, _2, j2, C2, A2);
                    break;
                  case 28:
                    r4 = t4[p2], o4 = t4[p2 + 1], E2.push((r4 << 24 | o4 << 16) >> 16), p2 += 2;
                    break;
                  case 29:
                    i2 = E2.pop() + y2.gsubrsBias, (a3 = y2.gsubrs[i2]) && e5(a3);
                    break;
                  case 30:
                    for (; 0 < E2.length && (v2 = C2, b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2 + E2.shift(), A2 = j2 + (1 === E2.length ? E2.shift() : 0), T2.curveTo(v2, b2, _2, j2, C2, A2), 0 !== E2.length); ) v2 = C2 + E2.shift(), b2 = A2, _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), A2 = j2 + E2.shift(), C2 = _2 + (1 === E2.length ? E2.shift() : 0), T2.curveTo(v2, b2, _2, j2, C2, A2);
                    break;
                  case 31:
                    for (; 0 < E2.length && (v2 = C2 + E2.shift(), b2 = A2, _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), A2 = j2 + E2.shift(), C2 = _2 + (1 === E2.length ? E2.shift() : 0), T2.curveTo(v2, b2, _2, j2, C2, A2), 0 !== E2.length); ) v2 = C2, b2 = A2 + E2.shift(), _2 = v2 + E2.shift(), j2 = b2 + E2.shift(), C2 = _2 + E2.shift(), A2 = j2 + (1 === E2.length ? E2.shift() : 0), T2.curveTo(v2, b2, _2, j2, C2, A2);
                    break;
                  default:
                    m2 < 32 ? console.log("Glyph " + g2.index + ": unknown operator " + m2) : m2 < 247 ? E2.push(m2 - 139) : m2 < 251 ? (r4 = t4[p2], p2 += 1, E2.push(256 * (m2 - 247) + r4 + 108)) : m2 < 255 ? (r4 = t4[p2], p2 += 1, E2.push(256 * -(m2 - 251) - r4 - 108)) : (r4 = t4[p2], o4 = t4[p2 + 1], n2 = t4[p2 + 2], s3 = t4[p2 + 3], p2 += 4, E2.push((r4 << 24 | o4 << 16 | n2 << 8 | s3) / 65536));
                }
              }
            }(e4), g2.advanceWidth = P2, T2;
          }
          function ze(e4, t3) {
            var r3, o4 = Se.indexOf(e4);
            return 0 <= o4 && (r3 = o4), 0 <= (o4 = t3.indexOf(e4)) ? r3 = o4 + Se.length : (r3 = Se.length + t3.length, t3.push(e4)), r3;
          }
          function He(e4, t3, r3) {
            for (var o4 = {}, n2 = 0; n2 < e4.length; n2 += 1) {
              var s3 = e4[n2], i2 = t3[s3.name];
              void 0 === i2 || function e5(t4, r4) {
                if (t4 === r4) return 1;
                if (Array.isArray(t4) && Array.isArray(r4) && t4.length === r4.length) {
                  for (var o5 = 0; o5 < t4.length; o5 += 1) if (!e5(t4[o5], r4[o5])) return;
                  return 1;
                }
              }(i2, s3.value) || ("SID" === s3.type && (i2 = ze(i2, r3)), o4[s3.op] = { name: s3.name, type: s3.type, value: i2 });
            }
            return o4;
          }
          function We(e4, t3) {
            var r3 = new S.Record("Top DICT", [{ name: "dict", type: "DICT", value: {} }]);
            return r3.dict = He(Ue, e4, t3), r3;
          }
          function qe(e4) {
            var t3 = new S.Record("Top DICT INDEX", [{ name: "topDicts", type: "INDEX", value: [] }]);
            return t3.topDicts = [{ name: "topDict_0", type: "TABLE", value: e4 }], t3;
          }
          function Xe(e4) {
            for (var t3 = new S.Record("CharStrings INDEX", [{ name: "charStrings", type: "INDEX", value: [] }]), r3 = 0; r3 < e4.length; r3 += 1) {
              var o4 = e4.get(r3), n2 = function(e5) {
                for (var t4 = [], r4 = e5.path, o5 = (t4.push({ name: "width", type: "NUMBER", value: e5.advanceWidth }), 0), n3 = 0, s3 = 0; s3 < r4.commands.length; s3 += 1) {
                  var i2, a3, l2, u2, c2 = void 0, d2 = void 0, h2 = r4.commands[s3];
                  "M" === (h2 = "Q" === h2.type ? { type: "C", x: h2.x, y: h2.y, x1: 1 / 3 * o5 + 2 / 3 * h2.x1, y1: 1 / 3 * n3 + 2 / 3 * h2.y1, x2: 1 / 3 * h2.x + 2 / 3 * h2.x1, y2: 1 / 3 * h2.y + 2 / 3 * h2.y1 } : h2).type ? (c2 = Math.round(h2.x - o5), d2 = Math.round(h2.y - n3), t4.push({ name: "dx", type: "NUMBER", value: c2 }), t4.push({ name: "dy", type: "NUMBER", value: d2 }), t4.push({ name: "rmoveto", type: "OP", value: 21 }), o5 = Math.round(h2.x), n3 = Math.round(h2.y)) : "L" === h2.type ? (c2 = Math.round(h2.x - o5), d2 = Math.round(h2.y - n3), t4.push({ name: "dx", type: "NUMBER", value: c2 }), t4.push({ name: "dy", type: "NUMBER", value: d2 }), t4.push({ name: "rlineto", type: "OP", value: 5 }), o5 = Math.round(h2.x), n3 = Math.round(h2.y)) : "C" === h2.type && (i2 = Math.round(h2.x1 - o5), a3 = Math.round(h2.y1 - n3), l2 = Math.round(h2.x2 - h2.x1), u2 = Math.round(h2.y2 - h2.y1), c2 = Math.round(h2.x - h2.x2), d2 = Math.round(h2.y - h2.y2), t4.push({ name: "dx1", type: "NUMBER", value: i2 }), t4.push({ name: "dy1", type: "NUMBER", value: a3 }), t4.push({ name: "dx2", type: "NUMBER", value: l2 }), t4.push({ name: "dy2", type: "NUMBER", value: u2 }), t4.push({ name: "dx", type: "NUMBER", value: c2 }), t4.push({ name: "dy", type: "NUMBER", value: d2 }), t4.push({ name: "rrcurveto", type: "OP", value: 8 }), o5 = Math.round(h2.x), n3 = Math.round(h2.y));
                }
                return t4.push({ name: "endchar", type: "OP", value: 14 }), t4;
              }(o4);
              t3.charStrings.push({ name: o4.name, type: "CHARSTRING", value: n2 });
            }
            return t3;
          }
          var Ye = { parse: function(e4, t3, r3) {
            r3.tables.cff = {}, o4 = e4, n2 = t3, (s3 = {}).formatMajor = R.getCard8(o4, n2), s3.formatMinor = R.getCard8(o4, n2 + 1), s3.size = R.getCard8(o4, n2 + 2), s3.offsetSize = R.getCard8(o4, n2 + 3), s3.startOffset = n2, s3.endOffset = n2 + 4;
            var o4 = y(e4, s3.endOffset, R.bytesToString), n2 = y(e4, o4.endOffset), s3 = y(e4, n2.endOffset, R.bytesToString), o4 = y(e4, s3.endOffset);
            if (r3.gsubrs = o4.objects, r3.gsubrsBias = Le(r3.gsubrs), 1 !== (o4 = Ge(e4, t3, n2.objects, s3.objects)).length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + o4.length);
            if (n2 = o4[0], (r3.tables.cff.topDict = n2)._privateDict && (r3.defaultWidthX = n2._privateDict.defaultWidthX, r3.nominalWidthX = n2._privateDict.nominalWidthX), void 0 !== n2.ros[0] && void 0 !== n2.ros[1] && (r3.isCIDFont = true), r3.isCIDFont) {
              var o4 = n2.fdArray, i2 = n2.fdSelect;
              if (0 === o4 || 0 === i2) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
              o4 = Ge(e4, t3, y(e4, o4 += t3).objects, s3.objects);
              n2._fdArray = o4, n2._fdSelect = function(e5, t4, r4, o5) {
                var n3, s4 = [], i3 = new R.Parser(e5, t4);
                if (0 === (e5 = i3.parseCard8())) for (var a4 = 0; a4 < r4; a4++) {
                  if (o5 <= (n3 = i3.parseCard8())) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n3 + " (FD count " + o5 + ")");
                  s4.push(n3);
                }
                else {
                  if (3 !== e5) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + e5);
                  var l3, u3 = i3.parseCard16(), c2 = i3.parseCard16();
                  if (0 !== c2) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c2);
                  for (var d2 = 0; d2 < u3; d2++) {
                    if (n3 = i3.parseCard8(), l3 = i3.parseCard16(), o5 <= n3) throw new Error("CFF table CID Font FDSelect has bad FD index value " + n3 + " (FD count " + o5 + ")");
                    if (r4 < l3) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + l3);
                    for (; c2 < l3; c2++) s4.push(n3);
                    c2 = l3;
                  }
                  if (l3 !== r4) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + l3);
                }
                return s4;
              }(e4, i2 += t3, r3.numGlyphs, o4.length);
            }
            var i2 = t3 + n2.private[1], o4 = Be(e4, i2, n2.private[0], s3.objects), a3 = (r3.defaultWidthX = o4.defaultWidthX, r3.nominalWidthX = o4.nominalWidthX, 0 !== o4.subrs ? (i2 = y(e4, i2 + o4.subrs), r3.subrs = i2.objects, r3.subrsBias = Le(r3.subrs)) : (r3.subrs = [], r3.subrsBias = 0), y(e4, t3 + n2.charStrings)), o4 = (r3.nGlyphs = a3.objects.length, function(e5, t4, r4, o5) {
              var n3 = new R.Parser(e5, t4), s4 = (--r4, [".notdef"]);
              if (0 === (e5 = n3.parseCard8())) for (var i3 = 0; i3 < r4; i3 += 1) a4 = n3.parseSID(), s4.push(De(o5, a4));
              else if (1 === e5) for (; s4.length <= r4; ) for (var a4 = n3.parseSID(), l3 = n3.parseCard8(), u3 = 0; u3 <= l3; u3 += 1) s4.push(De(o5, a4)), a4 += 1;
              else {
                if (2 !== e5) throw new Error("Unknown charset format " + e5);
                for (; s4.length <= r4; ) {
                  a4 = n3.parseSID(), l3 = n3.parseCard16();
                  for (var c2 = 0; c2 <= l3; c2 += 1) s4.push(De(o5, a4)), a4 += 1;
                }
              }
              return s4;
            }(e4, t3 + n2.charset, r3.nGlyphs, s3.objects));
            0 === n2.encoding ? r3.cffEncoding = new Oe(Te, o4) : 1 === n2.encoding ? r3.cffEncoding = new Oe(Ee, o4) : r3.cffEncoding = function(e5, t4, r4) {
              var o5 = {}, n3 = new R.Parser(e5, t4);
              if (0 === (e5 = n3.parseCard8())) for (var s4 = n3.parseCard8(), i3 = 0; i3 < s4; i3 += 1) o5[l3 = n3.parseCard8()] = i3;
              else {
                if (1 !== e5) throw new Error("Unknown encoding format " + e5);
                for (var a4 = n3.parseCard8(), l3 = 1, u3 = 0; u3 < a4; u3 += 1) for (var c2 = n3.parseCard8(), d2 = n3.parseCard8(), h2 = c2; h2 <= c2 + d2; h2 += 1) o5[h2] = l3, l3 += 1;
              }
              return new Oe(o5, r4);
            }(e4, t3 + n2.encoding, o4), r3.encoding = r3.encoding || r3.cffEncoding, r3.glyphs = new p.GlyphSet(r3);
            for (var l2 = 0; l2 < r3.nGlyphs; l2 += 1) {
              var u2 = a3.objects[l2];
              r3.glyphs.push(l2, p.cffGlyphLoader(r3, l2, Ve, u2));
            }
          }, make: function(e4, t3) {
            for (var r3, o4 = new S.Table("CFF ", [{ name: "header", type: "RECORD" }, { name: "nameIndex", type: "RECORD" }, { name: "topDictIndex", type: "RECORD" }, { name: "stringIndex", type: "RECORD" }, { name: "globalSubrIndex", type: "RECORD" }, { name: "charsets", type: "RECORD" }, { name: "charStringsIndex", type: "RECORD" }, { name: "privateDict", type: "RECORD" }]), n2 = 1 / t3.unitsPerEm, n2 = { version: t3.version, fullName: t3.fullName, familyName: t3.familyName, weight: t3.weightName, fontBBox: t3.fontBBox || [0, 0, 0, 0], fontMatrix: [n2, 0, 0, n2, 0, 0], charset: 999, encoding: 0, charStrings: 999, private: [0, 999] }, s3 = [], i2 = 1; i2 < e4.length; i2 += 1) r3 = e4.get(i2), s3.push(r3.name);
            var a3, l2, u2 = [], t3 = (o4.header = new S.Record("Header", [{ name: "major", type: "Card8", value: 1 }, { name: "minor", type: "Card8", value: 0 }, { name: "hdrSize", type: "Card8", value: 4 }, { name: "major", type: "Card8", value: 1 }]), o4.nameIndex = function(e5) {
              var t4 = new S.Record("Name INDEX", [{ name: "names", type: "INDEX", value: [] }]);
              t4.names = [];
              for (var r4 = 0; r4 < e5.length; r4 += 1) t4.names.push({ name: "name_" + r4, type: "NAME", value: e5[r4] });
              return t4;
            }([t3.postScriptName]), We(n2, u2)), c2 = (o4.topDictIndex = qe(t3), o4.globalSubrIndex = new S.Record("Global Subr INDEX", [{ name: "subrs", type: "INDEX", value: [] }]), o4.charsets = function(e5, t4) {
              for (var r4 = new S.Record("Charsets", [{ name: "format", type: "Card8", value: 0 }]), o5 = 0; o5 < e5.length; o5 += 1) {
                var n3 = ze(e5[o5], t4);
                r4.fields.push({ name: "glyph_" + o5, type: "SID", value: n3 });
              }
              return r4;
            }(s3, u2), o4.charStringsIndex = Xe(e4), o4.privateDict = (c2 = {}, a3 = u2, (l2 = new S.Record("Private DICT", [{ name: "dict", type: "DICT", value: {} }])).dict = He(Ne, c2, a3), l2), o4.stringIndex = function(e5) {
              var t4 = new S.Record("String INDEX", [{ name: "strings", type: "INDEX", value: [] }]);
              t4.strings = [];
              for (var r4 = 0; r4 < e5.length; r4 += 1) t4.strings.push({ name: "string_" + r4, type: "STRING", value: e5[r4] });
              return t4;
            }(u2), o4.header.sizeOf() + o4.nameIndex.sizeOf() + o4.topDictIndex.sizeOf() + o4.stringIndex.sizeOf() + o4.globalSubrIndex.sizeOf());
            return n2.charset = c2, n2.encoding = 0, n2.charStrings = n2.charset + o4.charsets.sizeOf(), n2.private[1] = n2.charStrings + o4.charStringsIndex.sizeOf(), t3 = We(n2, u2), o4.topDictIndex = qe(t3), o4;
          } };
          var Ze = { parse: function(e4, t3) {
            var r3 = {}, e4 = new R.Parser(e4, t3);
            return r3.version = e4.parseVersion(), r3.fontRevision = Math.round(1e3 * e4.parseFixed()) / 1e3, r3.checkSumAdjustment = e4.parseULong(), r3.magicNumber = e4.parseULong(), L.argument(1594834165 === r3.magicNumber, "Font header has wrong magic number."), r3.flags = e4.parseUShort(), r3.unitsPerEm = e4.parseUShort(), r3.created = e4.parseLongDateTime(), r3.modified = e4.parseLongDateTime(), r3.xMin = e4.parseShort(), r3.yMin = e4.parseShort(), r3.xMax = e4.parseShort(), r3.yMax = e4.parseShort(), r3.macStyle = e4.parseUShort(), r3.lowestRecPPEM = e4.parseUShort(), r3.fontDirectionHint = e4.parseShort(), r3.indexToLocFormat = e4.parseShort(), r3.glyphDataFormat = e4.parseShort(), r3;
          }, make: function(e4) {
            var t3 = Math.round((/* @__PURE__ */ new Date()).getTime() / 1e3) + 2082844800, r3 = t3;
            return e4.createdTimestamp && (r3 = e4.createdTimestamp + 2082844800), new S.Table("head", [{ name: "version", type: "FIXED", value: 65536 }, { name: "fontRevision", type: "FIXED", value: 65536 }, { name: "checkSumAdjustment", type: "ULONG", value: 0 }, { name: "magicNumber", type: "ULONG", value: 1594834165 }, { name: "flags", type: "USHORT", value: 0 }, { name: "unitsPerEm", type: "USHORT", value: 1e3 }, { name: "created", type: "LONGDATETIME", value: r3 }, { name: "modified", type: "LONGDATETIME", value: t3 }, { name: "xMin", type: "SHORT", value: 0 }, { name: "yMin", type: "SHORT", value: 0 }, { name: "xMax", type: "SHORT", value: 0 }, { name: "yMax", type: "SHORT", value: 0 }, { name: "macStyle", type: "USHORT", value: 0 }, { name: "lowestRecPPEM", type: "USHORT", value: 0 }, { name: "fontDirectionHint", type: "SHORT", value: 2 }, { name: "indexToLocFormat", type: "SHORT", value: 0 }, { name: "glyphDataFormat", type: "SHORT", value: 0 }], e4);
          } };
          var Ke = { parse: function(e4, t3) {
            var r3 = {}, e4 = new R.Parser(e4, t3);
            return r3.version = e4.parseVersion(), r3.ascender = e4.parseShort(), r3.descender = e4.parseShort(), r3.lineGap = e4.parseShort(), r3.advanceWidthMax = e4.parseUShort(), r3.minLeftSideBearing = e4.parseShort(), r3.minRightSideBearing = e4.parseShort(), r3.xMaxExtent = e4.parseShort(), r3.caretSlopeRise = e4.parseShort(), r3.caretSlopeRun = e4.parseShort(), r3.caretOffset = e4.parseShort(), e4.relativeOffset += 8, r3.metricDataFormat = e4.parseShort(), r3.numberOfHMetrics = e4.parseUShort(), r3;
          }, make: function(e4) {
            return new S.Table("hhea", [{ name: "version", type: "FIXED", value: 65536 }, { name: "ascender", type: "FWORD", value: 0 }, { name: "descender", type: "FWORD", value: 0 }, { name: "lineGap", type: "FWORD", value: 0 }, { name: "advanceWidthMax", type: "UFWORD", value: 0 }, { name: "minLeftSideBearing", type: "FWORD", value: 0 }, { name: "minRightSideBearing", type: "FWORD", value: 0 }, { name: "xMaxExtent", type: "FWORD", value: 0 }, { name: "caretSlopeRise", type: "SHORT", value: 1 }, { name: "caretSlopeRun", type: "SHORT", value: 0 }, { name: "caretOffset", type: "SHORT", value: 0 }, { name: "reserved1", type: "SHORT", value: 0 }, { name: "reserved2", type: "SHORT", value: 0 }, { name: "reserved3", type: "SHORT", value: 0 }, { name: "reserved4", type: "SHORT", value: 0 }, { name: "metricDataFormat", type: "SHORT", value: 0 }, { name: "numberOfHMetrics", type: "USHORT", value: 0 }], e4);
          } };
          var Qe = { parse: function(e4, t3, r3, o4, n2) {
            for (var s3, i2, a3 = new R.Parser(e4, t3), l2 = 0; l2 < o4; l2 += 1) {
              l2 < r3 && (s3 = a3.parseUShort(), i2 = a3.parseShort());
              var u2 = n2.get(l2);
              u2.advanceWidth = s3, u2.leftSideBearing = i2;
            }
          }, make: function(e4) {
            for (var t3 = new S.Table("hmtx", []), r3 = 0; r3 < e4.length; r3 += 1) {
              var o4 = e4.get(r3), n2 = o4.advanceWidth || 0, o4 = o4.leftSideBearing || 0;
              t3.fields.push({ name: "advanceWidth_" + r3, type: "USHORT", value: n2 }), t3.fields.push({ name: "leftSideBearing_" + r3, type: "SHORT", value: o4 });
            }
            return t3;
          } };
          var Je = { make: function(e4) {
            for (var t3 = new S.Table("ltag", [{ name: "version", type: "ULONG", value: 1 }, { name: "flags", type: "ULONG", value: 0 }, { name: "numTags", type: "ULONG", value: e4.length }]), r3 = "", o4 = 12 + 4 * e4.length, n2 = 0; n2 < e4.length; ++n2) {
              var s3 = r3.indexOf(e4[n2]);
              s3 < 0 && (s3 = r3.length, r3 += e4[n2]), t3.fields.push({ name: "offset " + n2, type: "USHORT", value: o4 + s3 }), t3.fields.push({ name: "length " + n2, type: "USHORT", value: e4[n2].length });
            }
            return t3.fields.push({ name: "stringPool", type: "CHARARRAY", value: r3 }), t3;
          }, parse: function(e4, t3) {
            for (var r3 = new R.Parser(e4, t3), o4 = r3.parseULong(), n2 = (L.argument(1 === o4, "Unsupported ltag table version."), r3.skip("uLong", 1), r3.parseULong()), s3 = [], i2 = 0; i2 < n2; i2++) {
              for (var a3 = "", l2 = t3 + r3.parseUShort(), u2 = r3.parseUShort(), c2 = l2; c2 < l2 + u2; ++c2) a3 += String.fromCharCode(e4.getInt8(c2));
              s3.push(a3);
            }
            return s3;
          } };
          var $e = { parse: function(e4, t3) {
            var r3 = {}, e4 = new R.Parser(e4, t3);
            return r3.version = e4.parseVersion(), r3.numGlyphs = e4.parseUShort(), 1 === r3.version && (r3.maxPoints = e4.parseUShort(), r3.maxContours = e4.parseUShort(), r3.maxCompositePoints = e4.parseUShort(), r3.maxCompositeContours = e4.parseUShort(), r3.maxZones = e4.parseUShort(), r3.maxTwilightPoints = e4.parseUShort(), r3.maxStorage = e4.parseUShort(), r3.maxFunctionDefs = e4.parseUShort(), r3.maxInstructionDefs = e4.parseUShort(), r3.maxStackElements = e4.parseUShort(), r3.maxSizeOfInstructions = e4.parseUShort(), r3.maxComponentElements = e4.parseUShort(), r3.maxComponentDepth = e4.parseUShort()), r3;
          }, make: function(e4) {
            return new S.Table("maxp", [{ name: "version", type: "FIXED", value: 20480 }, { name: "numGlyphs", type: "USHORT", value: e4 }]);
          } }, et = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"], tt = { 0: "en", 1: "fr", 2: "de", 3: "it", 4: "nl", 5: "sv", 6: "es", 7: "da", 8: "pt", 9: "no", 10: "he", 11: "ja", 12: "ar", 13: "fi", 14: "el", 15: "is", 16: "mt", 17: "tr", 18: "hr", 19: "zh-Hant", 20: "ur", 21: "hi", 22: "th", 23: "ko", 24: "lt", 25: "pl", 26: "hu", 27: "es", 28: "lv", 29: "se", 30: "fo", 31: "fa", 32: "ru", 33: "zh", 34: "nl-BE", 35: "ga", 36: "sq", 37: "ro", 38: "cz", 39: "sk", 40: "si", 41: "yi", 42: "sr", 43: "mk", 44: "bg", 45: "uk", 46: "be", 47: "uz", 48: "kk", 49: "az-Cyrl", 50: "az-Arab", 51: "hy", 52: "ka", 53: "mo", 54: "ky", 55: "tg", 56: "tk", 57: "mn-CN", 58: "mn", 59: "ps", 60: "ks", 61: "ku", 62: "sd", 63: "bo", 64: "ne", 65: "sa", 66: "mr", 67: "bn", 68: "as", 69: "gu", 70: "pa", 71: "or", 72: "ml", 73: "kn", 74: "ta", 75: "te", 76: "si", 77: "my", 78: "km", 79: "lo", 80: "vi", 81: "id", 82: "tl", 83: "ms", 84: "ms-Arab", 85: "am", 86: "ti", 87: "om", 88: "so", 89: "sw", 90: "rw", 91: "rn", 92: "ny", 93: "mg", 94: "eo", 128: "cy", 129: "eu", 130: "ca", 131: "la", 132: "qu", 133: "gn", 134: "ay", 135: "tt", 136: "ug", 137: "dz", 138: "jv", 139: "su", 140: "gl", 141: "af", 142: "br", 143: "iu", 144: "gd", 145: "gv", 146: "ga", 147: "to", 148: "el-polyton", 149: "kl", 150: "az", 151: "nn" }, rt = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 5, 11: 1, 12: 4, 13: 0, 14: 6, 15: 0, 16: 0, 17: 0, 18: 0, 19: 2, 20: 4, 21: 9, 22: 21, 23: 3, 24: 29, 25: 29, 26: 29, 27: 29, 28: 29, 29: 0, 30: 0, 31: 4, 32: 7, 33: 25, 34: 0, 35: 0, 36: 0, 37: 0, 38: 29, 39: 29, 40: 0, 41: 5, 42: 7, 43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 48: 7, 49: 7, 50: 4, 51: 24, 52: 23, 53: 7, 54: 7, 55: 7, 56: 7, 57: 27, 58: 7, 59: 4, 60: 4, 61: 4, 62: 4, 63: 26, 64: 9, 65: 9, 66: 9, 67: 13, 68: 13, 69: 11, 70: 10, 71: 12, 72: 17, 73: 16, 74: 14, 75: 15, 76: 18, 77: 19, 78: 20, 79: 22, 80: 30, 81: 0, 82: 0, 83: 0, 84: 4, 85: 28, 86: 28, 87: 28, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 7, 136: 4, 137: 26, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 28, 144: 0, 145: 0, 146: 0, 147: 0, 148: 6, 149: 0, 150: 0, 151: 0 }, ot = { 1078: "af", 1052: "sq", 1156: "gsw", 1118: "am", 5121: "ar-DZ", 15361: "ar-BH", 3073: "ar", 2049: "ar-IQ", 11265: "ar-JO", 13313: "ar-KW", 12289: "ar-LB", 4097: "ar-LY", 6145: "ary", 8193: "ar-OM", 16385: "ar-QA", 1025: "ar-SA", 10241: "ar-SY", 7169: "aeb", 14337: "ar-AE", 9217: "ar-YE", 1067: "hy", 1101: "as", 2092: "az-Cyrl", 1068: "az", 1133: "ba", 1069: "eu", 1059: "be", 2117: "bn", 1093: "bn-IN", 8218: "bs-Cyrl", 5146: "bs", 1150: "br", 1026: "bg", 1027: "ca", 3076: "zh-HK", 5124: "zh-MO", 2052: "zh", 4100: "zh-SG", 1028: "zh-TW", 1155: "co", 1050: "hr", 4122: "hr-BA", 1029: "cs", 1030: "da", 1164: "prs", 1125: "dv", 2067: "nl-BE", 1043: "nl", 3081: "en-AU", 10249: "en-BZ", 4105: "en-CA", 9225: "en-029", 16393: "en-IN", 6153: "en-IE", 8201: "en-JM", 17417: "en-MY", 5129: "en-NZ", 13321: "en-PH", 18441: "en-SG", 7177: "en-ZA", 11273: "en-TT", 2057: "en-GB", 1033: "en", 12297: "en-ZW", 1061: "et", 1080: "fo", 1124: "fil", 1035: "fi", 2060: "fr-BE", 3084: "fr-CA", 1036: "fr", 5132: "fr-LU", 6156: "fr-MC", 4108: "fr-CH", 1122: "fy", 1110: "gl", 1079: "ka", 3079: "de-AT", 1031: "de", 5127: "de-LI", 4103: "de-LU", 2055: "de-CH", 1032: "el", 1135: "kl", 1095: "gu", 1128: "ha", 1037: "he", 1081: "hi", 1038: "hu", 1039: "is", 1136: "ig", 1057: "id", 1117: "iu", 2141: "iu-Latn", 2108: "ga", 1076: "xh", 1077: "zu", 1040: "it", 2064: "it-CH", 1041: "ja", 1099: "kn", 1087: "kk", 1107: "km", 1158: "quc", 1159: "rw", 1089: "sw", 1111: "kok", 1042: "ko", 1088: "ky", 1108: "lo", 1062: "lv", 1063: "lt", 2094: "dsb", 1134: "lb", 1071: "mk", 2110: "ms-BN", 1086: "ms", 1100: "ml", 1082: "mt", 1153: "mi", 1146: "arn", 1102: "mr", 1148: "moh", 1104: "mn", 2128: "mn-CN", 1121: "ne", 1044: "nb", 2068: "nn", 1154: "oc", 1096: "or", 1123: "ps", 1045: "pl", 1046: "pt", 2070: "pt-PT", 1094: "pa", 1131: "qu-BO", 2155: "qu-EC", 3179: "qu", 1048: "ro", 1047: "rm", 1049: "ru", 9275: "smn", 4155: "smj-NO", 5179: "smj", 3131: "se-FI", 1083: "se", 2107: "se-SE", 8251: "sms", 6203: "sma-NO", 7227: "sms", 1103: "sa", 7194: "sr-Cyrl-BA", 3098: "sr", 6170: "sr-Latn-BA", 2074: "sr-Latn", 1132: "nso", 1074: "tn", 1115: "si", 1051: "sk", 1060: "sl", 11274: "es-AR", 16394: "es-BO", 13322: "es-CL", 9226: "es-CO", 5130: "es-CR", 7178: "es-DO", 12298: "es-EC", 17418: "es-SV", 4106: "es-GT", 18442: "es-HN", 2058: "es-MX", 19466: "es-NI", 6154: "es-PA", 15370: "es-PY", 10250: "es-PE", 20490: "es-PR", 3082: "es", 1034: "es", 21514: "es-US", 14346: "es-UY", 8202: "es-VE", 2077: "sv-FI", 1053: "sv", 1114: "syr", 1064: "tg", 2143: "tzm", 1097: "ta", 1092: "tt", 1098: "te", 1054: "th", 1105: "bo", 1055: "tr", 1090: "tk", 1152: "ug", 1058: "uk", 1070: "hsb", 1056: "ur", 2115: "uz-Cyrl", 1091: "uz", 1066: "vi", 1106: "cy", 1160: "wo", 1157: "sah", 1144: "ii", 1130: "yo" };
          var nt = "utf-16", st = { 0: "macintosh", 1: "x-mac-japanese", 2: "x-mac-chinesetrad", 3: "x-mac-korean", 6: "x-mac-greek", 7: "x-mac-cyrillic", 9: "x-mac-devanagai", 10: "x-mac-gurmukhi", 11: "x-mac-gujarati", 12: "x-mac-oriya", 13: "x-mac-bengali", 14: "x-mac-tamil", 15: "x-mac-telugu", 16: "x-mac-kannada", 17: "x-mac-malayalam", 18: "x-mac-sinhalese", 19: "x-mac-burmese", 20: "x-mac-khmer", 21: "x-mac-thai", 22: "x-mac-lao", 23: "x-mac-georgian", 24: "x-mac-armenian", 25: "x-mac-chinesesimp", 26: "x-mac-tibetan", 27: "x-mac-mongolian", 28: "x-mac-ethiopic", 29: "x-mac-ce", 30: "x-mac-vietnamese", 31: "x-mac-extarabic" }, it = { 15: "x-mac-icelandic", 17: "x-mac-turkish", 18: "x-mac-croatian", 24: "x-mac-ce", 25: "x-mac-ce", 26: "x-mac-ce", 27: "x-mac-ce", 28: "x-mac-ce", 30: "x-mac-icelandic", 37: "x-mac-romanian", 38: "x-mac-ce", 39: "x-mac-ce", 40: "x-mac-ce", 143: "x-mac-inuit", 146: "x-mac-gaelic" };
          function at(e4, t3, r3) {
            switch (e4) {
              case 0:
                return nt;
              case 1:
                return it[r3] || st[t3];
              case 3:
                if (1 === t3 || 10 === t3) return nt;
            }
          }
          function lt(e4) {
            var t3, r3 = {};
            for (t3 in e4) r3[e4[t3]] = parseInt(t3);
            return r3;
          }
          function ut(e4, t3, r3, o4, n2, s3) {
            return new S.Record("NameRecord", [{ name: "platformID", type: "USHORT", value: e4 }, { name: "encodingID", type: "USHORT", value: t3 }, { name: "languageID", type: "USHORT", value: r3 }, { name: "nameID", type: "USHORT", value: o4 }, { name: "length", type: "USHORT", value: n2 }, { name: "offset", type: "USHORT", value: s3 }]);
          }
          function ct(e4, t3) {
            if ((r3 = function(e5, t4) {
              var r4 = e5.length, o5 = t4.length - r4 + 1;
              e: for (var n3 = 0; n3 < o5; n3++) for (; n3 < o5; n3++) {
                for (var s3 = 0; s3 < r4; s3++) if (t4[n3 + s3] !== e5[s3]) continue e;
                return n3;
              }
              return -1;
            }(e4, t3)) < 0) for (var r3 = t3.length, o4 = 0, n2 = e4.length; o4 < n2; ++o4) t3.push(e4[o4]);
            return r3;
          }
          var dt = { parse: function(e4, t3, r3) {
            for (var o4 = {}, n2 = new R.Parser(e4, t3), t3 = n2.parseUShort(), s3 = n2.parseUShort(), i2 = n2.offset + n2.parseUShort(), a3 = 0; a3 < s3; a3++) {
              var l2 = n2.parseUShort(), u2 = n2.parseUShort(), c2 = n2.parseUShort(), d2 = n2.parseUShort(), d2 = et[d2] || d2, h2 = n2.parseUShort(), f2 = n2.parseUShort(), p2 = function(e5, t4, r4) {
                switch (e5) {
                  case 0:
                    if (65535 === t4) return "und";
                    if (r4) return r4[t4];
                    break;
                  case 1:
                    return tt[t4];
                  case 3:
                    return ot[t4];
                }
              }(l2, c2, r3), l2 = at(l2, u2, c2);
              void 0 !== l2 && void 0 !== p2 && (u2 = void 0, (u2 = l2 === nt ? m.UTF16(e4, i2 + f2, h2) : m.MACSTRING(e4, i2 + f2, h2, l2)) && ((c2 = void 0 === (c2 = o4[d2]) ? o4[d2] = {} : c2)[p2] = u2));
            }
            return 1 === t3 && n2.parseUShort(), o4;
          }, make: function(e4, t3) {
            var r3, o4 = [], n2 = {}, s3 = lt(et);
            for (r3 in e4) {
              var i2 = s3[r3];
              if (void 0 === i2 && (i2 = r3), h2 = parseInt(i2), isNaN(h2)) throw new Error('Name table entry "' + r3 + '" does not exist, see nameTableNames for complete list.');
              n2[h2] = e4[r3], o4.push(h2);
            }
            for (var a3 = lt(tt), l2 = lt(ot), u2 = [], c2 = [], d2 = 0; d2 < o4.length; d2++) {
              var h2, f2, p2 = n2[h2 = o4[d2]];
              for (f2 in p2) {
                var m2 = p2[f2], y2 = 1, g2 = a3[f2], v2 = rt[g2], b2 = at(y2, v2, g2), b2 = w.MACSTRING(m2, b2), _2 = (void 0 === b2 && (y2 = 0, (g2 = t3.indexOf(f2)) < 0 && (g2 = t3.length, t3.push(f2)), v2 = 4, b2 = w.UTF16(m2)), ct(b2, c2)), y2 = (u2.push(ut(y2, v2, g2, h2, b2.length, _2)), l2[f2]);
                void 0 !== y2 && (g2 = ct(v2 = w.UTF16(m2), c2), u2.push(ut(3, 1, y2, h2, v2.length, g2)));
              }
            }
            u2.sort(function(e5, t4) {
              return e5.platformID - t4.platformID || e5.encodingID - t4.encodingID || e5.languageID - t4.languageID || e5.nameID - t4.nameID;
            });
            for (var j2 = new S.Table("name", [{ name: "format", type: "USHORT", value: 0 }, { name: "count", type: "USHORT", value: u2.length }, { name: "stringOffset", type: "USHORT", value: 6 + 12 * u2.length }]), x3 = 0; x3 < u2.length; x3++) j2.fields.push({ name: "record_" + x3, type: "RECORD", value: u2[x3] });
            return j2.fields.push({ name: "strings", type: "LITERAL", value: c2 }), j2;
          } }, ht = [{ begin: 0, end: 127 }, { begin: 128, end: 255 }, { begin: 256, end: 383 }, { begin: 384, end: 591 }, { begin: 592, end: 687 }, { begin: 688, end: 767 }, { begin: 768, end: 879 }, { begin: 880, end: 1023 }, { begin: 11392, end: 11519 }, { begin: 1024, end: 1279 }, { begin: 1328, end: 1423 }, { begin: 1424, end: 1535 }, { begin: 42240, end: 42559 }, { begin: 1536, end: 1791 }, { begin: 1984, end: 2047 }, { begin: 2304, end: 2431 }, { begin: 2432, end: 2559 }, { begin: 2560, end: 2687 }, { begin: 2688, end: 2815 }, { begin: 2816, end: 2943 }, { begin: 2944, end: 3071 }, { begin: 3072, end: 3199 }, { begin: 3200, end: 3327 }, { begin: 3328, end: 3455 }, { begin: 3584, end: 3711 }, { begin: 3712, end: 3839 }, { begin: 4256, end: 4351 }, { begin: 6912, end: 7039 }, { begin: 4352, end: 4607 }, { begin: 7680, end: 7935 }, { begin: 7936, end: 8191 }, { begin: 8192, end: 8303 }, { begin: 8304, end: 8351 }, { begin: 8352, end: 8399 }, { begin: 8400, end: 8447 }, { begin: 8448, end: 8527 }, { begin: 8528, end: 8591 }, { begin: 8592, end: 8703 }, { begin: 8704, end: 8959 }, { begin: 8960, end: 9215 }, { begin: 9216, end: 9279 }, { begin: 9280, end: 9311 }, { begin: 9312, end: 9471 }, { begin: 9472, end: 9599 }, { begin: 9600, end: 9631 }, { begin: 9632, end: 9727 }, { begin: 9728, end: 9983 }, { begin: 9984, end: 10175 }, { begin: 12288, end: 12351 }, { begin: 12352, end: 12447 }, { begin: 12448, end: 12543 }, { begin: 12544, end: 12591 }, { begin: 12592, end: 12687 }, { begin: 43072, end: 43135 }, { begin: 12800, end: 13055 }, { begin: 13056, end: 13311 }, { begin: 44032, end: 55215 }, { begin: 55296, end: 57343 }, { begin: 67840, end: 67871 }, { begin: 19968, end: 40959 }, { begin: 57344, end: 63743 }, { begin: 12736, end: 12783 }, { begin: 64256, end: 64335 }, { begin: 64336, end: 65023 }, { begin: 65056, end: 65071 }, { begin: 65040, end: 65055 }, { begin: 65104, end: 65135 }, { begin: 65136, end: 65279 }, { begin: 65280, end: 65519 }, { begin: 65520, end: 65535 }, { begin: 3840, end: 4095 }, { begin: 1792, end: 1871 }, { begin: 1920, end: 1983 }, { begin: 3456, end: 3583 }, { begin: 4096, end: 4255 }, { begin: 4608, end: 4991 }, { begin: 5024, end: 5119 }, { begin: 5120, end: 5759 }, { begin: 5760, end: 5791 }, { begin: 5792, end: 5887 }, { begin: 6016, end: 6143 }, { begin: 6144, end: 6319 }, { begin: 10240, end: 10495 }, { begin: 40960, end: 42127 }, { begin: 5888, end: 5919 }, { begin: 66304, end: 66351 }, { begin: 66352, end: 66383 }, { begin: 66560, end: 66639 }, { begin: 118784, end: 119039 }, { begin: 119808, end: 120831 }, { begin: 1044480, end: 1048573 }, { begin: 65024, end: 65039 }, { begin: 917504, end: 917631 }, { begin: 6400, end: 6479 }, { begin: 6480, end: 6527 }, { begin: 6528, end: 6623 }, { begin: 6656, end: 6687 }, { begin: 11264, end: 11359 }, { begin: 11568, end: 11647 }, { begin: 19904, end: 19967 }, { begin: 43008, end: 43055 }, { begin: 65536, end: 65663 }, { begin: 65856, end: 65935 }, { begin: 66432, end: 66463 }, { begin: 66464, end: 66527 }, { begin: 66640, end: 66687 }, { begin: 66688, end: 66735 }, { begin: 67584, end: 67647 }, { begin: 68096, end: 68191 }, { begin: 119552, end: 119647 }, { begin: 73728, end: 74751 }, { begin: 119648, end: 119679 }, { begin: 7040, end: 7103 }, { begin: 7168, end: 7247 }, { begin: 7248, end: 7295 }, { begin: 43136, end: 43231 }, { begin: 43264, end: 43311 }, { begin: 43312, end: 43359 }, { begin: 43520, end: 43615 }, { begin: 65936, end: 65999 }, { begin: 66e3, end: 66047 }, { begin: 66208, end: 66271 }, { begin: 127024, end: 127135 }];
          var ft = { parse: function(e4, t3) {
            var r3 = {}, o4 = new R.Parser(e4, t3);
            r3.version = o4.parseUShort(), r3.xAvgCharWidth = o4.parseShort(), r3.usWeightClass = o4.parseUShort(), r3.usWidthClass = o4.parseUShort(), r3.fsType = o4.parseUShort(), r3.ySubscriptXSize = o4.parseShort(), r3.ySubscriptYSize = o4.parseShort(), r3.ySubscriptXOffset = o4.parseShort(), r3.ySubscriptYOffset = o4.parseShort(), r3.ySuperscriptXSize = o4.parseShort(), r3.ySuperscriptYSize = o4.parseShort(), r3.ySuperscriptXOffset = o4.parseShort(), r3.ySuperscriptYOffset = o4.parseShort(), r3.yStrikeoutSize = o4.parseShort(), r3.yStrikeoutPosition = o4.parseShort(), r3.sFamilyClass = o4.parseShort(), r3.panose = [];
            for (var n2 = 0; n2 < 10; n2++) r3.panose[n2] = o4.parseByte();
            return r3.ulUnicodeRange1 = o4.parseULong(), r3.ulUnicodeRange2 = o4.parseULong(), r3.ulUnicodeRange3 = o4.parseULong(), r3.ulUnicodeRange4 = o4.parseULong(), r3.achVendID = String.fromCharCode(o4.parseByte(), o4.parseByte(), o4.parseByte(), o4.parseByte()), r3.fsSelection = o4.parseUShort(), r3.usFirstCharIndex = o4.parseUShort(), r3.usLastCharIndex = o4.parseUShort(), r3.sTypoAscender = o4.parseShort(), r3.sTypoDescender = o4.parseShort(), r3.sTypoLineGap = o4.parseShort(), r3.usWinAscent = o4.parseUShort(), r3.usWinDescent = o4.parseUShort(), 1 <= r3.version && (r3.ulCodePageRange1 = o4.parseULong(), r3.ulCodePageRange2 = o4.parseULong()), 2 <= r3.version && (r3.sxHeight = o4.parseShort(), r3.sCapHeight = o4.parseShort(), r3.usDefaultChar = o4.parseUShort(), r3.usBreakChar = o4.parseUShort(), r3.usMaxContent = o4.parseUShort()), r3;
          }, make: function(e4) {
            return new S.Table("OS/2", [{ name: "version", type: "USHORT", value: 3 }, { name: "xAvgCharWidth", type: "SHORT", value: 0 }, { name: "usWeightClass", type: "USHORT", value: 0 }, { name: "usWidthClass", type: "USHORT", value: 0 }, { name: "fsType", type: "USHORT", value: 0 }, { name: "ySubscriptXSize", type: "SHORT", value: 650 }, { name: "ySubscriptYSize", type: "SHORT", value: 699 }, { name: "ySubscriptXOffset", type: "SHORT", value: 0 }, { name: "ySubscriptYOffset", type: "SHORT", value: 140 }, { name: "ySuperscriptXSize", type: "SHORT", value: 650 }, { name: "ySuperscriptYSize", type: "SHORT", value: 699 }, { name: "ySuperscriptXOffset", type: "SHORT", value: 0 }, { name: "ySuperscriptYOffset", type: "SHORT", value: 479 }, { name: "yStrikeoutSize", type: "SHORT", value: 49 }, { name: "yStrikeoutPosition", type: "SHORT", value: 258 }, { name: "sFamilyClass", type: "SHORT", value: 0 }, { name: "bFamilyType", type: "BYTE", value: 0 }, { name: "bSerifStyle", type: "BYTE", value: 0 }, { name: "bWeight", type: "BYTE", value: 0 }, { name: "bProportion", type: "BYTE", value: 0 }, { name: "bContrast", type: "BYTE", value: 0 }, { name: "bStrokeVariation", type: "BYTE", value: 0 }, { name: "bArmStyle", type: "BYTE", value: 0 }, { name: "bLetterform", type: "BYTE", value: 0 }, { name: "bMidline", type: "BYTE", value: 0 }, { name: "bXHeight", type: "BYTE", value: 0 }, { name: "ulUnicodeRange1", type: "ULONG", value: 0 }, { name: "ulUnicodeRange2", type: "ULONG", value: 0 }, { name: "ulUnicodeRange3", type: "ULONG", value: 0 }, { name: "ulUnicodeRange4", type: "ULONG", value: 0 }, { name: "achVendID", type: "CHARARRAY", value: "XXXX" }, { name: "fsSelection", type: "USHORT", value: 0 }, { name: "usFirstCharIndex", type: "USHORT", value: 0 }, { name: "usLastCharIndex", type: "USHORT", value: 0 }, { name: "sTypoAscender", type: "SHORT", value: 0 }, { name: "sTypoDescender", type: "SHORT", value: 0 }, { name: "sTypoLineGap", type: "SHORT", value: 0 }, { name: "usWinAscent", type: "USHORT", value: 0 }, { name: "usWinDescent", type: "USHORT", value: 0 }, { name: "ulCodePageRange1", type: "ULONG", value: 0 }, { name: "ulCodePageRange2", type: "ULONG", value: 0 }, { name: "sxHeight", type: "SHORT", value: 0 }, { name: "sCapHeight", type: "SHORT", value: 0 }, { name: "usDefaultChar", type: "USHORT", value: 0 }, { name: "usBreakChar", type: "USHORT", value: 0 }, { name: "usMaxContext", type: "USHORT", value: 0 }], e4);
          }, unicodeRanges: ht, getUnicodeRange: function(e4) {
            for (var t3 = 0; t3 < ht.length; t3 += 1) {
              var r3 = ht[t3];
              if (e4 >= r3.begin && e4 < r3.end) return t3;
            }
            return -1;
          } };
          var pt = { parse: function(e4, t3) {
            var r3 = {}, o4 = new R.Parser(e4, t3);
            switch (r3.version = o4.parseVersion(), r3.italicAngle = o4.parseFixed(), r3.underlinePosition = o4.parseShort(), r3.underlineThickness = o4.parseShort(), r3.isFixedPitch = o4.parseULong(), r3.minMemType42 = o4.parseULong(), r3.maxMemType42 = o4.parseULong(), r3.minMemType1 = o4.parseULong(), r3.maxMemType1 = o4.parseULong(), r3.version) {
              case 1:
                r3.names = c.slice();
                break;
              case 2:
                r3.numberOfGlyphs = o4.parseUShort(), r3.glyphNameIndex = new Array(r3.numberOfGlyphs);
                for (var n2 = 0; n2 < r3.numberOfGlyphs; n2++) r3.glyphNameIndex[n2] = o4.parseUShort();
                r3.names = [];
                for (var s3, i2 = 0; i2 < r3.numberOfGlyphs; i2++) r3.glyphNameIndex[i2] >= c.length && (s3 = o4.parseChar(), r3.names.push(o4.parseString(s3)));
                break;
              case 2.5:
                r3.numberOfGlyphs = o4.parseUShort(), r3.offset = new Array(r3.numberOfGlyphs);
                for (var a3 = 0; a3 < r3.numberOfGlyphs; a3++) r3.offset[a3] = o4.parseChar();
            }
            return r3;
          }, make: function() {
            return new S.Table("post", [{ name: "version", type: "FIXED", value: 196608 }, { name: "italicAngle", type: "FIXED", value: 0 }, { name: "underlinePosition", type: "FWORD", value: 0 }, { name: "underlineThickness", type: "FWORD", value: 0 }, { name: "isFixedPitch", type: "ULONG", value: 0 }, { name: "minMemType42", type: "ULONG", value: 0 }, { name: "maxMemType42", type: "ULONG", value: 0 }, { name: "minMemType1", type: "ULONG", value: 0 }, { name: "maxMemType1", type: "ULONG", value: 0 }]);
          } }, o3 = new Array(9), s2 = (o3[1] = function() {
            var e4 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            return 1 === t3 ? { substFormat: 1, coverage: this.parsePointer(u.coverage), deltaGlyphId: this.parseUShort() } : 2 === t3 ? { substFormat: 2, coverage: this.parsePointer(u.coverage), substitute: this.parseOffset16List() } : void L.assert(false, "0x" + e4.toString(16) + ": lookup type 1 format must be 1 or 2.");
          }, o3[2] = function() {
            var e4 = this.parseUShort();
            return L.argument(1 === e4, "GSUB Multiple Substitution Subtable identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), sequences: this.parseListOfLists() };
          }, o3[3] = function() {
            var e4 = this.parseUShort();
            return L.argument(1 === e4, "GSUB Alternate Substitution Subtable identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), alternateSets: this.parseListOfLists() };
          }, o3[4] = function() {
            var e4 = this.parseUShort();
            return L.argument(1 === e4, "GSUB ligature table identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), ligatureSets: this.parseListOfLists(function() {
              return { ligGlyph: this.parseUShort(), components: this.parseUShortList(this.parseUShort() - 1) };
            }) };
          }, { sequenceIndex: u.uShort, lookupListIndex: u.uShort });
          o3[5] = function() {
            var e4, t3, r3 = this.offset + this.relativeOffset, o4 = this.parseUShort();
            return 1 === o4 ? { substFormat: o4, coverage: this.parsePointer(u.coverage), ruleSets: this.parseListOfLists(function() {
              var e5 = this.parseUShort(), t4 = this.parseUShort();
              return { input: this.parseUShortList(e5 - 1), lookupRecords: this.parseRecordList(t4, s2) };
            }) } : 2 === o4 ? { substFormat: o4, coverage: this.parsePointer(u.coverage), classDef: this.parsePointer(u.classDef), classSets: this.parseListOfLists(function() {
              var e5 = this.parseUShort(), t4 = this.parseUShort();
              return { classes: this.parseUShortList(e5 - 1), lookupRecords: this.parseRecordList(t4, s2) };
            }) } : 3 === o4 ? (e4 = this.parseUShort(), t3 = this.parseUShort(), { substFormat: o4, coverages: this.parseList(e4, u.pointer(u.coverage)), lookupRecords: this.parseRecordList(t3, s2) }) : void L.assert(false, "0x" + r3.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
          }, o3[6] = function() {
            var e4 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            return 1 === t3 ? { substFormat: 1, coverage: this.parsePointer(u.coverage), chainRuleSets: this.parseListOfLists(function() {
              return { backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(s2) };
            }) } : 2 === t3 ? { substFormat: 2, coverage: this.parsePointer(u.coverage), backtrackClassDef: this.parsePointer(u.classDef), inputClassDef: this.parsePointer(u.classDef), lookaheadClassDef: this.parsePointer(u.classDef), chainClassSet: this.parseListOfLists(function() {
              return { backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(s2) };
            }) } : 3 === t3 ? { substFormat: 3, backtrackCoverage: this.parseList(u.pointer(u.coverage)), inputCoverage: this.parseList(u.pointer(u.coverage)), lookaheadCoverage: this.parseList(u.pointer(u.coverage)), lookupRecords: this.parseRecordList(s2) } : void L.assert(false, "0x" + e4.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
          }, o3[7] = function() {
            var e4 = this.parseUShort(), e4 = (L.argument(1 === e4, "GSUB Extension Substitution subtable identifier-format must be 1"), this.parseUShort()), t3 = new u(this.data, this.offset + this.parseULong());
            return { substFormat: 1, lookupType: e4, extension: o3[e4].call(t3) };
          }, o3[8] = function() {
            var e4 = this.parseUShort();
            return L.argument(1 === e4, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), { substFormat: e4, coverage: this.parsePointer(u.coverage), backtrackCoverage: this.parseList(u.pointer(u.coverage)), lookaheadCoverage: this.parseList(u.pointer(u.coverage)), substitutes: this.parseUShortList() };
          };
          var mt = new Array(9);
          mt[1] = function(e4) {
            return 1 === e4.substFormat ? new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }, { name: "deltaGlyphID", type: "USHORT", value: e4.deltaGlyphId }]) : new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 2 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }].concat(S.ushortList("substitute", e4.substitute)));
          }, mt[3] = function(e4) {
            return L.assert(1 === e4.substFormat, "Lookup type 3 substFormat must be 1."), new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }].concat(S.tableList("altSet", e4.alternateSets, function(e5) {
              return new S.Table("alternateSetTable", S.ushortList("alternate", e5));
            })));
          }, mt[4] = function(e4) {
            return L.assert(1 === e4.substFormat, "Lookup type 4 substFormat must be 1."), new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e4.coverage) }].concat(S.tableList("ligSet", e4.ligatureSets, function(e5) {
              return new S.Table("ligatureSetTable", S.tableList("ligature", e5, function(e6) {
                return new S.Table("ligatureTable", [{ name: "ligGlyph", type: "USHORT", value: e6.ligGlyph }].concat(S.ushortList("component", e6.components, e6.components.length + 1)));
              }));
            })));
          };
          var yt = { parse: function(e4, t3) {
            return t3 = (e4 = new u(e4, t3 = t3 || 0)).parseVersion(1), L.argument(1 === t3 || 1.1 === t3, "Unsupported GSUB table version."), 1 === t3 ? { version: t3, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(o3) } : { version: t3, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(o3), variations: e4.parseFeatureVariationsList() };
          }, make: function(e4) {
            return new S.Table("GSUB", [{ name: "version", type: "ULONG", value: 65536 }, { name: "scripts", type: "TABLE", value: new S.ScriptList(e4.scripts) }, { name: "features", type: "TABLE", value: new S.FeatureList(e4.features) }, { name: "lookups", type: "TABLE", value: new S.LookupList(e4.lookups, mt) }]);
          } };
          var gt = { parse: function(e4, t3) {
            for (var r3 = new R.Parser(e4, t3), o4 = r3.parseULong(), n2 = (L.argument(1 === o4, "Unsupported META table version."), r3.parseULong(), r3.parseULong(), r3.parseULong()), s3 = {}, i2 = 0; i2 < n2; i2++) {
              var a3 = r3.parseTag(), l2 = r3.parseULong(), u2 = r3.parseULong(), l2 = m.UTF8(e4, t3 + l2, u2);
              s3[a3] = l2;
            }
            return s3;
          }, make: function(e4) {
            var t3, r3 = Object.keys(e4).length, o4 = "", n2 = 16 + 12 * r3, s3 = new S.Table("meta", [{ name: "version", type: "ULONG", value: 1 }, { name: "flags", type: "ULONG", value: 0 }, { name: "offset", type: "ULONG", value: n2 }, { name: "numTags", type: "ULONG", value: r3 }]);
            for (t3 in e4) {
              var i2 = o4.length;
              o4 += e4[t3], s3.fields.push({ name: "tag " + t3, type: "TAG", value: t3 }), s3.fields.push({ name: "offset " + t3, type: "ULONG", value: n2 + i2 }), s3.fields.push({ name: "length " + t3, type: "ULONG", value: e4[t3].length });
            }
            return s3.fields.push({ name: "stringPool", type: "CHARARRAY", value: o4 }), s3;
          } };
          function vt(e4) {
            return Math.log(e4) / Math.log(2) | 0;
          }
          function bt(e4) {
            for (; e4.length % 4 != 0; ) e4.push(0);
            for (var t3 = 0, r3 = 0; r3 < e4.length; r3 += 4) t3 += (e4[r3] << 24) + (e4[r3 + 1] << 16) + (e4[r3 + 2] << 8) + e4[r3 + 3];
            return t3 %= Math.pow(2, 32);
          }
          function _t(e4, t3, r3, o4) {
            return new S.Record("Table Record", [{ name: "tag", type: "TAG", value: void 0 !== e4 ? e4 : "" }, { name: "checkSum", type: "ULONG", value: void 0 !== t3 ? t3 : 0 }, { name: "offset", type: "ULONG", value: void 0 !== r3 ? r3 : 0 }, { name: "length", type: "ULONG", value: void 0 !== o4 ? o4 : 0 }]);
          }
          function jt(e4) {
            for (var t3 = new S.Table("sfnt", [{ name: "version", type: "TAG", value: "OTTO" }, { name: "numTables", type: "USHORT", value: 0 }, { name: "searchRange", type: "USHORT", value: 0 }, { name: "entrySelector", type: "USHORT", value: 0 }, { name: "rangeShift", type: "USHORT", value: 0 }]), r3 = (t3.tables = e4, t3.numTables = e4.length, Math.pow(2, vt(t3.numTables))), o4 = (t3.searchRange = 16 * r3, t3.entrySelector = vt(r3), t3.rangeShift = 16 * t3.numTables - t3.searchRange, []), n2 = [], s3 = t3.sizeOf() + _t().sizeOf() * t3.numTables; s3 % 4 != 0; ) s3 += 1, n2.push({ name: "padding", type: "BYTE", value: 0 });
            for (var i2 = 0; i2 < e4.length; i2 += 1) {
              var a3 = e4[i2], l2 = (L.argument(4 === a3.tableName.length, "Table name" + a3.tableName + " is invalid."), a3.sizeOf()), u2 = _t(a3.tableName, bt(a3.encode()), s3, l2);
              for (o4.push({ name: u2.tag + " Table Record", type: "RECORD", value: u2 }), n2.push({ name: a3.tableName + " table", type: "RECORD", value: a3 }), s3 += l2, L.argument(!isNaN(s3), "Something went wrong calculating the offset."); s3 % 4 != 0; ) s3 += 1, n2.push({ name: "padding", type: "BYTE", value: 0 });
            }
            return o4.sort(function(e5, t4) {
              return e5.value.tag > t4.value.tag ? 1 : -1;
            }), t3.fields = t3.fields.concat(o4), t3.fields = t3.fields.concat(n2), t3;
          }
          function xt(e4, t3, r3) {
            for (var o4 = 0; o4 < t3.length; o4 += 1) {
              var n2 = e4.charToGlyphIndex(t3[o4]);
              if (0 < n2) return e4.glyphs.get(n2).getMetrics();
            }
            return r3;
          }
          var wt = { make: jt, fontToTable: function(e4) {
            for (var t3, r3 = [], o4 = [], n2 = [], s3 = [], i2 = [], a3 = [], l2 = [], u2 = 0, c2 = 0, d2 = 0, h2 = 0, f2 = 0, p2 = 0; p2 < e4.glyphs.length; p2 += 1) {
              var m2 = e4.glyphs.get(p2), y2 = 0 | m2.unicode;
              if (isNaN(m2.advanceWidth)) throw new Error("Glyph " + m2.name + " (" + p2 + "): advanceWidth is not a number.");
              (y2 < t3 || void 0 === t3) && 0 < y2 && (t3 = y2), u2 < y2 && (u2 = y2);
              var y2 = ft.getUnicodeRange(y2);
              if (y2 < 32) c2 |= 1 << y2;
              else if (y2 < 64) d2 |= 1 << y2 - 32;
              else if (y2 < 96) h2 |= 1 << y2 - 64;
              else {
                if (!(y2 < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                f2 |= 1 << y2 - 96;
              }
              ".notdef" !== m2.name && (y2 = m2.getMetrics(), r3.push(y2.xMin), o4.push(y2.yMin), n2.push(y2.xMax), s3.push(y2.yMax), a3.push(y2.leftSideBearing), l2.push(y2.rightSideBearing), i2.push(m2.advanceWidth));
            }
            var g2, v2 = { xMin: Math.min.apply(null, r3), yMin: Math.min.apply(null, o4), xMax: Math.max.apply(null, n2), yMax: Math.max.apply(null, s3), advanceWidthMax: Math.max.apply(null, i2), advanceWidthAvg: function(e5) {
              for (var t4 = 0, r4 = 0; r4 < e5.length; r4 += 1) t4 += e5[r4];
              return t4 / e5.length;
            }(i2), minLeftSideBearing: Math.min.apply(null, a3), maxLeftSideBearing: Math.max.apply(null, a3), minRightSideBearing: Math.min.apply(null, l2) }, b2 = (v2.ascender = e4.ascender, v2.descender = e4.descender, Ze.make({ flags: 3, unitsPerEm: e4.unitsPerEm, xMin: v2.xMin, yMin: v2.yMin, xMax: v2.xMax, yMax: v2.yMax, lowestRecPPEM: 3, createdTimestamp: e4.createdTimestamp })), _2 = Ke.make({ ascender: v2.ascender, descender: v2.descender, advanceWidthMax: v2.advanceWidthMax, minLeftSideBearing: v2.minLeftSideBearing, minRightSideBearing: v2.minRightSideBearing, xMaxExtent: v2.maxLeftSideBearing + (v2.xMax - v2.xMin), numberOfHMetrics: e4.glyphs.length }), j2 = $e.make(e4.glyphs.length), x3 = ft.make({ xAvgCharWidth: Math.round(v2.advanceWidthAvg), usWeightClass: e4.tables.os2.usWeightClass, usWidthClass: e4.tables.os2.usWidthClass, usFirstCharIndex: t3, usLastCharIndex: u2, ulUnicodeRange1: c2, ulUnicodeRange2: d2, ulUnicodeRange3: h2, ulUnicodeRange4: f2, fsSelection: e4.tables.os2.fsSelection, sTypoAscender: v2.ascender, sTypoDescender: v2.descender, sTypoLineGap: 0, usWinAscent: v2.yMax, usWinDescent: Math.abs(v2.yMin), ulCodePageRange1: 1, sxHeight: xt(e4, "xyvw", { yMax: Math.round(v2.ascender / 2) }).yMax, sCapHeight: xt(e4, "HIKLEFJMNTZBDPRAGOQSUVWXY", v2).yMax, usDefaultChar: e4.hasChar(" ") ? 32 : 0, usBreakChar: e4.hasChar(" ") ? 32 : 0 }), w2 = Qe.make(e4.glyphs), S2 = we.make(e4.glyphs), T2 = e4.getEnglishName("fontFamily"), E2 = e4.getEnglishName("fontSubfamily"), M2 = T2 + " " + E2, k2 = (k2 = e4.getEnglishName("postScriptName")) || T2.replace(/\s/g, "") + "-" + E2, O2 = {};
            for (g2 in e4.names) O2[g2] = e4.names[g2];
            O2.uniqueID || (O2.uniqueID = { en: e4.getEnglishName("manufacturer") + ":" + M2 }), O2.postScriptName || (O2.postScriptName = { en: k2 }), O2.preferredFamily || (O2.preferredFamily = e4.names.fontFamily), O2.preferredSubfamily || (O2.preferredSubfamily = e4.names.fontSubfamily);
            var C2 = [], A2 = dt.make(O2, C2), C2 = 0 < C2.length ? Je.make(C2) : void 0, P2 = pt.make(), M2 = Ye.make(e4.glyphs, { version: e4.getEnglishName("version"), fullName: M2, familyName: T2, weightName: E2, postScriptName: k2, unitsPerEm: e4.unitsPerEm, fontBBox: [0, v2.yMin, v2.ascender, v2.advanceWidthMax] }), T2 = e4.metas && 0 < Object.keys(e4.metas).length ? gt.make(e4.metas) : void 0, E2 = [b2, _2, j2, x3, A2, S2, P2, M2, w2];
            C2 && E2.push(C2), e4.tables.gsub && E2.push(yt.make(e4.tables.gsub)), T2 && E2.push(T2);
            for (var D2 = bt((k2 = jt(E2)).encode()), L2 = k2.fields, R2 = false, I2 = 0; I2 < L2.length; I2 += 1) if ("head table" === L2[I2].name) {
              L2[I2].value.checkSumAdjustment = 2981146554 - D2, R2 = true;
              break;
            }
            if (R2) return k2;
            throw new Error("Could not find head table with checkSum to adjust.");
          }, computeCheckSum: bt };
          function St(e4, t3) {
            for (var r3 = 0, o4 = e4.length - 1; r3 <= o4; ) {
              var n2 = r3 + o4 >>> 1, s3 = e4[n2].tag;
              if (s3 === t3) return n2;
              s3 < t3 ? r3 = 1 + n2 : o4 = n2 - 1;
            }
            return -r3 - 1;
          }
          function Tt(e4, t3) {
            for (var r3 = 0, o4 = e4.length - 1; r3 <= o4; ) {
              var n2 = r3 + o4 >>> 1, s3 = e4[n2];
              if (s3 === t3) return n2;
              s3 < t3 ? r3 = 1 + n2 : o4 = n2 - 1;
            }
            return -r3 - 1;
          }
          function Et(e4, t3) {
            for (var r3 = 0, o4 = e4.length - 1; r3 <= o4; ) {
              var n2, s3 = r3 + o4 >>> 1, i2 = (n2 = e4[s3]).start;
              if (i2 === t3) return n2;
              i2 < t3 ? r3 = 1 + s3 : o4 = s3 - 1;
            }
            if (0 < r3) return t3 > (n2 = e4[r3 - 1]).end ? 0 : n2;
          }
          function Mt(e4, t3) {
            this.font = e4, this.tableName = t3;
          }
          function kt(e4) {
            Mt.call(this, e4, "gpos");
          }
          function i(e4) {
            Mt.call(this, e4, "gsub");
          }
          function Ot(e4, t3, r3) {
            for (var o4 = e4.subtables, n2 = 0; n2 < o4.length; n2++) {
              var s3 = o4[n2];
              if (s3.substFormat === t3) return s3;
            }
            if (r3) return o4.push(r3), r3;
          }
          function Ct(e4) {
            for (var t3 = new ArrayBuffer(e4.length), r3 = new Uint8Array(t3), o4 = 0; o4 < e4.length; ++o4) r3[o4] = e4[o4];
            return t3;
          }
          function j(e4, t3) {
            if (!e4) throw t3;
          }
          function At(e4, t3, r3, o4, n2) {
            var s3 = 0 < (t3 & o4) ? (s3 = e4.parseByte(), r3 + (s3 = 0 == (t3 & n2) ? -s3 : s3)) : 0 < (t3 & n2) ? r3 : r3 + e4.parseShort();
            return s3;
          }
          function Pt(e4, t3, r3) {
            var o4, n2 = new R.Parser(t3, r3);
            if (e4.numberOfContours = n2.parseShort(), e4._xMin = n2.parseShort(), e4._yMin = n2.parseShort(), e4._xMax = n2.parseShort(), e4._yMax = n2.parseShort(), 0 < e4.numberOfContours) {
              for (var s3 = e4.endPointIndices = [], i2 = 0; i2 < e4.numberOfContours; i2 += 1) s3.push(n2.parseUShort());
              e4.instructionLength = n2.parseUShort(), e4.instructions = [];
              for (var a3 = 0; a3 < e4.instructionLength; a3 += 1) e4.instructions.push(n2.parseByte());
              for (var l2 = s3[s3.length - 1] + 1, u2 = [], c2 = 0; c2 < l2; c2 += 1) if (o4 = n2.parseByte(), u2.push(o4), 0 < (8 & o4)) for (var d2 = n2.parseByte(), h2 = 0; h2 < d2; h2 += 1) u2.push(o4), c2 += 1;
              if (L.argument(u2.length === l2, "Bad flags."), 0 < s3.length) {
                var f2, p2 = [];
                if (0 < l2) {
                  for (var m2 = 0; m2 < l2; m2 += 1) o4 = u2[m2], (f2 = {}).onCurve = !!(1 & o4), f2.lastPointOfContour = 0 <= s3.indexOf(m2), p2.push(f2);
                  for (var y2 = 0, g2 = 0; g2 < l2; g2 += 1) o4 = u2[g2], (f2 = p2[g2]).x = At(n2, o4, y2, 2, 16), y2 = f2.x;
                  for (var v2 = 0, b2 = 0; b2 < l2; b2 += 1) o4 = u2[b2], (f2 = p2[b2]).y = At(n2, o4, v2, 4, 32), v2 = f2.y;
                }
                e4.points = p2;
              } else e4.points = [];
            } else if (0 === e4.numberOfContours) e4.points = [];
            else {
              e4.isComposite = true, e4.points = [], e4.components = [];
              for (var _2 = true; _2; ) {
                u2 = n2.parseUShort();
                var j2 = { glyphIndex: n2.parseUShort(), xScale: 1, scale01: 0, scale10: 0, yScale: 1, dx: 0, dy: 0 };
                0 < (1 & u2) ? 0 < (2 & u2) ? (j2.dx = n2.parseShort(), j2.dy = n2.parseShort()) : j2.matchedPoints = [n2.parseUShort(), n2.parseUShort()] : 0 < (2 & u2) ? (j2.dx = n2.parseChar(), j2.dy = n2.parseChar()) : j2.matchedPoints = [n2.parseByte(), n2.parseByte()], 0 < (8 & u2) ? j2.xScale = j2.yScale = n2.parseF2Dot14() : 0 < (64 & u2) ? (j2.xScale = n2.parseF2Dot14(), j2.yScale = n2.parseF2Dot14()) : 0 < (128 & u2) && (j2.xScale = n2.parseF2Dot14(), j2.scale01 = n2.parseF2Dot14(), j2.scale10 = n2.parseF2Dot14(), j2.yScale = n2.parseF2Dot14()), e4.components.push(j2), _2 = !!(32 & u2);
              }
              if (256 & u2) {
                e4.instructionLength = n2.parseUShort(), e4.instructions = [];
                for (var x3 = 0; x3 < e4.instructionLength; x3 += 1) e4.instructions.push(n2.parseByte());
              }
            }
          }
          function Lt(e4, t3) {
            for (var r3 = [], o4 = 0; o4 < e4.length; o4 += 1) {
              var n2 = e4[o4], n2 = { x: t3.xScale * n2.x + t3.scale01 * n2.y + t3.dx, y: t3.scale10 * n2.x + t3.yScale * n2.y + t3.dy, onCurve: n2.onCurve, lastPointOfContour: n2.lastPointOfContour };
              r3.push(n2);
            }
            return r3;
          }
          function Rt(e4) {
            var t3 = new h();
            if (e4) for (var r3 = function(e5) {
              for (var t4 = [], r4 = [], o5 = 0; o5 < e5.length; o5 += 1) {
                var n3 = e5[o5];
                r4.push(n3), n3.lastPointOfContour && (t4.push(r4), r4 = []);
              }
              return L.argument(0 === r4.length, "There are still points left in the current contour."), t4;
            }(e4), o4 = 0; o4 < r3.length; ++o4) {
              var n2, s3 = r3[o4], i2 = s3[s3.length - 1], a3 = s3[0];
              i2.onCurve ? t3.moveTo(i2.x, i2.y) : a3.onCurve ? t3.moveTo(a3.x, a3.y) : (n2 = { x: 0.5 * (i2.x + a3.x), y: 0.5 * (i2.y + a3.y) }, t3.moveTo(n2.x, n2.y));
              for (var l2 = 0; l2 < s3.length; ++l2) {
                var u2, c2 = i2, i2 = a3, a3 = s3[(l2 + 1) % s3.length];
                i2.onCurve ? t3.lineTo(i2.x, i2.y) : (u2 = a3, c2.onCurve || (i2.x, c2.x, i2.y, c2.y), a3.onCurve || (u2 = { x: 0.5 * (i2.x + a3.x), y: 0.5 * (i2.y + a3.y) }), t3.quadraticCurveTo(i2.x, i2.y, u2.x, u2.y));
              }
              t3.closePath();
            }
            return t3;
          }
          function It(e4, t3) {
            if (t3.isComposite) for (var r3 = 0; r3 < t3.components.length; r3 += 1) {
              var o4 = t3.components[r3], n2 = e4.get(o4.glyphIndex);
              if (n2.getPath(), n2.points) {
                var s3 = void 0;
                if (void 0 === o4.matchedPoints) s3 = Lt(n2.points, o4);
                else {
                  if (o4.matchedPoints[0] > t3.points.length - 1 || o4.matchedPoints[1] > n2.points.length - 1) throw Error("Matched points out of range in " + t3.name);
                  var i2 = t3.points[o4.matchedPoints[0]], a3 = n2.points[o4.matchedPoints[1]], o4 = { xScale: o4.xScale, scale01: o4.scale01, scale10: o4.scale10, yScale: o4.yScale, dx: 0, dy: 0 }, a3 = Lt([a3], o4)[0];
                  o4.dx = i2.x - a3.x, o4.dy = i2.y - a3.y, s3 = Lt(n2.points, o4);
                }
                t3.points = t3.points.concat(s3);
              }
            }
            return Rt(t3.points);
          }
          (kt.prototype = Mt.prototype = { searchTag: St, binSearch: Tt, getTable: function(e4) {
            var t3 = this.font.tables[this.tableName];
            return t3 = !t3 && e4 ? this.font.tables[this.tableName] = this.createDefaultTable() : t3;
          }, getScriptNames: function() {
            var e4 = this.getTable();
            return e4 ? e4.scripts.map(function(e5) {
              return e5.tag;
            }) : [];
          }, getDefaultScriptName: function() {
            var e4 = this.getTable();
            if (e4) {
              for (var t3 = false, r3 = 0; r3 < e4.scripts.length; r3++) {
                var o4 = e4.scripts[r3].tag;
                if ("DFLT" === o4) return o4;
                "latn" === o4 && (t3 = true);
              }
              return t3 ? "latn" : void 0;
            }
          }, getScriptTable: function(e4, t3) {
            var r3, o4 = this.getTable(t3);
            if (o4) return r3 = o4.scripts, 0 <= (o4 = St(o4.scripts, e4 = e4 || "DFLT")) ? r3[o4].script : t3 ? (r3.splice(-1 - o4, 0, t3 = { tag: e4, script: { defaultLangSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] }, langSysRecords: [] } }), t3.script) : void 0;
          }, getLangSysTable: function(e4, t3, r3) {
            var o4, e4 = this.getScriptTable(e4, r3);
            if (e4) return t3 && "dflt" !== t3 && "DFLT" !== t3 ? 0 <= (o4 = St(e4.langSysRecords, t3)) ? e4.langSysRecords[o4].langSys : r3 ? (e4.langSysRecords.splice(-1 - o4, 0, r3 = { tag: t3, langSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] } }), r3.langSys) : void 0 : e4.defaultLangSys;
          }, getFeatureTable: function(e4, t3, r3, o4) {
            e4 = this.getLangSysTable(e4, t3, o4);
            if (e4) {
              for (var n2, s3 = e4.featureIndexes, i2 = this.font.tables[this.tableName].features, a3 = 0; a3 < s3.length; a3++) if ((n2 = i2[s3[a3]]).tag === r3) return n2.feature;
              if (o4) return t3 = i2.length, L.assert(0 === t3 || r3 >= i2[t3 - 1].tag, "Features must be added in alphabetical order."), i2.push(n2 = { tag: r3, feature: { params: 0, lookupListIndexes: [] } }), s3.push(t3), n2.feature;
            }
          }, getLookupTables: function(e4, t3, r3, o4, n2) {
            var e4 = this.getFeatureTable(e4, t3, r3, n2), s3 = [];
            if (e4) {
              for (var i2, a3 = e4.lookupListIndexes, l2 = this.font.tables[this.tableName].lookups, u2 = 0; u2 < a3.length; u2++) (i2 = l2[a3[u2]]).lookupType === o4 && s3.push(i2);
              if (0 === s3.length && n2) return t3 = l2.length, l2.push(i2 = { lookupType: o4, lookupFlag: 0, subtables: [], markFilteringSet: void 0 }), a3.push(t3), [i2];
            }
            return s3;
          }, getGlyphClass: function(e4, t3) {
            switch (e4.format) {
              case 1:
                return e4.startGlyph <= t3 && t3 < e4.startGlyph + e4.classes.length ? e4.classes[t3 - e4.startGlyph] : 0;
              case 2:
                var r3 = Et(e4.ranges, t3);
                return r3 ? r3.classId : 0;
            }
          }, getCoverageIndex: function(e4, t3) {
            switch (e4.format) {
              case 1:
                var r3 = Tt(e4.glyphs, t3);
                return 0 <= r3 ? r3 : -1;
              case 2:
                r3 = Et(e4.ranges, t3);
                return r3 ? r3.index + t3 - r3.start : -1;
            }
          }, expandCoverage: function(e4) {
            if (1 === e4.format) return e4.glyphs;
            for (var t3 = [], r3 = e4.ranges, o4 = 0; o4 < r3.length; o4++) for (var n2 = r3[o4], s3 = n2.start, i2 = n2.end, a3 = s3; a3 <= i2; a3++) t3.push(a3);
            return t3;
          } }).init = function() {
            var e4 = this.getDefaultScriptName();
            this.defaultKerningTables = this.getKerningTables(e4);
          }, kt.prototype.getKerningValue = function(e4, t3, r3) {
            for (var o4 = 0; o4 < e4.length; o4++) for (var n2 = e4[o4].subtables, s3 = 0; s3 < n2.length; s3++) {
              var i2 = n2[s3], a3 = this.getCoverageIndex(i2.coverage, t3);
              if (!(a3 < 0)) switch (i2.posFormat) {
                case 1:
                  for (var l2 = i2.pairSets[a3], u2 = 0; u2 < l2.length; u2++) {
                    var c2 = l2[u2];
                    if (c2.secondGlyph === r3) return c2.value1 && c2.value1.xAdvance || 0;
                  }
                  break;
                case 2:
                  var d2 = this.getGlyphClass(i2.classDef1, t3), h2 = this.getGlyphClass(i2.classDef2, r3), d2 = i2.classRecords[d2][h2];
                  return d2.value1 && d2.value1.xAdvance || 0;
              }
            }
            return 0;
          }, kt.prototype.getKerningTables = function(e4, t3) {
            if (this.font.tables.gpos) return this.getLookupTables(e4, t3, "kern", 2);
          }, (i.prototype = Mt.prototype).createDefaultTable = function() {
            return { version: 1, scripts: [{ tag: "DFLT", script: { defaultLangSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] }, langSysRecords: [] } }], features: [], lookups: [] };
          }, i.prototype.getSingle = function(e4, t3, r3) {
            for (var o4 = [], n2 = this.getLookupTables(t3, r3, e4, 1), s3 = 0; s3 < n2.length; s3++) for (var i2 = n2[s3].subtables, a3 = 0; a3 < i2.length; a3++) {
              var l2 = i2[a3], u2 = this.expandCoverage(l2.coverage), c2 = void 0;
              if (1 === l2.substFormat) for (var d2 = l2.deltaGlyphId, c2 = 0; c2 < u2.length; c2++) {
                var h2 = u2[c2];
                o4.push({ sub: h2, by: h2 + d2 });
              }
              else {
                var f2 = l2.substitute;
                for (c2 = 0; c2 < u2.length; c2++) o4.push({ sub: u2[c2], by: f2[c2] });
              }
            }
            return o4;
          }, i.prototype.getAlternates = function(e4, t3, r3) {
            for (var o4 = [], n2 = this.getLookupTables(t3, r3, e4, 3), s3 = 0; s3 < n2.length; s3++) for (var i2 = n2[s3].subtables, a3 = 0; a3 < i2.length; a3++) for (var l2 = i2[a3], u2 = this.expandCoverage(l2.coverage), c2 = l2.alternateSets, d2 = 0; d2 < u2.length; d2++) o4.push({ sub: u2[d2], by: c2[d2] });
            return o4;
          }, i.prototype.getLigatures = function(e4, t3, r3) {
            for (var o4 = [], n2 = this.getLookupTables(t3, r3, e4, 4), s3 = 0; s3 < n2.length; s3++) for (var i2 = n2[s3].subtables, a3 = 0; a3 < i2.length; a3++) for (var l2 = i2[a3], u2 = this.expandCoverage(l2.coverage), c2 = l2.ligatureSets, d2 = 0; d2 < u2.length; d2++) for (var h2 = u2[d2], f2 = c2[d2], p2 = 0; p2 < f2.length; p2++) {
              var m2 = f2[p2];
              o4.push({ sub: [h2].concat(m2.components), by: m2.ligGlyph });
            }
            return o4;
          }, i.prototype.addSingle = function(e4, t3, r3, o4) {
            r3 = Ot(this.getLookupTables(r3, o4, e4, 1, true)[0], 2, { substFormat: 2, coverage: { format: 1, glyphs: [] }, substitute: [] }), L.assert(1 === r3.coverage.format, "Ligature: unable to modify coverage table format " + r3.coverage.format), o4 = t3.sub, e4 = this.binSearch(r3.coverage.glyphs, o4);
            e4 < 0 && (r3.coverage.glyphs.splice(e4 = -1 - e4, 0, o4), r3.substitute.splice(e4, 0, 0)), r3.substitute[e4] = t3.by;
          }, i.prototype.addAlternate = function(e4, t3, r3, o4) {
            r3 = Ot(this.getLookupTables(r3, o4, e4, 3, true)[0], 1, { substFormat: 1, coverage: { format: 1, glyphs: [] }, alternateSets: [] }), L.assert(1 === r3.coverage.format, "Ligature: unable to modify coverage table format " + r3.coverage.format), o4 = t3.sub, e4 = this.binSearch(r3.coverage.glyphs, o4);
            e4 < 0 && (r3.coverage.glyphs.splice(e4 = -1 - e4, 0, o4), r3.alternateSets.splice(e4, 0, 0)), r3.alternateSets[e4] = t3.by;
          }, i.prototype.addLigature = function(e4, t3, r3, o4) {
            var r3 = this.getLookupTables(r3, o4, e4, 4, true)[0], o4 = r3.subtables[0], e4 = (o4 || (r3.subtables[0] = o4 = { substFormat: 1, coverage: { format: 1, glyphs: [] }, ligatureSets: [] }), L.assert(1 === o4.coverage.format, "Ligature: unable to modify coverage table format " + o4.coverage.format), t3.sub[0]), n2 = t3.sub.slice(1), r3 = { ligGlyph: t3.by, components: n2 }, t3 = this.binSearch(o4.coverage.glyphs, e4);
            if (0 <= t3) {
              for (var s3 = o4.ligatureSets[t3], i2 = 0; i2 < s3.length; i2++) if (function(e5, t4) {
                var r4 = e5.length;
                if (r4 === t4.length) {
                  for (var o5 = 0; o5 < r4; o5++) if (e5[o5] !== t4[o5]) return;
                  return 1;
                }
              }(s3[i2].components, n2)) return;
              s3.push(r3);
            } else o4.coverage.glyphs.splice(t3 = -1 - t3, 0, e4), o4.ligatureSets.splice(t3, 0, [r3]);
          }, i.prototype.getFeature = function(e4, t3, r3) {
            if (/ss\d\d/.test(e4)) return this.getSingle(e4, t3, r3);
            switch (e4) {
              case "aalt":
              case "salt":
                return this.getSingle(e4, t3, r3).concat(this.getAlternates(e4, t3, r3));
              case "dlig":
              case "liga":
              case "rlig":
                return this.getLigatures(e4, t3, r3);
            }
          }, i.prototype.add = function(e4, t3, r3, o4) {
            if (/ss\d\d/.test(e4)) return this.addSingle(e4, t3, r3, o4);
            switch (e4) {
              case "aalt":
              case "salt":
                return "number" == typeof t3.by ? this.addSingle(e4, t3, r3, o4) : this.addAlternate(e4, t3, r3, o4);
              case "dlig":
              case "liga":
              case "rlig":
                return this.addLigature(e4, t3, r3, o4);
            }
          };
          var Dt = { getPath: Rt, parse: function(e4, t3, r3, o4) {
            for (var n2 = new p.GlyphSet(o4), s3 = 0; s3 < r3.length - 1; s3 += 1) {
              var i2 = r3[s3];
              i2 !== r3[s3 + 1] ? n2.push(s3, p.ttfGlyphLoader(o4, s3, Pt, e4, t3 + i2, It)) : n2.push(s3, p.glyphLoader(o4, s3));
            }
            return n2;
          } };
          function Ft(e4) {
            this.font = e4, this.getCommands = function(e5) {
              return Dt.getPath(e5).commands;
            }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
          }
          function Ut(e4) {
            return e4;
          }
          function Nt(e4) {
            return Math.sign(e4) * Math.round(Math.abs(e4));
          }
          function Bt(e4) {
            return Math.sign(e4) * Math.round(Math.abs(2 * e4)) / 2;
          }
          function Gt(e4) {
            return Math.sign(e4) * (Math.round(Math.abs(e4) + 0.5) - 0.5);
          }
          function Vt(e4) {
            return Math.sign(e4) * Math.ceil(Math.abs(e4));
          }
          function zt(e4) {
            return Math.sign(e4) * Math.floor(Math.abs(e4));
          }
          function Ht(e4) {
            var t3 = this.srPeriod, r3 = this.srPhase, o4 = 1;
            return e4 < 0 && (e4 = -e4, o4 = -1), e4 += this.srThreshold - r3, e4 = Math.trunc(e4 / t3) * t3, (e4 += r3) < 0 ? r3 * o4 : e4 * o4;
          }
          var x2 = { x: 1, y: 0, axis: "x", distance: function(e4, t3, r3, o4) {
            return (r3 ? e4.xo : e4.x) - (o4 ? t3.xo : t3.x);
          }, interpolate: function(e4, t3, r3, o4) {
            var n2, s3, i2, a3, l2, u2, c2;
            if (!o4 || o4 === this) return n2 = e4.xo - t3.xo, s3 = e4.xo - r3.xo, l2 = t3.x - t3.xo, u2 = r3.x - r3.xo, 0 === (c2 = (i2 = Math.abs(n2)) + (a3 = Math.abs(s3))) ? void (e4.x = e4.xo + (l2 + u2) / 2) : void (e4.x = e4.xo + (l2 * a3 + u2 * i2) / c2);
            n2 = o4.distance(e4, t3, true, true), s3 = o4.distance(e4, r3, true, true), l2 = o4.distance(t3, t3, false, true), u2 = o4.distance(r3, r3, false, true), 0 === (c2 = (i2 = Math.abs(n2)) + (a3 = Math.abs(s3))) ? x2.setRelative(e4, e4, (l2 + u2) / 2, o4, true) : x2.setRelative(e4, e4, (l2 * a3 + u2 * i2) / c2, o4, true);
          }, normalSlope: Number.NEGATIVE_INFINITY, setRelative: function(e4, t3, r3, o4, n2) {
            var s3, i2;
            o4 && o4 !== this ? (s3 = n2 ? t3.xo : t3.x, i2 = n2 ? t3.yo : t3.y, s3 += r3 * o4.x, i2 += r3 * o4.y, e4.x = s3 + (e4.y - i2) / o4.normalSlope) : e4.x = (n2 ? t3.xo : t3.x) + r3;
          }, slope: 0, touch: function(e4) {
            e4.xTouched = true;
          }, touched: function(e4) {
            return e4.xTouched;
          }, untouch: function(e4) {
            e4.xTouched = false;
          } }, T = { x: 0, y: 1, axis: "y", distance: function(e4, t3, r3, o4) {
            return (r3 ? e4.yo : e4.y) - (o4 ? t3.yo : t3.y);
          }, interpolate: function(e4, t3, r3, o4) {
            var n2, s3, i2, a3, l2, u2, c2;
            if (!o4 || o4 === this) return n2 = e4.yo - t3.yo, s3 = e4.yo - r3.yo, l2 = t3.y - t3.yo, u2 = r3.y - r3.yo, 0 === (c2 = (i2 = Math.abs(n2)) + (a3 = Math.abs(s3))) ? void (e4.y = e4.yo + (l2 + u2) / 2) : void (e4.y = e4.yo + (l2 * a3 + u2 * i2) / c2);
            n2 = o4.distance(e4, t3, true, true), s3 = o4.distance(e4, r3, true, true), l2 = o4.distance(t3, t3, false, true), u2 = o4.distance(r3, r3, false, true), 0 === (c2 = (i2 = Math.abs(n2)) + (a3 = Math.abs(s3))) ? T.setRelative(e4, e4, (l2 + u2) / 2, o4, true) : T.setRelative(e4, e4, (l2 * a3 + u2 * i2) / c2, o4, true);
          }, normalSlope: 0, setRelative: function(e4, t3, r3, o4, n2) {
            var s3, i2;
            o4 && o4 !== this ? (s3 = n2 ? t3.xo : t3.x, i2 = n2 ? t3.yo : t3.y, s3 += r3 * o4.x, i2 += r3 * o4.y, e4.y = i2 + o4.normalSlope * (e4.x - s3)) : e4.y = (n2 ? t3.yo : t3.y) + r3;
          }, slope: Number.POSITIVE_INFINITY, touch: function(e4) {
            e4.yTouched = true;
          }, touched: function(e4) {
            return e4.yTouched;
          }, untouch: function(e4) {
            e4.yTouched = false;
          } };
          function Wt(e4, t3) {
            this.x = e4, this.y = t3, this.axis = void 0, this.slope = t3 / e4, this.normalSlope = -e4 / t3, Object.freeze(this);
          }
          function qt(e4, t3) {
            var r3 = Math.sqrt(e4 * e4 + t3 * t3);
            return t3 /= r3, 1 === (e4 /= r3) && 0 === t3 ? x2 : 0 === e4 && 1 === t3 ? T : new Wt(e4, t3);
          }
          function E(e4, t3, r3, o4) {
            this.x = this.xo = Math.round(64 * e4) / 64, this.y = this.yo = Math.round(64 * t3) / 64, this.lastPointOfContour = r3, this.onCurve = o4, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = false, this.yTouched = false, Object.preventExtensions(this);
          }
          Object.freeze(x2), Object.freeze(T), Wt.prototype.distance = function(e4, t3, r3, o4) {
            return this.x * x2.distance(e4, t3, r3, o4) + this.y * T.distance(e4, t3, r3, o4);
          }, Wt.prototype.interpolate = function(e4, t3, r3, o4) {
            var n2 = o4.distance(e4, t3, true, true), s3 = o4.distance(e4, r3, true, true), t3 = o4.distance(t3, t3, false, true), r3 = o4.distance(r3, r3, false, true), n2 = Math.abs(n2), s3 = Math.abs(s3), i2 = n2 + s3;
            0 === i2 ? this.setRelative(e4, e4, (t3 + r3) / 2, o4, true) : this.setRelative(e4, e4, (t3 * s3 + r3 * n2) / i2, o4, true);
          }, Wt.prototype.setRelative = function(e4, t3, r3, o4, n2) {
            var s3 = n2 ? t3.xo : t3.x, n2 = n2 ? t3.yo : t3.y, t3 = s3 + r3 * (o4 = o4 || this).x, s3 = n2 + r3 * o4.y, n2 = o4.normalSlope, r3 = this.slope, o4 = e4.x, i2 = e4.y;
            e4.x = (r3 * o4 - n2 * t3 + s3 - i2) / (r3 - n2), e4.y = r3 * (e4.x - o4) + i2;
          }, Wt.prototype.touch = function(e4) {
            e4.xTouched = true, e4.yTouched = true;
          }, E.prototype.nextTouched = function(e4) {
            for (var t3 = this.nextPointOnContour; !e4.touched(t3) && t3 !== this; ) t3 = t3.nextPointOnContour;
            return t3;
          }, E.prototype.prevTouched = function(e4) {
            for (var t3 = this.prevPointOnContour; !e4.touched(t3) && t3 !== this; ) t3 = t3.prevPointOnContour;
            return t3;
          };
          var Xt = Object.freeze(new E(0, 0)), Yt = { cvCutIn: 17 / 16, deltaBase: 9, deltaShift: 0.125, loop: 1, minDis: 1, autoFlip: true };
          function M(e4, t3) {
            switch (this.env = e4, this.stack = [], this.prog = t3, e4) {
              case "glyf":
                this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
              case "prep":
                this.fv = this.pv = this.dpv = x2, this.round = Nt;
            }
          }
          function Zt(e4) {
            for (var t3 = e4.tZone = new Array(e4.gZone.length), r3 = 0; r3 < t3.length; r3++) t3[r3] = new E(0, 0);
          }
          function Kt(e4, t3) {
            var r3, o4 = e4.prog, n2 = e4.ip, s3 = 1;
            do {
              if (88 === (r3 = o4[++n2])) s3++;
              else if (89 === r3) s3--;
              else if (64 === r3) n2 += o4[n2 + 1] + 1;
              else if (65 === r3) n2 += 2 * o4[n2 + 1] + 1;
              else if (176 <= r3 && r3 <= 183) n2 += r3 - 176 + 1;
              else if (184 <= r3 && r3 <= 191) n2 += 2 * (r3 - 184 + 1);
              else if (t3 && 1 === s3 && 27 === r3) break;
            } while (0 < s3);
            e4.ip = n2;
          }
          function Qt(e4, t3) {
            _.DEBUG && console.log(t3.step, "SVTCA[" + e4.axis + "]"), t3.fv = t3.pv = t3.dpv = e4;
          }
          function Jt(e4, t3) {
            _.DEBUG && console.log(t3.step, "SPVTCA[" + e4.axis + "]"), t3.pv = t3.dpv = e4;
          }
          function $t(e4, t3) {
            _.DEBUG && console.log(t3.step, "SFVTCA[" + e4.axis + "]"), t3.fv = e4;
          }
          function er(e4, t3) {
            var r3, o4 = t3.stack, n2 = o4.pop(), o4 = o4.pop(), s3 = t3.z2[n2], i2 = t3.z1[o4];
            _.DEBUG && console.log("SPVTL[" + e4 + "]", n2, o4), n2 = e4 ? (r3 = s3.y - i2.y, i2.x - s3.x) : (r3 = i2.x - s3.x, i2.y - s3.y), t3.pv = t3.dpv = qt(r3, n2);
          }
          function tr(e4, t3) {
            var r3, o4 = t3.stack, n2 = o4.pop(), o4 = o4.pop(), s3 = t3.z2[n2], i2 = t3.z1[o4];
            _.DEBUG && console.log("SFVTL[" + e4 + "]", n2, o4), n2 = e4 ? (r3 = s3.y - i2.y, i2.x - s3.x) : (r3 = i2.x - s3.x, i2.y - s3.y), t3.fv = qt(r3, n2);
          }
          function rr(e4) {
            _.DEBUG && console.log(e4.step, "POP[]"), e4.stack.pop();
          }
          function or(e4, t3) {
            var r3 = t3.stack.pop(), o4 = t3.z0[r3], n2 = t3.fv, s3 = t3.pv, i2 = (_.DEBUG && console.log(t3.step, "MDAP[" + e4 + "]", r3), s3.distance(o4, Xt));
            e4 && (i2 = t3.round(i2)), n2.setRelative(o4, Xt, i2, s3), n2.touch(o4), t3.rp0 = t3.rp1 = r3;
          }
          function nr(e4, t3) {
            var r3, o4, n2, s3 = t3.z2, i2 = s3.length - 2;
            _.DEBUG && console.log(t3.step, "IUP[" + e4.axis + "]");
            for (var a3 = 0; a3 < i2; a3++) r3 = s3[a3], e4.touched(r3) || (o4 = r3.prevTouched(e4)) !== r3 && (o4 === (n2 = r3.nextTouched(e4)) && e4.setRelative(r3, r3, e4.distance(o4, o4, false, true), e4, true), e4.interpolate(r3, o4, n2, e4));
          }
          function sr(e4, t3) {
            for (var r3 = t3.stack, o4 = e4 ? t3.rp1 : t3.rp2, n2 = (e4 ? t3.z0 : t3.z1)[o4], s3 = t3.fv, i2 = t3.pv, a3 = t3.loop, l2 = t3.z2; a3--; ) {
              var u2 = r3.pop(), c2 = l2[u2], d2 = i2.distance(n2, n2, false, true);
              s3.setRelative(c2, c2, d2, i2), s3.touch(c2), _.DEBUG && console.log(t3.step, (1 < t3.loop ? "loop " + (t3.loop - a3) + ": " : "") + "SHP[" + (e4 ? "rp1" : "rp2") + "]", u2);
            }
            t3.loop = 1;
          }
          function ir(e4, t3) {
            for (var r3 = t3.stack, o4 = e4 ? t3.rp1 : t3.rp2, n2 = (e4 ? t3.z0 : t3.z1)[o4], s3 = t3.fv, i2 = t3.pv, o4 = r3.pop(), a3 = t3.z2[t3.contours[o4]], l2 = a3, u2 = (_.DEBUG && console.log(t3.step, "SHC[" + e4 + "]", o4), i2.distance(n2, n2, false, true)); l2 !== n2 && s3.setRelative(l2, l2, u2, i2), (l2 = l2.nextPointOnContour) !== a3; ) ;
          }
          function ar(e4, t3) {
            var r3, o4, n2 = t3.stack, s3 = e4 ? t3.rp1 : t3.rp2, s3 = (e4 ? t3.z0 : t3.z1)[s3], i2 = t3.fv, a3 = t3.pv, n2 = n2.pop();
            switch (_.DEBUG && console.log(t3.step, "SHZ[" + e4 + "]", n2), n2) {
              case 0:
                r3 = t3.tZone;
                break;
              case 1:
                r3 = t3.gZone;
                break;
              default:
                throw new Error("Invalid zone");
            }
            for (var l2 = a3.distance(s3, s3, false, true), u2 = r3.length - 2, c2 = 0; c2 < u2; c2++) o4 = r3[c2], i2.setRelative(o4, o4, l2, a3);
          }
          function lr(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop() / 64, r3 = r3.pop(), n2 = t3.z1[r3], s3 = t3.z0[t3.rp0], i2 = t3.fv, a3 = t3.pv;
            i2.setRelative(n2, s3, o4, a3), i2.touch(n2), _.DEBUG && console.log(t3.step, "MSIRP[" + e4 + "]", o4, r3), t3.rp1 = t3.rp0, t3.rp2 = r3, e4 && (t3.rp0 = r3);
          }
          function ur(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop(), r3 = r3.pop(), n2 = t3.z0[r3], s3 = t3.fv, i2 = t3.pv, a3 = t3.cvt[o4], o4 = (_.DEBUG && console.log(t3.step, "MIAP[" + e4 + "]", o4, "(", a3, ")", r3), i2.distance(n2, Xt));
            e4 && (Math.abs(o4 - a3) < t3.cvCutIn && (o4 = a3), o4 = t3.round(o4)), s3.setRelative(n2, Xt, o4, i2), 0 === t3.zp0 && (n2.xo = n2.x, n2.yo = n2.y), s3.touch(n2), t3.rp0 = t3.rp1 = r3;
          }
          function cr(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop(), n2 = t3.z2[o4];
            _.DEBUG && console.log(t3.step, "GC[" + e4 + "]", o4), r3.push(64 * t3.dpv.distance(n2, Xt, e4, false));
          }
          function dr(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop(), r3 = r3.pop(), n2 = t3.z1[o4], s3 = t3.z0[r3], s3 = t3.dpv.distance(s3, n2, e4, e4);
            _.DEBUG && console.log(t3.step, "MD[" + e4 + "]", o4, r3, "->", s3), t3.stack.push(Math.round(64 * s3));
          }
          function hr(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop(), n2 = t3.fv, s3 = t3.pv, i2 = t3.ppem, a3 = t3.deltaBase + 16 * (e4 - 1), l2 = t3.deltaShift, u2 = t3.z0;
            _.DEBUG && console.log(t3.step, "DELTAP[" + e4 + "]", o4, r3);
            for (var c2 = 0; c2 < o4; c2++) {
              var d2 = r3.pop(), h2 = r3.pop();
              a3 + ((240 & h2) >> 4) === i2 && (0 <= (h2 = (15 & h2) - 8) && h2++, _.DEBUG && console.log(t3.step, "DELTAPFIX", d2, "by", h2 * l2), d2 = u2[d2], n2.setRelative(d2, d2, h2 * l2, s3));
            }
          }
          function fr(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop();
            _.DEBUG && console.log(t3.step, "ROUND[]"), r3.push(64 * t3.round(o4 / 64));
          }
          function pr(e4, t3) {
            var r3 = t3.stack, o4 = r3.pop(), n2 = t3.ppem, s3 = t3.deltaBase + 16 * (e4 - 1), i2 = t3.deltaShift;
            _.DEBUG && console.log(t3.step, "DELTAC[" + e4 + "]", o4, r3);
            for (var a3 = 0; a3 < o4; a3++) {
              var l2 = r3.pop(), u2 = r3.pop();
              s3 + ((240 & u2) >> 4) === n2 && (0 <= (u2 = (15 & u2) - 8) && u2++, u2 = u2 * i2, _.DEBUG && console.log(t3.step, "DELTACFIX", l2, "by", u2), t3.cvt[l2] += u2);
            }
          }
          function mr(e4, t3) {
            var r3, o4 = t3.stack, n2 = o4.pop(), o4 = o4.pop(), s3 = t3.z2[n2], i2 = t3.z1[o4];
            _.DEBUG && console.log(t3.step, "SDPVTL[" + e4 + "]", n2, o4), n2 = e4 ? (r3 = s3.y - i2.y, i2.x - s3.x) : (r3 = i2.x - s3.x, i2.y - s3.y), t3.dpv = qt(r3, n2);
          }
          function k(e4, t3) {
            var r3 = t3.stack, o4 = t3.prog, n2 = t3.ip;
            _.DEBUG && console.log(t3.step, "PUSHB[" + e4 + "]");
            for (var s3 = 0; s3 < e4; s3++) r3.push(o4[++n2]);
            t3.ip = n2;
          }
          function O(e4, t3) {
            var r3 = t3.ip, o4 = t3.prog, n2 = t3.stack;
            _.DEBUG && console.log(t3.ip, "PUSHW[" + e4 + "]");
            for (var s3 = 0; s3 < e4; s3++) {
              var i2 = o4[++r3] << 8 | o4[++r3];
              32768 & i2 && (i2 = -(1 + (65535 ^ i2))), n2.push(i2);
            }
            t3.ip = r3;
          }
          function C(e4, t3, r3, o4, n2, s3) {
            var i2, a3, l2 = s3.stack, u2 = e4 && l2.pop(), l2 = l2.pop(), c2 = s3.rp0, c2 = s3.z0[c2], d2 = s3.z1[l2], h2 = s3.minDis, f2 = s3.fv, p2 = s3.dpv, m2 = i2 = p2.distance(d2, c2, true, true), y2 = 0 <= m2 ? 1 : -1;
            m2 = Math.abs(m2), e4 && (a3 = s3.cvt[u2], o4 && Math.abs(m2 - a3) < s3.cvCutIn && (m2 = a3)), r3 && m2 < h2 && (m2 = h2), o4 && (m2 = s3.round(m2)), f2.setRelative(d2, c2, y2 * m2, p2), f2.touch(d2), _.DEBUG && console.log(s3.step, (e4 ? "MIRP[" : "MDRP[") + (t3 ? "M" : "m") + (r3 ? ">" : "_") + (o4 ? "R" : "_") + (0 === n2 ? "Gr" : 1 === n2 ? "Bl" : 2 === n2 ? "Wh" : "") + "]", e4 ? u2 + "(" + s3.cvt[u2] + "," + a3 + ")" : "", l2, "(d =", i2, "->", y2 * m2, ")"), s3.rp1 = s3.rp0, s3.rp2 = l2, t3 && (s3.rp0 = l2);
          }
          Ft.prototype.exec = function(e4, t3) {
            if ("number" != typeof t3) throw new Error("Point size is not a number!");
            if (!(2 < this._errorState)) {
              var r3 = this.font, o4 = this._prepState;
              if (!o4 || o4.ppem !== t3) {
                var n2 = this._fpgmState;
                if (!n2) {
                  M.prototype = Yt, (n2 = this._fpgmState = new M("fpgm", r3.tables.fpgm)).funcs = [], n2.font = r3, _.DEBUG && (console.log("---EXEC FPGM---"), n2.step = -1);
                  try {
                    vr(n2);
                  } catch (e5) {
                    return console.log("Hinting error in FPGM:" + e5), void (this._errorState = 3);
                  }
                }
                M.prototype = n2, (o4 = this._prepState = new M("prep", r3.tables.prep)).ppem = t3;
                var s3 = r3.tables.cvt;
                if (s3) for (var i2 = o4.cvt = new Array(s3.length), a3 = t3 / r3.unitsPerEm, l2 = 0; l2 < s3.length; l2++) i2[l2] = s3[l2] * a3;
                else o4.cvt = [];
                _.DEBUG && (console.log("---EXEC PREP---"), o4.step = -1);
                try {
                  vr(o4);
                } catch (e5) {
                  this._errorState < 2 && console.log("Hinting error in PREP:" + e5), this._errorState = 2;
                }
              }
              if (!(1 < this._errorState)) try {
                return yr(e4, o4);
              } catch (e5) {
                this._errorState < 1 && (console.log("Hinting error:" + e5), console.log("Note: further hinting errors are silenced")), this._errorState = 1;
              }
            }
          };
          var yr = function(e4, t3) {
            var r3 = t3.ppem / t3.font.unitsPerEm, o4 = r3, n2 = e4.components;
            if (M.prototype = t3, n2) {
              for (var s3 = t3.font, i2 = [], a3 = [], l2 = 0; l2 < n2.length; l2++) {
                var u2 = n2[l2], c2 = s3.glyphs.get(u2.glyphIndex), d2 = new M("glyf", c2.instructions);
                _.DEBUG && (console.log("---EXEC COMP " + l2 + "---"), d2.step = -1), gr(c2, d2, r3, o4);
                for (var h2 = Math.round(u2.dx * r3), f2 = Math.round(u2.dy * o4), p2 = d2.gZone, m2 = d2.contours, y2 = 0; y2 < p2.length; y2++) {
                  var g2 = p2[y2];
                  g2.xTouched = g2.yTouched = false, g2.xo = g2.x = g2.x + h2, g2.yo = g2.y = g2.y + f2;
                }
                var v2 = i2.length;
                i2.push.apply(i2, p2);
                for (var b2 = 0; b2 < m2.length; b2++) a3.push(m2[b2] + v2);
              }
              e4.instructions && !d2.inhibitGridFit && ((d2 = new M("glyf", e4.instructions)).gZone = d2.z0 = d2.z1 = d2.z2 = i2, d2.contours = a3, i2.push(new E(0, 0), new E(Math.round(e4.advanceWidth * r3), 0)), _.DEBUG && (console.log("---EXEC COMPOSITE---"), d2.step = -1), vr(d2), i2.length -= 2);
            } else d2 = new M("glyf", e4.instructions), _.DEBUG && (console.log("---EXEC GLYPH---"), d2.step = -1), gr(e4, d2, r3, o4), i2 = d2.gZone;
            return i2;
          }, gr = function(e4, t3, r3, o4) {
            for (var n2, s3, i2, a3 = e4.points || [], l2 = a3.length, u2 = t3.gZone = t3.z0 = t3.z1 = t3.z2 = [], c2 = t3.contours = [], d2 = 0; d2 < l2; d2++) n2 = a3[d2], u2[d2] = new E(n2.x * r3, n2.y * o4, n2.lastPointOfContour, n2.onCurve);
            for (var h2 = 0; h2 < l2; h2++) n2 = u2[h2], s3 || (s3 = n2, c2.push(h2)), n2.lastPointOfContour ? ((n2.nextPointOnContour = s3).prevPointOnContour = n2, s3 = void 0) : (i2 = u2[h2 + 1], (n2.nextPointOnContour = i2).prevPointOnContour = n2);
            if (!t3.inhibitGridFit) {
              if (_.DEBUG) {
                console.log("PROCESSING GLYPH", t3.stack);
                for (var f2 = 0; f2 < l2; f2++) console.log(f2, u2[f2].x, u2[f2].y);
              }
              if (u2.push(new E(0, 0), new E(Math.round(e4.advanceWidth * r3), 0)), vr(t3), u2.length -= 2, _.DEBUG) {
                console.log("FINISHED GLYPH", t3.stack);
                for (var p2 = 0; p2 < l2; p2++) console.log(p2, u2[p2].x, u2[p2].y);
              }
            }
          }, vr = function(e4) {
            var t3 = e4.prog;
            if (t3) {
              var r3, o4 = t3.length;
              for (e4.ip = 0; e4.ip < o4; e4.ip++) {
                if (_.DEBUG && e4.step++, !(r3 = br[t3[e4.ip]])) throw new Error("unknown instruction: 0x" + Number(t3[e4.ip]).toString(16));
                r3(e4);
              }
            }
          }, br = [Qt.bind(void 0, T), Qt.bind(void 0, x2), Jt.bind(void 0, T), Jt.bind(void 0, x2), $t.bind(void 0, T), $t.bind(void 0, x2), er.bind(void 0, 0), er.bind(void 0, 1), tr.bind(void 0, 0), tr.bind(void 0, 1), function(e4) {
            var t3 = (r3 = e4.stack).pop(), r3 = r3.pop();
            _.DEBUG && console.log(e4.step, "SPVFS[]", t3, r3), e4.pv = e4.dpv = qt(r3, t3);
          }, function(e4) {
            var t3 = (r3 = e4.stack).pop(), r3 = r3.pop();
            _.DEBUG && console.log(e4.step, "SPVFS[]", t3, r3), e4.fv = qt(r3, t3);
          }, function(e4) {
            var t3 = e4.stack, r3 = e4.pv;
            _.DEBUG && console.log(e4.step, "GPV[]"), t3.push(16384 * r3.x), t3.push(16384 * r3.y);
          }, function(e4) {
            var t3 = e4.stack, r3 = e4.fv;
            _.DEBUG && console.log(e4.step, "GFV[]"), t3.push(16384 * r3.x), t3.push(16384 * r3.y);
          }, function(e4) {
            e4.fv = e4.pv, _.DEBUG && console.log(e4.step, "SFVTPV[]");
          }, function(e4) {
            var t3 = (s3 = e4.stack).pop(), r3 = s3.pop(), o4 = s3.pop(), n2 = s3.pop(), s3 = s3.pop(), i2 = e4.z0, a3 = e4.z1, l2 = i2[t3], i2 = i2[r3], u2 = a3[o4], a3 = a3[n2], e4 = e4.z2[s3], t3 = (_.DEBUG && console.log("ISECT[], ", t3, r3, o4, n2, s3), l2.x), r3 = l2.y, o4 = i2.x, n2 = i2.y, s3 = u2.x, l2 = u2.y, i2 = a3.x, u2 = a3.y, a3 = (t3 - o4) * (l2 - u2) - (r3 - n2) * (s3 - i2), c2 = t3 * n2 - r3 * o4, d2 = s3 * u2 - l2 * i2;
            e4.x = (c2 * (s3 - i2) - d2 * (t3 - o4)) / a3, e4.y = (c2 * (l2 - u2) - d2 * (r3 - n2)) / a3;
          }, function(e4) {
            e4.rp0 = e4.stack.pop(), _.DEBUG && console.log(e4.step, "SRP0[]", e4.rp0);
          }, function(e4) {
            e4.rp1 = e4.stack.pop(), _.DEBUG && console.log(e4.step, "SRP1[]", e4.rp1);
          }, function(e4) {
            e4.rp2 = e4.stack.pop(), _.DEBUG && console.log(e4.step, "SRP2[]", e4.rp2);
          }, function(e4) {
            var t3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "SZP0[]", t3), e4.zp0 = t3) {
              case 0:
                e4.tZone || Zt(e4), e4.z0 = e4.tZone;
                break;
              case 1:
                e4.z0 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            var t3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "SZP1[]", t3), e4.zp1 = t3) {
              case 0:
                e4.tZone || Zt(e4), e4.z1 = e4.tZone;
                break;
              case 1:
                e4.z1 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            var t3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "SZP2[]", t3), e4.zp2 = t3) {
              case 0:
                e4.tZone || Zt(e4), e4.z2 = e4.tZone;
                break;
              case 1:
                e4.z2 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            var t3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "SZPS[]", t3), e4.zp0 = e4.zp1 = e4.zp2 = t3) {
              case 0:
                e4.tZone || Zt(e4), e4.z0 = e4.z1 = e4.z2 = e4.tZone;
                break;
              case 1:
                e4.z0 = e4.z1 = e4.z2 = e4.gZone;
                break;
              default:
                throw new Error("Invalid zone pointer");
            }
          }, function(e4) {
            e4.loop = e4.stack.pop(), _.DEBUG && console.log(e4.step, "SLOOP[]", e4.loop);
          }, function(e4) {
            _.DEBUG && console.log(e4.step, "RTG[]"), e4.round = Nt;
          }, function(e4) {
            _.DEBUG && console.log(e4.step, "RTHG[]"), e4.round = Gt;
          }, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "SMD[]", t3), e4.minDis = t3 / 64;
          }, function(e4) {
            _.DEBUG && console.log(e4.step, "ELSE[]"), Kt(e4, false);
          }, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "JMPR[]", t3), e4.ip += t3 - 1;
          }, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "SCVTCI[]", t3), e4.cvCutIn = t3 / 64;
          }, void 0, void 0, function(e4) {
            var t3 = e4.stack;
            _.DEBUG && console.log(e4.step, "DUP[]"), t3.push(t3[t3.length - 1]);
          }, rr, function(e4) {
            _.DEBUG && console.log(e4.step, "CLEAR[]"), e4.stack.length = 0;
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "SWAP[]"), t3.push(r3), t3.push(o4);
          }, function(e4) {
            var t3 = e4.stack;
            _.DEBUG && console.log(e4.step, "DEPTH[]"), t3.push(t3.length);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "CINDEX[]", r3), t3.push(t3[t3.length - r3]);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "MINDEX[]", r3), t3.push(t3.splice(t3.length - r3, 1)[0]);
          }, void 0, void 0, void 0, function(e4) {
            var t3 = (o4 = e4.stack).pop(), r3 = o4.pop(), o4 = (_.DEBUG && console.log(e4.step, "LOOPCALL[]", t3, r3), e4.ip), n2 = e4.prog;
            e4.prog = e4.funcs[t3];
            for (var s3 = 0; s3 < r3; s3++) vr(e4), _.DEBUG && console.log(++e4.step, s3 + 1 < r3 ? "next loopcall" : "done loopcall", s3);
            e4.ip = o4, e4.prog = n2;
          }, function(e4) {
            var t3 = e4.stack.pop(), r3 = (_.DEBUG && console.log(e4.step, "CALL[]", t3), e4.ip), o4 = e4.prog;
            e4.prog = e4.funcs[t3], vr(e4), e4.ip = r3, e4.prog = o4, _.DEBUG && console.log(++e4.step, "returning from", t3);
          }, function(e4) {
            if ("fpgm" !== e4.env) throw new Error("FDEF not allowed here");
            var t3 = e4.stack, r3 = e4.prog, o4 = e4.ip, t3 = t3.pop(), n2 = o4;
            for (_.DEBUG && console.log(e4.step, "FDEF[]", t3); 45 !== r3[++o4]; ) ;
            e4.ip = o4, e4.funcs[t3] = r3.slice(n2 + 1, o4);
          }, void 0, or.bind(void 0, 0), or.bind(void 0, 1), nr.bind(void 0, T), nr.bind(void 0, x2), sr.bind(void 0, 0), sr.bind(void 0, 1), ir.bind(void 0, 0), ir.bind(void 0, 1), ar.bind(void 0, 0), ar.bind(void 0, 1), function(e4) {
            for (var t3 = e4.stack, r3 = e4.loop, o4 = e4.fv, n2 = t3.pop() / 64, s3 = e4.z2; r3--; ) {
              var i2 = t3.pop(), a3 = s3[i2];
              _.DEBUG && console.log(e4.step, (1 < e4.loop ? "loop " + (e4.loop - r3) + ": " : "") + "SHPIX[]", i2, n2), o4.setRelative(a3, a3, n2), o4.touch(a3);
            }
            e4.loop = 1;
          }, function(e4) {
            for (var t3 = e4.stack, r3 = e4.rp1, o4 = e4.rp2, n2 = e4.loop, s3 = e4.z0[r3], i2 = e4.z1[o4], a3 = e4.fv, l2 = e4.dpv, u2 = e4.z2; n2--; ) {
              var c2 = t3.pop(), d2 = u2[c2];
              _.DEBUG && console.log(e4.step, (1 < e4.loop ? "loop " + (e4.loop - n2) + ": " : "") + "IP[]", c2, r3, "<->", o4), a3.interpolate(d2, s3, i2, l2), a3.touch(d2);
            }
            e4.loop = 1;
          }, lr.bind(void 0, 0), lr.bind(void 0, 1), function(e4) {
            for (var t3 = e4.stack, r3 = e4.rp0, o4 = e4.z0[r3], n2 = e4.loop, s3 = e4.fv, i2 = e4.pv, a3 = e4.z1; n2--; ) {
              var l2 = t3.pop(), u2 = a3[l2];
              _.DEBUG && console.log(e4.step, (1 < e4.loop ? "loop " + (e4.loop - n2) + ": " : "") + "ALIGNRP[]", l2), s3.setRelative(u2, o4, 0, i2), s3.touch(u2);
            }
            e4.loop = 1;
          }, function(e4) {
            _.DEBUG && console.log(e4.step, "RTDG[]"), e4.round = Bt;
          }, ur.bind(void 0, 0), ur.bind(void 0, 1), function(e4) {
            var t3 = e4.prog, r3 = e4.ip, o4 = e4.stack, n2 = t3[++r3];
            _.DEBUG && console.log(e4.step, "NPUSHB[]", n2);
            for (var s3 = 0; s3 < n2; s3++) o4.push(t3[++r3]);
            e4.ip = r3;
          }, function(e4) {
            var t3 = e4.ip, r3 = e4.prog, o4 = e4.stack, n2 = r3[++t3];
            _.DEBUG && console.log(e4.step, "NPUSHW[]", n2);
            for (var s3 = 0; s3 < n2; s3++) {
              var i2 = r3[++t3] << 8 | r3[++t3];
              32768 & i2 && (i2 = -(1 + (65535 ^ i2))), o4.push(i2);
            }
            e4.ip = t3;
          }, function(e4) {
            var t3 = e4.stack, r3 = (r3 = e4.store) || (e4.store = []), o4 = t3.pop(), t3 = t3.pop();
            _.DEBUG && console.log(e4.step, "WS", o4, t3), r3[t3] = o4;
          }, function(e4) {
            var t3 = e4.stack, r3 = e4.store, o4 = t3.pop(), e4 = (_.DEBUG && console.log(e4.step, "RS", o4), r3 && r3[o4] || 0);
            t3.push(e4);
          }, function(e4) {
            var t3 = (r3 = e4.stack).pop(), r3 = r3.pop();
            _.DEBUG && console.log(e4.step, "WCVTP", t3, r3), e4.cvt[r3] = t3 / 64;
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "RCVT", r3), t3.push(64 * e4.cvt[r3]);
          }, cr.bind(void 0, 0), cr.bind(void 0, 1), void 0, dr.bind(void 0, 0), dr.bind(void 0, 1), function(e4) {
            _.DEBUG && console.log(e4.step, "MPPEM[]"), e4.stack.push(e4.ppem);
          }, void 0, function(e4) {
            _.DEBUG && console.log(e4.step, "FLIPON[]"), e4.autoFlip = true;
          }, void 0, void 0, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "LT[]", r3, o4), t3.push(o4 < r3 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "LTEQ[]", r3, o4), t3.push(o4 <= r3 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "GT[]", r3, o4), t3.push(r3 < o4 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "GTEQ[]", r3, o4), t3.push(r3 <= o4 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "EQ[]", r3, o4), t3.push(r3 === o4 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "NEQ[]", r3, o4), t3.push(r3 !== o4 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "ODD[]", r3), t3.push(Math.trunc(r3) % 2 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "EVEN[]", r3), t3.push(Math.trunc(r3) % 2 ? 0 : 1);
          }, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "IF[]", t3), t3 || (Kt(e4, true), _.DEBUG && console.log(e4.step, "EIF[]"));
          }, function(e4) {
            _.DEBUG && console.log(e4.step, "EIF[]");
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "AND[]", r3, o4), t3.push(r3 && o4 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "OR[]", r3, o4), t3.push(r3 || o4 ? 1 : 0);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "NOT[]", r3), t3.push(r3 ? 0 : 1);
          }, hr.bind(void 0, 1), function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "SDB[]", t3), e4.deltaBase = t3;
          }, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "SDS[]", t3), e4.deltaShift = Math.pow(0.5, t3);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "ADD[]", r3, o4), t3.push(o4 + r3);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "SUB[]", r3, o4), t3.push(o4 - r3);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "DIV[]", r3, o4), t3.push(64 * o4 / r3);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "MUL[]", r3, o4), t3.push(o4 * r3 / 64);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "ABS[]", r3), t3.push(Math.abs(r3));
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "NEG[]", r3), t3.push(-r3);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "FLOOR[]", r3), t3.push(64 * Math.floor(r3 / 64));
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop();
            _.DEBUG && console.log(e4.step, "CEILING[]", r3), t3.push(64 * Math.ceil(r3 / 64));
          }, fr.bind(void 0, 0), fr.bind(void 0, 1), fr.bind(void 0, 2), fr.bind(void 0, 3), void 0, void 0, void 0, void 0, function(e4) {
            var t3 = (r3 = e4.stack).pop(), r3 = r3.pop();
            _.DEBUG && console.log(e4.step, "WCVTF[]", t3, r3), e4.cvt[r3] = t3 * e4.ppem / e4.font.unitsPerEm;
          }, hr.bind(void 0, 2), hr.bind(void 0, 3), pr.bind(void 0, 1), pr.bind(void 0, 2), pr.bind(void 0, 3), function(e4) {
            var t3, r3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "SROUND[]", r3), e4.round = Ht, 192 & r3) {
              case 0:
                t3 = 0.5;
                break;
              case 64:
                t3 = 1;
                break;
              case 128:
                t3 = 2;
                break;
              default:
                throw new Error("invalid SROUND value");
            }
            switch (e4.srPeriod = t3, 48 & r3) {
              case 0:
                e4.srPhase = 0;
                break;
              case 16:
                e4.srPhase = 0.25 * t3;
                break;
              case 32:
                e4.srPhase = 0.5 * t3;
                break;
              case 48:
                e4.srPhase = 0.75 * t3;
                break;
              default:
                throw new Error("invalid SROUND value");
            }
            e4.srThreshold = 0 === (r3 &= 15) ? 0 : (r3 / 8 - 0.5) * t3;
          }, function(e4) {
            var t3, r3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "S45ROUND[]", r3), e4.round = Ht, 192 & r3) {
              case 0:
                t3 = Math.sqrt(2) / 2;
                break;
              case 64:
                t3 = Math.sqrt(2);
                break;
              case 128:
                t3 = 2 * Math.sqrt(2);
                break;
              default:
                throw new Error("invalid S45ROUND value");
            }
            switch (e4.srPeriod = t3, 48 & r3) {
              case 0:
                e4.srPhase = 0;
                break;
              case 16:
                e4.srPhase = 0.25 * t3;
                break;
              case 32:
                e4.srPhase = 0.5 * t3;
                break;
              case 48:
                e4.srPhase = 0.75 * t3;
                break;
              default:
                throw new Error("invalid S45ROUND value");
            }
            e4.srThreshold = 0 === (r3 &= 15) ? 0 : (r3 / 8 - 0.5) * t3;
          }, void 0, void 0, function(e4) {
            _.DEBUG && console.log(e4.step, "ROFF[]"), e4.round = Ut;
          }, void 0, function(e4) {
            _.DEBUG && console.log(e4.step, "RUTG[]"), e4.round = Vt;
          }, function(e4) {
            _.DEBUG && console.log(e4.step, "RDTG[]"), e4.round = zt;
          }, rr, rr, void 0, void 0, void 0, void 0, void 0, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "SCANCTRL[]", t3);
          }, mr.bind(void 0, 0), mr.bind(void 0, 1), function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = 0;
            _.DEBUG && console.log(e4.step, "GETINFO[]", r3), 1 & r3 && (o4 = 35), 32 & r3 && (o4 |= 4096), t3.push(o4);
          }, void 0, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop(), n2 = t3.pop();
            _.DEBUG && console.log(e4.step, "ROLL[]"), t3.push(o4), t3.push(r3), t3.push(n2);
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "MAX[]", r3, o4), t3.push(Math.max(o4, r3));
          }, function(e4) {
            var t3 = e4.stack, r3 = t3.pop(), o4 = t3.pop();
            _.DEBUG && console.log(e4.step, "MIN[]", r3, o4), t3.push(Math.min(o4, r3));
          }, function(e4) {
            var t3 = e4.stack.pop();
            _.DEBUG && console.log(e4.step, "SCANTYPE[]", t3);
          }, function(e4) {
            var t3 = e4.stack.pop(), r3 = e4.stack.pop();
            switch (_.DEBUG && console.log(e4.step, "INSTCTRL[]", t3, r3), t3) {
              case 1:
                return void (e4.inhibitGridFit = !!r3);
              case 2:
                return void (e4.ignoreCvt = !!r3);
              default:
                throw new Error("invalid INSTCTRL[] selector");
            }
          }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, k.bind(void 0, 1), k.bind(void 0, 2), k.bind(void 0, 3), k.bind(void 0, 4), k.bind(void 0, 5), k.bind(void 0, 6), k.bind(void 0, 7), k.bind(void 0, 8), O.bind(void 0, 1), O.bind(void 0, 2), O.bind(void 0, 3), O.bind(void 0, 4), O.bind(void 0, 5), O.bind(void 0, 6), O.bind(void 0, 7), O.bind(void 0, 8), C.bind(void 0, 0, 0, 0, 0, 0), C.bind(void 0, 0, 0, 0, 0, 1), C.bind(void 0, 0, 0, 0, 0, 2), C.bind(void 0, 0, 0, 0, 0, 3), C.bind(void 0, 0, 0, 0, 1, 0), C.bind(void 0, 0, 0, 0, 1, 1), C.bind(void 0, 0, 0, 0, 1, 2), C.bind(void 0, 0, 0, 0, 1, 3), C.bind(void 0, 0, 0, 1, 0, 0), C.bind(void 0, 0, 0, 1, 0, 1), C.bind(void 0, 0, 0, 1, 0, 2), C.bind(void 0, 0, 0, 1, 0, 3), C.bind(void 0, 0, 0, 1, 1, 0), C.bind(void 0, 0, 0, 1, 1, 1), C.bind(void 0, 0, 0, 1, 1, 2), C.bind(void 0, 0, 0, 1, 1, 3), C.bind(void 0, 0, 1, 0, 0, 0), C.bind(void 0, 0, 1, 0, 0, 1), C.bind(void 0, 0, 1, 0, 0, 2), C.bind(void 0, 0, 1, 0, 0, 3), C.bind(void 0, 0, 1, 0, 1, 0), C.bind(void 0, 0, 1, 0, 1, 1), C.bind(void 0, 0, 1, 0, 1, 2), C.bind(void 0, 0, 1, 0, 1, 3), C.bind(void 0, 0, 1, 1, 0, 0), C.bind(void 0, 0, 1, 1, 0, 1), C.bind(void 0, 0, 1, 1, 0, 2), C.bind(void 0, 0, 1, 1, 0, 3), C.bind(void 0, 0, 1, 1, 1, 0), C.bind(void 0, 0, 1, 1, 1, 1), C.bind(void 0, 0, 1, 1, 1, 2), C.bind(void 0, 0, 1, 1, 1, 3), C.bind(void 0, 1, 0, 0, 0, 0), C.bind(void 0, 1, 0, 0, 0, 1), C.bind(void 0, 1, 0, 0, 0, 2), C.bind(void 0, 1, 0, 0, 0, 3), C.bind(void 0, 1, 0, 0, 1, 0), C.bind(void 0, 1, 0, 0, 1, 1), C.bind(void 0, 1, 0, 0, 1, 2), C.bind(void 0, 1, 0, 0, 1, 3), C.bind(void 0, 1, 0, 1, 0, 0), C.bind(void 0, 1, 0, 1, 0, 1), C.bind(void 0, 1, 0, 1, 0, 2), C.bind(void 0, 1, 0, 1, 0, 3), C.bind(void 0, 1, 0, 1, 1, 0), C.bind(void 0, 1, 0, 1, 1, 1), C.bind(void 0, 1, 0, 1, 1, 2), C.bind(void 0, 1, 0, 1, 1, 3), C.bind(void 0, 1, 1, 0, 0, 0), C.bind(void 0, 1, 1, 0, 0, 1), C.bind(void 0, 1, 1, 0, 0, 2), C.bind(void 0, 1, 1, 0, 0, 3), C.bind(void 0, 1, 1, 0, 1, 0), C.bind(void 0, 1, 1, 0, 1, 1), C.bind(void 0, 1, 1, 0, 1, 2), C.bind(void 0, 1, 1, 0, 1, 3), C.bind(void 0, 1, 1, 1, 0, 0), C.bind(void 0, 1, 1, 1, 0, 1), C.bind(void 0, 1, 1, 1, 0, 2), C.bind(void 0, 1, 1, 1, 0, 3), C.bind(void 0, 1, 1, 1, 1, 0), C.bind(void 0, 1, 1, 1, 1, 1), C.bind(void 0, 1, 1, 1, 1, 2), C.bind(void 0, 1, 1, 1, 1, 3)], _r = Array.from || function(e4) {
            return e4.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
          };
          function A(e4) {
            (e4 = e4 || {}).empty || (j(e4.familyName, "When creating a new Font object, familyName is required."), j(e4.styleName, "When creating a new Font object, styleName is required."), j(e4.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), j(e4.ascender, "When creating a new Font object, ascender is required."), j(e4.descender, "When creating a new Font object, descender is required."), j(e4.descender < 0, "Descender should be negative (e.g. -512)."), this.names = { fontFamily: { en: e4.familyName || " " }, fontSubfamily: { en: e4.styleName || " " }, fullName: { en: e4.fullName || e4.familyName + " " + e4.styleName }, postScriptName: { en: e4.postScriptName || (e4.familyName + e4.styleName).replace(/\s/g, "") }, designer: { en: e4.designer || " " }, designerURL: { en: e4.designerURL || " " }, manufacturer: { en: e4.manufacturer || " " }, manufacturerURL: { en: e4.manufacturerURL || " " }, license: { en: e4.license || " " }, licenseURL: { en: e4.licenseURL || " " }, version: { en: e4.version || "Version 0.1" }, description: { en: e4.description || " " }, copyright: { en: e4.copyright || " " }, trademark: { en: e4.trademark || " " } }, this.unitsPerEm = e4.unitsPerEm || 1e3, this.ascender = e4.ascender, this.descender = e4.descender, this.createdTimestamp = e4.createdTimestamp, this.tables = { os2: { usWeightClass: e4.weightClass || this.usWeightClasses.MEDIUM, usWidthClass: e4.widthClass || this.usWidthClasses.MEDIUM, fsSelection: e4.fsSelection || this.fsSelectionValues.REGULAR } }), this.supported = true, this.glyphs = new p.GlyphSet(this, e4.glyphs || []), this.encoding = new Me(this), this.position = new kt(this), this.substitution = new i(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", { get: function() {
              return this._hinting || ("truetype" === this.outlinesFormat ? this._hinting = new Ft(this) : void 0);
            } });
          }
          function jr(e4, t3) {
            var r3, o4 = JSON.stringify(e4), n2 = 256;
            for (r3 in t3) {
              var s3 = parseInt(r3);
              if (s3 && !(s3 < 256)) {
                if (JSON.stringify(t3[r3]) === o4) return s3;
                n2 <= s3 && (n2 = s3 + 1);
              }
            }
            return t3[n2] = e4, n2;
          }
          A.prototype.hasChar = function(e4) {
            return null !== this.encoding.charToGlyphIndex(e4);
          }, A.prototype.charToGlyphIndex = function(e4) {
            return this.encoding.charToGlyphIndex(e4);
          }, A.prototype.charToGlyph = function(e4) {
            e4 = this.charToGlyphIndex(e4);
            return this.glyphs.get(e4) || this.glyphs.get(0);
          }, A.prototype.stringToGlyphs = function(e4, t3) {
            t3 = t3 || this.defaultRenderOptions;
            for (var r3 = _r(e4), o4 = [], n2 = 0; n2 < r3.length; n2 += 1) {
              var s3 = r3[n2];
              o4.push(this.charToGlyphIndex(s3));
            }
            var i2 = o4.length;
            if (t3.features) {
              var e4 = t3.script || this.substitution.getDefaultScriptName(), a3 = [];
              t3.features.liga && (a3 = a3.concat(this.substitution.getFeature("liga", e4, t3.language))), t3.features.rlig && (a3 = a3.concat(this.substitution.getFeature("rlig", e4, t3.language)));
              for (var l2 = 0; l2 < i2; l2 += 1) for (var u2 = 0; u2 < a3.length; u2++) {
                for (var c2 = a3[u2], d2 = c2.sub, h2 = d2.length, f2 = 0; f2 < h2 && d2[f2] === o4[l2 + f2]; ) f2++;
                f2 === h2 && (o4.splice(l2, h2, c2.by), i2 = i2 - h2 + 1);
              }
            }
            for (var p2 = new Array(i2), m2 = this.glyphs.get(0), y2 = 0; y2 < i2; y2 += 1) p2[y2] = this.glyphs.get(o4[y2]) || m2;
            return p2;
          }, A.prototype.nameToGlyphIndex = function(e4) {
            return this.glyphNames.nameToGlyphIndex(e4);
          }, A.prototype.nameToGlyph = function(e4) {
            e4 = this.nameToGlyphIndex(e4);
            return this.glyphs.get(e4) || this.glyphs.get(0);
          }, A.prototype.glyphIndexToName = function(e4) {
            return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e4) : "";
          }, A.prototype.getKerningValue = function(e4, t3) {
            e4 = e4.index || e4, t3 = t3.index || t3;
            var r3 = this.position.defaultKerningTables;
            return r3 ? this.position.getKerningValue(r3, e4, t3) : this.kerningPairs[e4 + "," + t3] || 0;
          }, A.prototype.defaultRenderOptions = { kerning: true, features: { liga: true, rlig: true } }, A.prototype.forEachGlyph = function(e4, t3, r3, o4, n2, s3) {
            t3 = void 0 !== t3 ? t3 : 0, r3 = void 0 !== r3 ? r3 : 0, n2 = n2 || this.defaultRenderOptions;
            var i2, a3 = 1 / this.unitsPerEm * (o4 = void 0 !== o4 ? o4 : 72), l2 = this.stringToGlyphs(e4, n2);
            n2.kerning && (e4 = n2.script || this.position.getDefaultScriptName(), i2 = this.position.getKerningTables(e4, n2.language));
            for (var u2 = 0; u2 < l2.length; u2 += 1) {
              var c2 = l2[u2];
              s3.call(this, c2, t3, r3, o4, n2), c2.advanceWidth && (t3 += c2.advanceWidth * a3), n2.kerning && u2 < l2.length - 1 && (t3 += (i2 ? this.position.getKerningValue(i2, c2.index, l2[u2 + 1].index) : this.getKerningValue(c2, l2[u2 + 1])) * a3), n2.letterSpacing ? t3 += n2.letterSpacing * o4 : n2.tracking && (t3 += n2.tracking / 1e3 * o4);
            }
            return t3;
          }, A.prototype.getPath = function(e4, t3, r3, o4, n2) {
            var s3 = new h();
            return this.forEachGlyph(e4, t3, r3, o4, n2, function(e5, t4, r4, o5) {
              e5 = e5.getPath(t4, r4, o5, n2, this);
              s3.extend(e5);
            }), s3;
          }, A.prototype.getPaths = function(e4, t3, r3, o4, n2) {
            var s3 = [];
            return this.forEachGlyph(e4, t3, r3, o4, n2, function(e5, t4, r4, o5) {
              e5 = e5.getPath(t4, r4, o5, n2, this);
              s3.push(e5);
            }), s3;
          }, A.prototype.getAdvanceWidth = function(e4, t3, r3) {
            return this.forEachGlyph(e4, 0, 0, t3, r3, function() {
            });
          }, A.prototype.draw = function(e4, t3, r3, o4, n2, s3) {
            this.getPath(t3, r3, o4, n2, s3).draw(e4);
          }, A.prototype.drawPoints = function(n2, e4, t3, r3, o4, s3) {
            this.forEachGlyph(e4, t3, r3, o4, s3, function(e5, t4, r4, o5) {
              e5.drawPoints(n2, t4, r4, o5);
            });
          }, A.prototype.drawMetrics = function(n2, e4, t3, r3, o4, s3) {
            this.forEachGlyph(e4, t3, r3, o4, s3, function(e5, t4, r4, o5) {
              e5.drawMetrics(n2, t4, r4, o5);
            });
          }, A.prototype.getEnglishName = function(e4) {
            e4 = this.names[e4];
            if (e4) return e4.en;
          }, A.prototype.validate = function() {
            var t3 = this;
            function e4(e5) {
              e5 = t3.getEnglishName(e5);
              e5 && e5.trim().length;
            }
            e4("fontFamily"), e4("weightName"), e4("manufacturer"), e4("copyright"), e4("version"), this.unitsPerEm;
          }, A.prototype.toTables = function() {
            return wt.fontToTable(this);
          }, A.prototype.toBuffer = function() {
            return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
          }, A.prototype.toArrayBuffer = function() {
            for (var e4 = this.toTables().encode(), t3 = new ArrayBuffer(e4.length), r3 = new Uint8Array(t3), o4 = 0; o4 < e4.length; o4++) r3[o4] = e4[o4];
            return t3;
          }, A.prototype.download = function(t3) {
            var e4 = this.getEnglishName("fontFamily"), r3 = this.getEnglishName("fontSubfamily"), o4 = (t3 = t3 || e4.replace(/\s/g, "") + "-" + r3 + ".otf", this.toArrayBuffer());
            "undefined" != typeof window ? (window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, o4.byteLength, function(e5) {
              e5.root.getFile(t3, { create: true }, function(r4) {
                r4.createWriter(function(e6) {
                  var t4 = new DataView(o4), t4 = new Blob([t4], { type: "font/opentype" });
                  e6.write(t4), e6.addEventListener("writeend", function() {
                    location.href = r4.toURL();
                  }, false);
                });
              });
            }, function(e5) {
              throw new Error(e5.name + ": " + e5.message);
            })) : (e4 = Pr("fs"), r3 = function(e5) {
              for (var t4 = new Ar(e5.byteLength), r4 = new Uint8Array(e5), o5 = 0; o5 < t4.length; ++o5) t4[o5] = r4[o5];
              return t4;
            }(o4), e4.writeFileSync(t3, r3));
          }, A.prototype.fsSelectionValues = { ITALIC: 1, UNDERSCORE: 2, NEGATIVE: 4, OUTLINED: 8, STRIKEOUT: 16, BOLD: 32, REGULAR: 64, USER_TYPO_METRICS: 128, WWS: 256, OBLIQUE: 512 }, A.prototype.usWidthClasses = { ULTRA_CONDENSED: 1, EXTRA_CONDENSED: 2, CONDENSED: 3, SEMI_CONDENSED: 4, MEDIUM: 5, SEMI_EXPANDED: 6, EXPANDED: 7, EXTRA_EXPANDED: 8, ULTRA_EXPANDED: 9 }, A.prototype.usWeightClasses = { THIN: 100, EXTRA_LIGHT: 200, LIGHT: 300, NORMAL: 400, MEDIUM: 500, SEMI_BOLD: 600, BOLD: 700, EXTRA_BOLD: 800, BLACK: 900 };
          var xr = { make: function(e4, t3) {
            var r3 = new S.Table("fvar", [{ name: "version", type: "ULONG", value: 65536 }, { name: "offsetToData", type: "USHORT", value: 0 }, { name: "countSizePairs", type: "USHORT", value: 2 }, { name: "axisCount", type: "USHORT", value: e4.axes.length }, { name: "axisSize", type: "USHORT", value: 20 }, { name: "instanceCount", type: "USHORT", value: e4.instances.length }, { name: "instanceSize", type: "USHORT", value: 4 + 4 * e4.axes.length }]);
            r3.offsetToData = r3.sizeOf();
            for (var o4, n2, s3, i2 = 0; i2 < e4.axes.length; i2++) r3.fields = r3.fields.concat((o4 = i2, n2 = e4.axes[i2], s3 = t3, s3 = jr(n2.name, t3), [{ name: "tag_" + o4, type: "TAG", value: n2.tag }, { name: "minValue_" + o4, type: "FIXED", value: n2.minValue << 16 }, { name: "defaultValue_" + o4, type: "FIXED", value: n2.defaultValue << 16 }, { name: "maxValue_" + o4, type: "FIXED", value: n2.maxValue << 16 }, { name: "flags_" + o4, type: "USHORT", value: 0 }, { name: "nameID_" + o4, type: "USHORT", value: s3 }]));
            for (var a3 = 0; a3 < e4.instances.length; a3++) r3.fields = r3.fields.concat(function(e5, t4, r4, o5) {
              for (var n3 = [{ name: "nameID_" + e5, type: "USHORT", value: jr(t4.name, o5) }, { name: "flags_" + e5, type: "USHORT", value: 0 }], s4 = 0; s4 < r4.length; ++s4) {
                var i3 = r4[s4].tag;
                n3.push({ name: "axis_" + e5 + " " + i3, type: "FIXED", value: t4.coordinates[i3] << 16 });
              }
              return n3;
            }(a3, e4.instances[a3], e4.axes, t3));
            return r3;
          }, parse: function(e4, t3, r3) {
            for (var o4, n2, s3, i2, a3 = new R.Parser(e4, t3), l2 = a3.parseULong(), u2 = (L.argument(65536 === l2, "Unsupported fvar table version."), a3.parseOffset16()), c2 = (a3.skip("uShort", 1), a3.parseUShort()), d2 = a3.parseUShort(), h2 = a3.parseUShort(), f2 = a3.parseUShort(), p2 = [], m2 = 0; m2 < c2; m2++) p2.push((o4 = e4, n2 = t3 + u2 + m2 * d2, s3 = r3, i2 = {}, o4 = new R.Parser(o4, n2), i2.tag = o4.parseTag(), i2.minValue = o4.parseFixed(), i2.defaultValue = o4.parseFixed(), i2.maxValue = o4.parseFixed(), o4.skip("uShort", 1), i2.name = s3[o4.parseUShort()] || {}, i2));
            for (var y2 = [], g2 = t3 + u2 + c2 * d2, v2 = 0; v2 < h2; v2++) y2.push(function(e5, t4, r4, o5) {
              var n3 = {}, s4 = new R.Parser(e5, t4);
              n3.name = o5[s4.parseUShort()] || {}, s4.skip("uShort", 1), n3.coordinates = {};
              for (var i3 = 0; i3 < r4.length; ++i3) n3.coordinates[r4[i3].tag] = s4.parseFixed();
              return n3;
            }(e4, g2 + v2 * f2, p2, r3));
            return { axes: p2, instances: y2 };
          } }, P = new Array(10);
          P[1] = function() {
            var e4 = this.offset + this.relativeOffset, t3 = this.parseUShort();
            return 1 === t3 ? { posFormat: 1, coverage: this.parsePointer(u.coverage), value: this.parseValueRecord() } : 2 === t3 ? { posFormat: 2, coverage: this.parsePointer(u.coverage), values: this.parseValueRecordList() } : void L.assert(false, "0x" + e4.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
          }, P[2] = function() {
            var e4, t3, r3, o4, n2 = this.offset + this.relativeOffset, s3 = this.parseUShort(), n2 = (L.assert(1 === s3 || 2 === s3, "0x" + n2.toString(16) + ": GPOS lookup type 2 format must be 1 or 2."), this.parsePointer(u.coverage)), i2 = this.parseUShort(), a3 = this.parseUShort();
            return 1 === s3 ? { posFormat: s3, coverage: n2, valueFormat1: i2, valueFormat2: a3, pairSets: this.parseList(u.pointer(u.list(function() {
              return { secondGlyph: this.parseUShort(), value1: this.parseValueRecord(i2), value2: this.parseValueRecord(a3) };
            }))) } : 2 === s3 ? (e4 = this.parsePointer(u.classDef), t3 = this.parsePointer(u.classDef), r3 = this.parseUShort(), o4 = this.parseUShort(), { posFormat: s3, coverage: n2, valueFormat1: i2, valueFormat2: a3, classDef1: e4, classDef2: t3, class1Count: r3, class2Count: o4, classRecords: this.parseList(r3, u.list(o4, function() {
              return { value1: this.parseValueRecord(i2), value2: this.parseValueRecord(a3) };
            })) }) : void 0;
          }, P[3] = function() {
            return { error: "GPOS Lookup 3 not supported" };
          }, P[4] = function() {
            return { error: "GPOS Lookup 4 not supported" };
          }, P[5] = function() {
            return { error: "GPOS Lookup 5 not supported" };
          }, P[6] = function() {
            return { error: "GPOS Lookup 6 not supported" };
          }, P[7] = function() {
            return { error: "GPOS Lookup 7 not supported" };
          }, P[8] = function() {
            return { error: "GPOS Lookup 8 not supported" };
          }, P[9] = function() {
            return { error: "GPOS Lookup 9 not supported" };
          };
          var wr = new Array(10);
          var Sr = { parse: function(e4, t3) {
            return t3 = (e4 = new u(e4, t3 = t3 || 0)).parseVersion(1), L.argument(1 === t3 || 1.1 === t3, "Unsupported GPOS table version " + t3), 1 === t3 ? { version: t3, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(P) } : { version: t3, scripts: e4.parseScriptList(), features: e4.parseFeatureList(), lookups: e4.parseLookupList(P), variations: e4.parseFeatureVariationsList() };
          }, make: function(e4) {
            return new S.Table("GPOS", [{ name: "version", type: "ULONG", value: 65536 }, { name: "scripts", type: "TABLE", value: new S.ScriptList(e4.scripts) }, { name: "features", type: "TABLE", value: new S.FeatureList(e4.features) }, { name: "lookups", type: "TABLE", value: new S.LookupList(e4.lookups, wr) }]);
          } };
          var Tr = { parse: function(e4, t3) {
            if (e4 = new R.Parser(e4, t3), 0 === (t3 = e4.parseUShort())) {
              var r3 = e4, o4 = {}, n2 = (r3.skip("uShort"), r3.parseUShort()), s3 = (L.argument(0 === n2, "Unsupported kern sub-table version."), r3.skip("uShort", 2), r3.parseUShort());
              r3.skip("uShort", 3);
              for (var i2 = 0; i2 < s3; i2 += 1) {
                var a3 = r3.parseUShort(), l2 = r3.parseUShort(), u2 = r3.parseShort();
                o4[a3 + "," + l2] = u2;
              }
              return o4;
            }
            if (1 !== t3) throw new Error("Unsupported kern table version (" + t3 + ").");
            var c2 = e4, d2 = {}, n2 = (c2.skip("uShort"), 1 < c2.parseULong() && console.warn("Only the first kern subtable is supported."), c2.skip("uLong"), 255 & c2.parseUShort());
            if (c2.skip("uShort"), 0 == n2) {
              var h2 = c2.parseUShort();
              c2.skip("uShort", 3);
              for (var f2 = 0; f2 < h2; f2 += 1) {
                var p2 = c2.parseUShort(), m2 = c2.parseUShort(), y2 = c2.parseShort();
                d2[p2 + "," + m2] = y2;
              }
            }
            return d2;
          } };
          var Er = { parse: function(e4, t3, r3, o4) {
            for (var n2 = new R.Parser(e4, t3), s3 = o4 ? n2.parseUShort : n2.parseULong, i2 = [], a3 = 0; a3 < r3 + 1; a3 += 1) {
              var l2 = s3.call(n2);
              o4 && (l2 *= 2), i2.push(l2);
            }
            return i2;
          } };
          function Mr(e4, r3) {
            Pr("fs").readFile(e4, function(e5, t3) {
              if (e5) return r3(e5.message);
              r3(null, Ct(t3));
            });
          }
          function kr(e4, t3) {
            var r3 = new XMLHttpRequest();
            r3.open("get", e4, true), r3.responseType = "arraybuffer", r3.onload = function() {
              return r3.response ? t3(null, r3.response) : t3("Font could not be loaded: " + r3.statusText);
            }, r3.onerror = function() {
              t3("Font could not be loaded");
            }, r3.send();
          }
          function Or(e4, t3) {
            for (var r3 = [], o4 = 12, n2 = 0; n2 < t3; n2 += 1) {
              var s3 = R.getTag(e4, o4), i2 = R.getULong(e4, o4 + 4), a3 = R.getULong(e4, o4 + 8), l2 = R.getULong(e4, o4 + 12);
              r3.push({ tag: s3, checksum: i2, offset: a3, length: l2, compression: false }), o4 += 16;
            }
            return r3;
          }
          function I(e4, t3) {
            if ("WOFF" !== t3.compression) return { data: e4, offset: t3.offset };
            var e4 = new Uint8Array(e4.buffer, t3.offset + 2, t3.compressedLength - 2), r3 = new Uint8Array(t3.length);
            if (re(e4, r3), r3.byteLength !== t3.length) throw new Error("Decompression error: " + t3.tag + " decompressed length doesn't match recorded length");
            return { data: new DataView(r3.buffer, 0), offset: 0 };
          }
          function Cr(e4) {
            var t3, r3, o4, n2, s3, i2, a3, l2, u2, c2, d2, h2, f2, p2, m2 = new A({ empty: true }), y2 = new DataView(e4, 0), g2 = [], e4 = R.getTag(y2, 0);
            if (e4 === String.fromCharCode(0, 1, 0, 0) || "true" === e4 || "typ1" === e4) m2.outlinesFormat = "truetype", g2 = Or(y2, o4 = R.getUShort(y2, 4));
            else if ("OTTO" === e4) m2.outlinesFormat = "cff", g2 = Or(y2, o4 = R.getUShort(y2, 4));
            else {
              if ("wOFF" !== e4) throw new Error("Unsupported OpenType signature " + e4);
              var v2 = R.getTag(y2, 4);
              if (v2 === String.fromCharCode(0, 1, 0, 0)) m2.outlinesFormat = "truetype";
              else {
                if ("OTTO" !== v2) throw new Error("Unsupported OpenType flavor " + e4);
                m2.outlinesFormat = "cff";
              }
              g2 = function(e5, t4) {
                for (var r4 = [], o5 = 44, n3 = 0; n3 < t4; n3 += 1) {
                  var s4 = R.getTag(e5, o5), i3 = R.getULong(e5, o5 + 4), a4 = R.getULong(e5, o5 + 8), l3 = R.getULong(e5, o5 + 12), u3 = void 0, u3 = a4 < l3 && "WOFF";
                  r4.push({ tag: s4, offset: i3, compression: u3, compressedLength: a4, length: l3 }), o5 += 20;
                }
                return r4;
              }(y2, o4 = R.getUShort(y2, 12));
            }
            for (var b2 = 0; b2 < o4; b2 += 1) {
              var _2 = g2[b2], j2 = void 0;
              switch (_2.tag) {
                case "cmap":
                  j2 = I(y2, _2), m2.tables.cmap = we.parse(j2.data, j2.offset), m2.encoding = new ke(m2.tables.cmap);
                  break;
                case "cvt ":
                  j2 = I(y2, _2), p2 = new R.Parser(j2.data, j2.offset), m2.tables.cvt = p2.parseShortList(_2.length / 2);
                  break;
                case "fvar":
                  s3 = _2;
                  break;
                case "fpgm":
                  j2 = I(y2, _2), p2 = new R.Parser(j2.data, j2.offset), m2.tables.fpgm = p2.parseByteList(_2.length);
                  break;
                case "head":
                  j2 = I(y2, _2), m2.tables.head = Ze.parse(j2.data, j2.offset), m2.unitsPerEm = m2.tables.head.unitsPerEm, t3 = m2.tables.head.indexToLocFormat;
                  break;
                case "hhea":
                  j2 = I(y2, _2), m2.tables.hhea = Ke.parse(j2.data, j2.offset), m2.ascender = m2.tables.hhea.ascender, m2.descender = m2.tables.hhea.descender, m2.numberOfHMetrics = m2.tables.hhea.numberOfHMetrics;
                  break;
                case "hmtx":
                  u2 = _2;
                  break;
                case "ltag":
                  j2 = I(y2, _2), r3 = Je.parse(j2.data, j2.offset);
                  break;
                case "maxp":
                  j2 = I(y2, _2), m2.tables.maxp = $e.parse(j2.data, j2.offset), m2.numGlyphs = m2.tables.maxp.numGlyphs;
                  break;
                case "name":
                  h2 = _2;
                  break;
                case "OS/2":
                  j2 = I(y2, _2), m2.tables.os2 = ft.parse(j2.data, j2.offset);
                  break;
                case "post":
                  j2 = I(y2, _2), m2.tables.post = pt.parse(j2.data, j2.offset), m2.glyphNames = new Ce(m2.tables.post);
                  break;
                case "prep":
                  j2 = I(y2, _2), p2 = new R.Parser(j2.data, j2.offset), m2.tables.prep = p2.parseByteList(_2.length);
                  break;
                case "glyf":
                  i2 = _2;
                  break;
                case "loca":
                  d2 = _2;
                  break;
                case "CFF ":
                  n2 = _2;
                  break;
                case "kern":
                  c2 = _2;
                  break;
                case "GPOS":
                  a3 = _2;
                  break;
                case "GSUB":
                  l2 = _2;
                  break;
                case "meta":
                  f2 = _2;
              }
            }
            v2 = I(y2, h2);
            if (m2.tables.name = dt.parse(v2.data, v2.offset, r3), m2.names = m2.tables.name, i2 && d2) {
              e4 = 0 === t3, v2 = I(y2, d2), v2 = Er.parse(v2.data, v2.offset, m2.numGlyphs, e4), e4 = I(y2, i2);
              m2.glyphs = Dt.parse(e4.data, e4.offset, v2, m2);
            } else {
              if (!n2) throw new Error("Font doesn't contain TrueType or CFF outlines.");
              e4 = I(y2, n2);
              Ye.parse(e4.data, e4.offset, m2);
            }
            for (var v2 = I(y2, u2), x3 = (Qe.parse(v2.data, v2.offset, m2.numberOfHMetrics, m2.numGlyphs, m2.glyphs), m2), w2 = x3.tables.cmap.glyphIndexMap, S2 = Object.keys(w2), T2 = 0; T2 < S2.length; T2 += 1) {
              var E2, M2 = S2[T2], k2 = w2[M2];
              (E2 = x3.glyphs.get(k2)).addUnicode(parseInt(M2));
            }
            for (var O2 = 0; O2 < x3.glyphs.length; O2 += 1) E2 = x3.glyphs.get(O2), x3.cffEncoding ? x3.isCIDFont ? E2.name = "gid" + O2 : E2.name = x3.cffEncoding.charset[O2] : x3.glyphNames.names && (E2.name = x3.glyphNames.glyphIndexToName(O2));
            return c2 ? (e4 = I(y2, c2), m2.kerningPairs = Tr.parse(e4.data, e4.offset)) : m2.kerningPairs = {}, a3 && (v2 = I(y2, a3), m2.tables.gpos = Sr.parse(v2.data, v2.offset), m2.position.init()), l2 && (e4 = I(y2, l2), m2.tables.gsub = yt.parse(e4.data, e4.offset)), s3 && (v2 = I(y2, s3), m2.tables.fvar = xr.parse(v2.data, v2.offset, m2.names)), f2 && (e4 = I(y2, f2), m2.tables.meta = gt.parse(e4.data, e4.offset), m2.metas = m2.tables.meta), m2;
          }
          _.Font = A, _.Glyph = f, _.Path = h, _.BoundingBox = a2, _._parse = R, _.parse = Cr, _.load = function(e4, o4) {
            ("undefined" == typeof window ? Mr : kr)(e4, function(e5, t3) {
              if (e5) return o4(e5);
              var r3;
              try {
                r3 = Cr(t3);
              } catch (e6) {
                return o4(e6, null);
              }
              return o4(null, r3);
            });
          }, _.loadSync = function(e4) {
            return Cr(Ct(Pr("fs").readFileSync(e4)));
          }, Object.defineProperty(_, "__esModule", { value: true });
        }, "object" == typeof o && void 0 !== r ? t(o) : t(e2.opentype = {});
      }).call(this, Pr("buffer").Buffer);
    }, { buffer: 4, fs: 2 }], 258: [function(e2, t, u) {
      !(function(n) {
        function s2(e3, t2) {
          for (var r = 0, o3 = e3.length - 1; 0 <= o3; o3--) {
            var n2 = e3[o3];
            "." === n2 ? e3.splice(o3, 1) : ".." === n2 ? (e3.splice(o3, 1), r++) : r && (e3.splice(o3, 1), r--);
          }
          if (t2) for (; r--; ) e3.unshift("..");
          return e3;
        }
        function i(e3, t2) {
          if (e3.filter) return e3.filter(t2);
          for (var r = [], o3 = 0; o3 < e3.length; o3++) t2(e3[o3], o3, e3) && r.push(e3[o3]);
          return r;
        }
        u.resolve = function() {
          for (var e3 = "", t2 = false, r = arguments.length - 1; -1 <= r && !t2; r--) {
            var o3 = 0 <= r ? arguments[r] : n.cwd();
            if ("string" != typeof o3) throw new TypeError("Arguments to path.resolve must be strings");
            o3 && (e3 = o3 + "/" + e3, t2 = "/" === o3.charAt(0));
          }
          return (t2 ? "/" : "") + (e3 = s2(i(e3.split("/"), function(e4) {
            return !!e4;
          }), !t2).join("/")) || ".";
        }, u.normalize = function(e3) {
          var t2 = u.isAbsolute(e3), r = "/" === o(e3, -1);
          return (e3 = (e3 = s2(i(e3.split("/"), function(e4) {
            return !!e4;
          }), !t2).join("/")) || t2 ? e3 : ".") && r && (e3 += "/"), (t2 ? "/" : "") + e3;
        }, u.isAbsolute = function(e3) {
          return "/" === e3.charAt(0);
        }, u.join = function() {
          var e3 = Array.prototype.slice.call(arguments, 0);
          return u.normalize(i(e3, function(e4, t2) {
            if ("string" != typeof e4) throw new TypeError("Arguments to path.join must be strings");
            return e4;
          }).join("/"));
        }, u.relative = function(e3, t2) {
          function r(e4) {
            for (var t3 = 0; t3 < e4.length && "" === e4[t3]; t3++) ;
            for (var r2 = e4.length - 1; 0 <= r2 && "" === e4[r2]; r2--) ;
            return r2 < t3 ? [] : e4.slice(t3, r2 - t3 + 1);
          }
          e3 = u.resolve(e3).substr(1), t2 = u.resolve(t2).substr(1);
          for (var o3 = r(e3.split("/")), n2 = r(t2.split("/")), s3 = Math.min(o3.length, n2.length), i2 = s3, a2 = 0; a2 < s3; a2++) if (o3[a2] !== n2[a2]) {
            i2 = a2;
            break;
          }
          for (var l = [], a2 = i2; a2 < o3.length; a2++) l.push("..");
          return (l = l.concat(n2.slice(i2))).join("/");
        }, u.sep = "/", u.delimiter = ":", u.dirname = function(e3) {
          if ("string" != typeof e3 && (e3 += ""), 0 === e3.length) return ".";
          for (var t2 = 47 === e3.charCodeAt(0), r = -1, o3 = true, n2 = e3.length - 1; 1 <= n2; --n2) if (47 === e3.charCodeAt(n2)) {
            if (!o3) {
              r = n2;
              break;
            }
          } else o3 = false;
          return -1 === r ? t2 ? "/" : "." : t2 && 1 === r ? "/" : e3.slice(0, r);
        }, u.basename = function(e3, t2) {
          e3 = function(e4) {
            "string" != typeof e4 && (e4 += "");
            for (var t3 = 0, r = -1, o3 = true, n2 = e4.length - 1; 0 <= n2; --n2) if (47 === e4.charCodeAt(n2)) {
              if (!o3) {
                t3 = n2 + 1;
                break;
              }
            } else -1 === r && (o3 = false, r = n2 + 1);
            return -1 === r ? "" : e4.slice(t3, r);
          }(e3);
          return e3 = t2 && e3.substr(-1 * t2.length) === t2 ? e3.substr(0, e3.length - t2.length) : e3;
        }, u.extname = function(e3) {
          "string" != typeof e3 && (e3 += "");
          for (var t2 = -1, r = 0, o3 = -1, n2 = true, s3 = 0, i2 = e3.length - 1; 0 <= i2; --i2) {
            var a2 = e3.charCodeAt(i2);
            if (47 === a2) {
              if (n2) continue;
              r = i2 + 1;
              break;
            }
            -1 === o3 && (n2 = false, o3 = i2 + 1), 46 === a2 ? -1 === t2 ? t2 = i2 : 1 !== s3 && (s3 = 1) : -1 !== t2 && (s3 = -1);
          }
          return -1 === t2 || -1 === o3 || 0 === s3 || 1 === s3 && t2 === o3 - 1 && t2 === r + 1 ? "" : e3.slice(t2, o3);
        };
        var o = "b" === "ab".substr(-1) ? function(e3, t2, r) {
          return e3.substr(t2, r);
        } : function(e3, t2, r) {
          return t2 < 0 && (t2 = e3.length + t2), e3.substr(t2, r);
        };
      }).call(this, e2("_process"));
    }, { _process: 259 }], 259: [function(e2, t, r) {
      var o, n, t = t.exports = {};
      function s2() {
        throw new Error("setTimeout has not been defined");
      }
      function i() {
        throw new Error("clearTimeout has not been defined");
      }
      try {
        o = "function" == typeof setTimeout ? setTimeout : s2;
      } catch (e3) {
        o = s2;
      }
      try {
        n = "function" == typeof clearTimeout ? clearTimeout : i;
      } catch (e3) {
        n = i;
      }
      function a2(t2) {
        if (o === setTimeout) return setTimeout(t2, 0);
        if ((o === s2 || !o) && setTimeout) return (o = setTimeout)(t2, 0);
        try {
          return o(t2, 0);
        } catch (e3) {
          try {
            return o.call(null, t2, 0);
          } catch (e4) {
            return o.call(this, t2, 0);
          }
        }
      }
      var l, u = [], c = false, d = -1;
      function h() {
        c && l && (c = false, l.length ? u = l.concat(u) : d = -1, u.length && f());
      }
      function f() {
        if (!c) {
          for (var e3 = a2(h), t2 = (c = true, u.length); t2; ) {
            for (l = u, u = []; ++d < t2; ) l && l[d].run();
            d = -1, t2 = u.length;
          }
          l = null, c = false, !function(t3) {
            if (n === clearTimeout) return clearTimeout(t3);
            if ((n === i || !n) && clearTimeout) return (n = clearTimeout)(t3);
            try {
              n(t3);
            } catch (e4) {
              try {
                return n.call(null, t3);
              } catch (e5) {
                return n.call(this, t3);
              }
            }
          }(e3);
        }
      }
      function p(e3, t2) {
        this.fun = e3, this.array = t2;
      }
      function m() {
      }
      t.nextTick = function(e3) {
        var t2 = new Array(arguments.length - 1);
        if (1 < arguments.length) for (var r2 = 1; r2 < arguments.length; r2++) t2[r2 - 1] = arguments[r2];
        u.push(new p(e3, t2)), 1 !== u.length || c || a2(f);
      }, p.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, t.title = "browser", t.browser = true, t.env = {}, t.argv = [], t.version = "", t.versions = {}, t.on = m, t.addListener = m, t.once = m, t.off = m, t.removeListener = m, t.removeAllListeners = m, t.emit = m, t.prependListener = m, t.prependOnceListener = m, t.listeners = function(e3) {
        return [];
      }, t.binding = function(e3) {
        throw new Error("process.binding is not supported");
      }, t.cwd = function() {
        return "/";
      }, t.chdir = function(e3) {
        throw new Error("process.chdir is not supported");
      }, t.umask = function() {
        return 0;
      };
    }, {}], 260: [function(e2, t, r) {
      t = function(s2) {
        var l, e3 = Object.prototype, u = e3.hasOwnProperty, t2 = "function" == typeof Symbol ? Symbol : {}, o = t2.iterator || "@@iterator", r2 = t2.asyncIterator || "@@asyncIterator", n = t2.toStringTag || "@@toStringTag";
        function i(e4, t3, r3, o3) {
          var n2, s3, i2, a3, t3 = t3 && t3.prototype instanceof y ? t3 : y, t3 = Object.create(t3.prototype), o3 = new S(o3 || []);
          return t3._invoke = (n2 = e4, s3 = r3, i2 = o3, a3 = d, function(e5, t4) {
            if (a3 === f) throw new Error("Generator is already running");
            if (a3 === p) {
              if ("throw" === e5) throw t4;
              return E();
            }
            for (i2.method = e5, i2.arg = t4; ; ) {
              var r4 = i2.delegate;
              if (r4) {
                r4 = function e6(t5, r5) {
                  var o4 = t5.iterator[r5.method];
                  if (o4 === l) {
                    if (r5.delegate = null, "throw" === r5.method) {
                      if (t5.iterator.return && (r5.method = "return", r5.arg = l, e6(t5, r5), "throw" === r5.method)) return m;
                      r5.method = "throw", r5.arg = new TypeError("The iterator does not provide a 'throw' method");
                    }
                    return m;
                  }
                  o4 = c(o4, t5.iterator, r5.arg);
                  if ("throw" === o4.type) return r5.method = "throw", r5.arg = o4.arg, r5.delegate = null, m;
                  o4 = o4.arg;
                  if (!o4) return r5.method = "throw", r5.arg = new TypeError("iterator result is not an object"), r5.delegate = null, m;
                  {
                    if (!o4.done) return o4;
                    r5[t5.resultName] = o4.value, r5.next = t5.nextLoc, "return" !== r5.method && (r5.method = "next", r5.arg = l);
                  }
                  r5.delegate = null;
                  return m;
                }(r4, i2);
                if (r4) {
                  if (r4 === m) continue;
                  return r4;
                }
              }
              if ("next" === i2.method) i2.sent = i2._sent = i2.arg;
              else if ("throw" === i2.method) {
                if (a3 === d) throw a3 = p, i2.arg;
                i2.dispatchException(i2.arg);
              } else "return" === i2.method && i2.abrupt("return", i2.arg);
              a3 = f;
              r4 = c(n2, s3, i2);
              if ("normal" === r4.type) {
                if (a3 = i2.done ? p : h, r4.arg !== m) return { value: r4.arg, done: i2.done };
              } else "throw" === r4.type && (a3 = p, i2.method = "throw", i2.arg = r4.arg);
            }
          }), t3;
        }
        function c(e4, t3, r3) {
          try {
            return { type: "normal", arg: e4.call(t3, r3) };
          } catch (e5) {
            return { type: "throw", arg: e5 };
          }
        }
        s2.wrap = i;
        var d = "suspendedStart", h = "suspendedYield", f = "executing", p = "completed", m = {};
        function y() {
        }
        function a2() {
        }
        function g() {
        }
        var t2 = {}, v = (t2[o] = function() {
          return this;
        }, Object.getPrototypeOf), v = v && v(v(T([]))), b = (v && v !== e3 && u.call(v, o) && (t2 = v), g.prototype = y.prototype = Object.create(t2));
        function _(e4) {
          ["next", "throw", "return"].forEach(function(t3) {
            e4[t3] = function(e5) {
              return this._invoke(t3, e5);
            };
          });
        }
        function j(i2) {
          var t3;
          this._invoke = function(r3, o3) {
            function e4() {
              return new Promise(function(e5, t4) {
                !function t5(e6, r4, o4, n2) {
                  var s3, e6 = c(i2[e6], i2, r4);
                  if ("throw" !== e6.type) return (r4 = (s3 = e6.arg).value) && "object" == typeof r4 && u.call(r4, "__await") ? Promise.resolve(r4.__await).then(function(e7) {
                    t5("next", e7, o4, n2);
                  }, function(e7) {
                    t5("throw", e7, o4, n2);
                  }) : Promise.resolve(r4).then(function(e7) {
                    s3.value = e7, o4(s3);
                  }, function(e7) {
                    return t5("throw", e7, o4, n2);
                  });
                  n2(e6.arg);
                }(r3, o3, e5, t4);
              });
            }
            return t3 = t3 ? t3.then(e4, e4) : e4();
          };
        }
        function x2(e4) {
          var t3 = { tryLoc: e4[0] };
          1 in e4 && (t3.catchLoc = e4[1]), 2 in e4 && (t3.finallyLoc = e4[2], t3.afterLoc = e4[3]), this.tryEntries.push(t3);
        }
        function w(e4) {
          var t3 = e4.completion || {};
          t3.type = "normal", delete t3.arg, e4.completion = t3;
        }
        function S(e4) {
          this.tryEntries = [{ tryLoc: "root" }], e4.forEach(x2, this), this.reset(true);
        }
        function T(t3) {
          if (t3) {
            var r3, e4 = t3[o];
            if (e4) return e4.call(t3);
            if ("function" == typeof t3.next) return t3;
            if (!isNaN(t3.length)) return r3 = -1, (e4 = function e5() {
              for (; ++r3 < t3.length; ) if (u.call(t3, r3)) return e5.value = t3[r3], e5.done = false, e5;
              return e5.value = l, e5.done = true, e5;
            }).next = e4;
          }
          return { next: E };
        }
        function E() {
          return { value: l, done: true };
        }
        return (a2.prototype = b.constructor = g).constructor = a2, g[n] = a2.displayName = "GeneratorFunction", s2.isGeneratorFunction = function(e4) {
          e4 = "function" == typeof e4 && e4.constructor;
          return !!e4 && (e4 === a2 || "GeneratorFunction" === (e4.displayName || e4.name));
        }, s2.mark = function(e4) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(e4, g) : (e4.__proto__ = g, n in e4 || (e4[n] = "GeneratorFunction")), e4.prototype = Object.create(b), e4;
        }, s2.awrap = function(e4) {
          return { __await: e4 };
        }, _(j.prototype), j.prototype[r2] = function() {
          return this;
        }, s2.AsyncIterator = j, s2.async = function(e4, t3, r3, o3) {
          var n2 = new j(i(e4, t3, r3, o3));
          return s2.isGeneratorFunction(t3) ? n2 : n2.next().then(function(e5) {
            return e5.done ? e5.value : n2.next();
          });
        }, _(b), b[n] = "Generator", b[o] = function() {
          return this;
        }, b.toString = function() {
          return "[object Generator]";
        }, s2.keys = function(r3) {
          var e4, o3 = [];
          for (e4 in r3) o3.push(e4);
          return o3.reverse(), function e5() {
            for (; o3.length; ) {
              var t3 = o3.pop();
              if (t3 in r3) return e5.value = t3, e5.done = false, e5;
            }
            return e5.done = true, e5;
          };
        }, s2.values = T, S.prototype = { constructor: S, reset: function(e4) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = false, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(w), !e4) for (var t3 in this) "t" === t3.charAt(0) && u.call(this, t3) && !isNaN(+t3.slice(1)) && (this[t3] = l);
        }, stop: function() {
          this.done = true;
          var e4 = this.tryEntries[0].completion;
          if ("throw" === e4.type) throw e4.arg;
          return this.rval;
        }, dispatchException: function(r3) {
          if (this.done) throw r3;
          var o3 = this;
          function e4(e5, t4) {
            return s3.type = "throw", s3.arg = r3, o3.next = e5, t4 && (o3.method = "next", o3.arg = l), !!t4;
          }
          for (var t3 = this.tryEntries.length - 1; 0 <= t3; --t3) {
            var n2 = this.tryEntries[t3], s3 = n2.completion;
            if ("root" === n2.tryLoc) return e4("end");
            if (n2.tryLoc <= this.prev) {
              var i2 = u.call(n2, "catchLoc"), a3 = u.call(n2, "finallyLoc");
              if (i2 && a3) {
                if (this.prev < n2.catchLoc) return e4(n2.catchLoc, true);
                if (this.prev < n2.finallyLoc) return e4(n2.finallyLoc);
              } else if (i2) {
                if (this.prev < n2.catchLoc) return e4(n2.catchLoc, true);
              } else {
                if (!a3) throw new Error("try statement without catch or finally");
                if (this.prev < n2.finallyLoc) return e4(n2.finallyLoc);
              }
            }
          }
        }, abrupt: function(e4, t3) {
          for (var r3 = this.tryEntries.length - 1; 0 <= r3; --r3) {
            var o3 = this.tryEntries[r3];
            if (o3.tryLoc <= this.prev && u.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
              var n2 = o3;
              break;
            }
          }
          var s3 = (n2 = n2 && ("break" === e4 || "continue" === e4) && n2.tryLoc <= t3 && t3 <= n2.finallyLoc ? null : n2) ? n2.completion : {};
          return s3.type = e4, s3.arg = t3, n2 ? (this.method = "next", this.next = n2.finallyLoc, m) : this.complete(s3);
        }, complete: function(e4, t3) {
          if ("throw" === e4.type) throw e4.arg;
          return "break" === e4.type || "continue" === e4.type ? this.next = e4.arg : "return" === e4.type ? (this.rval = this.arg = e4.arg, this.method = "return", this.next = "end") : "normal" === e4.type && t3 && (this.next = t3), m;
        }, finish: function(e4) {
          for (var t3 = this.tryEntries.length - 1; 0 <= t3; --t3) {
            var r3 = this.tryEntries[t3];
            if (r3.finallyLoc === e4) return this.complete(r3.completion, r3.afterLoc), w(r3), m;
          }
        }, catch: function(e4) {
          for (var t3 = this.tryEntries.length - 1; 0 <= t3; --t3) {
            var r3, o3, n2 = this.tryEntries[t3];
            if (n2.tryLoc === e4) return "throw" === (r3 = n2.completion).type && (o3 = r3.arg, w(n2)), o3;
          }
          throw new Error("illegal catch attempt");
        }, delegateYield: function(e4, t3, r3) {
          return this.delegate = { iterator: T(e4), resultName: t3, nextLoc: r3 }, "next" === this.method && (this.arg = l), m;
        } }, s2;
      }("object" == typeof t ? t.exports : {});
      try {
        regeneratorRuntime = t;
      } catch (e3) {
        Function("r", "regeneratorRuntime = r")(t);
      }
    }, {}], 261: [function(e2, t, r) {
      !function(e3) {
        var t2, r2, i, o, n, s2, a2, l, u, c;
        function d(e4) {
          if ("string" != typeof e4 && (e4 = String(e4)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e4)) throw new TypeError("Invalid character in header field name");
          return e4.toLowerCase();
        }
        function h(e4) {
          return e4 = "string" != typeof e4 ? String(e4) : e4;
        }
        function f(t3) {
          var e4 = { next: function() {
            var e5 = t3.shift();
            return { done: void 0 === e5, value: e5 };
          } };
          return r2 && (e4[Symbol.iterator] = function() {
            return e4;
          }), e4;
        }
        function p(t3) {
          this.map = {}, t3 instanceof p ? t3.forEach(function(e4, t4) {
            this.append(t4, e4);
          }, this) : Array.isArray(t3) ? t3.forEach(function(e4) {
            this.append(e4[0], e4[1]);
          }, this) : t3 && Object.getOwnPropertyNames(t3).forEach(function(e4) {
            this.append(e4, t3[e4]);
          }, this);
        }
        function m(e4) {
          if (e4.bodyUsed) return Promise.reject(new TypeError("Already read"));
          e4.bodyUsed = true;
        }
        function y(r3) {
          return new Promise(function(e4, t3) {
            r3.onload = function() {
              e4(r3.result);
            }, r3.onerror = function() {
              t3(r3.error);
            };
          });
        }
        function g(e4) {
          var t3 = new FileReader(), r3 = y(t3);
          return t3.readAsArrayBuffer(e4), r3;
        }
        function v(e4) {
          var t3;
          return e4.slice ? e4.slice(0) : ((t3 = new Uint8Array(e4.byteLength)).set(new Uint8Array(e4)), t3.buffer);
        }
        function b() {
          return this.bodyUsed = false, this._initBody = function(e4) {
            if (this._bodyInit = e4) if ("string" == typeof e4) this._bodyText = e4;
            else if (i && Blob.prototype.isPrototypeOf(e4)) this._bodyBlob = e4;
            else if (o && FormData.prototype.isPrototypeOf(e4)) this._bodyFormData = e4;
            else if (t2 && URLSearchParams.prototype.isPrototypeOf(e4)) this._bodyText = e4.toString();
            else if (n && i && a2(e4)) this._bodyArrayBuffer = v(e4.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]);
            else {
              if (!n || !ArrayBuffer.prototype.isPrototypeOf(e4) && !l(e4)) throw new Error("unsupported BodyInit type");
              this._bodyArrayBuffer = v(e4);
            }
            else this._bodyText = "";
            this.headers.get("content-type") || ("string" == typeof e4 ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t2 && URLSearchParams.prototype.isPrototypeOf(e4) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, i && (this.blob = function() {
            var e4 = m(this);
            if (e4) return e4;
            if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData) throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function() {
            return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(g);
          }), this.text = function() {
            var e4, t3, r3 = m(this);
            if (r3) return r3;
            if (this._bodyBlob) return r3 = this._bodyBlob, e4 = new FileReader(), t3 = y(e4), e4.readAsText(r3), t3;
            if (this._bodyArrayBuffer) return Promise.resolve(function(e5) {
              for (var t4 = new Uint8Array(e5), r4 = new Array(t4.length), o3 = 0; o3 < t4.length; o3++) r4[o3] = String.fromCharCode(t4[o3]);
              return r4.join("");
            }(this._bodyArrayBuffer));
            if (this._bodyFormData) throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, o && (this.formData = function() {
            return this.text().then(j);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        function _(e4, t3) {
          var r3, o3 = (t3 = t3 || {}).body;
          if (e4 instanceof _) {
            if (e4.bodyUsed) throw new TypeError("Already read");
            this.url = e4.url, this.credentials = e4.credentials, t3.headers || (this.headers = new p(e4.headers)), this.method = e4.method, this.mode = e4.mode, o3 || null == e4._bodyInit || (o3 = e4._bodyInit, e4.bodyUsed = true);
          } else this.url = String(e4);
          if (this.credentials = t3.credentials || this.credentials || "omit", !t3.headers && this.headers || (this.headers = new p(t3.headers)), this.method = (e4 = t3.method || this.method || "GET", r3 = e4.toUpperCase(), -1 < u.indexOf(r3) ? r3 : e4), this.mode = t3.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && o3) throw new TypeError("Body not allowed for GET or HEAD requests");
          this._initBody(o3);
        }
        function j(e4) {
          var r3 = new FormData();
          return e4.trim().split("&").forEach(function(e5) {
            var t3;
            e5 && (t3 = (e5 = e5.split("=")).shift().replace(/\+/g, " "), e5 = e5.join("=").replace(/\+/g, " "), r3.append(decodeURIComponent(t3), decodeURIComponent(e5)));
          }), r3;
        }
        function x2(e4, t3) {
          t3 = t3 || {}, this.type = "default", this.status = void 0 === t3.status ? 200 : t3.status, this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t3 ? t3.statusText : "OK", this.headers = new p(t3.headers), this.url = t3.url || "", this._initBody(e4);
        }
        e3.fetch || (t2 = "URLSearchParams" in e3, r2 = "Symbol" in e3 && "iterator" in Symbol, i = "FileReader" in e3 && "Blob" in e3 && function() {
          try {
            return new Blob(), true;
          } catch (e4) {
            return false;
          }
        }(), o = "FormData" in e3, (n = "ArrayBuffer" in e3) && (s2 = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], a2 = function(e4) {
          return e4 && DataView.prototype.isPrototypeOf(e4);
        }, l = ArrayBuffer.isView || function(e4) {
          return e4 && -1 < s2.indexOf(Object.prototype.toString.call(e4));
        }), p.prototype.append = function(e4, t3) {
          e4 = d(e4), t3 = h(t3);
          var r3 = this.map[e4];
          this.map[e4] = r3 ? r3 + "," + t3 : t3;
        }, p.prototype.delete = function(e4) {
          delete this.map[d(e4)];
        }, p.prototype.get = function(e4) {
          return e4 = d(e4), this.has(e4) ? this.map[e4] : null;
        }, p.prototype.has = function(e4) {
          return this.map.hasOwnProperty(d(e4));
        }, p.prototype.set = function(e4, t3) {
          this.map[d(e4)] = h(t3);
        }, p.prototype.forEach = function(e4, t3) {
          for (var r3 in this.map) this.map.hasOwnProperty(r3) && e4.call(t3, this.map[r3], r3, this);
        }, p.prototype.keys = function() {
          var r3 = [];
          return this.forEach(function(e4, t3) {
            r3.push(t3);
          }), f(r3);
        }, p.prototype.values = function() {
          var t3 = [];
          return this.forEach(function(e4) {
            t3.push(e4);
          }), f(t3);
        }, p.prototype.entries = function() {
          var r3 = [];
          return this.forEach(function(e4, t3) {
            r3.push([t3, e4]);
          }), f(r3);
        }, r2 && (p.prototype[Symbol.iterator] = p.prototype.entries), u = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"], _.prototype.clone = function() {
          return new _(this, { body: this._bodyInit });
        }, b.call(_.prototype), b.call(x2.prototype), x2.prototype.clone = function() {
          return new x2(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new p(this.headers), url: this.url });
        }, x2.error = function() {
          var e4 = new x2(null, { status: 0, statusText: "" });
          return e4.type = "error", e4;
        }, c = [301, 302, 303, 307, 308], x2.redirect = function(e4, t3) {
          if (-1 === c.indexOf(t3)) throw new RangeError("Invalid status code");
          return new x2(null, { status: t3, headers: { location: e4 } });
        }, e3.Headers = p, e3.Request = _, e3.Response = x2, e3.fetch = function(r3, s3) {
          return new Promise(function(o3, e4) {
            var t3 = new _(r3, s3), n2 = new XMLHttpRequest();
            n2.onload = function() {
              var r4, e5 = { status: n2.status, statusText: n2.statusText, headers: (e5 = n2.getAllResponseHeaders() || "", r4 = new p(), e5.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e6) {
                var e6 = e6.split(":"), t5 = e6.shift().trim();
                t5 && (e6 = e6.join(":").trim(), r4.append(t5, e6));
              }), r4) }, t4 = (e5.url = "responseURL" in n2 ? n2.responseURL : e5.headers.get("X-Request-URL"), "response" in n2 ? n2.response : n2.responseText);
              o3(new x2(t4, e5));
            }, n2.onerror = function() {
              e4(new TypeError("Network request failed"));
            }, n2.ontimeout = function() {
              e4(new TypeError("Network request failed"));
            }, n2.open(t3.method, t3.url, true), "include" === t3.credentials ? n2.withCredentials = true : "omit" === t3.credentials && (n2.withCredentials = false), "responseType" in n2 && i && (n2.responseType = "blob"), t3.headers.forEach(function(e5, t4) {
              n2.setRequestHeader(t4, e5);
            }), n2.send(void 0 === t3._bodyInit ? null : t3._bodyInit);
          });
        }, e3.fetch.polyfill = true);
      }("undefined" != typeof self ? self : this);
    }, {}], 262: [function(e2, t, r) {
      e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l, o = n(e2("../core/main")), u = n(e2("../color/color_conversion"));
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      var c = [{ h: 0, s: 0, b: 0.8275, name: "gray" }, { h: 0, s: 0, b: 0.8627, name: "gray" }, { h: 0, s: 0, b: 0.7529, name: "gray" }, { h: 0.0167, s: 0.1176, b: 1, name: "light pink" }], d = [{ h: 0, s: 0, b: 0, name: "black" }, { h: 0, s: 0, b: 0.5, name: "gray" }, { h: 0, s: 0, b: 1, name: "white" }, { h: 0, s: 0.5, b: 0.5, name: "dark maroon" }, { h: 0, s: 0.5, b: 1, name: "salmon pink" }, { h: 0, s: 1, b: 0, name: "black" }, { h: 0, s: 1, b: 0.5, name: "dark red" }, { h: 0, s: 1, b: 1, name: "red" }, { h: 5, s: 0, b: 1, name: "very light peach" }, { h: 5, s: 0.5, b: 0.5, name: "brown" }, { h: 5, s: 0.5, b: 1, name: "peach" }, { h: 5, s: 1, b: 0.5, name: "brick red" }, { h: 5, s: 1, b: 1, name: "crimson" }, { h: 10, s: 0, b: 1, name: "light peach" }, { h: 10, s: 0.5, b: 0.5, name: "brown" }, { h: 10, s: 0.5, b: 1, name: "light orange" }, { h: 10, s: 1, b: 0.5, name: "brown" }, { h: 10, s: 1, b: 1, name: "orange" }, { h: 15, s: 0, b: 1, name: "very light yellow" }, { h: 15, s: 0.5, b: 0.5, name: "olive green" }, { h: 15, s: 0.5, b: 1, name: "light yellow" }, { h: 15, s: 1, b: 0, name: "dark olive green" }, { h: 15, s: 1, b: 0.5, name: "olive green" }, { h: 15, s: 1, b: 1, name: "yellow" }, { h: 20, s: 0, b: 1, name: "very light yellow" }, { h: 20, s: 0.5, b: 0.5, name: "olive green" }, { h: 20, s: 0.5, b: 1, name: "light yellow green" }, { h: 20, s: 1, b: 0, name: "dark olive green" }, { h: 20, s: 1, b: 0.5, name: "dark yellow green" }, { h: 20, s: 1, b: 1, name: "yellow green" }, { h: 25, s: 0.5, b: 0.5, name: "dark yellow green" }, { h: 25, s: 0.5, b: 1, name: "light green" }, { h: 25, s: 1, b: 0.5, name: "dark green" }, { h: 25, s: 1, b: 1, name: "green" }, { h: 30, s: 0.5, b: 1, name: "light green" }, { h: 30, s: 1, b: 0.5, name: "dark green" }, { h: 30, s: 1, b: 1, name: "green" }, { h: 35, s: 0, b: 0.5, name: "light green" }, { h: 35, s: 0, b: 1, name: "very light green" }, { h: 35, s: 0.5, b: 0.5, name: "dark green" }, { h: 35, s: 0.5, b: 1, name: "light green" }, { h: 35, s: 1, b: 0, name: "very dark green" }, { h: 35, s: 1, b: 0.5, name: "dark green" }, { h: 35, s: 1, b: 1, name: "green" }, { h: 40, s: 0, b: 1, name: "very light green" }, { h: 40, s: 0.5, b: 0.5, name: "dark green" }, { h: 40, s: 0.5, b: 1, name: "light green" }, { h: 40, s: 1, b: 0.5, name: "dark green" }, { h: 40, s: 1, b: 1, name: "green" }, { h: 45, s: 0.5, b: 1, name: "light turquoise" }, { h: 45, s: 1, b: 0.5, name: "dark turquoise" }, { h: 45, s: 1, b: 1, name: "turquoise" }, { h: 50, s: 0, b: 1, name: "light sky blue" }, { h: 50, s: 0.5, b: 0.5, name: "dark cyan" }, { h: 50, s: 0.5, b: 1, name: "light cyan" }, { h: 50, s: 1, b: 0.5, name: "dark cyan" }, { h: 50, s: 1, b: 1, name: "cyan" }, { h: 55, s: 0, b: 1, name: "light sky blue" }, { h: 55, s: 0.5, b: 1, name: "light sky blue" }, { h: 55, s: 1, b: 0.5, name: "dark blue" }, { h: 55, s: 1, b: 1, name: "sky blue" }, { h: 60, s: 0, b: 0.5, name: "gray" }, { h: 60, s: 0, b: 1, name: "very light blue" }, { h: 60, s: 0.5, b: 0.5, name: "blue" }, { h: 60, s: 0.5, b: 1, name: "light blue" }, { h: 60, s: 1, b: 0.5, name: "navy blue" }, { h: 60, s: 1, b: 1, name: "blue" }, { h: 65, s: 0, b: 1, name: "lavender" }, { h: 65, s: 0.5, b: 0.5, name: "navy blue" }, { h: 65, s: 0.5, b: 1, name: "light purple" }, { h: 65, s: 1, b: 0.5, name: "dark navy blue" }, { h: 65, s: 1, b: 1, name: "blue" }, { h: 70, s: 0, b: 1, name: "lavender" }, { h: 70, s: 0.5, b: 0.5, name: "navy blue" }, { h: 70, s: 0.5, b: 1, name: "lavender blue" }, { h: 70, s: 1, b: 0.5, name: "dark navy blue" }, { h: 70, s: 1, b: 1, name: "blue" }, { h: 75, s: 0.5, b: 1, name: "lavender" }, { h: 75, s: 1, b: 0.5, name: "dark purple" }, { h: 75, s: 1, b: 1, name: "purple" }, { h: 80, s: 0.5, b: 1, name: "pinkish purple" }, { h: 80, s: 1, b: 0.5, name: "dark purple" }, { h: 80, s: 1, b: 1, name: "purple" }, { h: 85, s: 0, b: 1, name: "light pink" }, { h: 85, s: 0.5, b: 0.5, name: "purple" }, { h: 85, s: 0.5, b: 1, name: "light fuchsia" }, { h: 85, s: 1, b: 0.5, name: "dark fuchsia" }, { h: 85, s: 1, b: 1, name: "fuchsia" }, { h: 90, s: 0.5, b: 0.5, name: "dark fuchsia" }, { h: 90, s: 0.5, b: 1, name: "hot pink" }, { h: 90, s: 1, b: 0.5, name: "dark fuchsia" }, { h: 90, s: 1, b: 1, name: "fuchsia" }, { h: 95, s: 0, b: 1, name: "pink" }, { h: 95, s: 0.5, b: 1, name: "light pink" }, { h: 95, s: 1, b: 0.5, name: "dark magenta" }, { h: 95, s: 1, b: 1, name: "magenta" }];
      o.default.prototype._rgbColorName = function(e3) {
        var t2, r2, e3 = u.default._rgbaToHSBA(e3), o3 = [(l = e3)[0], e3[1], e3[2]];
        0 !== o3[0] && (o3[0] = Math.round(100 * o3[0]), (e3 = o3[0].toString().split(""))[r2 = e3.length - 1] = parseInt(e3[r2]), e3[r2] < 2.5 ? e3[r2] = 0 : 2.5 <= e3[r2] && e3[r2] < 7.5 && (e3[r2] = 5), 2 === e3.length ? (e3[0] = parseInt(e3[0]), 7.5 <= e3[r2] && (e3[r2] = 0, e3[0] = e3[0] + 1), o3[0] = 10 * e3[0] + e3[1]) : 7.5 <= e3[r2] ? o3[0] = 10 : o3[0] = e3[r2]), o3[2] = o3[2] / 255;
        for (var n2 = o3.length - 1; 1 <= n2; n2--) o3[n2] <= 0.25 ? o3[n2] = 0 : 0.25 < o3[n2] && o3[n2] < 0.75 ? o3[n2] = 0.5 : o3[n2] = 1;
        if (0 === o3[0] && 0 === o3[1] && 1 === o3[2]) {
          for (var s2 = 2; 0 <= s2; s2--) l[s2] = Math.round(1e4 * l[s2]) / 1e4;
          for (var i = 0; i < c.length; i++) {
            if (c[i].h === l[0] && c[i].s === l[1] && c[i].b === l[2]) {
              t2 = c[i].name;
              break;
            }
            t2 = "white";
          }
        } else for (var a2 = 0; a2 < d.length; a2++) if (d[a2].h === o3[0] && d[a2].s === o3[1] && d[a2].b === o3[2]) {
          t2 = d[a2].name;
          break;
        }
        return t2;
      };
      e2 = o.default;
      r.default = e2;
    }, { "../color/color_conversion": 268, "../core/main": 283, "core-js/modules/es.function.name": 174, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.split": 206 }], 263: [function(e2, t, r) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.replace"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var s2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      var i = "_Description", a2 = "_fallbackDesc", l = "_fallbackTable", u = "_Label", c = "_labelDesc", d = "_labelTable";
      function h(e3) {
        if ("label" === e3 || "fallback" === e3) throw new Error("description should not be LABEL or FALLBACK");
        return e3.endsWith(".") || e3.endsWith(";") || e3.endsWith(",") || e3.endsWith("?") || e3.endsWith("!") || (e3 += "."), e3;
      }
      s2.default.prototype.describe = function(e3, t2) {
        var r2;
        s2.default._validateParameters("describe", arguments), "string" == typeof e3 && (r2 = this.canvas.id, e3 = h(e3), this.dummyDOM || (this.dummyDOM = document.getElementById(r2).parentNode), this.descriptions || (this.descriptions = {}), this.descriptions.fallback ? this.descriptions.fallback.innerHTML !== e3 && (this.descriptions.fallback.innerHTML = e3) : this._describeHTML("fallback", e3), t2 === this.LABEL && (this.descriptions.label ? this.descriptions.label.innerHTML !== e3 && (this.descriptions.label.innerHTML = e3) : this._describeHTML("label", e3)));
      }, s2.default.prototype.describeElement = function(e3, t2, r2) {
        var o, n;
        s2.default._validateParameters("describeElement", arguments), "string" == typeof t2 && "string" == typeof e3 && (o = this.canvas.id, t2 = h(t2), n = function(e4) {
          if ("label" === e4 || "fallback" === e4) throw new Error("element name should not be LABEL or FALLBACK");
          e4.endsWith(".") || e4.endsWith(";") || e4.endsWith(",") ? e4 = e4.replace(/.$/, ":") : e4.endsWith(":") || (e4 += ":");
          return e4;
        }(e3), e3 = e3.replace(/[^a-zA-Z0-9]/g, ""), n = '<th scope="row">'.concat(n, "</th><td>").concat(t2, "</td>"), this.dummyDOM || (this.dummyDOM = document.getElementById(o).parentNode), this.descriptions ? this.descriptions.fallbackElements || (this.descriptions.fallbackElements = {}) : this.descriptions = { fallbackElements: {} }, this.descriptions.fallbackElements[e3] ? this.descriptions.fallbackElements[e3].innerHTML !== n && (this.descriptions.fallbackElements[e3].innerHTML = n) : this._describeElementHTML("fallback", e3, n), r2 === this.LABEL && (this.descriptions.labelElements || (this.descriptions.labelElements = {}), this.descriptions.labelElements[e3] ? this.descriptions.labelElements[e3].innerHTML !== n && (this.descriptions.labelElements[e3].innerHTML = n) : this._describeElementHTML("label", e3, n)));
      }, s2.default.prototype._describeHTML = function(e3, t2) {
        var r2, o = this.canvas.id;
        "fallback" === e3 ? (this.dummyDOM.querySelector("#".concat(o + i)) ? this.dummyDOM.querySelector("#" + o + l).insertAdjacentHTML("beforebegin", '<p id="'.concat(o + a2, '"></p>')) : (r2 = '<div id="'.concat(o).concat(i, '" role="region" aria-label="Canvas Description"><p id="').concat(o).concat(a2, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutput")).insertAdjacentHTML("beforebegin", r2) : this.dummyDOM.querySelector("#".concat(o)).innerHTML = r2), this.descriptions.fallback = this.dummyDOM.querySelector("#".concat(o).concat(a2)), this.descriptions.fallback.innerHTML = t2) : "label" === e3 && (this.dummyDOM.querySelector("#".concat(o + u)) ? this.dummyDOM.querySelector("#".concat(o + d)) && this.dummyDOM.querySelector("#".concat(o + d)).insertAdjacentHTML("beforebegin", '<p id="'.concat(o).concat(c, '"></p>')) : (r2 = '<div id="'.concat(o).concat(u, '" class="p5Label"><p id="').concat(o).concat(c, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(o, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", r2) : this.dummyDOM.querySelector("#" + o).insertAdjacentHTML("afterend", r2)), this.descriptions.label = this.dummyDOM.querySelector("#" + o + c), this.descriptions.label.innerHTML = t2);
      }, s2.default.prototype._describeElementHTML = function(e3, t2, r2) {
        var o, n = this.canvas.id;
        "fallback" === e3 ? (this.dummyDOM.querySelector("#".concat(n + i)) ? this.dummyDOM.querySelector("#" + n + l) || this.dummyDOM.querySelector("#" + n + a2).insertAdjacentHTML("afterend", '<table id="'.concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table>')) : (o = '<div id="'.concat(n).concat(i, '" role="region" aria-label="Canvas Description"><table id="').concat(n).concat(l, '"><caption>Canvas elements and their descriptions</caption></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutput")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).innerHTML = o), (o = document.createElement("tr")).id = n + "_fte_" + t2, this.dummyDOM.querySelector("#" + n + l).appendChild(o), this.descriptions.fallbackElements[t2] = this.dummyDOM.querySelector("#".concat(n).concat("_fte_").concat(t2)), this.descriptions.fallbackElements[t2].innerHTML = r2) : "label" === e3 && (this.dummyDOM.querySelector("#".concat(n + u)) ? this.dummyDOM.querySelector("#".concat(n + d)) || this.dummyDOM.querySelector("#" + n + c).insertAdjacentHTML("afterend", '<table id="'.concat(n + d, '"></table>')) : (o = '<div id="'.concat(n).concat(u, '" class="p5Label"><table id="').concat(n).concat(d, '"></table></div>'), this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(n, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", o) : this.dummyDOM.querySelector("#" + n).insertAdjacentHTML("afterend", o)), (e3 = document.createElement("tr")).id = n + "_lte_" + t2, this.dummyDOM.querySelector("#" + n + d).appendChild(e3), this.descriptions.labelElements[t2] = this.dummyDOM.querySelector("#".concat(n).concat("_lte_").concat(t2)), this.descriptions.labelElements[t2].innerHTML = r2);
      };
      e2 = s2.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.ends-with": 198, "core-js/modules/es.string.replace": 204 }], 264: [function(e2, t, r) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.string.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype._updateGridOutput = function(e3) {
        var t2, r2, o, n;
        this.dummyDOM.querySelector("#".concat(e3, "_summary")) && (t2 = this._accessibleOutputs[e3], o = function(e4, t3, r3, o3) {
          t3 = "".concat(t3, " canvas, ").concat(r3, " by ").concat(o3, " pixels, contains ").concat(e4[0]);
          t3 = (1 === e4[0] ? "".concat(t3, " shape: ") : "".concat(t3, " shapes: ")).concat(e4[1]);
          return t3;
        }((r2 = function(e4, t3) {
          var r3, o3 = "", n2 = "", s2 = 0;
          for (r3 in t3) {
            var i, a2 = 0;
            for (i in t3[r3]) {
              var l = '<li id="'.concat(e4, "shape").concat(s2, '">').concat(t3[r3][i].color, " ").concat(r3, ",");
              "line" === r3 ? l += " location = ".concat(t3[r3][i].pos, ", length = ").concat(t3[r3][i].length, " pixels") : (l += " location = ".concat(t3[r3][i].pos), "point" !== r3 && (l += ", area = ".concat(t3[r3][i].area, " %")), l += "</li>"), o3 += l, a2++, s2++;
            }
            n2 = 1 < a2 ? "".concat(n2, " ").concat(a2, " ").concat(r3, "s") : "".concat(n2, " ").concat(a2, " ").concat(r3);
          }
          return { numShapes: [s2, n2], details: o3 };
        }(e3, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e4, t3) {
          var r3, o3, n2 = 0, s2 = "", i = Array.from(Array(10), function() {
            return Array(10);
          });
          for (r3 in t3) for (var a2 in t3[r3]) {
            var l = void 0;
            l = "line" !== r3 ? '<a href="#'.concat(e4, "shape").concat(n2, '">').concat(t3[r3][a2].color, " ").concat(r3, "</a>") : '<a href="#'.concat(e4, "shape").concat(n2, '">').concat(t3[r3][a2].color, " ").concat(r3, " midpoint</a>"), t3[r3][a2].loc.locY < i.length && t3[r3][a2].loc.locX < i[t3[r3][a2].loc.locY].length && (i[t3[r3][a2].loc.locY][t3[r3][a2].loc.locX] ? i[t3[r3][a2].loc.locY][t3[r3][a2].loc.locX] = i[t3[r3][a2].loc.locY][t3[r3][a2].loc.locX] + "  " + l : i[t3[r3][a2].loc.locY][t3[r3][a2].loc.locX] = l, n2++);
          }
          for (o3 in i) {
            var u, c = "<tr>";
            for (u in i[o3]) c += "<td>", void 0 !== i[o3][u] && (c += i[o3][u]), c += "</td>";
            s2 = s2 + c + "</tr>";
          }
          return s2;
        }(e3, this.ingredients.shapes), o !== t2.summary.innerHTML && (t2.summary.innerHTML = o), n !== t2.map.innerHTML && (t2.map.innerHTML = n), r2.details !== t2.shapeDetails.innerHTML && (t2.shapeDetails.innerHTML = r2.details), this._accessibleOutputs[e3] = t2);
      };
      e2 = e2.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.map": 168, "core-js/modules/es.string.iterator": 200 }], 265: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.to-fixed"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function l(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function u(e3, t2, r2) {
        var o3 = e3[0], e3 = e3[1];
        return o3 < 0 || t2 <= o3 || e3 < 0 || r2 <= e3 ? null : (10 === (o3 = Math.floor(o3 / t2 * 10)) && (o3 -= 1), 10 === (t2 = Math.floor(e3 / r2 * 10)) && (t2 -= 1), { locX: o3, locY: t2 });
      }
      o.default.prototype.textOutput = function(e3) {
        o.default._validateParameters("textOutput", arguments), this._accessibleOutputs.text || (this._accessibleOutputs.text = true, this._createOutput("textOutput", "Fallback"), e3 === this.LABEL && (this._accessibleOutputs.textLabel = true, this._createOutput("textOutput", "Label")));
      }, o.default.prototype.gridOutput = function(e3) {
        o.default._validateParameters("gridOutput", arguments), this._accessibleOutputs.grid || (this._accessibleOutputs.grid = true, this._createOutput("gridOutput", "Fallback"), e3 === this.LABEL && (this._accessibleOutputs.gridLabel = true, this._createOutput("gridOutput", "Label")));
      }, o.default.prototype._addAccsOutput = function() {
        return this._accessibleOutputs || (this._accessibleOutputs = { text: false, grid: false, textLabel: false, gridLabel: false }), this._accessibleOutputs.grid || this._accessibleOutputs.text;
      }, o.default.prototype._createOutput = function(e3, t2) {
        var r2, o3, n, s2 = this.canvas.id, i = (this.ingredients || (this.ingredients = { shapes: {}, colors: { background: "white", fill: "white", stroke: "black" }, pShapes: "", pBackground: "" }), this.dummyDOM || (this.dummyDOM = document.getElementById(s2).parentNode), "");
        "Fallback" === t2 ? (r2 = s2 + e3, this.dummyDOM.querySelector("#".concat(o3 = s2 + "accessibleOutput")) || (this.dummyDOM.querySelector("#".concat(s2, "_Description")) ? this.dummyDOM.querySelector("#".concat(s2, "_Description")).insertAdjacentHTML("afterend", '<div id="'.concat(o3, '" role="region" aria-label="Canvas Outputs"></div>')) : this.dummyDOM.querySelector("#".concat(s2)).innerHTML = '<div id="'.concat(o3, '" role="region" aria-label="Canvas Outputs"></div>'))) : "Label" === t2 && (r2 = s2 + e3 + (i = t2), this.dummyDOM.querySelector("#".concat(o3 = s2 + "accessibleOutput" + t2)) || (this.dummyDOM.querySelector("#".concat(s2, "_Label")) ? this.dummyDOM.querySelector("#".concat(s2, "_Label")) : this.dummyDOM.querySelector("#".concat(s2))).insertAdjacentHTML("afterend", '<div id="'.concat(o3, '"></div>'))), this._accessibleOutputs[r2] = {}, "textOutput" === e3 ? (i = "#".concat(s2, "gridOutput").concat(i), n = '<div id="'.concat(r2, '">Text Output<div id="').concat(r2, 'Summary" aria-label="text output summary"><p id="').concat(r2, '_summary"></p><ul id="').concat(r2, '_list"></ul></div><table id="').concat(r2, '_shapeDetails" summary="text output shape details"></table></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("beforebegin", n) : this.dummyDOM.querySelector("#".concat(o3)).innerHTML = n, this._accessibleOutputs[r2].list = this.dummyDOM.querySelector("#".concat(r2, "_list"))) : "gridOutput" === e3 && (i = "#".concat(s2, "textOutput").concat(i), n = '<div id="'.concat(r2, '">Grid Output<p id="').concat(r2, '_summary" aria-label="grid output summary"><table id="').concat(r2, '_map" summary="grid output content"></table><ul id="').concat(r2, '_shapeDetails" aria-label="grid output shape details"></ul></div>'), this.dummyDOM.querySelector(i) ? this.dummyDOM.querySelector(i).insertAdjacentHTML("afterend", n) : this.dummyDOM.querySelector("#".concat(o3)).innerHTML = n, this._accessibleOutputs[r2].map = this.dummyDOM.querySelector("#".concat(r2, "_map"))), this._accessibleOutputs[r2].shapeDetails = this.dummyDOM.querySelector("#".concat(r2, "_shapeDetails")), this._accessibleOutputs[r2].summary = this.dummyDOM.querySelector("#".concat(r2, "_summary"));
      }, o.default.prototype._updateAccsOutput = function() {
        var e3 = this.canvas.id;
        JSON.stringify(this.ingredients.shapes) === this.ingredients.pShapes && this.ingredients.colors.background === this.ingredients.pBackground || (this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this._accessibleOutputs.text && this._updateTextOutput(e3 + "textOutput"), this._accessibleOutputs.grid && this._updateGridOutput(e3 + "gridOutput"), this._accessibleOutputs.textLabel && this._updateTextOutput(e3 + "textOutputLabel"), this._accessibleOutputs.gridLabel && this._updateGridOutput(e3 + "gridOutputLabel"));
      }, o.default.prototype._accsBackground = function(e3) {
        this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this.ingredients.pBackground = this.ingredients.colors.background, this.ingredients.shapes = {}, this.ingredients.colors.backgroundRGBA !== e3 && (this.ingredients.colors.backgroundRGBA = e3, this.ingredients.colors.background = this._rgbColorName(e3));
      }, o.default.prototype._accsCanvasColors = function(e3, t2) {
        "fill" === e3 ? this.ingredients.colors.fillRGBA !== t2 && (this.ingredients.colors.fillRGBA = t2, this.ingredients.colors.fill = this._rgbColorName(t2)) : "stroke" === e3 && this.ingredients.colors.strokeRGBA !== t2 && (this.ingredients.colors.strokeRGBA = t2, this.ingredients.colors.stroke = this._rgbColorName(t2));
      }, o.default.prototype._accsOutput = function(e3, t2) {
        "ellipse" === e3 && t2[2] === t2[3] ? e3 = "circle" : "rectangle" === e3 && t2[2] === t2[3] && (e3 = "square");
        var r2, o3, n = {}, s2 = true, i = function(e4, t3) {
          var r3;
          e4 = "rectangle" === e4 || "ellipse" === e4 || "arc" === e4 || "circle" === e4 || "square" === e4 ? (r3 = Math.round(t3[0] + t3[2] / 2), Math.round(t3[1] + t3[3] / 2)) : "triangle" === e4 ? (r3 = (t3[0] + t3[2] + t3[4]) / 3, (t3[1] + t3[3] + t3[5]) / 3) : "quadrilateral" === e4 ? (r3 = (t3[0] + t3[2] + t3[4] + t3[6]) / 4, (t3[1] + t3[3] + t3[5] + t3[7]) / 4) : "line" === e4 ? (r3 = (t3[0] + t3[2]) / 2, (t3[1] + t3[3]) / 2) : (r3 = t3[0], t3[1]);
          return [r3, e4];
        }(e3, t2);
        if ("line" === e3 ? (n.color = this.ingredients.colors.stroke, n.length = Math.round(this.dist(t2[0], t2[1], t2[2], t2[3])), r2 = this._getPos(t2[0], [1]), o3 = this._getPos(t2[2], [3]), n.loc = u(i, this.width, this.height), n.pos = r2 === o3 ? "at ".concat(r2) : "from ".concat(r2, " to ").concat(o3)) : ("point" === e3 ? n.color = this.ingredients.colors.stroke : (n.color = this.ingredients.colors.fill, n.area = this._getArea(e3, t2)), n.pos = this._getPos.apply(this, l(i)), n.loc = u(i, this.width, this.height)), this.ingredients.shapes[e3]) {
          if (this.ingredients.shapes[e3] !== [n]) {
            for (var a2 in this.ingredients.shapes[e3]) JSON.stringify(this.ingredients.shapes[e3][a2]) === JSON.stringify(n) && (s2 = false);
            true === s2 && this.ingredients.shapes[e3].push(n);
          }
        } else this.ingredients.shapes[e3] = [n];
      }, o.default.prototype._getPos = function(e3, t2) {
        var e3 = new DOMPointReadOnly(e3, t2), t2 = this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform(), e3 = e3.matrixTransform(t2), t2 = e3.x, e3 = e3.y, r2 = this.width * this._pixelDensity, o3 = this.height * this._pixelDensity;
        return t2 < 0.4 * r2 ? e3 < 0.4 * o3 ? "top left" : 0.6 * o3 < e3 ? "bottom left" : "mid left" : 0.6 * r2 < t2 ? e3 < 0.4 * o3 ? "top right" : 0.6 * o3 < e3 ? "bottom right" : "mid right" : e3 < 0.4 * o3 ? "top middle" : 0.6 * o3 < e3 ? "bottom middle" : "middle";
      }, o.default.prototype._getArea = function(e3, t2) {
        var r2, o3, n = 0, s2 = ("arc" === e3 ? (n = (r2 = ((t2[5] - t2[4]) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI)) * t2[2] * t2[3] / 8, "open" !== t2[6] && "chord" !== t2[6] || (o3 = t2[0], u2 = t2[1], s2 = t2[0] + t2[2] / 2 * Math.cos(t2[4]).toFixed(2), c = t2[1] + t2[3] / 2 * Math.sin(t2[4]).toFixed(2), a2 = t2[0] + t2[2] / 2 * Math.cos(t2[5]).toFixed(2), i = t2[1] + t2[3] / 2 * Math.sin(t2[5]).toFixed(2), o3 = Math.abs(o3 * (c - i) + s2 * (i - u2) + a2 * (u2 - c)) / 2, r2 > Math.PI ? n += o3 : n -= o3)) : "ellipse" === e3 || "circle" === e3 ? n = 3.14 * t2[2] / 2 * t2[3] / 2 : "line" === e3 || "point" === e3 ? n = 0 : "quadrilateral" === e3 ? n = Math.abs((t2[6] + t2[0]) * (t2[7] - t2[1]) + (t2[0] + t2[2]) * (t2[1] - t2[3]) + (t2[2] + t2[4]) * (t2[3] - t2[5]) + (t2[4] + t2[6]) * (t2[5] - t2[7])) / 2 : "rectangle" === e3 || "square" === e3 ? n = t2[2] * t2[3] : "triangle" === e3 && (n = Math.abs(t2[0] * (t2[3] - t2[5]) + t2[2] * (t2[5] - t2[1]) + t2[4] * (t2[1] - t2[3])) / 2), this.width * this._pixelDensity), i = this.height * this._pixelDensity, a2 = [new DOMPoint(0, 0), new DOMPoint(s2, 0), new DOMPoint(s2, i), new DOMPoint(0, i)], l2 = (this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform()).inverse(), u2 = a2.map(function(e4) {
          return e4.matrixTransform(l2);
        }), c = Math.abs((u2[3].x + u2[0].x) * (u2[3].y - u2[0].y) + (u2[0].x + u2[1].x) * (u2[0].y - u2[1].y) + (u2[1].x + u2[2].x) * (u2[1].y - u2[2].y) + (u2[2].x + u2[3].x) * (u2[2].y - u2[3].y)) / 2;
        return Math.round(100 * n / c);
      };
      e2 = o.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.number.to-fixed": 182, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 266: [function(e2, t, r) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.concat"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype._updateTextOutput = function(e3) {
        var t2, r2, o, n;
        this.dummyDOM.querySelector("#".concat(e3, "_summary")) && (t2 = this._accessibleOutputs[e3], o = function(e4, t3, r3, o3) {
          r3 = "Your output is a, ".concat(r3, " by ").concat(o3, " pixels, ").concat(t3, " canvas containing the following");
          r3 = 1 === e4 ? "".concat(r3, " shape:") : "".concat(r3, " ").concat(e4, " shapes:");
          return r3;
        }((r2 = function(e4, t3) {
          var r3, o3 = "", n2 = 0;
          for (r3 in t3) for (var s2 in t3[r3]) {
            var i = '<li><a href="#'.concat(e4, "shape").concat(n2, '">').concat(t3[r3][s2].color, " ").concat(r3, "</a>");
            "line" === r3 ? i += ", ".concat(t3[r3][s2].pos, ", ").concat(t3[r3][s2].length, " pixels long.</li>") : (i += ", at ".concat(t3[r3][s2].pos), "point" !== r3 && (i += ", covering ".concat(t3[r3][s2].area, "% of the canvas")), i += ".</li>"), o3 += i, n2++;
          }
          return { numShapes: n2, listShapes: o3 };
        }(e3, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n = function(e4, t3) {
          var r3, o3 = "", n2 = 0;
          for (r3 in t3) for (var s2 in t3[r3]) {
            var i = '<tr id="'.concat(e4, "shape").concat(n2, '"><th>').concat(t3[r3][s2].color, " ").concat(r3, "</th>");
            "line" === r3 ? i += "<td>location = ".concat(t3[r3][s2].pos, "</td><td>length = ").concat(t3[r3][s2].length, " pixels</td></tr>") : (i += "<td>location = ".concat(t3[r3][s2].pos, "</td>"), "point" !== r3 && (i += "<td> area = ".concat(t3[r3][s2].area, "%</td>")), i += "</tr>"), o3 += i, n2++;
          }
          return o3;
        }(e3, this.ingredients.shapes), o !== t2.summary.innerHTML && (t2.summary.innerHTML = o), r2.listShapes !== t2.list.innerHTML && (t2.list.innerHTML = r2.listShapes), n !== t2.shapeDetails.innerHTML && (t2.shapeDetails.innerHTML = n), this._accessibleOutputs[e3] = t2);
      };
      e2 = e2.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153 }], 267: [function(e2, t, r) {
      var o = (o = e2("./core/main")) && o.__esModule ? o : { default: o };
      e2("./core/constants"), e2("./core/environment"), e2("./core/friendly_errors/stacktrace"), e2("./core/friendly_errors/validate_params"), e2("./core/friendly_errors/file_errors"), e2("./core/friendly_errors/fes_core"), e2("./core/friendly_errors/sketch_reader"), e2("./core/helpers"), e2("./core/legacy"), e2("./core/preload"), e2("./core/p5.Element"), e2("./core/p5.Graphics"), e2("./core/p5.Renderer"), e2("./core/p5.Renderer2D"), e2("./core/rendering"), e2("./core/shim"), e2("./core/structure"), e2("./core/transform"), e2("./core/shape/2d_primitives"), e2("./core/shape/attributes"), e2("./core/shape/curves"), e2("./core/shape/vertex"), e2("./accessibility/outputs"), e2("./accessibility/textOutput"), e2("./accessibility/gridOutput"), e2("./accessibility/color_namer"), e2("./color/color_conversion"), e2("./color/creating_reading"), e2("./color/p5.Color"), e2("./color/setting"), e2("./data/p5.TypedDict"), e2("./data/local_storage.js"), e2("./dom/dom"), e2("./accessibility/describe"), e2("./events/acceleration"), e2("./events/keyboard"), e2("./events/mouse"), e2("./events/touch"), e2("./image/filters"), e2("./image/image"), e2("./image/loading_displaying"), e2("./image/p5.Image"), e2("./image/pixels"), e2("./io/files"), e2("./io/p5.Table"), e2("./io/p5.TableRow"), e2("./io/p5.XML"), e2("./math/calculation"), e2("./math/math"), e2("./math/noise"), e2("./math/p5.Vector"), e2("./math/random"), e2("./math/trigonometry"), e2("./typography/attributes"), e2("./typography/loading_displaying"), e2("./typography/p5.Font"), e2("./utilities/array_functions"), e2("./utilities/conversion"), e2("./utilities/string_functions"), e2("./utilities/time_date"), e2("./webgl/3d_primitives"), e2("./webgl/interaction"), e2("./webgl/light"), e2("./webgl/loading"), e2("./webgl/material"), e2("./webgl/p5.Camera"), e2("./webgl/p5.DataArray"), e2("./webgl/p5.Geometry"), e2("./webgl/p5.Matrix"), e2("./webgl/p5.Quat"), e2("./webgl/p5.RendererGL.Immediate"), e2("./webgl/p5.RendererGL"), e2("./webgl/p5.RendererGL.Retained"), e2("./webgl/p5.Framebuffer"), e2("./webgl/p5.Shader"), e2("./webgl/p5.RenderBuffer"), e2("./webgl/p5.Texture"), e2("./webgl/text"), e2("./core/init"), t.exports = o.default;
    }, { "./accessibility/color_namer": 262, "./accessibility/describe": 263, "./accessibility/gridOutput": 264, "./accessibility/outputs": 265, "./accessibility/textOutput": 266, "./color/color_conversion": 268, "./color/creating_reading": 269, "./color/p5.Color": 270, "./color/setting": 271, "./core/constants": 272, "./core/environment": 273, "./core/friendly_errors/fes_core": 274, "./core/friendly_errors/file_errors": 275, "./core/friendly_errors/sketch_reader": 276, "./core/friendly_errors/stacktrace": 277, "./core/friendly_errors/validate_params": 278, "./core/helpers": 279, "./core/init": 280, "./core/legacy": 282, "./core/main": 283, "./core/p5.Element": 284, "./core/p5.Graphics": 285, "./core/p5.Renderer": 286, "./core/p5.Renderer2D": 287, "./core/preload": 288, "./core/rendering": 289, "./core/shape/2d_primitives": 290, "./core/shape/attributes": 291, "./core/shape/curves": 292, "./core/shape/vertex": 293, "./core/shim": 294, "./core/structure": 295, "./core/transform": 296, "./data/local_storage.js": 297, "./data/p5.TypedDict": 298, "./dom/dom": 299, "./events/acceleration": 300, "./events/keyboard": 301, "./events/mouse": 302, "./events/touch": 303, "./image/filters": 304, "./image/image": 305, "./image/loading_displaying": 306, "./image/p5.Image": 307, "./image/pixels": 308, "./io/files": 309, "./io/p5.Table": 310, "./io/p5.TableRow": 311, "./io/p5.XML": 312, "./math/calculation": 313, "./math/math": 314, "./math/noise": 315, "./math/p5.Vector": 316, "./math/random": 317, "./math/trigonometry": 318, "./typography/attributes": 319, "./typography/loading_displaying": 320, "./typography/p5.Font": 321, "./utilities/array_functions": 322, "./utilities/conversion": 323, "./utilities/string_functions": 324, "./utilities/time_date": 325, "./webgl/3d_primitives": 326, "./webgl/interaction": 328, "./webgl/light": 329, "./webgl/loading": 330, "./webgl/material": 331, "./webgl/p5.Camera": 332, "./webgl/p5.DataArray": 333, "./webgl/p5.Framebuffer": 334, "./webgl/p5.Geometry": 335, "./webgl/p5.Matrix": 336, "./webgl/p5.Quat": 337, "./webgl/p5.RenderBuffer": 338, "./webgl/p5.RendererGL": 341, "./webgl/p5.RendererGL.Immediate": 339, "./webgl/p5.RendererGL.Retained": 340, "./webgl/p5.Shader": 342, "./webgl/p5.Texture": 343, "./webgl/text": 344 }], 268: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.ColorConversion = { _hsbaToHSLA: function(e3) {
        var t2 = e3[0], r2 = e3[1], o = e3[2], n = (2 - r2) * o / 2;
        return 0 != n && (1 == n ? r2 = 0 : n < 0.5 ? r2 /= 2 - r2 : r2 = r2 * o / (2 - 2 * n)), [t2, r2, n, e3[3]];
      }, _hsbaToRGBA: function(e3) {
        var t2, r2, o, n, s2, i = 6 * e3[0], a2 = e3[1], l = e3[2];
        return 0 === a2 ? [l, l, l, e3[3]] : (r2 = l * (1 - a2), o = l * (1 - a2 * (i - (t2 = Math.floor(i)))), a2 = l * (1 - a2 * (1 + t2 - i)), i = 1 === t2 ? (n = o, s2 = l, r2) : 2 === t2 ? (n = r2, s2 = l, a2) : 3 === t2 ? (n = r2, s2 = o, l) : 4 === t2 ? (n = a2, s2 = r2, l) : 5 === t2 ? (n = l, s2 = r2, o) : (n = l, s2 = a2, r2), [n, s2, i, e3[3]]);
      }, _hslaToHSBA: function(e3) {
        var t2 = e3[0], r2 = e3[1], o = e3[2], n = o < 0.5 ? (1 + r2) * o : o + r2 - o * r2;
        return [t2, r2 = 2 * (n - o) / n, n, e3[3]];
      }, _hslaToRGBA: function(e3) {
        var t2, r2 = 6 * e3[0], o = e3[1], n = e3[2];
        return 0 === o ? [n, n, n, e3[3]] : [(t2 = function(e4, t3, r3) {
          return e4 < 0 ? e4 += 6 : 6 <= e4 && (e4 -= 6), e4 < 1 ? t3 + (r3 - t3) * e4 : e4 < 3 ? r3 : e4 < 4 ? t3 + (r3 - t3) * (4 - e4) : t3;
        })(2 + r2, o = 2 * n - (n = n < 0.5 ? (1 + o) * n : n + o - n * o), n), t2(r2, o, n), t2(r2 - 2, o, n), e3[3]];
      }, _rgbaToHSBA: function(e3) {
        var t2, r2, o = e3[0], n = e3[1], s2 = e3[2], i = Math.max(o, n, s2), a2 = i - Math.min(o, n, s2);
        return 0 == a2 ? r2 = t2 = 0 : (r2 = a2 / i, o === i ? t2 = (n - s2) / a2 : n === i ? t2 = 2 + (s2 - o) / a2 : s2 === i && (t2 = 4 + (o - n) / a2), t2 < 0 ? t2 += 6 : 6 <= t2 && (t2 -= 6)), [t2 / 6, r2, i, e3[3]];
      }, _rgbaToHSLA: function(e3) {
        var t2, r2, o = e3[0], n = e3[1], s2 = e3[2], i = Math.max(o, n, s2), a2 = Math.min(o, n, s2), l = i + a2, a2 = i - a2;
        return 0 == a2 ? r2 = t2 = 0 : (r2 = l < 1 ? a2 / l : a2 / (2 - l), o === i ? t2 = (n - s2) / a2 : n === i ? t2 = 2 + (s2 - o) / a2 : s2 === i && (t2 = 4 + (o - n) / a2), t2 < 0 ? t2 += 6 : 6 <= t2 && (t2 -= 6)), [t2 / 6, r2, l / 2, e3[3]];
      } };
      e2 = e2.default.ColorConversion;
      r.default = e2;
    }, { "../core/main": 283 }], 269: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, u = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      e2("./p5.Color"), e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), l.default.prototype.alpha = function(e3) {
        return l.default._validateParameters("alpha", arguments), this.color(e3)._getAlpha();
      }, l.default.prototype.blue = function(e3) {
        return l.default._validateParameters("blue", arguments), this.color(e3)._getBlue();
      }, l.default.prototype.brightness = function(e3) {
        return l.default._validateParameters("brightness", arguments), this.color(e3)._getBrightness();
      }, l.default.prototype.color = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return l.default._validateParameters("color", r2), r2[0] instanceof l.default.Color ? r2[0] : (e3 = Array.isArray(r2[0]) ? r2[0] : r2, new l.default.Color(this, e3));
      }, l.default.prototype.green = function(e3) {
        return l.default._validateParameters("green", arguments), this.color(e3)._getGreen();
      }, l.default.prototype.hue = function(e3) {
        return l.default._validateParameters("hue", arguments), this.color(e3)._getHue();
      }, l.default.prototype.lerpColor = function(e3, t2, r2) {
        l.default._validateParameters("lerpColor", arguments), e3 instanceof l.default.Color || (e3 = color(e3)), t2 instanceof l.default.Color || (t2 = color(t2));
        var o3, n2, s2, i2 = this._colorMode, a3 = this._colorMaxes;
        if (i2 === u.RGB) n2 = e3.levels.map(function(e4) {
          return e4 / 255;
        }), s2 = t2.levels.map(function(e4) {
          return e4 / 255;
        });
        else if (i2 === u.HSB) e3._getBrightness(), t2._getBrightness(), n2 = e3.hsba, s2 = t2.hsba;
        else {
          if (i2 !== u.HSL) throw new Error("".concat(i2, " cannot be used for interpolation."));
          e3._getLightness(), t2._getLightness(), n2 = e3.hsla, s2 = t2.hsla;
        }
        return r2 = Math.max(Math.min(r2, 1), 0), void 0 === this.lerp && (this.lerp = function(e4, t3, r3) {
          return r3 * (t3 - e4) + e4;
        }), i2 === u.RGB ? o3 = this.lerp(n2[0], s2[0], r2) : (0.5 < Math.abs(n2[0] - s2[0]) && (n2[0] > s2[0] ? s2[0] += 1 : n2[0] += 1), 1 <= (o3 = this.lerp(n2[0], s2[0], r2)) && --o3), e3 = this.lerp(n2[1], s2[1], r2), t2 = this.lerp(n2[2], s2[2], r2), n2 = this.lerp(n2[3], s2[3], r2), o3 *= a3[i2][0], e3 *= a3[i2][1], t2 *= a3[i2][2], n2 *= a3[i2][3], this.color(o3, e3, t2, n2);
      }, l.default.prototype.paletteLerp = function(e3, t2) {
        var r2 = e3[0];
        if (t2 < r2[1]) return this.color(r2[0]);
        for (var o3 = 1; o3 < e3.length; o3++) {
          var n2, s2 = e3[o3];
          if (t2 < s2[1]) return n2 = e3[o3 - 1], this.lerpColor(this.color(n2[0]), this.color(s2[0]), (t2 - n2[1]) / (s2[1] - n2[1]));
        }
        return this.color(e3[e3.length - 1][0]);
      }, l.default.prototype.lightness = function(e3) {
        return l.default._validateParameters("lightness", arguments), this.color(e3)._getLightness();
      }, l.default.prototype.red = function(e3) {
        return l.default._validateParameters("red", arguments), this.color(e3)._getRed();
      }, l.default.prototype.saturation = function(e3) {
        return l.default._validateParameters("saturation", arguments), this.color(e3)._getSaturation();
      };
      var n = l.default;
      r.default = n;
    }, { "../core/constants": 272, "../core/friendly_errors/fes_core": 274, "../core/friendly_errors/file_errors": 275, "../core/friendly_errors/validate_params": 278, "../core/main": 283, "./p5.Color": 270, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 270: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = s2(e2("../core/main")), d = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants")), h = s2(e2("./color_conversion"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function s2(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function l(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      var f = { aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", green: "#008000", greenyellow: "#adff2f", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", rebeccapurple: "#663399", red: "#ff0000", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32" }, e2 = /\s*/, u = /(\d{1,3})/, c = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, p = new RegExp("".concat(c.source, "%")), m = { HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, RGB: new RegExp(["^rgb\\(", u.source, ",", u.source, ",", u.source, "\\)$"].join(e2.source), "i"), RGB_PERCENT: new RegExp(["^rgb\\(", p.source, ",", p.source, ",", p.source, "\\)$"].join(e2.source), "i"), RGBA: new RegExp(["^rgba\\(", u.source, ",", u.source, ",", u.source, ",", c.source, "\\)$"].join(e2.source), "i"), RGBA_PERCENT: new RegExp(["^rgba\\(", p.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e2.source), "i"), HSL: new RegExp(["^hsl\\(", u.source, ",", p.source, ",", p.source, "\\)$"].join(e2.source), "i"), HSLA: new RegExp(["^hsla\\(", u.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e2.source), "i"), HSB: new RegExp(["^hsb\\(", u.source, ",", p.source, ",", p.source, "\\)$"].join(e2.source), "i"), HSBA: new RegExp(["^hsba\\(", u.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e2.source), "i") }, u = (n.default.Color = function() {
        function c2(e4, t3) {
          if (!(this instanceof c2)) throw new TypeError("Cannot call a class as a function");
          if (this._storeModeAndMaxes(e4._colorMode, e4._colorMaxes), ![d.RGB, d.HSL, d.HSB].includes(this.mode)) throw new Error("".concat(this.mode, " is an invalid colorMode."));
          this._array = c2._parseInputs.apply(this, t3), this._calculateLevels();
        }
        var e3, t2, r2;
        return e3 = c2, r2 = [{ key: "_parseInputs", value: function(e4, t3, r3, o3) {
          var n2, s3 = arguments.length, i2 = this.mode, a3 = this.maxes[i2], l2 = [];
          if (3 <= s3) {
            for (l2[0] = e4 / a3[0], l2[1] = t3 / a3[1], l2[2] = r3 / a3[2], l2[3] = "number" == typeof o3 ? o3 / a3[3] : 1, n2 = l2.length - 1; 0 <= n2; --n2) {
              var u2 = l2[n2];
              u2 < 0 ? l2[n2] = 0 : 1 < u2 && (l2[n2] = 1);
            }
            return i2 === d.HSL ? h.default._hslaToRGBA(l2) : i2 === d.HSB ? h.default._hsbaToRGBA(l2) : l2;
          }
          if (1 === s3 && "string" == typeof e4) {
            r3 = e4.trim().toLowerCase();
            if (f[r3]) return c2._parseInputs.call(this, f[r3]);
            if (m.HEX3.test(r3)) return (l2 = m.HEX3.exec(r3).slice(1).map(function(e5) {
              return parseInt(e5 + e5, 16) / 255;
            }))[3] = 1, l2;
            if (m.HEX6.test(r3)) return (l2 = m.HEX6.exec(r3).slice(1).map(function(e5) {
              return parseInt(e5, 16) / 255;
            }))[3] = 1, l2;
            if (m.HEX4.test(r3)) return l2 = m.HEX4.exec(r3).slice(1).map(function(e5) {
              return parseInt(e5 + e5, 16) / 255;
            });
            if (m.HEX8.test(r3)) return l2 = m.HEX8.exec(r3).slice(1).map(function(e5) {
              return parseInt(e5, 16) / 255;
            });
            if (m.RGB.test(r3)) return (l2 = m.RGB.exec(r3).slice(1).map(function(e5) {
              return e5 / 255;
            }))[3] = 1, l2;
            if (m.RGB_PERCENT.test(r3)) return (l2 = m.RGB_PERCENT.exec(r3).slice(1).map(function(e5) {
              return parseFloat(e5) / 100;
            }))[3] = 1, l2;
            if (m.RGBA.test(r3)) return l2 = m.RGBA.exec(r3).slice(1).map(function(e5, t4) {
              return 3 === t4 ? parseFloat(e5) : e5 / 255;
            });
            if (m.RGBA_PERCENT.test(r3)) return l2 = m.RGBA_PERCENT.exec(r3).slice(1).map(function(e5, t4) {
              return 3 === t4 ? parseFloat(e5) : parseFloat(e5) / 100;
            });
            if (m.HSL.test(r3) ? (l2 = m.HSL.exec(r3).slice(1).map(function(e5, t4) {
              return 0 === t4 ? parseInt(e5, 10) / 360 : parseInt(e5, 10) / 100;
            }))[3] = 1 : m.HSLA.test(r3) && (l2 = m.HSLA.exec(r3).slice(1).map(function(e5, t4) {
              return 0 === t4 ? parseInt(e5, 10) / 360 : 3 === t4 ? parseFloat(e5) : parseInt(e5, 10) / 100;
            })), (l2 = l2.map(function(e5) {
              return Math.max(Math.min(e5, 1), 0);
            })).length) return h.default._hslaToRGBA(l2);
            if (m.HSB.test(r3) ? (l2 = m.HSB.exec(r3).slice(1).map(function(e5, t4) {
              return 0 === t4 ? parseInt(e5, 10) / 360 : parseInt(e5, 10) / 100;
            }))[3] = 1 : m.HSBA.test(r3) && (l2 = m.HSBA.exec(r3).slice(1).map(function(e5, t4) {
              return 0 === t4 ? parseInt(e5, 10) / 360 : 3 === t4 ? parseFloat(e5) : parseInt(e5, 10) / 100;
            })), l2.length) {
              for (n2 = l2.length - 1; 0 <= n2; --n2) l2[n2] = Math.max(Math.min(l2[n2], 1), 0);
              return h.default._hsbaToRGBA(l2);
            }
            l2 = [1, 1, 1, 1];
          } else {
            if (1 !== s3 && 2 !== s3 || "number" != typeof e4) throw new Error("".concat(arguments, "is not a valid color representation."));
            l2[0] = e4 / a3[2], l2[1] = e4 / a3[2], l2[2] = e4 / a3[2], l2[3] = "number" == typeof t3 ? t3 / a3[3] : 1, l2 = l2.map(function(e5) {
              return Math.max(Math.min(e5, 1), 0);
            });
          }
          return l2;
        } }], (t2 = [{ key: "toString", value: function(e4) {
          var t3 = this.levels, r3 = this._array, o3 = r3[3];
          switch (e4) {
            case "#rrggbb":
              return "#".concat(t3[0] < 16 ? "0".concat(t3[0].toString(16)) : t3[0].toString(16), t3[1] < 16 ? "0".concat(t3[1].toString(16)) : t3[1].toString(16), t3[2] < 16 ? "0".concat(t3[2].toString(16)) : t3[2].toString(16));
            case "#rrggbbaa":
              return "#".concat(t3[0] < 16 ? "0".concat(t3[0].toString(16)) : t3[0].toString(16), t3[1] < 16 ? "0".concat(t3[1].toString(16)) : t3[1].toString(16), t3[2] < 16 ? "0".concat(t3[2].toString(16)) : t3[2].toString(16), t3[3] < 16 ? "0".concat(t3[3].toString(16)) : t3[3].toString(16));
            case "#rgb":
              return "#".concat(Math.round(15 * r3[0]).toString(16), Math.round(15 * r3[1]).toString(16), Math.round(15 * r3[2]).toString(16));
            case "#rgba":
              return "#".concat(Math.round(15 * r3[0]).toString(16), Math.round(15 * r3[1]).toString(16), Math.round(15 * r3[2]).toString(16), Math.round(15 * r3[3]).toString(16));
            case "rgb":
              return "rgb(".concat(t3[0], ", ", t3[1], ", ", t3[2], ")");
            case "rgb%":
              return "rgb(".concat((100 * r3[0]).toPrecision(3), "%, ", (100 * r3[1]).toPrecision(3), "%, ", (100 * r3[2]).toPrecision(3), "%)");
            case "rgba%":
              return "rgba(".concat((100 * r3[0]).toPrecision(3), "%, ", (100 * r3[1]).toPrecision(3), "%, ", (100 * r3[2]).toPrecision(3), "%, ", (100 * r3[3]).toPrecision(3), "%)");
            case "hsb":
            case "hsv":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ")");
            case "hsb%":
            case "hsv%":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");
            case "hsba":
            case "hsva":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ", ", o3, ")");
            case "hsba%":
            case "hsva%":
              return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * o3).toPrecision(3), "%)");
            case "hsl":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ")");
            case "hsl%":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");
            case "hsla":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ", ", o3, ")");
            case "hsla%":
              return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * o3).toPrecision(3), "%)");
            default:
              return "rgba(".concat(t3[0], ",", t3[1], ",", t3[2], ",", o3, ")");
          }
        } }, { key: "setRed", value: function(e4) {
          this._array[0] = e4 / this.maxes[d.RGB][0], this._calculateLevels();
        } }, { key: "setGreen", value: function(e4) {
          this._array[1] = e4 / this.maxes[d.RGB][1], this._calculateLevels();
        } }, { key: "setBlue", value: function(e4) {
          this._array[2] = e4 / this.maxes[d.RGB][2], this._calculateLevels();
        } }, { key: "setAlpha", value: function(e4) {
          this._array[3] = e4 / this.maxes[this.mode][3], this._calculateLevels();
        } }, { key: "_calculateLevels", value: function() {
          for (var e4 = this._array, t3 = this.levels = new Array(e4.length), r3 = e4.length - 1; 0 <= r3; --r3) t3[r3] = Math.round(255 * e4[r3]);
          this.hsla = null, this.hsba = null;
        } }, { key: "_getAlpha", value: function() {
          return this._array[3] * this.maxes[this.mode][3];
        } }, { key: "_storeModeAndMaxes", value: function(e4, t3) {
          this.mode = e4, this.maxes = t3;
        } }, { key: "_getMode", value: function() {
          return this.mode;
        } }, { key: "_getMaxes", value: function() {
          return this.maxes;
        } }, { key: "_getBlue", value: function() {
          return this._array[2] * this.maxes[d.RGB][2];
        } }, { key: "_getBrightness", value: function() {
          return this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[d.HSB][2];
        } }, { key: "_getGreen", value: function() {
          return this._array[1] * this.maxes[d.RGB][1];
        } }, { key: "_getHue", value: function() {
          return this.mode === d.HSB ? (this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[d.HSB][0]) : (this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[d.HSL][0]);
        } }, { key: "_getLightness", value: function() {
          return this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[d.HSL][2];
        } }, { key: "_getRed", value: function() {
          return this._array[0] * this.maxes[d.RGB][0];
        } }, { key: "_getSaturation", value: function() {
          return this.mode === d.HSB ? (this.hsba || (this.hsba = h.default._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[d.HSB][1]) : (this.hsla || (this.hsla = h.default._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[d.HSL][1]);
        } }]) && l(e3.prototype, t2), r2 && l(e3, r2), c2;
      }(), n.default.Color);
      r.default = u;
    }, { "../core/constants": 272, "../core/main": 283, "./color_conversion": 268, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.constructor": 194, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.trim": 209, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 271: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.fill"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var s2 = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, a2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = l();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), l = function() {
          return e3;
        }, e3);
      }
      e2("./p5.Color"), s2.default.prototype.beginClip = function() {
        this._renderer.beginClip(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {});
      }, s2.default.prototype.endClip = function() {
        this._renderer.endClip();
      }, s2.default.prototype.clip = function(e3, t2) {
        this._renderer.beginClip(t2), e3(), this._renderer.endClip(t2);
      }, s2.default.prototype.background = function() {
        var e3;
        return (e3 = this._renderer).background.apply(e3, arguments), this;
      }, s2.default.prototype.clear = function() {
        return this._renderer.clear((arguments.length <= 0 ? void 0 : arguments[0]) || 0, (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0, (arguments.length <= 3 ? void 0 : arguments[3]) || 0), this;
      }, s2.default.prototype.colorMode = function(e3, t2, r2, o3, n2) {
        return s2.default._validateParameters("colorMode", arguments), e3 !== a2.RGB && e3 !== a2.HSB && e3 !== a2.HSL || (this._colorMode = e3, e3 = this._colorMaxes[e3], 2 === arguments.length ? (e3[0] = t2, e3[1] = t2, e3[2] = t2, e3[3] = t2) : 4 === arguments.length ? (e3[0] = t2, e3[1] = r2, e3[2] = o3) : 5 === arguments.length && (e3[0] = t2, e3[1] = r2, e3[2] = o3, e3[3] = n2)), this;
      }, s2.default.prototype.fill = function() {
        var e3;
        return this._renderer._setProperty("_fillSet", true), this._renderer._setProperty("_doFill", true), (e3 = this._renderer).fill.apply(e3, arguments), this;
      }, s2.default.prototype.noFill = function() {
        return this._renderer._setProperty("_doFill", false), this;
      }, s2.default.prototype.noStroke = function() {
        return this._renderer._setProperty("_doStroke", false), this;
      }, s2.default.prototype.stroke = function() {
        var e3;
        return this._renderer._setProperty("_strokeSet", true), this._renderer._setProperty("_doStroke", true), (e3 = this._renderer).stroke.apply(e3, arguments), this;
      }, s2.default.prototype.erase = function() {
        return this._renderer.erase(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 255, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 255), this;
      }, s2.default.prototype.noErase = function() {
        return this._renderer.noErase(), this;
      };
      var n = s2.default;
      r.default = n;
    }, { "../core/constants": 272, "../core/main": 283, "./p5.Color": 270, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 272: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.QUADRATIC = r.LINEAR = r._CTX_MIDDLE = r._DEFAULT_LEADMULT = r._DEFAULT_TEXT_FILL = r.WORD = r.CHAR = r.BOLDITALIC = r.BOLD = r.ITALIC = r.NORMAL = r.BLUR = r.ERODE = r.DILATE = r.POSTERIZE = r.INVERT = r.OPAQUE = r.GRAY = r.THRESHOLD = r.BURN = r.DODGE = r.SOFT_LIGHT = r.HARD_LIGHT = r.OVERLAY = r.REPLACE = r.SCREEN = r.MULTIPLY = r.EXCLUSION = r.SUBTRACT = r.DIFFERENCE = r.LIGHTEST = r.DARKEST = r.ADD = r.REMOVE = r.BLEND = r.UP_ARROW = r.TAB = r.SHIFT = r.RIGHT_ARROW = r.RETURN = r.OPTION = r.LEFT_ARROW = r.ESCAPE = r.ENTER = r.DOWN_ARROW = r.DELETE = r.CONTROL = r.BACKSPACE = r.ALT = r.AUTO = r.HSL = r.HSB = r.RGB = r.MITER = r.BEVEL = r.ROUND = r.SQUARE = r.PROJECT = r.PIE = r.CHORD = r.OPEN = r.CLOSE = r.TESS = r.QUAD_STRIP = r.QUADS = r.TRIANGLE_STRIP = r.TRIANGLE_FAN = r.TRIANGLES = r.LINE_LOOP = r.LINE_STRIP = r.LINES = r.POINTS = r.BASELINE = r.BOTTOM = r.TOP = r.CENTER = r.LEFT = r.RIGHT = r.RADIUS = r.CORNERS = r.CORNER = r.RAD_TO_DEG = r.DEG_TO_RAD = r.RADIANS = r.DEGREES = r.TWO_PI = r.TAU = r.QUARTER_PI = r.PI = r.HALF_PI = r.WAIT = r.TEXT = r.MOVE = r.HAND = r.CROSS = r.ARROW = r.WEBGL2 = r.WEBGL = r.P2D = r.VERSION = void 0, r.RGBA = r.HALF_FLOAT = r.FLOAT = r.UNSIGNED_INT = r.UNSIGNED_BYTE = r.COVER = r.CONTAIN = r.FALLBACK = r.LABEL = r.AXES = r.GRID = r._DEFAULT_FILL = r._DEFAULT_STROKE = r.PORTRAIT = r.LANDSCAPE = r.SMOOTH = r.FLAT = r.MIRROR = r.CLAMP = r.REPEAT = r.NEAREST = r.IMAGE = r.IMMEDIATE = r.TEXTURE = r.FILL = r.STROKE = r.CURVE = r.BEZIER = void 0;
      var o = Math.PI, n = (r.VERSION = "1.11.8", r.P2D = "p2d", r.WEBGL = "webgl", r.WEBGL2 = "webgl2", r.ARROW = "default", r.CROSS = "crosshair", r.HAND = "pointer", r.MOVE = "move", r.TEXT = "text", r.WAIT = "wait", o / 2), n = (r.HALF_PI = n, o), n = (r.PI = n, o / 4), n = (r.QUARTER_PI = n, 2 * o), n = (r.TAU = n, 2 * o), n = (r.TWO_PI = n, r.DEGREES = "degrees", r.RADIANS = "radians", o / 180), n = (r.DEG_TO_RAD = n, 180 / o);
      r.RAD_TO_DEG = n, r.CORNER = "corner", r.CORNERS = "corners", r.RADIUS = "radius", r.RIGHT = "right", r.LEFT = "left", r.CENTER = "center", r.TOP = "top", r.BOTTOM = "bottom", r.BASELINE = "alphabetic", r.POINTS = 0, r.LINES = 1, r.LINE_STRIP = 3, r.LINE_LOOP = 2, r.TRIANGLES = 4, r.TRIANGLE_FAN = 6, r.TRIANGLE_STRIP = 5, r.QUADS = "quads", r.QUAD_STRIP = "quad_strip", r.TESS = "tess", r.CLOSE = "close", r.OPEN = "open", r.CHORD = "chord", r.PIE = "pie", r.PROJECT = "square", r.SQUARE = "butt", r.ROUND = "round", r.BEVEL = "bevel", r.MITER = "miter", r.RGB = "rgb", r.HSB = "hsb", r.HSL = "hsl", r.AUTO = "auto", r.ALT = 18, r.BACKSPACE = 8, r.CONTROL = 17, r.DELETE = 46, r.DOWN_ARROW = 40, r.ENTER = 13, r.ESCAPE = 27, r.LEFT_ARROW = 37, r.OPTION = 18, r.RETURN = 13, r.RIGHT_ARROW = 39, r.SHIFT = 16, r.TAB = 9, r.UP_ARROW = 38, r.BLEND = "source-over", r.REMOVE = "destination-out", r.ADD = "lighter", r.DARKEST = "darken", r.LIGHTEST = "lighten", r.DIFFERENCE = "difference", r.SUBTRACT = "subtract", r.EXCLUSION = "exclusion", r.MULTIPLY = "multiply", r.SCREEN = "screen", r.REPLACE = "copy", r.OVERLAY = "overlay", r.HARD_LIGHT = "hard-light", r.SOFT_LIGHT = "soft-light", r.DODGE = "color-dodge", r.BURN = "color-burn", r.THRESHOLD = "threshold", r.GRAY = "gray", r.OPAQUE = "opaque", r.INVERT = "invert", r.POSTERIZE = "posterize", r.DILATE = "dilate", r.ERODE = "erode", r.BLUR = "blur", r.NORMAL = "normal", r.ITALIC = "italic", r.BOLD = "bold", r.BOLDITALIC = "bold italic", r.CHAR = "CHAR", r.WORD = "WORD", r._DEFAULT_TEXT_FILL = "#000000", r._DEFAULT_LEADMULT = 1.25, r._CTX_MIDDLE = "middle", r.LINEAR = "linear", r.QUADRATIC = "quadratic", r.BEZIER = "bezier", r.CURVE = "curve", r.STROKE = "stroke", r.FILL = "fill", r.TEXTURE = "texture", r.IMMEDIATE = "immediate", r.IMAGE = "image", r.NEAREST = "nearest", r.REPEAT = "repeat", r.CLAMP = "clamp", r.MIRROR = "mirror", r.FLAT = "flat", r.SMOOTH = "smooth", r.LANDSCAPE = "landscape", r.PORTRAIT = "portrait", r._DEFAULT_STROKE = "#000000", r._DEFAULT_FILL = "#FFFFFF", r.GRID = "grid", r.AXES = "axes", r.LABEL = "label", r.FALLBACK = "fallback", r.CONTAIN = "contain", r.COVER = "cover", r.UNSIGNED_BYTE = "unsigned-byte", r.UNSIGNED_INT = "unsigned-int", r.FLOAT = "float", r.HALF_FLOAT = "half-float";
      r.RGBA = "rgba";
    }, {}], 273: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.search"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.search"), e2("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (s2 = e2("./main")) && s2.__esModule ? s2 : { default: s2 }, s2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("./constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      var l = [s2.ARROW, s2.CROSS, s2.HAND, s2.MOVE, s2.TEXT, s2.WAIT], u = (n.default.prototype._frameRate = 0, n.default.prototype._lastFrameTime = window.performance.now(), n.default.prototype._targetFrameRate = 60, window.print), c = false;
      function d() {
        return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
      }
      function h() {
        return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
      }
      n.default.prototype.print = function() {
        var e3;
        arguments.length ? (e3 = console).log.apply(e3, arguments) : c || (u(), window.confirm("You just tried to print the webpage. Do you want to prevent this from running again?") && (c = true));
      }, n.default.prototype.frameCount = 0, n.default.prototype.deltaTime = 0, n.default.prototype.focused = document.hasFocus(), n.default.prototype.cursor = function(e3, t2, r2) {
        var o3, n2 = "auto", s3 = this._curElement.elt;
        l.includes(e3) ? n2 = e3 : "string" == typeof e3 && (o3 = "", t2 && r2 && "number" == typeof t2 && "number" == typeof r2 && (o3 = "".concat(t2, " ").concat(r2)), n2 = "http://" === e3.substring(0, 7) || "https://" === e3.substring(0, 8) || /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e3) ? "url(".concat(e3, ") ").concat(o3, ", auto") : e3), s3.style.cursor = n2;
      }, n.default.prototype.frameRate = function(e3) {
        return n.default._validateParameters("frameRate", arguments), "number" != typeof e3 || e3 < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e3), 0 === e3 && this._setProperty("_frameRate", e3), this);
      }, n.default.prototype.getFrameRate = function() {
        return this.frameRate();
      }, n.default.prototype.setFrameRate = function(e3) {
        return this.frameRate(e3);
      }, n.default.prototype.getTargetFrameRate = function() {
        return this._targetFrameRate;
      }, n.default.prototype.noCursor = function() {
        this._curElement.elt.style.cursor = "none";
      }, n.default.prototype.webglVersion = s2.P2D, n.default.prototype.displayWidth = screen.width, n.default.prototype.displayHeight = screen.height, n.default.prototype.windowWidth = 0, n.default.prototype.windowHeight = 0, n.default.prototype._onresize = function(e3) {
        this._setProperty("windowWidth", d()), this._setProperty("windowHeight", h());
        var t2 = this._isGlobal ? window : this;
        "function" != typeof t2.windowResized || void 0 === (t2 = t2.windowResized(e3)) || t2 || e3.preventDefault();
      }, n.default.prototype._updateWindowSize = function() {
        this._setProperty("windowWidth", d()), this._setProperty("windowHeight", h());
      }, n.default.prototype.width = 0, n.default.prototype.height = 0, n.default.prototype.fullscreen = function(e3) {
        if (n.default._validateParameters("fullscreen", arguments), void 0 === e3) return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
        if (e3) {
          e3 = document.documentElement;
          if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)) throw new Error("Fullscreen not enabled in this browser.");
          e3.requestFullscreen ? e3.requestFullscreen() : e3.mozRequestFullScreen ? e3.mozRequestFullScreen() : e3.webkitRequestFullscreen ? e3.webkitRequestFullscreen() : e3.msRequestFullscreen && e3.msRequestFullscreen();
        } else document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
      }, n.default.prototype.pixelDensity = function(e3) {
        var t2;
        return n.default._validateParameters("pixelDensity", arguments), "number" == typeof e3 ? (e3 !== this._pixelDensity && (this._pixelDensity = this._maxAllowedPixelDimensions = e3), (t2 = this).resizeCanvas(this.width, this.height, true)) : t2 = this._pixelDensity, t2;
      }, n.default.prototype.displayDensity = function() {
        return window.devicePixelRatio;
      }, n.default.prototype.getURL = function() {
        return location.href;
      }, n.default.prototype.getURLPath = function() {
        return location.pathname.split("/").filter(function(e3) {
          return "" !== e3;
        });
      }, n.default.prototype.getURLParams = function() {
        for (var e3, t2 = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r2 = {}; null != (e3 = t2.exec(location.search)); ) e3.index === t2.lastIndex && t2.lastIndex++, r2[e3[1]] = e3[2];
        return r2;
      };
      e2 = n.default;
      r.default = e2;
    }, { "./constants": 272, "./main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.search": 205, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 274: [function(r, e2, t) {
      r("core-js/modules/es.symbol"), r("core-js/modules/es.symbol.description"), r("core-js/modules/es.symbol.iterator"), r("core-js/modules/es.array.concat"), r("core-js/modules/es.array.filter"), r("core-js/modules/es.array.for-each"), r("core-js/modules/es.array.includes"), r("core-js/modules/es.array.iterator"), r("core-js/modules/es.array.join"), r("core-js/modules/es.array.map"), r("core-js/modules/es.array.slice"), r("core-js/modules/es.array.some"), r("core-js/modules/es.function.name"), r("core-js/modules/es.object.assign"), r("core-js/modules/es.object.get-own-property-names"), r("core-js/modules/es.object.keys"), r("core-js/modules/es.object.to-string"), r("core-js/modules/es.regexp.constructor"), r("core-js/modules/es.regexp.exec"), r("core-js/modules/es.regexp.to-string"), r("core-js/modules/es.string.iterator"), r("core-js/modules/es.string.match"), r("core-js/modules/es.string.replace"), r("core-js/modules/es.string.split"), r("core-js/modules/es.string.starts-with"), r("core-js/modules/web.dom-collections.for-each"), r("core-js/modules/web.dom-collections.iterator"), r("core-js/modules/es.symbol"), r("core-js/modules/es.symbol.description"), r("core-js/modules/es.symbol.iterator"), r("core-js/modules/es.array.concat"), r("core-js/modules/es.array.filter"), r("core-js/modules/es.array.for-each"), r("core-js/modules/es.array.includes"), r("core-js/modules/es.array.iterator"), r("core-js/modules/es.array.join"), r("core-js/modules/es.array.map"), r("core-js/modules/es.array.slice"), r("core-js/modules/es.array.some"), r("core-js/modules/es.function.name"), r("core-js/modules/es.object.assign"), r("core-js/modules/es.object.get-own-property-names"), r("core-js/modules/es.object.keys"), r("core-js/modules/es.object.to-string"), r("core-js/modules/es.regexp.constructor"), r("core-js/modules/es.regexp.exec"), r("core-js/modules/es.regexp.to-string"), r("core-js/modules/es.string.iterator"), r("core-js/modules/es.string.match"), r("core-js/modules/es.string.replace"), r("core-js/modules/es.string.split"), r("core-js/modules/es.string.starts-with"), r("core-js/modules/web.dom-collections.for-each"), r("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(t, "__esModule", { value: true }), t.default = void 0;
      var o = (l = r("../main")) && l.__esModule ? l : { default: l };
      r("../internationalization");
      function n(r2, o3) {
        o3 = o3 || console.log.bind(console), s2 || i(), s2.some(function(e3) {
          var t2;
          if (r2.message && null !== r2.message.match("\\W?".concat(e3.name, "\\W"))) return t2 = "function" === e3.type ? "".concat(e3.name, "()") : e3.name, o3("Did you just try to use p5.js's ".concat(t2, " ").concat(e3.type, "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(a2)), true;
        });
      }
      var s2 = null, i = null, a2 = (o.default._friendlyError = o.default._checkForUserDefinedFunctions = o.default._fesErrorMonitor = function() {
      }, s2 = null, "https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), i = function() {
        function e3(r2) {
          return Object.getOwnPropertyNames(r2).filter(function(e4) {
            return "_" !== e4[0] && (!(e4 in t2) && (t2[e4] = true));
          }).map(function(e4) {
            var t3 = "function" == typeof r2[e4] ? "function" : e4 === e4.toUpperCase() ? "constant" : "variable";
            return { name: e4, type: t3 };
          });
        }
        var t2 = {};
        (s2 = [].concat(e3(o.default.prototype), e3(r("../constants")))).sort(function(e4, t3) {
          return t3.name.length - e4.name.length;
        });
      }, l = (o.default.prototype._helpForMisusedAtTopLevelCode = n, "complete" !== document.readyState && (window.addEventListener("error", n, false), window.addEventListener("load", function() {
        window.removeEventListener("error", n, false);
      })), o.default);
      t.default = l;
    }, { "../constants": 272, "../internationalization": 281, "../main": 283, "./browser_errors": void 0, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.some": 170, "core-js/modules/es.function.name": 174, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.get-own-property-names": 187, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.constructor": 194, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.match": 201, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.starts-with": 207, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 275: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var o = (o = e2("../main")) && o.__esModule ? o : { default: o };
      e2("../internationalization");
      o.default._friendlyFileLoadError = function() {
      };
      e2 = o.default;
      r.default = e2;
    }, { "../internationalization": 281, "../main": 283 }], 276: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = C(e2("../main"));
      e2("../internationalization");
      O(e2("../constants"));
      function k() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), k = function() {
          return e3;
        }, e3);
      }
      function O(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = k();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3, n2 = {}, s2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) Object.prototype.hasOwnProperty.call(e3, r2) && ((o3 = s2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (o3.get || o3.set) ? Object.defineProperty(n2, r2, o3) : n2[r2] = e3[r2]);
        return n2.default = e3, t2 && t2.set(e3, n2), n2;
      }
      function C(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      n.default._fesCodeReader = function() {
      };
      var R = n.default;
      r.default = R;
    }, { "../constants": 272, "../internationalization": 281, "../main": 283, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.constructor": 194, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.match": 201, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.trim": 209, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 277: [function(e2, t, r) {
      e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../main")) && e2.__esModule ? e2 : { default: e2 };
      function o() {
        var t2 = /(^|@)\S+:\d+/, r2 = /^\s*at .*(\S+:\d+|\(native\))/m, o3 = /^(eval@)?(\[native code])?$/;
        return { parse: function(e3) {
          return void 0 !== e3.stacktrace || void 0 !== e3["opera#sourceloc"] ? this.parseOpera(e3) : e3.stack && e3.stack.match(r2) ? this.parseV8OrIE(e3) : e3.stack ? this.parseFFOrSafari(e3) : void 0;
        }, extractLocation: function(e3) {
          return -1 === e3.indexOf(":") ? [e3] : [(e3 = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e3.replace(/[()]/g, "")))[1], e3[2] || void 0, e3[3] || void 0];
        }, parseV8OrIE: function(e3) {
          return e3.stack.split("\n").filter(function(e4) {
            return !!e4.match(r2);
          }, this).map(function(e4) {
            var t3 = (e4 = -1 < e4.indexOf("(eval ") ? e4.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, "") : e4).replace(/^\s+/, "").replace(/\(eval code/g, "("), r3 = t3.match(/ (\((.+):(\d+):(\d+)\)$)/), t3 = (t3 = r3 ? t3.replace(r3[0], "") : t3).split(/\s+/).slice(1), r3 = this.extractLocation(r3 ? r3[1] : t3.pop());
            return { functionName: t3.join(" ") || void 0, fileName: -1 < ["eval", "<anonymous>"].indexOf(r3[0]) ? void 0 : r3[0], lineNumber: r3[1], columnNumber: r3[2], source: e4 };
          }, this);
        }, parseFFOrSafari: function(e3) {
          return e3.stack.split("\n").filter(function(e4) {
            return !e4.match(o3);
          }, this).map(function(e4) {
            var t3, r3;
            return -1 === (e4 = -1 < e4.indexOf(" > eval") ? e4.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1") : e4).indexOf("@") && -1 === e4.indexOf(":") ? { functionName: e4 } : { functionName: (r3 = e4.match(t3 = /((.*".+"[^@]*)?[^@]*)(?:@)/)) && r3[1] ? r3[1] : void 0, fileName: (r3 = this.extractLocation(e4.replace(t3, "")))[0], lineNumber: r3[1], columnNumber: r3[2], source: e4 };
          }, this);
        }, parseOpera: function(e3) {
          return !e3.stacktrace || -1 < e3.message.indexOf("\n") && e3.message.split("\n").length > e3.stacktrace.split("\n").length ? this.parseOpera9(e3) : e3.stack ? this.parseOpera11(e3) : this.parseOpera10(e3);
        }, parseOpera9: function(e3) {
          for (var t3 = /Line (\d+).*script (?:in )?(\S+)/i, r3 = e3.message.split("\n"), o4 = [], n = 2, s2 = r3.length; n < s2; n += 2) {
            var i = t3.exec(r3[n]);
            i && o4.push({ fileName: i[2], lineNumber: i[1], source: r3[n] });
          }
          return o4;
        }, parseOpera10: function(e3) {
          for (var t3 = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, r3 = e3.stacktrace.split("\n"), o4 = [], n = 0, s2 = r3.length; n < s2; n += 2) {
            var i = t3.exec(r3[n]);
            i && o4.push({ functionName: i[3] || void 0, fileName: i[2], lineNumber: i[1], source: r3[n] });
          }
          return o4;
        }, parseOpera11: function(e3) {
          return e3.stack.split("\n").filter(function(e4) {
            return !!e4.match(t2) && !e4.match(/^Error created at/);
          }, this).map(function(e4) {
            var t3, r3 = e4.split("@"), o4 = this.extractLocation(r3.pop()), r3 = r3.shift() || "";
            return { functionName: r3.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0, args: void 0 === (t3 = r3.match(/\(([^)]*)\)/) ? r3.replace(/^[^(]+\(([^)]*)\)$/, "$1") : t3) || "[arguments not available]" === t3 ? void 0 : t3.split(","), fileName: o4[0], lineNumber: o4[1], columnNumber: o4[2], source: e4 };
          }, this);
        } };
      }
      e2.default._getErrorStackParser = function() {
        return new o();
      };
      e2 = e2.default;
      r.default = e2;
    }, { "../main": 283, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.match": 201, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206 }], 278: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (n = e2("../main")) && n.__esModule ? n : { default: n };
      (function(e3) {
        if (e3 && e3.__esModule) return;
        if (null === e3 || "object" !== a2(e3) && "function" != typeof e3) return;
        var t2 = i();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
      })(e2("../constants")), e2("../internationalization");
      function i() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), i = function() {
          return e3;
        }, e3);
      }
      function a2(e3) {
        return (a2 = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      n.default._validateParameters = n.default._clearValidateParamsCache = function() {
      };
      e2 = n.default;
      r.default = e2;
    }, { "../../../docs/parameterData.json": void 0, "../constants": 272, "../internationalization": 281, "../main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.last-index-of": 167, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.function.name": 174, "core-js/modules/es.map": 175, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.set": 197, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 279: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var a2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = l();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("./constants"));
      function l() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), l = function() {
          return e3;
        }, e3);
      }
      r.default = { modeAdjust: function(e3, t2, r2, o3, n) {
        var s2;
        return n === a2.CORNER ? s2 = { x: e3, y: t2, w: Math.abs(r2), h: Math.abs(o3) } : n === a2.CORNERS ? s2 = { x: Math.min(e3, r2), y: Math.min(t2, o3), w: Math.abs(r2 - e3), h: Math.abs(o3 - t2) } : n === a2.RADIUS ? s2 = { x: e3 - (r2 = Math.abs(r2)), y: t2 - (o3 = Math.abs(o3)), w: 2 * r2, h: 2 * o3 } : n === a2.CENTER && (s2 = { x: e3 - 0.5 * (r2 = Math.abs(r2)), y: t2 - 0.5 * (o3 = Math.abs(o3)), w: r2, h: o3 }), s2;
      } };
    }, { "./constants": 272, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 280: [function(e2, t, r) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator");
      var o = (n = e2("../core/main")) && n.__esModule ? n : { default: n };
      e2("./internationalization");
      var n = Promise.resolve();
      Promise.all([new Promise(function(e3, t2) {
        "complete" === document.readyState ? e3() : window.addEventListener("load", e3, false);
      }), n]).then(function() {
        var e3;
        void 0 !== window._setupDone ? console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import") : window.mocha || (e3 = new Event("p5Ready"), window.dispatchEvent(e3), (window.setup && "function" == typeof window.setup || window.draw && "function" == typeof window.draw) && !o.default.instance && new o.default());
      });
    }, { "../core/main": 283, "./internationalization": 281, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.string.iterator": 200, "core-js/modules/web.dom-collections.iterator": 246 }], 281: [function(e2, t, r) {
      e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.setTranslatorLanguage = r.currentTranslatorLanguage = r.availableTranslatorLanguages = r.initialize = r.translator = void 0;
      var n, s2, o = a2(e2("i18next")), i = a2(e2("i18next-browser-languagedetector"));
      function a2(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function l(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      var u = function() {
        function r2(e4, t3) {
          if (!(this instanceof r2)) throw new TypeError("Cannot call a class as a function");
          this.init(e4, t3);
        }
        var e3, t2;
        return e3 = r2, (t2 = [{ key: "fetchWithTimeout", value: function(e4, t3) {
          var r3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 2e3;
          return Promise.race([fetch(e4, t3), new Promise(function(e5, t4) {
            return setTimeout(function() {
              return t4(new Error("timeout"));
            }, r3);
          })]);
        } }, { key: "init", value: function(e4) {
          var t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
          this.services = e4, this.options = t3;
        } }, { key: "read", value: function(e4, t3, r3) {
          var o3 = this.options.loadPath;
          e4 === this.options.fallback ? r3(null, n[e4][t3]) : s2.includes(e4) ? (o3 = this.services.interpolator.interpolate(o3, { lng: e4, ns: t3 }), this.loadUrl(o3, r3)) : r3("Not found", false);
        } }, { key: "loadUrl", value: function(t3, r3) {
          this.fetchWithTimeout(t3).then(function(e4) {
            if (e4.ok) return e4.json();
            throw new Error("failed loading ".concat(t3));
          }, function() {
            throw new Error("failed loading ".concat(t3));
          }).then(function(e4) {
            return r3(null, e4);
          }).catch(r3);
        } }]) && l(e3.prototype, t2), r2;
      }();
      u.type = "backend", r.translator = function(e3, t2) {
        console.debug("p5.js translator called before translations were loaded"), o.default.t(e3, t2);
      }, r.initialize = function() {
        return o.default.use(i.default).use(u).init({ fallbackLng: "en", nestingPrefix: "$tr(", nestingSuffix: ")", defaultNS: "translation", returnEmptyString: false, interpolation: { escapeValue: false }, detection: { checkWhitelist: false, order: ["querystring", "navigator", "htmlTag", "path", "subdomain"], caches: [] }, backend: { fallback: "en", loadPath: "https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json" }, partialBundledLanguages: true, resources: n }).then(function(e3) {
          r.translator = e3;
        }, function(e3) {
          return console.debug("Translations failed to load (".concat(e3, ")"));
        });
      }, r.availableTranslatorLanguages = function() {
        return o.default.languages;
      }, r.currentTranslatorLanguage = function(e3) {
        return o.default.language;
      };
      r.setTranslatorLanguage = function(e3) {
        return o.default.changeLanguage(e3 || void 0, function(e4) {
          return console.debug("Translations failed to load (".concat(e4, ")"));
        });
      };
    }, { "../../translations": void 0, "../../translations/dev": void 0, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.split": 206, "core-js/modules/web.dom-collections.iterator": 246, i18next: 3, "i18next-browser-languagedetector": 3 }], 282: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.pushStyle = function() {
        throw new Error("pushStyle() not used, see push()");
      }, e2.default.prototype.popStyle = function() {
        throw new Error("popStyle() not used, see pop()");
      }, e2.default.prototype.popMatrix = function() {
        throw new Error("popMatrix() not used, see pop()");
      }, e2.default.prototype.pushMatrix = function() {
        throw new Error("pushMatrix() not used, see push()");
      };
      e2 = e2.default;
      r.default = e2;
    }, { "./main": 283 }], 283: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-own-property-names"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-own-property-names"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0, e2("./shim");
      var n = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("./constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      var l, u = function() {
        function g(e4, t3) {
          var d = this;
          if (!(this instanceof g)) throw new TypeError("Cannot call a class as a function");
          this._isGlobal = !e4, this._setupDone = false, this._preloadDone = false, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._maxAllowedPixelDimensions = 0, this._userNode = t3, this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, this._preloadCount = 0, this._loop = true, this._startListener = null, this._initializeInstanceVariables(), this._defaultCanvasSize = { width: 100, height: 100 }, this._events = { mousemove: null, mousedown: null, mouseup: null, dragend: null, dragover: null, click: null, dblclick: null, mouseover: null, mouseout: null, keydown: null, keyup: null, keypress: null, touchstart: null, touchmove: null, touchend: null, resize: null, blur: null }, this._millisStart = -1, this._recording = false, this.touchstart = false, this.touchend = false, this._lcg_random_state = null, this._gaussian_previous = false, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
          var t3 = Object.getOwnPropertyNames(g.prototype._registeredMethods), r2 = true, o3 = false, n2 = void 0;
          try {
            for (var s3, i2 = t3[Symbol.iterator](); !(r2 = (s3 = i2.next()).done); r2 = true) {
              var a3 = s3.value;
              this._registeredMethods[a3] = g.prototype._registeredMethods[a3].slice();
            }
          } catch (e5) {
            o3 = true, n2 = e5;
          } finally {
            try {
              r2 || null == i2.return || i2.return();
            } finally {
              if (o3) throw n2;
            }
          }
          window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), g.prototype.callRegisteredHooksFor = function(t4) {
            var e5 = this || g.prototype, r3 = this._isGlobal ? window : this;
            if (e5._registeredMethods.hasOwnProperty(t4)) {
              var e5 = e5._registeredMethods[t4], o4 = true, t4 = false, n3 = void 0;
              try {
                for (var s4, i3 = e5[Symbol.iterator](); !(o4 = (s4 = i3.next()).done); o4 = true) {
                  var a4 = s4.value;
                  "function" == typeof a4 && a4.call(r3);
                }
              } catch (e6) {
                t4 = true, n3 = e6;
              } finally {
                try {
                  o4 || null == i3.return || i3.return();
                } finally {
                  if (t4) throw n3;
                }
              }
            }
          }, this._start = function() {
            d._userNode && "string" == typeof d._userNode && (d._userNode = document.getElementById(d._userNode));
            var e5 = d._isGlobal ? window : d;
            if (e5.preload) {
              d.callRegisteredHooksFor("beforePreload");
              var t4, r3 = document.getElementById(d._loadingScreenId), o4 = (r3 || ((r3 = document.createElement("div")).innerHTML = "Loading...", r3.style.position = "absolute", r3.id = d._loadingScreenId, (d._userNode || document.body).appendChild(r3)), d._preloadMethods);
              for (t4 in o4) {
                o4[t4] = o4[t4] || g;
                var n3 = o4[t4];
                n3 !== g.prototype && n3 !== g || (d._isGlobal && (window[t4] = d._wrapPreload(d, t4)), n3 = d), d._registeredPreloadMethods[t4] = n3[t4], n3[t4] = d._wrapPreload(n3, t4);
              }
              e5.preload(), d._runIfPreloadsAreDone();
            } else d._setup(), d._recording || d._draw();
          }, this._runIfPreloadsAreDone = function() {
            var e5, t4 = this._isGlobal ? window : this;
            0 === t4._preloadCount && ((e5 = document.getElementById(t4._loadingScreenId)) && e5.parentNode.removeChild(e5), this.callRegisteredHooksFor("afterPreload"), this._setupDone || (this._lastTargetFrameTime = window.performance.now(), this._lastRealFrameTime = window.performance.now(), t4._setup(), this._recording || t4._draw()));
          }, this._decrementPreload = function() {
            var e5 = this._isGlobal ? window : this;
            e5._preloadDone || "function" != typeof e5.preload || (e5._setProperty("_preloadCount", e5._preloadCount - 1), e5._runIfPreloadsAreDone());
          }, this._wrapPreload = function(o4, n3) {
            var s4 = this;
            return function() {
              s4._incrementPreload();
              for (var e5 = arguments.length, t4 = new Array(e5), r3 = 0; r3 < e5; r3++) t4[r3] = arguments[r3];
              return s4._registeredPreloadMethods[n3].apply(o4, t4);
            };
          }, this._incrementPreload = function() {
            var e5 = this._isGlobal ? window : this;
            e5._preloadDone || e5._setProperty("_preloadCount", e5._preloadCount + 1);
          }, this._setup = function() {
            d.callRegisteredHooksFor("beforeSetup"), d.createCanvas(d._defaultCanvasSize.width, d._defaultCanvasSize.height, "p2d");
            var e5 = d._isGlobal ? window : d;
            if ("function" == typeof e5.preload) for (var t4 in d._preloadMethods) e5[t4] = d._preloadMethods[t4][t4], e5[t4] && d && (e5[t4] = e5[t4].bind(d));
            d._millisStart = window.performance.now(), e5._preloadDone = true, "function" == typeof e5.setup && e5.setup();
            var r3 = document.getElementsByTagName("canvas"), o4 = true, n3 = false, s4 = void 0;
            try {
              for (var i3, a4 = r3[Symbol.iterator](); !(o4 = (i3 = a4.next()).done); o4 = true) {
                var l3 = i3.value;
                "true" === l3.dataset.hidden && (l3.style.visibility = "", delete l3.dataset.hidden);
              }
            } catch (e6) {
              n3 = true, s4 = e6;
            } finally {
              try {
                o4 || null == a4.return || a4.return();
              } finally {
                if (n3) throw s4;
              }
            }
            d._lastTargetFrameTime = window.performance.now(), d._lastRealFrameTime = window.performance.now(), d._setupDone = true, (d._accessibleOutputs.grid || d._accessibleOutputs.text) && d._updateAccsOutput(), d.callRegisteredHooksFor("afterSetup");
          }, this._draw = function(e5) {
            var e5 = e5 || window.performance.now(), t4 = e5 - d._lastTargetFrameTime, r3 = 1e3 / d._targetFrameRate;
            (!d._loop || r3 - 5 <= t4) && (d.deltaTime = e5 - d._lastRealFrameTime, d._setProperty("deltaTime", d.deltaTime), d._frameRate = 1e3 / d.deltaTime, d.redraw(), d._lastTargetFrameTime = Math.max(d._lastTargetFrameTime + r3, e5), d._lastRealFrameTime = e5, void 0 !== d._updateMouseCoords && (d._updateMouseCoords(), d._setProperty("movedX", 0), d._setProperty("movedY", 0))), d._loop && (d._requestAnimId = window.requestAnimationFrame(d._draw));
          }, this._setProperty = function(e5, t4) {
            d[e5] = t4, d._isGlobal && (window[e5] = t4);
          }, this.remove = function() {
            d._startListener && window.removeEventListener("load", d._startListener, false);
            var t4 = document.getElementById(d._loadingScreenId);
            if (t4 && (t4.parentNode.removeChild(t4), d._incrementPreload()), d._curElement) {
              for (var e5 in d._loop = false, d._requestAnimId && window.cancelAnimationFrame(d._requestAnimId), d._events) window.removeEventListener(e5, d._events[e5]);
              var r3 = true, t4 = false, o4 = void 0;
              try {
                for (var n3, s4 = d._elements[Symbol.iterator](); !(r3 = (n3 = s4.next()).done); r3 = true) {
                  var i3, a4 = n3.value;
                  for (i3 in a4.elt && a4.elt.parentNode && a4.elt.parentNode.removeChild(a4.elt), a4._events) a4.elt.removeEventListener(i3, a4._events[i3]);
                }
              } catch (e6) {
                t4 = true, o4 = e6;
              } finally {
                try {
                  r3 || null == s4.return || s4.return();
                } finally {
                  if (t4) throw o4;
                }
              }
              var l3 = d;
              d._registeredMethods.remove.forEach(function(e6) {
                void 0 !== e6 && e6.call(l3);
              });
            }
            if (d._isGlobal) {
              for (var u3 in g.prototype) try {
                delete window[u3];
              } catch (e6) {
                window[u3] = void 0;
              }
              for (var c2 in d) if (d.hasOwnProperty(c2)) try {
                delete window[c2];
              } catch (e6) {
                window[c2] = void 0;
              }
              g.instance = null;
            }
          }, this._updateWindowSize();
          var l2, u2, c = this._createFriendlyGlobalFunctionBinder();
          if (this._isGlobal) {
            for (var h in g.instance = this, g.prototype) "function" == typeof g.prototype[h] ? (l2 = h.substring(2), this._events.hasOwnProperty(l2) || (Math.hasOwnProperty(h) && Math[h] === g.prototype[h] ? c(h, g.prototype[h]) : c(h, g.prototype[h].bind(this)))) : c(h, g.prototype[h]);
            for (var f in this) this.hasOwnProperty(f) && c(f, this[f]);
          } else e4(this), g._checkForUserDefinedFunctions(this);
          for (u2 in this._updateWindowSize(), this.callRegisteredHooksFor("init"), this._setupPromisePreloads(), this._events) {
            var p = this["_on".concat(u2)];
            p && (p = p.bind(this), window.addEventListener(u2, p, { passive: false }), this._events[u2] = p);
          }
          function m() {
            d._setProperty("focused", true);
          }
          function y() {
            d._setProperty("focused", false);
          }
          window.addEventListener("focus", m), window.addEventListener("blur", y), this.registerMethod("remove", function() {
            window.removeEventListener("focus", m), window.removeEventListener("blur", y);
          }), "complete" === document.readyState ? this._start() : (this._startListener = this._start.bind(this), window.addEventListener("load", this._startListener, false));
        }
        var e3, t2;
        return e3 = g, (t2 = [{ key: "_initializeInstanceVariables", value: function() {
          this._accessibleOutputs = { text: false, grid: false, textLabel: false, gridLabel: false }, this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = n.RGB, this._colorMaxes = { rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1] }, this._downKeys = {};
        } }, { key: "registerPreloadMethod", value: function(e4, t3) {
          g.prototype._preloadMethods.hasOwnProperty(e4) || (g.prototype._preloadMethods[e4] = t3);
        } }, { key: "registerMethod", value: function(e4, t3) {
          var r2 = this || g.prototype;
          r2._registeredMethods.hasOwnProperty(e4) || (r2._registeredMethods[e4] = []), r2._registeredMethods[e4].push(t3);
        } }, { key: "unregisterMethod", value: function(e4, t3) {
          var r2 = this || g.prototype;
          if (r2._registeredMethods.hasOwnProperty(e4)) {
            for (var o3 = r2._registeredMethods[e4], n2 = [], s3 = 0; s3 < o3.length; s3++) o3[s3] === t3 && n2.push(s3);
            for (var i2 = n2.length - 1; 0 <= i2; i2--) o3.splice(n2[i2], 1);
          }
        } }, { key: "_createFriendlyGlobalFunctionBinder", value: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r2 = e4.globalObject || window;
          e4.log || console.log.bind(console);
          return function(e5, t3) {
            g.disableFriendlyErrors, r2[e5] = t3;
          };
        } }]) && s2(e3.prototype, t2), g;
      }();
      for (l in u.instance = null, u.disableFriendlyErrors = false, n) u.prototype[l] = n[l];
      u.VERSION = n.VERSION, u.prototype._preloadMethods = { loadJSON: u.prototype, loadImage: u.prototype, loadStrings: u.prototype, loadXML: u.prototype, loadBytes: u.prototype, loadTable: u.prototype, loadFont: u.prototype, loadModel: u.prototype, loadShader: u.prototype }, u.prototype._registeredMethods = { init: [], pre: [], post: [], remove: [] }, u.prototype._registeredPreloadMethods = {}, r.default = u;
    }, { "./constants": 272, "./shim": 294, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.splice": 171, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-own-property-names": 187, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 284: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      n.default.Element = function() {
        function r2(e4, t3) {
          if (!(this instanceof r2)) throw new TypeError("Cannot call a class as a function");
          this.elt = e4, this._pInst = this._pixelsState = t3, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
        }
        var e3, t2, o;
        return e3 = r2, o = [{ key: "_adjustListener", value: function(e4, t3, r3) {
          return false === t3 ? n.default.Element._detachListener(e4, r3) : n.default.Element._attachListener(e4, t3, r3), this;
        } }, { key: "_attachListener", value: function(e4, t3, r3) {
          r3._events[e4] && n.default.Element._detachListener(e4, r3);
          t3 = t3.bind(r3);
          r3.elt.addEventListener(e4, t3, false), r3._events[e4] = t3;
        } }, { key: "_detachListener", value: function(e4, t3) {
          var r3 = t3._events[e4];
          t3.elt.removeEventListener(e4, r3, false), t3._events[e4] = null;
        } }], (t2 = [{ key: "parent", value: function(e4) {
          return void 0 === e4 ? this.elt.parentNode : ("string" == typeof e4 ? ("#" === e4[0] && (e4 = e4.substring(1)), e4 = document.getElementById(e4)) : e4 instanceof n.default.Element && (e4 = e4.elt), e4.appendChild(this.elt), this);
        } }, { key: "id", value: function(e4) {
          return void 0 === e4 ? this.elt.id : (this.elt.id = e4, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
        } }, { key: "class", value: function(e4) {
          return void 0 === e4 ? this.elt.className : (this.elt.className = e4, this);
        } }, { key: "mousePressed", value: function(t3) {
          return n.default.Element._adjustListener("mousedown", function(e4) {
            return this._pInst._setProperty("mouseIsPressed", true), this._pInst._setMouseButton(e4), t3.call(this, e4);
          }, this), this;
        } }, { key: "doubleClicked", value: function(e4) {
          return n.default.Element._adjustListener("dblclick", e4, this), this;
        } }, { key: "mouseWheel", value: function(e4) {
          return n.default.Element._adjustListener("wheel", e4, this), this;
        } }, { key: "mouseReleased", value: function(e4) {
          return n.default.Element._adjustListener("mouseup", e4, this), this;
        } }, { key: "mouseClicked", value: function(e4) {
          return n.default.Element._adjustListener("click", e4, this), this;
        } }, { key: "mouseMoved", value: function(e4) {
          return n.default.Element._adjustListener("mousemove", e4, this), this;
        } }, { key: "mouseOver", value: function(e4) {
          return n.default.Element._adjustListener("mouseover", e4, this), this;
        } }, { key: "mouseOut", value: function(e4) {
          return n.default.Element._adjustListener("mouseout", e4, this), this;
        } }, { key: "touchStarted", value: function(e4) {
          return n.default.Element._adjustListener("touchstart", e4, this), this;
        } }, { key: "touchMoved", value: function(e4) {
          return n.default.Element._adjustListener("touchmove", e4, this), this;
        } }, { key: "touchEnded", value: function(e4) {
          return n.default.Element._adjustListener("touchend", e4, this), this;
        } }, { key: "dragOver", value: function(e4) {
          return n.default.Element._adjustListener("dragover", e4, this), this;
        } }, { key: "dragLeave", value: function(e4) {
          return n.default.Element._adjustListener("dragleave", e4, this), this;
        } }, { key: "_setProperty", value: function(e4, t3) {
          this[e4] = t3;
        } }]) && s2(e3.prototype, t2), o && s2(e3, o), r2;
      }();
      e2 = n.default.Element;
      r.default = e2;
    }, { "./main": 283 }], 285: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.get-prototype-of"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var c = (u = e2("./main")) && u.__esModule ? u : { default: u }, d = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("./constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function s2(e3, t2) {
        return (s2 = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function h(r2) {
        return function() {
          var e3, t2 = l(r2);
          return f(this, function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = l(this).constructor, Reflect.construct(t2, arguments, e3)) : t2.apply(this, arguments));
        };
      }
      function f(e3, t2) {
        return !t2 || "object" !== i(t2) && "function" != typeof t2 ? p(e3) : t2;
      }
      function p(e3) {
        if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function l(e3) {
        return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      c.default.Graphics = function(e3) {
        var t2 = u2;
        if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e3 && s2(t2, e3);
        var l2 = h(u2);
        function u2(e4, t3, r2, o3, n2) {
          var s3;
          if (!(this instanceof u2)) throw new TypeError("Cannot call a class as a function");
          a3 = n2 || document.createElement("canvas"), (s3 = l2.call(this, a3, o3)).canvas = a3;
          var i2, a3 = r2 || d.P2D, r2 = o3._userNode || document.body;
          for (i2 in n2 || r2.appendChild(s3.canvas), c.default.prototype) s3[i2] || ("function" == typeof c.default.prototype[i2] ? s3[i2] = c.default.prototype[i2].bind(p(s3)) : s3[i2] = c.default.prototype[i2]);
          return c.default.prototype._initializeInstanceVariables.apply(p(s3)), s3.width = e4, s3.height = t3, s3._pixelDensity = o3._pixelDensity, a3 === d.WEBGL ? (s3._renderer = new c.default.RendererGL(s3.canvas, p(s3), false), e4 = (n2 = s3._renderer._adjustDimensions(e4, t3)).adjustedWidth, t3 = n2.adjustedHeight) : s3._renderer = new c.default.Renderer2D(s3.canvas, p(s3), false), o3._elements.push(p(s3)), Object.defineProperty(p(s3), "deltaTime", { get: function() {
            return this._pInst.deltaTime;
          } }), s3._renderer.resize(e4, t3), s3._renderer._applyDefaults(), f(s3, p(s3));
        }
        return t2 = u2, (e3 = [{ key: "reset", value: function() {
          this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
        } }, { key: "remove", value: function() {
          this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
          var e4, t3 = this._pInst._elements.indexOf(this);
          for (e4 in -1 !== t3 && this._pInst._elements.splice(t3, 1), this._events) this.elt.removeEventListener(e4, this._events[e4]);
          this._renderer = void 0, this.canvas = void 0, this.elt = void 0;
        } }, { key: "createFramebuffer", value: function(e4) {
          return new c.default.Framebuffer(this, e4);
        } }]) && n(t2.prototype, e3), u2;
      }(c.default.Element);
      var u = c.default.Graphics;
      r.default = u;
    }, { "./constants": 272, "./main": 283, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.splice": 171, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 286: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var a2 = (s2 = e2("./main")) && s2.__esModule ? s2 : { default: s2 }, A = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== l(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = i();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function i() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), i = function() {
          return e3;
        }, e3);
      }
      function l(e3) {
        return (l = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function u(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function c(e3, t2) {
        return (c = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function d(o3) {
        return function() {
          var e3, t2, r2 = n(o3);
          return e3 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = n(this).constructor, Reflect.construct(r2, arguments, e3)) : r2.apply(this, arguments), r2 = this, !(t2 = e3) || "object" !== l(t2) && "function" != typeof t2 ? h(r2) : t2;
        };
      }
      function h(e3) {
        if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function n(e3) {
        return (n = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      var s2 = function(e3) {
        var t2 = s3;
        if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e3 && c(t2, e3);
        var n2 = d(s3);
        function s3(e4, t3, r2) {
          var o3;
          if (this instanceof s3) return (o3 = n2.call(this, e4, t3)).canvas = e4, o3._pixelsState = t3, r2 ? (o3._isMainCanvas = true, o3._pInst._setProperty("_curElement", h(o3)), o3._pInst._setProperty("canvas", o3.canvas), o3._pInst._setProperty("width", o3.width), o3._pInst._setProperty("height", o3.height)) : (o3.canvas.style.display = "none", o3._styles = []), o3._clipping = false, o3._clipInvert = false, o3._textSize = 12, o3._textLeading = 15, o3._textFont = "sans-serif", o3._textStyle = A.NORMAL, o3._textAscent = null, o3._textDescent = null, o3._textAlign = A.LEFT, o3._textBaseline = A.BASELINE, o3._textWrap = A.WORD, o3._rectMode = A.CORNER, o3._ellipseMode = A.CENTER, o3._curveTightness = 0, o3._imageMode = A.CORNER, o3._tint = null, o3._doStroke = true, o3._doFill = true, o3._strokeSet = false, o3._fillSet = false, o3._leadingSet = false, o3._pushPopDepth = 0, o3;
          throw new TypeError("Cannot call a class as a function");
        }
        return t2 = s3, (e3 = [{ key: "push", value: function() {
          return this._pushPopDepth++, { properties: { _doStroke: this._doStroke, _strokeSet: this._strokeSet, _doFill: this._doFill, _fillSet: this._fillSet, _tint: this._tint, _imageMode: this._imageMode, _rectMode: this._rectMode, _ellipseMode: this._ellipseMode, _textFont: this._textFont, _textLeading: this._textLeading, _leadingSet: this._leadingSet, _textSize: this._textSize, _textAlign: this._textAlign, _textBaseline: this._textBaseline, _textStyle: this._textStyle, _textWrap: this._textWrap } };
        } }, { key: "pop", value: function(e4) {
          this._pushPopDepth--, e4.properties && Object.assign(this, e4.properties);
        } }, { key: "beginClip", value: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
          if (this._clipping) throw new Error("It looks like you're trying to clip while already in the middle of clipping. Did you forget to endClip()?");
          this._clipping = true, this._clipInvert = e4.invert;
        } }, { key: "endClip", value: function() {
          if (!this._clipping) throw new Error("It looks like you've called endClip() without beginClip(). Did you forget to call beginClip() first?");
          this._clipping = false;
        } }, { key: "resize", value: function(e4, t3) {
          this.width = e4, this.height = t3, this.elt.width = e4 * this._pInst._pixelDensity, this.elt.height = t3 * this._pInst._pixelDensity, this.elt.style.width = "".concat(e4, "px"), this.elt.style.height = "".concat(t3, "px"), this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
        } }, { key: "get", value: function(e4, t3, r2, o3) {
          var n3 = this._pixelsState, s4 = n3._pixelDensity, i2 = this.canvas;
          if (void 0 === e4 && void 0 === t3) e4 = t3 = 0, r2 = n3.width, o3 = n3.height;
          else if (e4 *= s4, t3 *= s4, void 0 === r2 && void 0 === o3) return e4 < 0 || t3 < 0 || e4 >= i2.width || t3 >= i2.height ? [0, 0, 0, 0] : this._getPixel(e4, t3);
          n3 = new a2.default.Image(r2 * s4, o3 * s4);
          return n3.pixelDensity(s4), n3.canvas.getContext("2d").drawImage(i2, e4, t3, r2 * s4, o3 * s4, 0, 0, r2 * s4, o3 * s4), n3;
        } }, { key: "textLeading", value: function(e4) {
          return "number" == typeof e4 ? (this._setProperty("_leadingSet", true), this._setProperty("_textLeading", e4), this._pInst) : this._textLeading;
        } }, { key: "textStyle", value: function(e4) {
          return e4 ? (e4 !== A.NORMAL && e4 !== A.ITALIC && e4 !== A.BOLD && e4 !== A.BOLDITALIC || this._setProperty("_textStyle", e4), this._applyTextProperties()) : this._textStyle;
        } }, { key: "textAscent", value: function() {
          return null === this._textAscent && this._updateTextMetrics(), this._textAscent;
        } }, { key: "textDescent", value: function() {
          return null === this._textDescent && this._updateTextMetrics(), this._textDescent;
        } }, { key: "textAlign", value: function(e4, t3) {
          return void 0 !== e4 ? (this._setProperty("_textAlign", e4), void 0 !== t3 && this._setProperty("_textBaseline", t3), this._applyTextProperties()) : { horizontal: this._textAlign, vertical: this._textBaseline };
        } }, { key: "textWrap", value: function(e4) {
          return this._setProperty("_textWrap", e4), this._textWrap;
        } }, { key: "text", value: function(e4, t3, r2, o3, n3) {
          var s4, i2, a3, l2, u2 = this._pInst, c2 = this._textWrap, d2 = Number.MAX_VALUE, h2 = r2;
          if ((this._doFill || this._doStroke) && void 0 !== e4) {
            if (s4 = (e4 = (e4 = "string" != typeof e4 ? e4.toString() : e4).replace(/(\t)/g, "  ")).split("\n"), void 0 !== o3) {
              switch (this._rectMode === A.CENTER && (t3 -= o3 / 2), this._textAlign) {
                case A.CENTER:
                  t3 += o3 / 2;
                  break;
                case A.RIGHT:
                  t3 += o3;
              }
              if (void 0 !== n3) {
                this._rectMode === A.CENTER && (r2 -= n3 / 2, h2 -= n3 / 2);
                var e4 = r2, f2 = u2.textAscent();
                switch (this._textBaseline) {
                  case A.BOTTOM:
                    l2 = r2 + n3, r2 = Math.max(l2, r2), h2 += f2;
                    break;
                  case A.CENTER:
                    l2 = r2 + n3 / 2, r2 = Math.max(l2, r2), h2 += f2 / 2;
                }
                d2 = r2 + n3 - f2, this._textBaseline === A.CENTER && (d2 = e4 + n3 - f2 / 2);
              } else this._textBaseline !== A.BOTTOM && this._textBaseline !== A.CENTER || (h2 = r2 - (e4 = u2.textSize() * this._textLeading) / 2, d2 = r2 + e4 / 2);
              if (c2 === A.WORD) {
                for (var p = [], m = 0; m < s4.length; m++) {
                  for (var y = "", g = s4[m].split(" "), v = 0; v < g.length; v++) i2 = "".concat(y + g[v]) + " ", y = o3 < (a3 = this.textWidth(i2)) && 0 < y.length ? (p.push(y), "".concat(g[v]) + " ") : i2;
                  p.push(y);
                }
                var b = 0;
                this._textBaseline === A.CENTER ? b = (p.length - 1) * u2.textLeading() / 2 : this._textBaseline === A.BOTTOM && (b = (p.length - 1) * u2.textLeading());
                for (var _ = 0; _ < s4.length; _++) {
                  y = "", g = s4[_].split(" ");
                  for (var j = 0; j < g.length; j++) i2 = "".concat(y + g[j]) + " ", o3 < (a3 = this.textWidth(i2)) && 0 < y.length ? (this._renderText(u2, y.trim(), t3, r2 - b, d2, h2), y = "".concat(g[j]) + " ", r2 += u2.textLeading()) : y = i2;
                  this._renderText(u2, y.trim(), t3, r2 - b, d2, h2), r2 += u2.textLeading();
                }
              } else {
                for (var x2 = [], w = 0; w < s4.length; w++) for (var S = s4[w].split(y = ""), T = 0; T < S.length; T++) i2 = "".concat(y + S[T]), (a3 = this.textWidth(i2)) <= o3 ? y += S[T] : o3 < a3 && 0 < y.length && (x2.push(y), y = "".concat(S[T]));
                x2.push(y);
                var E = 0;
                this._textBaseline === A.CENTER ? E = (x2.length - 1) * u2.textLeading() / 2 : this._textBaseline === A.BOTTOM && (E = (x2.length - 1) * u2.textLeading());
                for (var M = 0; M < s4.length; M++) {
                  S = s4[M].split(y = "");
                  for (var k = 0; k < S.length; k++) i2 = "".concat(y + S[k]), (a3 = this.textWidth(i2)) <= o3 ? y += S[k] : o3 < a3 && 0 < y.length && (this._renderText(u2, y.trim(), t3, r2 - E, d2, h2), r2 += u2.textLeading(), y = "".concat(S[k]));
                }
                this._renderText(u2, y.trim(), t3, r2 - E, d2, h2), r2 += u2.textLeading();
              }
            } else {
              var O = 0;
              this._textBaseline === A.CENTER ? O = (s4.length - 1) * u2.textLeading() / 2 : this._textBaseline === A.BOTTOM && (O = (s4.length - 1) * u2.textLeading());
              for (var C = 0; C < s4.length; C++) this._renderText(u2, s4[C], t3, r2 - O, d2, h2 - O), r2 += u2.textLeading();
            }
            return u2;
          }
        } }, { key: "_applyDefaults", value: function() {
          return this;
        } }, { key: "_isOpenType", value: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this._textFont;
          return "object" === l(e4) && e4.font && e4.font.supported;
        } }, { key: "_updateTextMetrics", value: function() {
          var e4, t3, r2, o3, n3, s4;
          return this._isOpenType() ? (this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent())) : ((e4 = document.createElement("span")).style.fontFamily = this._textFont, e4.style.fontSize = "".concat(this._textSize, "px"), e4.innerHTML = "ABCjgq|", (s4 = document.createElement("div")).style.display = "inline-block", s4.style.width = "1px", s4.style.height = "0px", o3 = ((t3 = document.createElement("div")).appendChild(e4), t3.appendChild(s4), t3.style.height = "0px", t3.style.overflow = "hidden", document.body.appendChild(t3), s4.style.verticalAlign = "baseline", f(s4)), n3 = f(e4), r2 = o3[1] - n3[1], o3 = (s4.style.verticalAlign = "bottom", f(s4)), n3 = f(e4), s4 = o3[1] - n3[1] - r2, document.body.removeChild(t3), this._setProperty("_textAscent", r2), this._setProperty("_textDescent", s4)), this;
        } }]) && u(t2.prototype, e3), s3;
      }(a2.default.Element);
      function f(e3) {
        var t2 = 0, r2 = 0;
        if (e3.offsetParent) for (; t2 += e3.offsetLeft, r2 += e3.offsetTop, e3 = e3.offsetParent; ) ;
        else t2 += e3.offsetLeft, r2 += e3.offsetTop;
        return [t2, r2];
      }
      s2.prototype.textSize = function(e3) {
        return "number" == typeof e3 ? (this._setProperty("_textSize", e3), this._leadingSet || this._setProperty("_textLeading", e3 * A._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
      }, a2.default.Renderer = s2;
      e2 = a2.default.Renderer;
      r.default = e2;
    }, { "../core/constants": 272, "./main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.trim": 209, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 287: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.reflect.get"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var d = (n = e2("./main")) && n.__esModule ? n : { default: n }, p = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("./constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function l(e3, t2, r2) {
        return (l = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e4, t3, r3) {
          var e4 = function(e5, t4) {
            for (; !Object.prototype.hasOwnProperty.call(e5, t4) && null !== (e5 = h(e5)); ) ;
            return e5;
          }(e4, t3);
          if (e4) return (e4 = Object.getOwnPropertyDescriptor(e4, t3)).get ? e4.get.call(r3) : e4.value;
        })(e3, t2, r2 || e3);
      }
      function u(e3, t2) {
        return (u = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function c(r2) {
        return function() {
          var e3, t2 = h(r2), t2 = (e3 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = h(this).constructor, Reflect.construct(t2, arguments, e3)) : t2.apply(this, arguments), this);
          if (!e3 || "object" !== i(e3) && "function" != typeof e3) {
            if (void 0 !== t2) return t2;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function h(e3) {
        return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      e2("./p5.Renderer");
      var f = "rgba(0,0,0,0)", n = function(e3) {
        var t2 = n2;
        if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e3 && u(t2, e3);
        var o3 = c(n2);
        function n2(e4, t3, r2) {
          if (this instanceof n2) return (e4 = o3.call(this, e4, t3, r2)).drawingContext = e4.canvas.getContext("2d"), e4._pInst._setProperty("drawingContext", e4.drawingContext), e4;
          throw new TypeError("Cannot call a class as a function");
        }
        return t2 = n2, (e3 = [{ key: "getFilterGraphicsLayer", value: function() {
          var e4;
          return this.filterGraphicsLayer || (e4 = (this._pInst instanceof d.default.Graphics ? this._pInst : this)._pInst, this.filterGraphicsLayer = new d.default.Graphics(this.width, this.height, p.WEBGL, e4)), this.filterGraphicsLayer.width === this.width && this.filterGraphicsLayer.height === this.height || this.filterGraphicsLayer.resizeCanvas(this.width, this.height), this.filterGraphicsLayer.pixelDensity() !== this._pInst.pixelDensity() && this.filterGraphicsLayer.pixelDensity(this._pInst.pixelDensity()), this.filterGraphicsLayer;
        } }, { key: "_applyDefaults", value: function() {
          this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._cachedBlendMode = p.BLEND, this._setFill(p._DEFAULT_FILL), this._setStroke(p._DEFAULT_STROKE), this.drawingContext.lineCap = p.ROUND, this.drawingContext.font = "normal 12px sans-serif";
        } }, { key: "resize", value: function(e4, t3) {
          l(h(n2.prototype), "resize", this).call(this, e4, t3), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
        } }, { key: "background", value: function() {
          var e4, t3;
          this.drawingContext.save(), this.resetMatrix(), (arguments.length <= 0 ? void 0 : arguments[0]) instanceof d.default.Image ? 0 <= (arguments.length <= 1 ? void 0 : arguments[1]) ? (e4 = arguments.length <= 0 ? void 0 : arguments[0], this.drawingContext.globalAlpha = (arguments.length <= 1 ? void 0 : arguments[1]) / 255, this._pInst.image(e4, 0, 0, this.width, this.height)) : this._pInst.image(arguments.length <= 0 ? void 0 : arguments[0], 0, 0, this.width, this.height) : (e4 = this._getFill(), t3 = (t3 = this._pInst).color.apply(t3, arguments), this._pInst._addAccsOutput() && this._pInst._accsBackground(t3.levels), t3 = t3.toString(), this._setFill(t3), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e4), this._isErasing && this._pInst.erase()), this.drawingContext.restore();
        } }, { key: "clear", value: function() {
          this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore();
        } }, { key: "fill", value: function() {
          var e4 = (e4 = this._pInst).color.apply(e4, arguments);
          this._setFill(e4.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("fill", e4.levels);
        } }, { key: "stroke", value: function() {
          var e4 = (e4 = this._pInst).color.apply(e4, arguments);
          this._setStroke(e4.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("stroke", e4.levels);
        } }, { key: "erase", value: function(e4, t3) {
          this._isErasing || (this._cachedFillStyle = this.drawingContext.fillStyle, e4 = this._pInst.color(255, e4).toString(), this.drawingContext.fillStyle = e4, this._cachedStrokeStyle = this.drawingContext.strokeStyle, e4 = this._pInst.color(255, t3).toString(), this.drawingContext.strokeStyle = e4, t3 = this._cachedBlendMode, this.blendMode(p.REMOVE), this._cachedBlendMode = t3, this._isErasing = true);
        } }, { key: "noErase", value: function() {
          this._isErasing && (this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode), this._isErasing = false);
        } }, { key: "beginClip", value: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, e4 = (l(h(n2.prototype), "beginClip", this).call(this, e4), this._cachedFillStyle = this.drawingContext.fillStyle, this._pInst.color(255, 0).toString()), e4 = (this.drawingContext.fillStyle = e4, this._cachedStrokeStyle = this.drawingContext.strokeStyle, this._pInst.color(255, 0).toString()), e4 = (this.drawingContext.strokeStyle = e4, this._cachedBlendMode);
          this.blendMode(p.BLEND), this._cachedBlendMode = e4, this.drawingContext.beginPath(), this._clipInvert && (this.drawingContext.moveTo(-2 * this.width, -2 * this.height), this.drawingContext.lineTo(-2 * this.width, 2 * this.height), this.drawingContext.lineTo(2 * this.width, 2 * this.height), this.drawingContext.lineTo(2 * this.width, -2 * this.height), this.drawingContext.closePath());
        } }, { key: "endClip", value: function() {
          this._doFillStrokeClose(), this.drawingContext.clip(), l(h(n2.prototype), "endClip", this).call(this), this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode);
        } }, { key: "image", value: function(e4, t3, r2, o4, n3, s3, i2, a3, l2) {
          e4.gifProperties && e4._animateGif(this._pInst);
          try {
            d.default.MediaElement && e4 instanceof d.default.MediaElement && e4._ensureCanvas();
            var u2 = (u2 = this._tint && e4.canvas ? this._getTintedImageCanvas(e4) : u2) || e4.canvas || e4.elt, c2 = 1;
            e4.width && 0 < e4.width && (c2 = u2.width / e4.width), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.drawImage(u2, c2 * t3, c2 * r2, c2 * o4, c2 * n3, s3, i2, a3, l2), this._isErasing && this._pInst.erase();
          } catch (e5) {
            if ("NS_ERROR_NOT_AVAILABLE" !== e5.name) throw e5;
          }
        } }, { key: "_getTintedImageCanvas", value: function(e4) {
          if (!e4.canvas) return e4;
          e4.tintCanvas || (e4.tintCanvas = document.createElement("canvas")), e4.tintCanvas.width !== e4.canvas.width && (e4.tintCanvas.width = e4.canvas.width), e4.tintCanvas.height !== e4.canvas.height && (e4.tintCanvas.height = e4.canvas.height);
          var t3 = e4.tintCanvas.getContext("2d");
          return t3.save(), t3.clearRect(0, 0, e4.canvas.width, e4.canvas.height), (this._tint[0] < 255 || this._tint[1] < 255 || this._tint[2] < 255) && (t3.drawImage(e4.canvas, 0, 0), t3.globalCompositeOperation = "luminosity", t3.drawImage(e4.canvas, 0, 0), t3.globalCompositeOperation = "color", t3.drawImage(e4.canvas, 0, 0), t3.globalCompositeOperation = "multiply", t3.fillStyle = "rgb(".concat(this._tint.slice(0, 3).join(", "), ")"), t3.fillRect(0, 0, e4.canvas.width, e4.canvas.height), t3.globalCompositeOperation = "destination-in"), t3.globalAlpha = this._tint[3] / 255, t3.drawImage(e4.canvas, 0, 0), t3.restore(), e4.tintCanvas;
        } }, { key: "blendMode", value: function(e4) {
          if (e4 === p.SUBTRACT) console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");
          else {
            if (e4 !== p.BLEND && e4 !== p.REMOVE && e4 !== p.DARKEST && e4 !== p.LIGHTEST && e4 !== p.DIFFERENCE && e4 !== p.MULTIPLY && e4 !== p.EXCLUSION && e4 !== p.SCREEN && e4 !== p.REPLACE && e4 !== p.OVERLAY && e4 !== p.HARD_LIGHT && e4 !== p.SOFT_LIGHT && e4 !== p.DODGE && e4 !== p.BURN && e4 !== p.ADD) throw new Error("Mode ".concat(e4, " not recognized."));
            this._cachedBlendMode = e4, this.drawingContext.globalCompositeOperation = e4;
          }
        } }, { key: "blend", value: function() {
          for (var e4 = this.drawingContext.globalCompositeOperation, t3 = arguments.length, r2 = new Array(t3), o4 = 0; o4 < t3; o4++) r2[o4] = arguments[o4];
          var n3 = r2[r2.length - 1], s3 = Array.prototype.slice.call(r2, 0, r2.length - 1);
          this.drawingContext.globalCompositeOperation = n3, d.default.prototype.copy.apply(this, s3), this.drawingContext.globalCompositeOperation = e4;
        } }, { key: "_getPixel", value: function(e4, t3) {
          e4 = this.drawingContext.getImageData(e4, t3, 1, 1).data;
          return [e4[0], e4[1], e4[2], e4[3]];
        } }, { key: "loadPixels", value: function() {
          var e4 = this._pixelsState, t3 = e4._pixelDensity, r2 = this.width * t3, t3 = this.height * t3, r2 = this.drawingContext.getImageData(0, 0, r2, t3);
          e4._setProperty("imageData", r2), e4._setProperty("pixels", r2.data);
        } }, { key: "set", value: function(e4, t3, r2) {
          e4 = Math.floor(e4), t3 = Math.floor(t3);
          var o4 = this._pixelsState;
          if (r2 instanceof d.default.Image) this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(o4._pixelDensity, o4._pixelDensity), this.drawingContext.clearRect(e4, t3, r2.width, r2.height), this.drawingContext.drawImage(r2.canvas, e4, t3), this.drawingContext.restore();
          else {
            var n3 = 0, s3 = 0, i2 = 0, a3 = 0, l2 = 4 * (t3 * o4._pixelDensity * (this.width * o4._pixelDensity) + e4 * o4._pixelDensity);
            if (o4.imageData || o4.loadPixels(), "number" == typeof r2) l2 < o4.pixels.length && (i2 = s3 = n3 = r2, a3 = 255);
            else if (Array.isArray(r2)) {
              if (r2.length < 4) throw new Error("pixel array must be of the form [R, G, B, A]");
              l2 < o4.pixels.length && (n3 = r2[0], s3 = r2[1], i2 = r2[2], a3 = r2[3]);
            } else r2 instanceof d.default.Color && l2 < o4.pixels.length && (n3 = r2.levels[0], s3 = r2.levels[1], i2 = r2.levels[2], a3 = r2.levels[3]);
            for (var u2 = 0; u2 < o4._pixelDensity; u2++) for (var c2 = 0; c2 < o4._pixelDensity; c2++) l2 = 4 * ((t3 * o4._pixelDensity + c2) * this.width * o4._pixelDensity + (e4 * o4._pixelDensity + u2)), o4.pixels[l2] = n3, o4.pixels[l2 + 1] = s3, o4.pixels[l2 + 2] = i2, o4.pixels[l2 + 3] = a3;
          }
        } }, { key: "updatePixels", value: function(e4, t3, r2, o4) {
          var n3 = this._pixelsState, s3 = n3._pixelDensity;
          void 0 === e4 && void 0 === t3 && void 0 === r2 && void 0 === o4 && (t3 = e4 = 0, r2 = this.width, o4 = this.height), e4 *= s3, t3 *= s3, r2 *= s3, o4 *= s3, this.gifProperties && (this.gifProperties.frames[this.gifProperties.displayIndex].image = n3.imageData), this.drawingContext.putImageData(n3.imageData, 0, 0, e4, t3, r2, o4);
        } }, { key: "arc", value: function(e4, t3, r2, o4, n3, s3, i2) {
          var a3 = this.drawingContext, e4 = e4 + r2 / 2, t3 = t3 + o4 / 2, r2 = r2 / 2, o4 = o4 / 2, l2 = !(i2 === p.CHORD || i2 === p.OPEN || (s3 - n3) % p.TWO_PI == 0);
          return this._doFill && (this._clipping || a3.beginPath(), a3.ellipse(e4, t3, r2, o4, 0, n3, s3), l2 && a3.lineTo(e4, t3), a3.closePath(), this._clipping || a3.fill()), this._doStroke && (this._clipping || a3.beginPath(), a3.ellipse(e4, t3, r2, o4, 0, n3, s3), i2 === p.PIE && l2 && a3.lineTo(e4, t3), i2 !== p.PIE && i2 !== p.CHORD || a3.closePath(), this._clipping || a3.stroke()), this;
        } }, { key: "ellipse", value: function(e4) {
          var t3 = this.drawingContext, r2 = this._doFill, o4 = this._doStroke, n3 = parseFloat(e4[0]), s3 = parseFloat(e4[1]), i2 = parseFloat(e4[2]), e4 = parseFloat(e4[3]);
          if (r2 && !o4) {
            if (this._getFill() === f) return this;
          } else if (!r2 && o4 && this._getStroke() === f) return this;
          n3 += i2 / 2, s3 += e4 / 2, i2 /= 2, e4 /= 2;
          this._clipping || t3.beginPath(), t3.ellipse(n3, s3, i2, e4, 0, 0, 2 * Math.PI), t3.closePath(), !this._clipping && r2 && t3.fill(), !this._clipping && o4 && t3.stroke();
        } }, { key: "line", value: function(e4, t3, r2, o4) {
          var n3 = this.drawingContext;
          return this._doStroke && this._getStroke() !== f && (this._clipping || n3.beginPath(), n3.moveTo(e4, t3), n3.lineTo(r2, o4), n3.stroke()), this;
        } }, { key: "point", value: function(e4, t3) {
          var r2, o4, n3 = this.drawingContext;
          return !this._doStroke || this._getStroke() === f ? this : (r2 = this._getStroke(), o4 = this._getFill(), this._clipping || this._setFill(r2), this._clipping || n3.beginPath(), n3.arc(e4, t3, n3.lineWidth / 2, 0, p.TWO_PI, false), void (this._clipping || (n3.fill(), this._setFill(o4))));
        } }, { key: "quad", value: function(e4, t3, r2, o4, n3, s3, i2, a3) {
          var l2 = this.drawingContext, u2 = this._doFill, c2 = this._doStroke;
          if (u2 && !c2) {
            if (this._getFill() === f) return this;
          } else if (!u2 && c2 && this._getStroke() === f) return this;
          return this._clipping || l2.beginPath(), l2.moveTo(e4, t3), l2.lineTo(r2, o4), l2.lineTo(n3, s3), l2.lineTo(i2, a3), l2.closePath(), !this._clipping && u2 && l2.fill(), !this._clipping && c2 && l2.stroke(), this;
        } }, { key: "rect", value: function(e4) {
          var t3, r2, o4 = e4[0], n3 = e4[1], s3 = e4[2], i2 = e4[3], a3 = e4[4], l2 = e4[5], u2 = e4[6], e4 = e4[7], c2 = this.drawingContext, d2 = this._doFill, h2 = this._doStroke;
          if (d2 && !h2) {
            if (this._getFill() === f) return this;
          } else if (!d2 && h2 && this._getStroke() === f) return this;
          return this._clipping || c2.beginPath(), void 0 === a3 ? c2.rect(o4, n3, s3, i2) : (void 0 === l2 && (l2 = a3), void 0 === u2 && (u2 = l2), void 0 === e4 && (e4 = u2), h2 = (d2 = Math.abs(s3)) / 2, r2 = (t3 = Math.abs(i2)) / 2, c2.roundRect(o4, n3, s3, i2, [a3 = t3 < 2 * (a3 = d2 < 2 * a3 ? h2 : a3) ? r2 : a3, l2 = t3 < 2 * (l2 = d2 < 2 * l2 ? h2 : l2) ? r2 : l2, u2 = t3 < 2 * (u2 = d2 < 2 * u2 ? h2 : u2) ? r2 : u2, e4 = t3 < 2 * (e4 = d2 < 2 * e4 ? h2 : e4) ? r2 : e4])), !this._clipping && this._doFill && c2.fill(), !this._clipping && this._doStroke && c2.stroke(), this;
        } }, { key: "triangle", value: function(e4) {
          var t3 = this.drawingContext, r2 = this._doFill, o4 = this._doStroke, n3 = e4[0], s3 = e4[1], i2 = e4[2], a3 = e4[3], l2 = e4[4], e4 = e4[5];
          if (r2 && !o4) {
            if (this._getFill() === f) return this;
          } else if (!r2 && o4 && this._getStroke() === f) return this;
          this._clipping || t3.beginPath(), t3.moveTo(n3, s3), t3.lineTo(i2, a3), t3.lineTo(l2, e4), t3.closePath(), !this._clipping && r2 && t3.fill(), !this._clipping && o4 && t3.stroke();
        } }, { key: "endShape", value: function(e4, t3, r2, o4, n3, s3, i2) {
          if (0 !== t3.length && (this._doStroke || this._doFill)) {
            var a3, l2, u2, c2 = e4 === p.CLOSE, d2 = (c2 && !s3 && t3.push(t3[0]), t3.length);
            if (r2 && null === i2) {
              if (3 < d2) {
                var h2 = [], f2 = 1 - this._curveTightness;
                for (this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(t3[1][0], t3[1][1]), l2 = 1; l2 + 2 < d2; l2++) a3 = t3[l2], h2[0] = [a3[0], a3[1]], h2[1] = [a3[0] + (f2 * t3[l2 + 1][0] - f2 * t3[l2 - 1][0]) / 6, a3[1] + (f2 * t3[l2 + 1][1] - f2 * t3[l2 - 1][1]) / 6], h2[2] = [t3[l2 + 1][0] + (f2 * t3[l2][0] - f2 * t3[l2 + 2][0]) / 6, t3[l2 + 1][1] + (f2 * t3[l2][1] - f2 * t3[l2 + 2][1]) / 6], h2[3] = [t3[l2 + 1][0], t3[l2 + 1][1]], this.drawingContext.bezierCurveTo(h2[1][0], h2[1][1], h2[2][0], h2[2][1], h2[3][0], h2[3][1]);
                c2 && this.drawingContext.lineTo(t3[l2 + 1][0], t3[l2 + 1][1]), this._doFillStrokeClose(c2);
              }
            } else if (o4 && null === i2) {
              for (this._clipping || this.drawingContext.beginPath(), l2 = 0; l2 < d2; l2++) t3[l2].isVert ? t3[l2].moveTo ? this.drawingContext.moveTo(t3[l2][0], t3[l2][1]) : this.drawingContext.lineTo(t3[l2][0], t3[l2][1]) : this.drawingContext.bezierCurveTo(t3[l2][0], t3[l2][1], t3[l2][2], t3[l2][3], t3[l2][4], t3[l2][5]);
              this._doFillStrokeClose(c2);
            } else if (n3 && null === i2) {
              for (this._clipping || this.drawingContext.beginPath(), l2 = 0; l2 < d2; l2++) t3[l2].isVert ? t3[l2].moveTo ? this.drawingContext.moveTo(t3[l2][0], t3[l2][1]) : this.drawingContext.lineTo(t3[l2][0], t3[l2][1]) : this.drawingContext.quadraticCurveTo(t3[l2][0], t3[l2][1], t3[l2][2], t3[l2][3]);
              this._doFillStrokeClose(c2);
            } else if (i2 === p.POINTS) for (l2 = 0; l2 < d2; l2++) a3 = t3[l2], this._doStroke && this._pInst.stroke(a3[6]), this._pInst.point(a3[0], a3[1]);
            else if (i2 === p.LINES) for (l2 = 0; l2 + 1 < d2; l2 += 2) a3 = t3[l2], this._doStroke && this._pInst.stroke(t3[l2 + 1][6]), this._pInst.line(a3[0], a3[1], t3[l2 + 1][0], t3[l2 + 1][1]);
            else if (i2 === p.TRIANGLES) for (l2 = 0; l2 + 2 < d2; l2 += 3) a3 = t3[l2], this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(a3[0], a3[1]), this.drawingContext.lineTo(t3[l2 + 1][0], t3[l2 + 1][1]), this.drawingContext.lineTo(t3[l2 + 2][0], t3[l2 + 2][1]), this.drawingContext.closePath(), !this._clipping && this._doFill && (this._pInst.fill(t3[l2 + 2][5]), this.drawingContext.fill()), !this._clipping && this._doStroke && (this._pInst.stroke(t3[l2 + 2][6]), this.drawingContext.stroke());
            else if (i2 === p.TRIANGLE_STRIP) for (l2 = 0; l2 + 1 < d2; l2++) a3 = t3[l2], this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(t3[l2 + 1][0], t3[l2 + 1][1]), this.drawingContext.lineTo(a3[0], a3[1]), !this._clipping && this._doStroke && this._pInst.stroke(t3[l2 + 1][6]), !this._clipping && this._doFill && this._pInst.fill(t3[l2 + 1][5]), l2 + 2 < d2 && (this.drawingContext.lineTo(t3[l2 + 2][0], t3[l2 + 2][1]), !this._clipping && this._doStroke && this._pInst.stroke(t3[l2 + 2][6]), !this._clipping && this._doFill && this._pInst.fill(t3[l2 + 2][5])), this._doFillStrokeClose(c2);
            else if (i2 === p.TRIANGLE_FAN) {
              if (2 < d2) {
                for (this._clipping || this.drawingContext.beginPath(), l2 = 2; l2 < d2; l2++) a3 = t3[l2], this.drawingContext.moveTo(t3[0][0], t3[0][1]), this.drawingContext.lineTo(t3[l2 - 1][0], t3[l2 - 1][1]), this.drawingContext.lineTo(a3[0], a3[1]), this.drawingContext.lineTo(t3[0][0], t3[0][1]), l2 < d2 - 1 && (this._doFill && a3[5] !== t3[l2 + 1][5] || this._doStroke && a3[6] !== t3[l2 + 1][6]) && (!this._clipping && this._doFill && (this._pInst.fill(a3[5]), this.drawingContext.fill(), this._pInst.fill(t3[l2 + 1][5])), !this._clipping && this._doStroke && (this._pInst.stroke(a3[6]), this.drawingContext.stroke(), this._pInst.stroke(t3[l2 + 1][6])), this.drawingContext.closePath(), this._clipping || this.drawingContext.beginPath());
                this._doFillStrokeClose(c2);
              }
            } else if (i2 === p.QUADS) for (l2 = 0; l2 + 3 < d2; l2 += 4) {
              for (a3 = t3[l2], this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(a3[0], a3[1]), u2 = 1; u2 < 4; u2++) this.drawingContext.lineTo(t3[l2 + u2][0], t3[l2 + u2][1]);
              this.drawingContext.lineTo(a3[0], a3[1]), !this._clipping && this._doFill && this._pInst.fill(t3[l2 + 3][5]), !this._clipping && this._doStroke && this._pInst.stroke(t3[l2 + 3][6]), this._doFillStrokeClose(c2);
            }
            else if (i2 === p.QUAD_STRIP) {
              if (3 < d2) for (l2 = 0; l2 + 1 < d2; l2 += 2) a3 = t3[l2], this._clipping || this.drawingContext.beginPath(), l2 + 3 < d2 ? (this.drawingContext.moveTo(t3[l2 + 2][0], t3[l2 + 2][1]), this.drawingContext.lineTo(a3[0], a3[1]), this.drawingContext.lineTo(t3[l2 + 1][0], t3[l2 + 1][1]), this.drawingContext.lineTo(t3[l2 + 3][0], t3[l2 + 3][1]), !this._clipping && this._doFill && this._pInst.fill(t3[l2 + 3][5]), !this._clipping && this._doStroke && this._pInst.stroke(t3[l2 + 3][6])) : (this.drawingContext.moveTo(a3[0], a3[1]), this.drawingContext.lineTo(t3[l2 + 1][0], t3[l2 + 1][1])), this._doFillStrokeClose(c2);
            } else {
              for (this._clipping || this.drawingContext.beginPath(), this.drawingContext.moveTo(t3[0][0], t3[0][1]), l2 = 1; l2 < d2; l2++) (a3 = t3[l2]).isVert && (a3.moveTo ? (c2 && this.drawingContext.closePath(), this.drawingContext.moveTo(a3[0], a3[1])) : this.drawingContext.lineTo(a3[0], a3[1]));
              this._doFillStrokeClose(c2), this.drawingContext.closePath();
            }
            s3 = n3 = o4 = r2 = false, c2 && t3.pop();
          }
          return this;
        } }, { key: "strokeCap", value: function(e4) {
          return e4 !== p.ROUND && e4 !== p.SQUARE && e4 !== p.PROJECT || (this.drawingContext.lineCap = e4), this;
        } }, { key: "strokeJoin", value: function(e4) {
          return e4 !== p.ROUND && e4 !== p.BEVEL && e4 !== p.MITER || (this.drawingContext.lineJoin = e4), this;
        } }, { key: "strokeWeight", value: function(e4) {
          return this.drawingContext.lineWidth = void 0 === e4 || 0 === e4 ? 1e-4 : e4, this;
        } }, { key: "_getFill", value: function() {
          return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
        } }, { key: "_setFill", value: function(e4) {
          e4 !== this._cachedFillStyle && (this.drawingContext.fillStyle = e4, this._cachedFillStyle = e4);
        } }, { key: "_getStroke", value: function() {
          return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
        } }, { key: "_setStroke", value: function(e4) {
          e4 !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e4, this._cachedStrokeStyle = e4);
        } }, { key: "bezier", value: function(e4, t3, r2, o4, n3, s3, i2, a3) {
          return this._pInst.beginShape(), this._pInst.vertex(e4, t3), this._pInst.bezierVertex(r2, o4, n3, s3, i2, a3), this._pInst.endShape(), this;
        } }, { key: "curve", value: function(e4, t3, r2, o4, n3, s3, i2, a3) {
          return this._pInst.beginShape(), this._pInst.curveVertex(e4, t3), this._pInst.curveVertex(r2, o4), this._pInst.curveVertex(n3, s3), this._pInst.curveVertex(i2, a3), this._pInst.endShape(), this;
        } }, { key: "_doFillStrokeClose", value: function(e4) {
          e4 && this.drawingContext.closePath(), !this._clipping && this._doFill && this.drawingContext.fill(), !this._clipping && this._doStroke && this.drawingContext.stroke();
        } }, { key: "applyMatrix", value: function(e4, t3, r2, o4, n3, s3) {
          this.drawingContext.transform(e4, t3, r2, o4, n3, s3);
        } }, { key: "resetMatrix", value: function() {
          return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
        } }, { key: "rotate", value: function(e4) {
          this.drawingContext.rotate(e4);
        } }, { key: "scale", value: function(e4, t3) {
          return this.drawingContext.scale(e4, t3), this;
        } }, { key: "translate", value: function(e4, t3) {
          return e4 instanceof d.default.Vector && (t3 = e4.y, e4 = e4.x), this.drawingContext.translate(e4, t3), this;
        } }, { key: "_renderText", value: function(e4, t3, r2, o4, n3, s3) {
          if (!(o4 < s3 || n3 <= o4)) return e4.push(), this._isOpenType() ? this._textFont._renderPath(t3, r2, o4, { renderer: this }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t3, r2, o4), !this._clipping && this._doFill && (this._fillSet || this._setFill(p._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t3, r2, o4))), e4.pop(), e4;
        } }, { key: "textWidth", value: function(e4) {
          return this._isOpenType() ? this._textFont._textWidth(e4, this._textSize) : this.drawingContext.measureText(e4).width;
        } }, { key: "_applyTextProperties", value: function() {
          var e4 = this._pInst, t3 = (this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), t3 = this._textFont, this._isOpenType() && (t3 = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), t3 || "sans-serif");
          return /\s/.exec(t3) && (t3 = '"'.concat(t3, '"')), this.drawingContext.font = "".concat(this._textStyle || "normal", " ").concat(this._textSize || 12, "px ").concat(t3), this.drawingContext.textAlign = this._textAlign, this._textBaseline === p.CENTER ? this.drawingContext.textBaseline = p._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, e4;
        } }, { key: "push", value: function() {
          return this.drawingContext.save(), l(h(n2.prototype), "push", this).call(this);
        } }, { key: "pop", value: function(e4) {
          this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, l(h(n2.prototype), "pop", this).call(this, e4);
        } }]) && s2(t2.prototype, e3), n2;
      }(d.default.Renderer), e2 = (n.prototype.text = function(e3, t2, r2, o3, n2) {
        void 0 !== o3 && this.drawingContext.textBaseline === p.BASELINE && (s3 = true, this.drawingContext.textBaseline = p.TOP);
        var s3, o3 = d.default.Renderer.prototype.text.apply(this, arguments);
        return s3 && (this.drawingContext.textBaseline = p.BASELINE), o3;
      }, d.default.Renderer2D = n, d.default.Renderer2D);
      r.default = e2;
    }, { "./constants": 272, "./main": 283, "./p5.Renderer": 286, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.slice": 169, "core-js/modules/es.function.name": 174, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.reflect.get": 193, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 288: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator");
      var h = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      h.default.prototype._promisePreloads = [];
      function o() {
        return {};
      }
      var f = !(h.default.prototype.registerPromisePreload = function(e3) {
        h.default.prototype._promisePreloads.push(e3);
      });
      h.default.prototype._setupPromisePreloads = function() {
        var e3 = true, t2 = false, r2 = void 0;
        try {
          for (var o3, n = this._promisePreloads[Symbol.iterator](); !(e3 = (o3 = n.next()).done); e3 = true) {
            var s2 = o3.value, i = this, a2 = s2.method, l = s2.addCallbacks, u = s2.legacyPreloadSetup, c = s2.target || this, d = c[a2].bind(c);
            if (c === h.default.prototype) {
              if (f) continue;
              i = null, d = c[a2];
            }
            c[a2] = this._wrapPromisePreload(i, d, l), u && (c[u.method] = this._legacyPreloadGenerator(i, u, c[a2]));
          }
        } catch (e4) {
          t2 = true, r2 = e4;
        } finally {
          try {
            e3 || null == n.return || n.return();
          } finally {
            if (t2) throw r2;
          }
        }
        f = true;
      }, h.default.prototype._wrapPromisePreload = function(e3, l, u) {
        var t2 = function() {
          for (var e4 = this, t3 = (this._incrementPreload(), null), r2 = null, o3 = arguments.length, n = new Array(o3), s2 = 0; s2 < o3; s2++) n[s2] = arguments[s2];
          if (u) for (var i = n.length - 1; 0 <= i && !r2 && "function" == typeof n[i]; i--) r2 = t3, t3 = n.pop();
          var a2 = Promise.resolve(l.apply(this, n));
          return t3 && a2.then(t3), r2 && a2.catch(r2), a2.then(function() {
            return e4._decrementPreload();
          }), a2;
        };
        return t2 = e3 ? t2.bind(e3) : t2;
      };
      h.default.prototype._legacyPreloadGenerator = function(e3, t2, s2) {
        var i = t2.createBaseObject || o, t2 = function() {
          var t3 = this;
          this._incrementPreload();
          for (var e4 = arguments.length, r2 = new Array(e4), o3 = 0; o3 < e4; o3++) r2[o3] = arguments[o3];
          var n = i.apply(this, r2);
          return s2.apply(this, r2).then(function(e5) {
            Object.assign(n, e5), t3._decrementPreload();
          }), n;
        };
        return t2 = e3 ? t2.bind(e3) : t2;
      };
    }, { "./main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 289: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l = (n = e2("./main")) && n.__esModule ? n : { default: n }, u = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== c(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = i();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("./constants"));
      function i() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), i = function() {
          return e3;
        }, e3);
      }
      function c(e3) {
        return (c = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("./p5.Graphics"), e2("./p5.Renderer2D"), e2("../webgl/p5.RendererGL");
      var d = "defaultCanvas0", n = (l.default.prototype.createCanvas = function(e3, t2, r2, o3) {
        var n2, s2, i2;
        if (l.default._validateParameters("createCanvas", arguments), arguments[2] instanceof HTMLCanvasElement ? (r2 = u.P2D, o3 = arguments[2]) : n2 = r2 || u.P2D, o3) (i2 = document.getElementById(d)) && i2.parentNode.removeChild(i2), i2 = o3, this._defaultGraphicsCreated = false;
        else {
          if (n2 === u.WEBGL) (i2 = document.getElementById(d)) && (i2.parentNode.removeChild(i2), s2 = this._renderer, this._elements = this._elements.filter(function(e4) {
            return e4 !== s2;
          })), (i2 = document.createElement("canvas")).id = d, i2.classList.add("p5Canvas");
          else if (this._defaultGraphicsCreated) i2 = this.canvas;
          else {
            i2 = o3 || document.createElement("canvas");
            for (var a2 = 0; document.getElementById("defaultCanvas".concat(a2)); ) a2++;
            d = "defaultCanvas".concat(a2), i2.id = d, i2.classList.add("p5Canvas");
          }
          this._setupDone || (i2.dataset.hidden = true, i2.style.visibility = "hidden"), (this._userNode || (0 === document.getElementsByTagName("main").length && (r2 = document.createElement("main"), document.body.appendChild(r2)), document.getElementsByTagName("main")[0])).appendChild(i2);
        }
        return n2 === u.WEBGL ? (this._setProperty("_renderer", new l.default.RendererGL(i2, this, true)), this._elements.push(this._renderer), e3 = (o3 = this._renderer._adjustDimensions(e3, t2)).adjustedWidth, t2 = o3.adjustedHeight) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new l.default.Renderer2D(i2, this, true)), this._defaultGraphicsCreated = true, this._elements.push(this._renderer)), this._renderer.resize(e3, t2), this._renderer._applyDefaults(), this._renderer;
      }, l.default.prototype.resizeCanvas = function(e3, t2, r2) {
        if (l.default._validateParameters("resizeCanvas", arguments), this._renderer) {
          var o3, n2, s2, i2 = {};
          for (o3 in this.drawingContext) {
            var a2 = this.drawingContext[o3];
            "object" !== c(a2) && "function" != typeof a2 && (i2[o3] = a2);
          }
          for (s2 in this._renderer instanceof l.default.RendererGL && (e3 = (n2 = this._renderer._adjustDimensions(e3, t2)).adjustedWidth, t2 = n2.adjustedHeight), this.width = e3, this.height = t2, this._renderer.resize(e3, t2), i2) try {
            this.drawingContext[s2] = i2[s2];
          } catch (e4) {
          }
          r2 || this.redraw();
        }
        this._addAccsOutput() && this._updateAccsOutput();
      }, l.default.prototype.noCanvas = function() {
        this.canvas && this.canvas.parentNode.removeChild(this.canvas);
      }, l.default.prototype.createGraphics = function(e3, t2) {
        for (var r2 = arguments.length, o3 = new Array(2 < r2 ? r2 - 2 : 0), n2 = 2; n2 < r2; n2++) o3[n2 - 2] = arguments[n2];
        return o3[0] instanceof HTMLCanvasElement && (o3[1] = o3[0], o3[0] = u.P2D), l.default._validateParameters("createGraphics", arguments), new l.default.Graphics(e3, t2, o3[0], this, o3[1]);
      }, l.default.prototype.createFramebuffer = function(e3) {
        return new l.default.Framebuffer(this, e3);
      }, l.default.prototype.clearDepth = function(e3) {
        this._assert3d("clearDepth"), this._renderer.clearDepth(e3);
      }, l.default.prototype.blendMode = function(e3) {
        l.default._validateParameters("blendMode", arguments), e3 === u.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), e3 = u.BLEND), this._renderer.blendMode(e3);
      }, l.default);
      r.default = n;
    }, { "../webgl/p5.RendererGL": 341, "./constants": 272, "./main": 283, "./p5.Graphics": 285, "./p5.Renderer2D": 287, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 290: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.slice"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l = n(e2("../main")), a2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = c();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../constants")), u = n(e2("../helpers"));
      function c() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), c = function() {
          return e3;
        }, e3);
      }
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function s2(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      e2("../friendly_errors/fes_core"), e2("../friendly_errors/file_errors"), e2("../friendly_errors/validate_params"), l.default.prototype._normalizeArcAngles = function(e3, t2, r2, o3, n2) {
        var s3;
        return e3 -= a2.TWO_PI * Math.floor(e3 / a2.TWO_PI), t2 -= a2.TWO_PI * Math.floor(t2 / a2.TWO_PI), s3 = Math.min(Math.abs(e3 - t2), a2.TWO_PI - Math.abs(e3 - t2)), n2 && (e3 = e3 <= a2.HALF_PI ? Math.atan(r2 / o3 * Math.tan(e3)) : e3 > a2.HALF_PI && e3 <= 3 * a2.HALF_PI ? Math.atan(r2 / o3 * Math.tan(e3)) + a2.PI : Math.atan(r2 / o3 * Math.tan(e3)) + a2.TWO_PI, t2 = t2 <= a2.HALF_PI ? Math.atan(r2 / o3 * Math.tan(t2)) : t2 > a2.HALF_PI && t2 <= 3 * a2.HALF_PI ? Math.atan(r2 / o3 * Math.tan(t2)) + a2.PI : Math.atan(r2 / o3 * Math.tan(t2)) + a2.TWO_PI), t2 < e3 && (t2 += a2.TWO_PI), { start: e3, stop: t2, correspondToSamePoint: s3 < 1e-5 };
      }, l.default.prototype.arc = function(e3, t2, r2, o3, n2, s3, i2, a3) {
        return l.default._validateParameters("arc", arguments), (this._renderer._doStroke || this._renderer._doFill) && n2 !== s3 && (n2 = this._toRadians(n2), s3 = this._toRadians(s3), e3 = u.default.modeAdjust(e3, t2, r2, o3, this._renderer._ellipseMode), (t2 = this._normalizeArcAngles(n2, s3, e3.w, e3.h, true)).correspondToSamePoint ? this._renderer.ellipse([e3.x, e3.y, e3.w, e3.h, a3]) : (this._renderer.arc(e3.x, e3.y, e3.w, e3.h, t2.start, t2.stop, i2, a3), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("arc", [e3.x, e3.y, e3.w, e3.h, t2.start, t2.stop, i2]))), this;
      }, l.default.prototype.ellipse = function(e3, t2, r2, o3, n2) {
        return l.default._validateParameters("ellipse", arguments), this._renderEllipse.apply(this, arguments);
      }, l.default.prototype.circle = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        l.default._validateParameters("circle", t2);
        var o3 = t2.slice(0, 2);
        return o3.push(t2[2], t2[2]), this._renderEllipse.apply(this, s2(o3));
      }, l.default.prototype._renderEllipse = function(e3, t2, r2, o3, n2) {
        return (this._renderer._doStroke || this._renderer._doFill) && (e3 = u.default.modeAdjust(e3, t2, r2, o3 = void 0 === o3 ? r2 : o3, this._renderer._ellipseMode), this._renderer.ellipse([e3.x, e3.y, e3.w, e3.h, n2]), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("ellipse", [e3.x, e3.y, e3.w, e3.h])), this;
      }, l.default.prototype.line = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return l.default._validateParameters("line", r2), this._renderer._doStroke && (e3 = this._renderer).line.apply(e3, r2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("line", r2), this;
      }, l.default.prototype.point = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return l.default._validateParameters("point", r2), this._renderer._doStroke && (1 === r2.length && r2[0] instanceof l.default.Vector ? this._renderer.point.call(this._renderer, r2[0].x, r2[0].y, r2[0].z) : ((e3 = this._renderer).point.apply(e3, r2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("point", r2))), this;
      }, l.default.prototype.quad = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return l.default._validateParameters("quad", r2), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && r2.length < 12 ? this._renderer.quad.call(this._renderer, r2[0], r2[1], 0, r2[2], r2[3], 0, r2[4], r2[5], 0, r2[6], r2[7], 0, r2[8], r2[9]) : ((e3 = this._renderer).quad.apply(e3, r2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("quadrilateral", r2))), this;
      }, l.default.prototype.rect = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return l.default._validateParameters("rect", t2), this._renderRect.apply(this, t2);
      }, l.default.prototype.square = function(e3, t2, r2, o3, n2, s3, i2) {
        return l.default._validateParameters("square", arguments), this._renderRect.call(this, e3, t2, r2, r2, o3, n2, s3, i2);
      }, l.default.prototype._renderRect = function() {
        if (this._renderer._doStroke || this._renderer._doFill) {
          3 === arguments.length && (arguments[3] = arguments[2]);
          for (var e3 = u.default.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t2 = (this._renderer._rectMode === a2.CORNER && (e3.w = arguments[2], e3.h = arguments[3]), [e3.x, e3.y, e3.w, e3.h]), r2 = 4; r2 < arguments.length; r2++) t2[r2] = arguments[r2];
          this._renderer.rect(t2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("rectangle", [e3.x, e3.y, e3.w, e3.h]);
        }
        return this;
      }, l.default.prototype.triangle = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return l.default._validateParameters("triangle", t2), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(t2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("triangle", t2), this;
      };
      e2 = l.default;
      r.default = e2;
    }, { "../constants": 272, "../friendly_errors/fes_core": 274, "../friendly_errors/file_errors": 275, "../friendly_errors/validate_params": 278, "../helpers": 279, "../main": 283, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 291: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (l = e2("../main")) && l.__esModule ? l : { default: l }, s2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      n.default.prototype.ellipseMode = function(e3) {
        return n.default._validateParameters("ellipseMode", arguments), e3 !== s2.CORNER && e3 !== s2.CORNERS && e3 !== s2.RADIUS && e3 !== s2.CENTER || (this._renderer._ellipseMode = e3), this;
      }, n.default.prototype.noSmooth = function() {
        return this._renderer.isP3D ? this.setAttributes("antialias", false) : "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = false), this;
      }, n.default.prototype.rectMode = function(e3) {
        return n.default._validateParameters("rectMode", arguments), e3 !== s2.CORNER && e3 !== s2.CORNERS && e3 !== s2.RADIUS && e3 !== s2.CENTER || (this._renderer._rectMode = e3), this;
      }, n.default.prototype.smooth = function() {
        return this._renderer.isP3D ? this.setAttributes("antialias", true) : "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = true), this;
      }, n.default.prototype.strokeCap = function(e3) {
        return n.default._validateParameters("strokeCap", arguments), e3 !== s2.ROUND && e3 !== s2.SQUARE && e3 !== s2.PROJECT || this._renderer.strokeCap(e3), this;
      }, n.default.prototype.strokeJoin = function(e3) {
        return n.default._validateParameters("strokeJoin", arguments), e3 !== s2.ROUND && e3 !== s2.BEVEL && e3 !== s2.MITER || this._renderer.strokeJoin(e3), this;
      }, n.default.prototype.strokeWeight = function(e3) {
        return n.default._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e3), this;
      };
      var l = n.default;
      r.default = l;
    }, { "../constants": 272, "../main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 292: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l = (o = e2("../main")) && o.__esModule ? o : { default: o };
      e2("../friendly_errors/fes_core"), e2("../friendly_errors/file_errors"), e2("../friendly_errors/validate_params"), l.default.prototype.bezier = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return l.default._validateParameters("bezier", r2), (this._renderer._doStroke || this._renderer._doFill) && (e3 = this._renderer).bezier.apply(e3, r2), this;
      }, l.default.prototype.bezierDetail = function(e3) {
        return l.default._validateParameters("bezierDetail", arguments), this._bezierDetail = e3, this;
      }, l.default.prototype.bezierPoint = function(e3, t2, r2, o3, n) {
        l.default._validateParameters("bezierPoint", arguments);
        var s2 = 1 - n;
        return Math.pow(s2, 3) * e3 + 3 * Math.pow(s2, 2) * n * t2 + 3 * s2 * Math.pow(n, 2) * r2 + Math.pow(n, 3) * o3;
      }, l.default.prototype.bezierTangent = function(e3, t2, r2, o3, n) {
        l.default._validateParameters("bezierTangent", arguments);
        var s2 = 1 - n;
        return 3 * o3 * Math.pow(n, 2) - 3 * r2 * Math.pow(n, 2) + 6 * r2 * s2 * n - 6 * t2 * s2 * n + 3 * t2 * Math.pow(s2, 2) - 3 * e3 * Math.pow(s2, 2);
      }, l.default.prototype.curve = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return l.default._validateParameters("curve", r2), this._renderer._doStroke && (e3 = this._renderer).curve.apply(e3, r2), this;
      }, l.default.prototype.curveDetail = function(e3) {
        return l.default._validateParameters("curveDetail", arguments), this._curveDetail = e3 < 3 ? 3 : e3, this;
      }, l.default.prototype.curveTightness = function(e3) {
        return l.default._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e3, this;
      }, l.default.prototype.curvePoint = function(e3, t2, r2, o3, n) {
        l.default._validateParameters("curvePoint", arguments);
        var s2 = this._renderer._curveTightness, i = n * n * n, a2 = n * n;
        return e3 * ((s2 - 1) / 2 * i + (1 - s2) * a2 + (s2 - 1) / 2 * n) + t2 * ((s2 + 3) / 2 * i + (-5 - s2) / 2 * a2 + 1) + r2 * ((-3 - s2) / 2 * i + (s2 + 2) * a2 + (1 - s2) / 2 * n) + o3 * ((1 - s2) / 2 * i + (s2 - 1) / 2 * a2);
      }, l.default.prototype.curveTangent = function(e3, t2, r2, o3, n) {
        l.default._validateParameters("curveTangent", arguments);
        var s2 = this._renderer._curveTightness, i = n * n * 3, n = 2 * n;
        return e3 * ((s2 - 1) / 2 * i + (1 - s2) * n + (s2 - 1) / 2) + t2 * ((s2 + 3) / 2 * i + (-5 - s2) / 2 * n) + r2 * ((-3 - s2) / 2 * i + (s2 + 2) * n + (1 - s2) / 2) + o3 * ((1 - s2) / 2 * i + (s2 - 1) / 2 * n);
      };
      var o = l.default;
      r.default = o;
    }, { "../friendly_errors/fes_core": 274, "../friendly_errors/file_errors": 275, "../friendly_errors/validate_params": 278, "../main": 283 }], 293: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.slice"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var a2 = (y = e2("../main")) && y.__esModule ? y : { default: y }, l = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = u();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../constants"));
      function u() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), u = function() {
          return e3;
        }, e3);
      }
      var n = null, c = [], d = [], h = false, s2 = false, f = false, p = false, m = true, y = (a2.default.prototype.beginContour = function() {
        return this._renderer.isP3D ? this._renderer.beginContour() : (d = [], p = true), this;
      }, a2.default.prototype.beginShape = function(e3) {
        var t2;
        return a2.default._validateParameters("beginShape", arguments), this._renderer.isP3D ? (t2 = this._renderer).beginShape.apply(t2, arguments) : (n = e3 === l.POINTS || e3 === l.LINES || e3 === l.TRIANGLES || e3 === l.TRIANGLE_FAN || e3 === l.TRIANGLE_STRIP || e3 === l.QUADS || e3 === l.QUAD_STRIP ? e3 : null, c = [], d = []), this;
      }, a2.default.prototype.bezierVertex = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        if (a2.default._validateParameters("bezierVertex", r2), this._renderer.isP3D) (e3 = this._renderer).bezierVertex.apply(e3, r2);
        else if (0 === c.length) a2.default._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");
        else {
          h = true;
          for (var n2 = [], s3 = 0; s3 < r2.length; s3++) n2[s3] = r2[s3];
          n2.isVert = false, (p ? d : c).push(n2);
        }
        return this;
      }, a2.default.prototype.curveVertex = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        return a2.default._validateParameters("curveVertex", r2), this._renderer.isP3D ? (e3 = this._renderer).curveVertex.apply(e3, r2) : (s2 = true, this.vertex(r2[0], r2[1])), this;
      }, a2.default.prototype.endContour = function() {
        if (!this._renderer.isP3D) {
          var e3 = d[0].slice();
          e3.isVert = d[0].isVert, e3.moveTo = false, d.push(e3), m && (c.push(c[0]), m = false);
          for (var t2 = 0; t2 < d.length; t2++) c.push(d[t2]);
        }
        return this;
      }, a2.default.prototype.endShape = function(e3) {
        var t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1;
        if (a2.default._validateParameters("endShape", arguments), t2 < 1 && (console.log("🌸 p5.js says: You can not have less than one instance"), t2 = 1), this._renderer.isP3D) this._renderer.endShape(e3, s2, h, f, p, n, t2);
        else {
          if (1 !== t2 && console.log("🌸 p5.js says: Instancing is only supported in WebGL2 mode"), 0 === c.length) return this;
          if (!this._renderer._doStroke && !this._renderer._doFill) return this;
          t2 = e3 === l.CLOSE;
          t2 && !p && c.push(c[0]), this._renderer.endShape(e3, c, s2, h, f, p, n), m = !(p = f = h = s2 = false), t2 && c.pop();
        }
        return this;
      }, a2.default.prototype.quadraticVertex = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        if (a2.default._validateParameters("quadraticVertex", r2), this._renderer.isP3D) (e3 = this._renderer).quadraticVertex.apply(e3, r2);
        else {
          if (this._contourInited) return (e3 = {}).x = r2[0], e3.y = r2[1], e3.x3 = r2[2], e3.y3 = r2[3], e3.type = l.QUADRATIC, this._contourVertices.push(e3), this;
          if (0 < c.length) {
            f = true;
            for (var n2 = [], s3 = 0; s3 < r2.length; s3++) n2[s3] = r2[s3];
            n2.isVert = false, (p ? d : c).push(n2);
          } else a2.default._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
        }
        return this;
      }, a2.default.prototype.vertex = function(e3, t2, r2, o3, n2) {
        var s3;
        return this._renderer.isP3D ? (s3 = this._renderer).vertex.apply(s3, arguments) : ((s3 = []).isVert = true, s3[0] = e3, s3[1] = t2, s3[2] = 0, s3[3] = 0, s3[4] = 0, s3[5] = this._renderer._getFill(), s3[6] = this._renderer._getStroke(), r2 && (s3.moveTo = r2), (p ? (0 === d.length && (s3.moveTo = true), d) : c).push(s3)), this;
      }, a2.default.prototype.normal = function(e3, t2, r2) {
        var o3;
        return this._assert3d("normal"), a2.default._validateParameters("normal", arguments), (o3 = this._renderer).normal.apply(o3, arguments), this;
      }, a2.default);
      r.default = y;
    }, { "../constants": 272, "../main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 294: [function(e2, t, r) {
    }, {}], 295: [function(e2, t, r) {
      e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.assign"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.noLoop = function() {
        this._loop = false;
      }, e2.default.prototype.loop = function() {
        this._loop || (this._loop = true, this._setupDone && this._draw());
      }, e2.default.prototype.isLooping = function() {
        return this._loop;
      }, e2.default.prototype.push = function() {
        this._styles.push({ props: { _colorMode: this._colorMode }, renderer: this._renderer.push() });
      }, e2.default.prototype.pop = function() {
        var e3 = this._styles.pop();
        e3 ? (this._renderer.pop(e3.renderer), Object.assign(this, e3.props)) : console.warn("pop() was called without matching push()");
      }, e2.default.prototype.redraw = function(e3) {
        if (!this._inUserDraw && this._setupDone) {
          var t2 = parseInt(e3), r2 = ((isNaN(t2) || t2 < 1) && (t2 = 1), this._isGlobal ? window : this);
          if ("function" == typeof r2.draw) {
            void 0 === r2.setup && r2.scale(r2._pixelDensity, r2._pixelDensity);
            for (var o = 0; o < t2; o++) {
              r2.resetMatrix(), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._updateAccsOutput(), r2._renderer.isP3D && r2._renderer._update(), r2._setProperty("frameCount", r2.frameCount + 1), this.callRegisteredHooksFor("pre"), this._inUserDraw = true;
              try {
                r2.draw();
              } finally {
                this._inUserDraw = false;
              }
              this.callRegisteredHooksFor("post");
            }
          }
        }
      };
      e2 = e2.default;
      r.default = e2;
    }, { "./main": 283, "core-js/modules/es.object.assign": 183 }], 296: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (e2 = e2("./main")) && e2.__esModule ? e2 : { default: e2 };
      function o(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      n.default.prototype.applyMatrix = function() {
        var e3 = (arguments.length <= 0 ? void 0 : arguments[0]) instanceof Object.getPrototypeOf(Uint8Array);
        return Array.isArray(arguments.length <= 0 ? void 0 : arguments[0]) || e3 ? (e3 = this._renderer).applyMatrix.apply(e3, o(arguments.length <= 0 ? void 0 : arguments[0])) : (e3 = this._renderer).applyMatrix.apply(e3, arguments), this;
      }, n.default.prototype.resetMatrix = function() {
        return this._renderer.resetMatrix(), this;
      }, n.default.prototype.rotate = function(e3, t2) {
        return n.default._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e3), t2), this;
      }, n.default.prototype.rotateX = function(e3) {
        return this._assert3d("rotateX"), n.default._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e3)), this;
      }, n.default.prototype.rotateY = function(e3) {
        return this._assert3d("rotateY"), n.default._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e3)), this;
      }, n.default.prototype.rotateZ = function(e3) {
        return this._assert3d("rotateZ"), n.default._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e3)), this;
      }, n.default.prototype.scale = function(e3, t2, r2) {
        var o3;
        return n.default._validateParameters("scale", arguments), e3 instanceof n.default.Vector ? (e3 = (o3 = e3).x, t2 = o3.y, r2 = o3.z) : Array.isArray(e3) && (e3 = (o3 = e3)[0], t2 = o3[1], r2 = o3[2] || 1), isNaN(t2) ? t2 = r2 = e3 : isNaN(r2) && (r2 = 1), this._renderer.scale(e3, t2, r2), this;
      }, n.default.prototype.shearX = function(e3) {
        n.default._validateParameters("shearX", arguments);
        e3 = this._toRadians(e3);
        return this._renderer.applyMatrix(1, 0, Math.tan(e3), 1, 0, 0), this;
      }, n.default.prototype.shearY = function(e3) {
        n.default._validateParameters("shearY", arguments);
        e3 = this._toRadians(e3);
        return this._renderer.applyMatrix(1, Math.tan(e3), 0, 1, 0, 0), this;
      }, n.default.prototype.translate = function(e3, t2, r2) {
        return n.default._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e3, t2, r2) : this._renderer.translate(e3, t2), this;
      };
      e2 = n.default;
      r.default = e2;
    }, { "./main": 283, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/web.dom-collections.iterator": 246 }], 297: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.ends-with"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator");
      var n = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function s2(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      n.default.prototype.storeItem = function(e3, t2) {
        "string" != typeof e3 && console.log("The argument that you passed to storeItem() - ".concat(e3, " is not a string.")), e3.endsWith("p5TypeID") && console.log("The argument that you passed to storeItem() - ".concat(e3, " must not end with 'p5TypeID'.")), void 0 === t2 && console.log("You cannot store undefined variables using storeItem().");
        var r2 = i(t2);
        switch (r2) {
          case "number":
          case "boolean":
            t2 = t2.toString();
            break;
          case "object":
            t2 instanceof n.default.Color ? r2 = "p5.Color" : t2 instanceof n.default.Vector && (r2 = "p5.Vector", t2 = [t2.x, t2.y, t2.z]), t2 = JSON.stringify(t2);
        }
        localStorage.setItem(e3, t2);
        e3 = "".concat(e3, "p5TypeID");
        localStorage.setItem(e3, r2);
      }, n.default.prototype.getItem = function(e3) {
        var t2 = localStorage.getItem(e3), r2 = localStorage.getItem("".concat(e3, "p5TypeID"));
        if (void 0 === r2) console.log("Unable to determine type of item stored under ".concat(e3, "in local storage. Did you save the item with something other than setItem()?"));
        else if (null !== t2) switch (r2) {
          case "number":
            t2 = parseFloat(t2);
            break;
          case "boolean":
            t2 = "true" === t2;
            break;
          case "object":
            t2 = JSON.parse(t2);
            break;
          case "p5.Color":
            t2 = JSON.parse(t2), t2 = this.color.apply(this, s2(t2.levels));
            break;
          case "p5.Vector":
            t2 = JSON.parse(t2), t2 = this.createVector.apply(this, s2(t2));
        }
        return t2;
      }, n.default.prototype.clearStorage = function() {
        var t2 = this;
        Object.keys(localStorage).forEach(function(e3) {
          e3.endsWith("p5TypeID") && t2.removeItem(e3.replace("p5TypeID", ""));
        });
      }, n.default.prototype.removeItem = function(e3) {
        "string" != typeof e3 && console.log("The argument that you passed to removeItem() - ".concat(e3, " is not a string.")), localStorage.removeItem(e3), localStorage.removeItem("".concat(e3, "p5TypeID"));
      };
    }, { "../core/main": 283, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.ends-with": 198, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 298: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function n(e3) {
        return (n = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.object.keys"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var s2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function i(e3, t2) {
        if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
        e3.prototype = Object.create(t2 && t2.prototype, { constructor: { value: e3, writable: true, configurable: true } }), t2 && a2(e3, t2);
      }
      function a2(e3, t2) {
        return (a2 = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function l(r2) {
        return function() {
          var e3, t2 = u(r2), t2 = (e3 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = u(this).constructor, Reflect.construct(t2, arguments, e3)) : t2.apply(this, arguments), this);
          if (!e3 || "object" !== n(e3) && "function" != typeof e3) {
            if (void 0 !== t2) return t2;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function u(e3) {
        return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function c(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      }
      function d(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function h(e3, t2, r2) {
        t2 && d(e3.prototype, t2);
      }
      s2.default.prototype.createStringDict = function(e3, t2) {
        return s2.default._validateParameters("createStringDict", arguments), new s2.default.StringDict(e3, t2);
      }, s2.default.prototype.createNumberDict = function(e3, t2) {
        return s2.default._validateParameters("createNumberDict", arguments), new s2.default.NumberDict(e3, t2);
      }, s2.default.TypedDict = function() {
        function r2(e3, t2) {
          return c(this, r2), e3 instanceof Object ? this.data = e3 : (this.data = {}, this.data[e3] = t2), this;
        }
        return h(r2, [{ key: "size", value: function() {
          return Object.keys(this.data).length;
        } }, { key: "hasKey", value: function(e3) {
          return this.data.hasOwnProperty(e3);
        } }, { key: "get", value: function(e3) {
          if (this.data.hasOwnProperty(e3)) return this.data[e3];
          console.log("".concat(e3, " does not exist in this Dictionary"));
        } }, { key: "set", value: function(e3, t2) {
          this._validate(t2) ? this.data[e3] = t2 : console.log("Those values dont work for this dictionary type.");
        } }, { key: "_addObj", value: function(e3) {
          for (var t2 in e3) this.set(t2, e3[t2]);
        } }, { key: "create", value: function(e3, t2) {
          e3 instanceof Object && void 0 === t2 ? this._addObj(e3) : void 0 !== e3 ? this.set(e3, t2) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
        } }, { key: "clear", value: function() {
          this.data = {};
        } }, { key: "remove", value: function(e3) {
          if (!this.data.hasOwnProperty(e3)) throw new Error("".concat(e3, " does not exist in this Dictionary"));
          delete this.data[e3];
        } }, { key: "print", value: function() {
          for (var e3 in this.data) console.log("key:".concat(e3, " value:").concat(this.data[e3]));
        } }, { key: "saveTable", value: function(e3) {
          var t2, r3 = "";
          for (t2 in this.data) r3 += "".concat(t2, ",").concat(this.data[t2], "\n");
          var o3 = new Blob([r3], { type: "text/csv" });
          s2.default.prototype.downloadFile(o3, e3 || "mycsv", "csv");
        } }, { key: "saveJSON", value: function(e3, t2) {
          s2.default.prototype.saveJSON(this.data, e3, t2);
        } }, { key: "_validate", value: function(e3) {
          return true;
        } }]), r2;
      }(), s2.default.StringDict = function() {
        i(n2, s2.default.TypedDict);
        var o3 = l(n2);
        function n2() {
          c(this, n2);
          for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
          return o3.call.apply(o3, [this].concat(t2));
        }
        return h(n2, [{ key: "_validate", value: function(e3) {
          return "string" == typeof e3;
        } }]), n2;
      }(), s2.default.NumberDict = function() {
        i(n2, s2.default.TypedDict);
        var o3 = l(n2);
        function n2() {
          c(this, n2);
          for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
          return o3.call.apply(o3, [this].concat(t2));
        }
        return h(n2, [{ key: "_validate", value: function(e3) {
          return "number" == typeof e3;
        } }, { key: "add", value: function(e3, t2) {
          this.data.hasOwnProperty(e3) ? this.data[e3] += t2 : console.log("The key - ".concat(e3, " does not exist in this dictionary."));
        } }, { key: "sub", value: function(e3, t2) {
          this.add(e3, -t2);
        } }, { key: "mult", value: function(e3, t2) {
          this.data.hasOwnProperty(e3) ? this.data[e3] *= t2 : console.log("The key - ".concat(e3, " does not exist in this dictionary."));
        } }, { key: "div", value: function(e3, t2) {
          this.data.hasOwnProperty(e3) ? this.data[e3] /= t2 : console.log("The key - ".concat(e3, " does not exist in this dictionary."));
        } }, { key: "_valueTest", value: function(e3) {
          if (0 === Object.keys(this.data).length) throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
          if (1 === Object.keys(this.data).length) return this.data[Object.keys(this.data)[0]];
          var t2, r2 = this.data[Object.keys(this.data)[0]];
          for (t2 in this.data) this.data[t2] * e3 < r2 * e3 && (r2 = this.data[t2]);
          return r2;
        } }, { key: "minValue", value: function() {
          return this._valueTest(1);
        } }, { key: "maxValue", value: function() {
          return this._valueTest(-1);
        } }, { key: "_keyTest", value: function(e3) {
          if (0 === Object.keys(this.data).length) throw new Error("Unable to use minValue on an empty NumberDict");
          if (1 === Object.keys(this.data).length) return Object.keys(this.data)[0];
          for (var t2 = Object.keys(this.data)[0], r2 = 1; r2 < Object.keys(this.data).length; r2++) Object.keys(this.data)[r2] * e3 < t2 * e3 && (t2 = Object.keys(this.data)[r2]);
          return t2;
        } }, { key: "minKey", value: function() {
          return this._keyTest(1);
        } }, { key: "maxKey", value: function() {
          return this._keyTest(-1);
        } }]), n2;
      }();
      e2 = s2.default.TypedDict;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 299: [function(t, r, o) {
      function n(e2) {
        return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e3) {
          return typeof e3;
        } : function(e3) {
          return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : typeof e3;
        })(e2);
      }
      t("core-js/modules/es.symbol"), t("core-js/modules/es.symbol.description"), t("core-js/modules/es.symbol.iterator"), t("core-js/modules/es.array.every"), t("core-js/modules/es.array.filter"), t("core-js/modules/es.array.for-each"), t("core-js/modules/es.array.from"), t("core-js/modules/es.array.index-of"), t("core-js/modules/es.array.iterator"), t("core-js/modules/es.array.map"), t("core-js/modules/es.array.slice"), t("core-js/modules/es.array.splice"), t("core-js/modules/es.function.name"), t("core-js/modules/es.object.assign"), t("core-js/modules/es.object.get-prototype-of"), t("core-js/modules/es.object.to-string"), t("core-js/modules/es.promise"), t("core-js/modules/es.reflect.construct"), t("core-js/modules/es.regexp.exec"), t("core-js/modules/es.regexp.to-string"), t("core-js/modules/es.string.iterator"), t("core-js/modules/es.string.replace"), t("core-js/modules/es.string.split"), t("core-js/modules/es.string.trim"), t("core-js/modules/web.dom-collections.for-each"), t("core-js/modules/web.dom-collections.iterator"), t("core-js/modules/web.url"), t("core-js/modules/es.symbol"), t("core-js/modules/es.symbol.description"), t("core-js/modules/es.symbol.iterator"), t("core-js/modules/es.array.every"), t("core-js/modules/es.array.filter"), t("core-js/modules/es.array.for-each"), t("core-js/modules/es.array.from"), t("core-js/modules/es.array.index-of"), t("core-js/modules/es.array.iterator"), t("core-js/modules/es.array.map"), t("core-js/modules/es.array.slice"), t("core-js/modules/es.array.splice"), t("core-js/modules/es.function.name"), t("core-js/modules/es.object.assign"), t("core-js/modules/es.object.to-string"), t("core-js/modules/es.promise"), t("core-js/modules/es.regexp.exec"), t("core-js/modules/es.regexp.to-string"), t("core-js/modules/es.string.iterator"), t("core-js/modules/es.string.replace"), t("core-js/modules/es.string.split"), t("core-js/modules/es.string.trim"), t("core-js/modules/web.dom-collections.for-each"), t("core-js/modules/web.dom-collections.iterator"), t("core-js/modules/web.url"), Object.defineProperty(o, "__esModule", { value: true }), o.default = void 0;
      var f = (t = t("../core/main")) && t.__esModule ? t : { default: t };
      function s2(e2, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e2, o3.key, o3);
        }
      }
      function a2(e2, t2, r2) {
        t2 && s2(e2.prototype, t2), r2 && s2(e2, r2);
      }
      function l(e2, t2) {
        return (l = Object.setPrototypeOf || function(e3, t3) {
          return e3.__proto__ = t3, e3;
        })(e2, t2);
      }
      function u(o3) {
        return function() {
          var e2, t2, r2 = i(o3);
          return e2 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e3) {
              }
            }
          }() ? (e2 = i(this).constructor, Reflect.construct(r2, arguments, e2)) : r2.apply(this, arguments), r2 = this, !(t2 = e2) || "object" !== p(t2) && "function" != typeof t2 ? c(r2) : t2;
        };
      }
      function c(e2) {
        if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e2;
      }
      function i(e2) {
        return (i = Object.setPrototypeOf ? Object.getPrototypeOf : function(e3) {
          return e3.__proto__ || Object.getPrototypeOf(e3);
        })(e2);
      }
      function d(e2, t2) {
        if (!(e2 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      }
      function p(e2) {
        return (p = "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? function(e3) {
          return n(e3);
        } : function(e3) {
          return e3 && "function" == typeof Symbol && e3.constructor === Symbol && e3 !== Symbol.prototype ? "symbol" : n(e3);
        })(e2);
      }
      function m(e2, t2, r2) {
        (t2._userNode || document.body).appendChild(e2);
        r2 = new (r2 ? f.default.MediaElement : f.default.Element)(e2, t2);
        return t2._elements.push(r2), r2;
      }
      f.default.prototype.select = function(e2, t2) {
        f.default._validateParameters("select", arguments);
        t2 = this._getContainer(t2).querySelector(e2);
        return t2 ? this._wrapElement(t2) : null;
      }, f.default.prototype.selectAll = function(e2, t2) {
        f.default._validateParameters("selectAll", arguments);
        var r2 = [], o3 = this._getContainer(t2).querySelectorAll(e2);
        if (o3) for (var n2 = 0; n2 < o3.length; n2++) {
          var s3 = this._wrapElement(o3[n2]);
          r2.push(s3);
        }
        return r2;
      }, f.default.prototype._getContainer = function(e2) {
        var t2 = document;
        return "string" == typeof e2 ? t2 = document.querySelector(e2) || document : e2 instanceof f.default.Element ? t2 = e2.elt : e2 instanceof HTMLElement && (t2 = e2), t2;
      }, f.default.prototype._wrapElement = function(e2) {
        var t2, r2 = Array.prototype.slice.call(e2.children);
        return "INPUT" === e2.tagName && "checkbox" === e2.type ? ((t2 = new f.default.Element(e2, this)).checked = function() {
          return 0 === arguments.length ? this.elt.checked : (this.elt.checked = !(arguments.length <= 0 || !arguments[0]), this);
        }, t2) : "VIDEO" === e2.tagName || "AUDIO" === e2.tagName ? new f.default.MediaElement(e2, this) : "SELECT" === e2.tagName ? this.createSelect(new f.default.Element(e2, this)) : 0 < r2.length && r2.every(function(e3) {
          return "INPUT" === e3.tagName || "LABEL" === e3.tagName;
        }) && ("DIV" === e2.tagName || "SPAN" === e2.tagName) ? this.createRadio(new f.default.Element(e2, this)) : new f.default.Element(e2, this);
      }, f.default.prototype.removeElements = function(e2) {
        f.default._validateParameters("removeElements", arguments);
        this._elements.filter(function(e3) {
          return !(e3.elt instanceof HTMLCanvasElement);
        }).map(function(e3) {
          return e3.remove();
        });
      }, f.default.Element.prototype.changed = function(e2) {
        return f.default.Element._adjustListener("change", e2, this), this;
      }, f.default.Element.prototype.input = function(e2) {
        return f.default.Element._adjustListener("input", e2, this), this;
      }, f.default.prototype.createDiv = function() {
        var e2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t2 = document.createElement("div");
        return t2.innerHTML = e2, m(t2, this);
      }, f.default.prototype.createP = function() {
        var e2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t2 = document.createElement("p");
        return t2.innerHTML = e2, m(t2, this);
      }, f.default.prototype.createSpan = function() {
        var e2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t2 = document.createElement("span");
        return t2.innerHTML = e2, m(t2, this);
      }, f.default.prototype.createImg = function() {
        f.default._validateParameters("createImg", arguments);
        var t2, r2 = document.createElement("img"), o3 = arguments;
        return 1 < o3.length && "string" == typeof o3[1] && (r2.alt = o3[1]), 2 < o3.length && "string" == typeof o3[2] && (r2.crossOrigin = o3[2]), r2.src = o3[0], t2 = m(r2, this), r2.addEventListener("load", function() {
          t2.width = r2.offsetWidth || r2.width, t2.height = r2.offsetHeight || r2.height;
          var e2 = o3[o3.length - 1];
          "function" == typeof e2 && e2(t2);
        }), t2;
      }, f.default.prototype.createA = function(e2, t2, r2) {
        f.default._validateParameters("createA", arguments);
        var o3 = document.createElement("a");
        return o3.href = e2, o3.innerHTML = t2, r2 && (o3.target = r2), m(o3, this);
      }, f.default.prototype.createSlider = function(e2, t2, r2, o3) {
        f.default._validateParameters("createSlider", arguments);
        var n2 = document.createElement("input");
        return n2.type = "range", n2.min = e2, n2.max = t2, 0 === o3 ? n2.step = 1e-18 : o3 && (n2.step = o3), "number" == typeof r2 && (n2.value = r2), m(n2, this);
      }, f.default.prototype.createButton = function(e2, t2) {
        f.default._validateParameters("createButton", arguments);
        var r2 = document.createElement("button");
        return r2.innerHTML = e2, t2 && (r2.value = t2), m(r2, this);
      }, f.default.prototype.createCheckbox = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
        f.default._validateParameters("createCheckbox", t2);
        var o3 = document.createElement("div"), n2 = document.createElement("input"), s3 = (n2.type = "checkbox", document.createElement("label")), i2 = (s3.appendChild(n2), o3.appendChild(s3), m(o3, this));
        return i2.checked = function() {
          var e3 = i2.elt.firstElementChild.getElementsByTagName("input")[0];
          if (e3) {
            if (0 === arguments.length) return e3.checked;
            e3.checked = !(arguments.length <= 0 || !arguments[0]);
          }
          return i2;
        }, this.value = function(e3) {
          return i2.value = e3, this;
        }, t2[0] && (i2.value(t2[0]), (o3 = document.createElement("span")).innerHTML = t2[0], s3.appendChild(o3)), t2[1] && (n2.checked = true), i2;
      }, f.default.prototype.createSelect = function() {
        for (var e2, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        f.default._validateParameters("createSelect", r2);
        var n2, s3 = r2[0];
        return s3 instanceof f.default.Element && s3.elt instanceof HTMLSelectElement ? this.elt = (e2 = s3).elt : s3 instanceof HTMLSelectElement ? (e2 = m(s3, this), this.elt = s3) : (n2 = document.createElement("select"), s3 && "boolean" == typeof s3 && n2.setAttribute("multiple", "true"), e2 = m(n2, this), this.elt = n2), e2.option = function(e3, t3) {
          var r3;
          if (void 0 !== e3) {
            for (var o4, n3 = 0; n3 < this.elt.length; n3 += 1) if (this.elt[n3].textContent === e3) {
              r3 = n3;
              break;
            }
            void 0 !== r3 ? false === t3 ? this.elt.remove(r3) : this.elt[r3].value = t3 : ((o4 = document.createElement("option")).textContent = e3, o4.value = void 0 === t3 ? e3 : t3, this.elt.appendChild(o4), this._pInst._elements.push(o4));
          }
        }, e2.selected = function(e3) {
          if (void 0 !== e3) {
            for (var t3 = 0; t3 < this.elt.length; t3 += 1) this.elt[t3].value.toString() === e3.toString() && (this.elt.selectedIndex = t3);
            return this;
          }
          if (this.elt.getAttribute("multiple")) {
            var r3 = [], o4 = true, n3 = false, s4 = void 0;
            try {
              for (var i2, a3 = this.elt.selectedOptions[Symbol.iterator](); !(o4 = (i2 = a3.next()).done); o4 = true) {
                var l2 = i2.value;
                r3.push(l2.value);
              }
            } catch (e4) {
              n3 = true, s4 = e4;
            } finally {
              try {
                o4 || null == a3.return || a3.return();
              } finally {
                if (n3) throw s4;
              }
            }
            return r3;
          }
          return this.elt.value;
        }, e2.disable = function(e3) {
          if ("string" == typeof e3) for (var t3 = 0; t3 < this.elt.length; t3++) this.elt[t3].value.toString() === e3 && (this.elt[t3].disabled = true, this.elt[t3].selected = false);
          else this.elt.disabled = true;
          return this;
        }, e2.enable = function(e3) {
          if ("string" == typeof e3) for (var t3 = 0; t3 < this.elt.length; t3++) this.elt[t3].value.toString() === e3 && (this.elt[t3].disabled = false, this.elt[t3].selected = false);
          else {
            this.elt.disabled = false;
            for (var r3 = 0; r3 < this.elt.length; r3++) this.elt[r3].disabled = false, this.elt[r3].selected = false;
          }
          return this;
        }, e2;
      };
      var y = 0;
      function h(e2, t2, r2, o3) {
        var n2 = document.createElement(t2), s3 = ("string" == typeof (r2 = r2 || "") && (r2 = [r2]), true), t2 = false, i2 = void 0;
        try {
          for (var a3, l2 = r2[Symbol.iterator](); !(s3 = (a3 = l2.next()).done); s3 = true) {
            var u2 = a3.value, c2 = document.createElement("source");
            c2.setAttribute("src", u2), n2.appendChild(c2);
          }
        } catch (e3) {
          t2 = true, i2 = e3;
        } finally {
          try {
            s3 || null == l2.return || l2.return();
          } finally {
            if (t2) throw i2;
          }
        }
        var d2 = m(n2, e2, true);
        return d2.loadedmetadata = false, n2.addEventListener("loadedmetadata", function() {
          d2.width = n2.videoWidth, d2.height = n2.videoHeight, 0 === d2.elt.width && (d2.elt.width = n2.videoWidth), 0 === d2.elt.height && (d2.elt.height = n2.videoHeight), d2.presetPlaybackRate && (d2.elt.playbackRate = d2.presetPlaybackRate, delete d2.presetPlaybackRate), d2.loadedmetadata = true;
        }), "function" == typeof o3 && n2.addEventListener("canplaythrough", function e3() {
          o3(d2), n2.removeEventListener("canplaythrough", e3);
        }), d2;
      }
      f.default.prototype.createRadio = function() {
        function t2(e3) {
          return e3 instanceof HTMLInputElement && "radio" === e3.type;
        }
        function d2(e3) {
          return e3 instanceof HTMLLabelElement;
        }
        var h2, e2, r2, o3 = arguments.length <= 0 ? void 0 : arguments[0];
        o3 instanceof f.default.Element && (o3.elt instanceof HTMLDivElement || o3.elt instanceof HTMLSpanElement) ? (h2 = o3, this.elt = o3.elt) : o3 instanceof HTMLDivElement || o3 instanceof HTMLSpanElement ? (h2 = m(o3, this), e2 = this.elt = o3, "string" == typeof (arguments.length <= 1 ? void 0 : arguments[1]) && (r2 = arguments.length <= 1 ? void 0 : arguments[1])) : ("string" == typeof o3 && (r2 = o3), e2 = document.createElement("div"), h2 = m(e2, this), this.elt = e2), h2._name = r2 || "radioOption_".concat(y++);
        return h2._getOptionsArray = function() {
          return Array.from(this.elt.children).filter(function(e3) {
            return t2(e3) || d2(e3) && t2(e3.firstElementChild);
          }).map(function(e3) {
            return t2(e3) ? e3 : e3.firstElementChild;
          });
        }, h2.option = function(e3, t3) {
          var r3, o4, n2, s3 = true, i2 = false, a3 = void 0;
          try {
            for (var l2, u2 = h2._getOptionsArray()[Symbol.iterator](); !(s3 = (l2 = u2.next()).done); s3 = true) {
              var c2 = l2.value;
              if (c2.value === e3) {
                r3 = c2;
                break;
              }
            }
          } catch (e4) {
            i2 = true, a3 = e4;
          } finally {
            try {
              s3 || null == u2.return || u2.return();
            } finally {
              if (i2) throw a3;
            }
          }
          return void 0 === r3 && ((r3 = document.createElement("input")).setAttribute("type", "radio"), r3.setAttribute("value", e3)), r3.setAttribute("name", h2._name), d2(r3.parentElement) ? o4 = r3.parentElement : (o4 = document.createElement("label")).insertAdjacentElement("afterbegin", r3), o4.lastElementChild instanceof HTMLSpanElement ? n2 = o4.lastElementChild : (n2 = document.createElement("span"), r3.insertAdjacentElement("afterend", n2)), n2.innerHTML = void 0 === t3 ? e3 : t3, this.elt.appendChild(o4), r3;
        }, h2.remove = function(e3) {
          var t3 = true, r3 = false, o4 = void 0;
          try {
            for (var n2, s3 = h2._getOptionsArray()[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) {
              var i2 = n2.value;
              if (i2.value === e3) return void (d2(i2.parentElement) ? i2.parentElement : i2).remove();
            }
          } catch (e4) {
            r3 = true, o4 = e4;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r3) throw o4;
            }
          }
        }, h2.value = function() {
          var e3 = "", t3 = true, r3 = false, o4 = void 0;
          try {
            for (var n2, s3 = h2._getOptionsArray()[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) {
              var i2 = n2.value;
              if (i2.checked) {
                e3 = i2.value;
                break;
              }
            }
          } catch (e4) {
            r3 = true, o4 = e4;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r3) throw o4;
            }
          }
          return e3;
        }, h2.selected = function(e3) {
          var t3 = null;
          if (void 0 === e3) {
            var r3 = true, o4 = false, n2 = void 0;
            try {
              for (var s3, i2 = h2._getOptionsArray()[Symbol.iterator](); !(r3 = (s3 = i2.next()).done); r3 = true) {
                var a3 = s3.value;
                if (a3.checked) {
                  t3 = a3;
                  break;
                }
              }
            } catch (e4) {
              o4 = true, n2 = e4;
            } finally {
              try {
                r3 || null == i2.return || i2.return();
              } finally {
                if (o4) throw n2;
              }
            }
          } else {
            h2._getOptionsArray().forEach(function(e4) {
              e4.checked = false, e4.removeAttribute("checked");
            });
            var l2 = true, o4 = false, n2 = void 0;
            try {
              for (var u2, c2 = h2._getOptionsArray()[Symbol.iterator](); !(l2 = (u2 = c2.next()).done); l2 = true) {
                var d3 = u2.value;
                d3.value === e3 && (d3.setAttribute("checked", true), d3.checked = true, t3 = d3);
              }
            } catch (e4) {
              o4 = true, n2 = e4;
            } finally {
              try {
                l2 || null == c2.return || c2.return();
              } finally {
                if (o4) throw n2;
              }
            }
          }
          return t3;
        }, h2.disable = function() {
          var e3 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t3 = true, r3 = false, o4 = void 0;
          try {
            for (var n2, s3 = h2._getOptionsArray()[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) n2.value.setAttribute("disabled", e3);
          } catch (e4) {
            r3 = true, o4 = e4;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r3) throw o4;
            }
          }
        }, h2;
      }, f.default.prototype.createColorPicker = function(e2) {
        f.default._validateParameters("createColorPicker", arguments);
        var t2 = document.createElement("input");
        return t2.type = "color", e2 ? e2 instanceof f.default.Color ? t2.value = e2.toString("#rrggbb") : (f.default.prototype._colorMode = "rgb", f.default.prototype._colorMaxes = { rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1] }, t2.value = f.default.prototype.color(e2).toString("#rrggbb")) : t2.value = "#000000", (t2 = m(t2, this)).color = function() {
          return e2 && (e2.mode && (f.default.prototype._colorMode = e2.mode), e2.maxes && (f.default.prototype._colorMaxes = e2.maxes)), f.default.prototype.color(this.elt.value);
        }, t2;
      }, f.default.prototype.createInput = function() {
        var e2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "text", r2 = (f.default._validateParameters("createInput", arguments), document.createElement("input"));
        return r2.setAttribute("value", e2), r2.setAttribute("type", t2), m(r2, this);
      }, f.default.prototype.createFileInput = function(a3) {
        var e2, t2 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        f.default._validateParameters("createFileInput", arguments);
        if (window.File && window.FileReader && window.FileList && window.Blob) return (e2 = document.createElement("input")).setAttribute("type", "file"), t2 && e2.setAttribute("multiple", true), e2.addEventListener("change", function(e3) {
          var t3 = true, r2 = false, o3 = void 0;
          try {
            for (var n2, s3 = e3.target.files[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) {
              var i2 = n2.value;
              f.default.File._load(i2, a3);
            }
          } catch (e4) {
            r2 = true, o3 = e4;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r2) throw o3;
            }
          }
        }, false), m(e2, this);
        console.log("The File APIs are not fully supported in this browser. Cannot create element.");
      }, f.default.prototype.createVideo = function(e2, t2) {
        return f.default._validateParameters("createVideo", arguments), h(this, "video", e2, t2);
      }, f.default.prototype.createAudio = function(e2, t2) {
        return f.default._validateParameters("createAudio", arguments), h(this, "audio", e2, t2);
      }, f.default.prototype.VIDEO = "video", f.default.prototype.AUDIO = "audio", void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}), void 0 === navigator.mediaDevices.getUserMedia && (navigator.mediaDevices.getUserMedia = function(r2) {
        var o3 = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        return o3 ? new Promise(function(e2, t2) {
          o3.call(navigator, r2, e2, t2);
        }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
      }), f.default.prototype.createCapture = function() {
        for (var e2 = arguments.length, t2 = new Array(e2), r2 = 0; r2 < e2; r2++) t2[r2] = arguments[r2];
        if (f.default._validateParameters("createCapture", t2), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) throw new DOMException("getUserMedia not supported in this browser");
        for (var o3, n2 = true, s3 = true, i2 = false, a3 = 0, l2 = t2; a3 < l2.length; a3++) {
          var u2 = l2[a3];
          u2 === f.default.prototype.VIDEO ? s3 = false : u2 === f.default.prototype.AUDIO ? n2 = false : "object" === p(u2) ? (void 0 !== u2.flipped && (i2 = u2.flipped, delete u2.flipped), c2 = Object.assign({}, c2, u2)) : "function" == typeof u2 && (o3 = u2);
        }
        var c2 = Object.assign({}, { video: n2, audio: s3 }, c2), d2 = document.createElement("video"), h2 = (d2.setAttribute("playsinline", ""), navigator.mediaDevices.getUserMedia(c2).then(function(t3) {
          try {
            "srcObject" in d2 ? d2.srcObject = t3 : d2.src = window.URL.createObjectURL(t3);
          } catch (e3) {
            d2.src = t3;
          }
        }).catch(function(e3) {
          "NotFoundError" === e3.name && f.default._friendlyError("No webcam found on this device", "createCapture"), "NotAllowedError" === e3.name && f.default._friendlyError("Access to the camera was denied", "createCapture"), console.error(e3);
        }), m(d2, this, true));
        return h2.loadedmetadata = false, d2.addEventListener("loadedmetadata", function() {
          d2.play(), d2.width ? (h2.width = d2.width, h2.height = d2.height, i2 && (h2.elt.style.transform = "scaleX(-1)")) : (h2.width = h2.elt.width = d2.videoWidth, h2.height = h2.elt.height = d2.videoHeight), h2.loadedmetadata = true, o3 && o3(d2.srcObject);
        }), h2.flipped = i2, h2;
      }, f.default.prototype.createElement = function(e2, t2) {
        f.default._validateParameters("createElement", arguments);
        e2 = document.createElement(e2);
        return void 0 !== t2 && (e2.innerHTML = t2), m(e2, this);
      }, f.default.Element.prototype.addClass = function(e2) {
        return this.elt.className ? this.hasClass(e2) || (this.elt.className = this.elt.className + " " + e2) : this.elt.className = e2, this;
      }, f.default.Element.prototype.removeClass = function(e2) {
        return this.elt.classList.remove(e2), this;
      }, f.default.Element.prototype.hasClass = function(e2) {
        return this.elt.classList.contains(e2);
      }, f.default.Element.prototype.toggleClass = function(e2) {
        return this.elt.classList.contains(e2) ? this.elt.classList.remove(e2) : this.elt.classList.add(e2), this;
      }, f.default.Element.prototype.child = function(e2) {
        return void 0 === e2 ? this.elt.childNodes : ("string" == typeof e2 ? ("#" === e2[0] && (e2 = e2.substring(1)), e2 = document.getElementById(e2)) : e2 instanceof f.default.Element && (e2 = e2.elt), e2 instanceof HTMLElement && this.elt.appendChild(e2), this);
      }, f.default.Element.prototype.center = function(e2) {
        var t2 = this.elt.style.display, r2 = "none" === this.elt.style.display, o3 = "none" === this.parent().style.display, n2 = { x: this.elt.offsetLeft, y: this.elt.offsetTop }, s3 = (r2 && this.show(), o3 && this.parent().show(), this.elt.style.display = "block", this.position(0, 0), Math.abs(this.parent().offsetWidth - this.elt.offsetWidth)), i2 = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);
        return "both" === e2 || void 0 === e2 ? this.position(s3 / 2 + this.parent().offsetLeft, i2 / 2 + this.parent().offsetTop) : "horizontal" === e2 ? this.position(s3 / 2 + this.parent().offsetLeft, n2.y) : "vertical" === e2 && this.position(n2.x, i2 / 2 + this.parent().offsetTop), this.style("display", t2), r2 && this.hide(), o3 && this.parent().hide(), this;
      }, f.default.Element.prototype.html = function() {
        return 0 === arguments.length ? this.elt.innerHTML : (arguments.length <= 1 || !arguments[1] ? this.elt.innerHTML = arguments.length <= 0 ? void 0 : arguments[0] : this.elt.insertAdjacentHTML("beforeend", arguments.length <= 0 ? void 0 : arguments[0]), this);
      }, f.default.Element.prototype.position = function() {
        return 0 === arguments.length ? { x: this.elt.offsetLeft, y: this.elt.offsetTop } : (this.elt.style.position = "static" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "fixed" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "relative" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "sticky" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "initial" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "inherit" !== (arguments.length <= 2 ? void 0 : arguments[2]) ? "absolute" : arguments.length <= 2 ? void 0 : arguments[2], this.elt.style.left = (arguments.length <= 0 ? void 0 : arguments[0]) + "px", this.elt.style.top = (arguments.length <= 1 ? void 0 : arguments[1]) + "px", this.x = arguments.length <= 0 ? void 0 : arguments[0], this.y = arguments.length <= 1 ? void 0 : arguments[1], this);
      }, f.default.Element.prototype._translate = function() {
        this.elt.style.position = "absolute";
        var e2 = "";
        return this.elt.style.transform && (e2 = (e2 = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), 2 === arguments.length ? this.elt.style.transform = "translate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "px, " + (arguments.length <= 1 ? void 0 : arguments[1]) + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "px," + (arguments.length <= 1 ? void 0 : arguments[1]) + "px," + (arguments.length <= 2 ? void 0 : arguments[2]) + "px)", this.elt.parentElement.style.perspective = 3 === arguments.length ? "1000px" : (arguments.length <= 3 ? void 0 : arguments[3]) + "px"), this.elt.style.transform += e2, this;
      }, f.default.Element.prototype._rotate = function() {
        var e2 = "";
        return this.elt.style.transform && (e2 = (e2 = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), 1 === arguments.length ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg)" : 2 === arguments.length ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg, " + (arguments.length <= 1 ? void 0 : arguments[1]) + "deg)" : 3 === arguments.length && (this.elt.style.transform = "rotateX(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg)", this.elt.style.transform += "rotateY(" + (arguments.length <= 1 ? void 0 : arguments[1]) + "deg)", this.elt.style.transform += "rotateZ(" + (arguments.length <= 2 ? void 0 : arguments[2]) + "deg)"), this.elt.style.transform += e2, this;
      }, f.default.Element.prototype.style = function(e2, t2) {
        if (void 0 === (t2 = t2 instanceof f.default.Color ? "rgba(" + t2.levels[0] + "," + t2.levels[1] + "," + t2.levels[2] + "," + t2.levels[3] / 255 + ")" : t2)) {
          if (-1 === e2.indexOf(":")) return window.getComputedStyle(this.elt).getPropertyValue(e2);
          for (var r2 = e2.split(";"), o3 = 0; o3 < r2.length; o3++) {
            var n2 = r2[o3].split(":");
            n2[0] && n2[1] && (this.elt.style[n2[0].trim()] = n2[1].trim());
          }
        } else this.elt.style[e2] = t2, "width" !== e2 && "height" !== e2 && "left" !== e2 && "top" !== e2 || (t2 = window.getComputedStyle(this.elt).getPropertyValue(e2).replace(/[^\d.]/g, ""), this[e2] = Math.round(parseFloat(t2, 10)));
        return this;
      }, f.default.Element.prototype.attribute = function(e2, t2) {
        if (null == this.elt.firstChild || "checkbox" !== this.elt.firstChild.type && "radio" !== this.elt.firstChild.type) return void 0 === t2 ? this.elt.getAttribute(e2) : (this.elt.setAttribute(e2, t2), this);
        if (void 0 === t2) return this.elt.firstChild.getAttribute(e2);
        for (var r2 = 0; r2 < this.elt.childNodes.length; r2++) this.elt.childNodes[r2].setAttribute(e2, t2);
      }, f.default.Element.prototype.removeAttribute = function(e2) {
        if (null != this.elt.firstChild && ("checkbox" === this.elt.firstChild.type || "radio" === this.elt.firstChild.type)) for (var t2 = 0; t2 < this.elt.childNodes.length; t2++) this.elt.childNodes[t2].removeAttribute(e2);
        return this.elt.removeAttribute(e2), this;
      }, f.default.Element.prototype.value = function() {
        return 0 < arguments.length ? (this.elt.value = arguments.length <= 0 ? void 0 : arguments[0], this) : "range" === this.elt.type ? parseFloat(this.elt.value) : this.elt.value;
      }, f.default.Element.prototype.show = function() {
        return this.elt.style.display = "block", this;
      }, f.default.Element.prototype.hide = function() {
        return this.elt.style.display = "none", this;
      }, f.default.Element.prototype.size = function(e2, t2) {
        if (0 === arguments.length) return { width: this.elt.offsetWidth, height: this.elt.offsetHeight };
        var r2 = e2, o3 = t2, n2 = f.default.prototype.AUTO;
        if (r2 !== n2 || o3 !== n2) {
          if (r2 === n2 ? r2 = t2 * this.width / this.height : o3 === n2 && (o3 = e2 * this.height / this.width), this.elt instanceof HTMLCanvasElement) {
            var s3, i2 = {}, a3 = this.elt.getContext("2d");
            for (s3 in a3) i2[s3] = a3[s3];
            for (s3 in this.elt.setAttribute("width", r2 * this._pInst._pixelDensity), this.elt.setAttribute("height", o3 * this._pInst._pixelDensity), this.elt.style.width = r2 + "px", this.elt.style.height = o3 + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), i2) this.elt.getContext("2d")[s3] = i2[s3];
          } else this.elt.style.width = r2 + "px", this.elt.style.height = o3 + "px", this.elt.width = r2, this.elt.height = o3;
          this.width = r2, this.height = o3, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", r2), this._pInst._setProperty("height", o3));
        }
        return this;
      }, f.default.Element.prototype.remove = function() {
        this instanceof f.default.MediaElement && (this.stop(), null !== (t2 = this.elt.srcObject) && t2.getTracks().forEach(function(e3) {
          e3.stop();
        }));
        var e2, t2 = this._pInst._elements.indexOf(this);
        for (e2 in -1 !== t2 && this._pInst._elements.splice(t2, 1), this._events) this.elt.removeEventListener(e2, this._events[e2]);
        this.elt && this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
      }, f.default.Element.prototype.drop = function(a3, l2) {
        var e2;
        return window.File && window.FileReader && window.FileList && window.Blob ? (this._dragDisabled || (this._dragDisabled = true, this.elt.addEventListener("dragover", e2 = function(e3) {
          e3.preventDefault();
        }), this.elt.addEventListener("dragleave", e2)), f.default.Element._attachListener("drop", function(e3) {
          e3.preventDefault(), "function" == typeof l2 && l2.call(this, e3);
          var e3 = e3.dataTransfer.files, t2 = true, r2 = false, o3 = void 0;
          try {
            for (var n2, s3 = e3[Symbol.iterator](); !(t2 = (n2 = s3.next()).done); t2 = true) {
              var i2 = n2.value;
              f.default.File._load(i2, a3);
            }
          } catch (e4) {
            r2 = true, o3 = e4;
          } finally {
            try {
              t2 || null == s3.return || s3.return();
            } finally {
              if (r2) throw o3;
            }
          }
        }, this)) : console.log("The File APIs are not fully supported in this browser."), this;
      }, f.default.Element.prototype.draggable = function(r2) {
        var e2, o3 = "ontouchstart" in window, n2 = 0, s3 = 0, i2 = 0, a3 = 0, l2 = o3 ? "touchend" : "mouseup", u2 = o3 ? "touchmove" : "mousemove";
        function c2(e3) {
          var t2;
          e3 = e3 || window.event, a3 = o3 ? (t2 = e3.changedTouches, n2 = i2 - parseInt(t2[0].clientX), s3 = a3 - parseInt(t2[0].clientY), i2 = parseInt(t2[0].clientX), parseInt(t2[0].clientY)) : (n2 = i2 - parseInt(e3.clientX), s3 = a3 - parseInt(e3.clientY), i2 = parseInt(e3.clientX), parseInt(e3.clientY)), r2.style.left = r2.offsetLeft - n2 + "px", r2.style.top = r2.offsetTop - s3 + "px";
        }
        function d2() {
          document.removeEventListener(l2, d2, false), document.removeEventListener(u2, c2, false);
        }
        return void 0 === r2 ? e2 = r2 = this.elt : r2 !== this.elt && r2.elt !== this.elt && (r2 = r2.elt, e2 = this.elt), e2.addEventListener(o3 ? "touchstart" : "mousedown", function(e3) {
          {
            var t2;
            e3 = e3 || window.event, a3 = o3 ? (t2 = e3.changedTouches, i2 = parseInt(t2[0].clientX), parseInt(t2[0].clientY)) : (i2 = parseInt(e3.clientX), parseInt(e3.clientY));
          }
          return document.addEventListener(l2, d2, false), document.addEventListener(u2, c2, false), false;
        }, false), e2.style.cursor = "move", this;
      };
      function g(e2, t2, r2, o3) {
        d(this, g), this.callback = e2, this.time = t2, this.id = r2, this.val = o3;
      }
      t = function(t2) {
        var r2 = i2;
        if ("function" != typeof t2 && null !== t2) throw new TypeError("Super expression must either be null or a function");
        r2.prototype = Object.create(t2 && t2.prototype, { constructor: { value: r2, writable: true, configurable: true } }), t2 && l(r2, t2);
        var s3 = u(i2);
        function i2(o3, e2) {
          d(this, i2);
          var n2 = c(e2 = s3.call(this, o3, e2));
          return e2.elt.crossOrigin = "anonymous", e2._prevTime = 0, e2._cueIDCounter = 0, e2._cues = [], e2.pixels = [], e2._pixelsState = c(e2), e2._pixelDensity = 1, e2._modified = false, e2._frameOnCanvas = -1, Object.defineProperty(n2, "src", { get: function() {
            var e3 = n2.elt.children[0].src, t3 = n2.elt.src === window.location.href ? "" : n2.elt.src;
            return e3 === window.location.href ? t3 : e3;
          }, set: function(e3) {
            for (var t3 = 0; t3 < n2.elt.children.length; t3++) n2.elt.removeChild(n2.elt.children[t3]);
            var r3 = document.createElement("source");
            r3.src = e3, o3.appendChild(r3), n2.elt.src = e3, n2.modified = true;
          } }), n2._onended = function() {
          }, n2.elt.onended = function() {
            n2._onended(n2);
          }, e2;
        }
        return a2(i2, [{ key: "play", value: function() {
          var e2;
          return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), 1 < this.elt.readyState || this.elt.load(), (e2 = this.elt.play()) && e2.catch && e2.catch(function(e3) {
            "NotAllowedError" === e3.name ? console.error(e3) : console.error("Media play method encountered an unexpected error", e3);
          }), this;
        } }, { key: "stop", value: function() {
          return this.elt.pause(), this.elt.currentTime = 0, this;
        } }, { key: "pause", value: function() {
          return this.elt.pause(), this;
        } }, { key: "loop", value: function() {
          return this.elt.setAttribute("loop", true), this.play(), this;
        } }, { key: "noLoop", value: function() {
          return this.elt.removeAttribute("loop"), this;
        } }, { key: "_setupAutoplayFailDetection", value: function() {
          var t3 = setTimeout(function() {
            console.error(e);
          }, 500);
          this.elt.addEventListener("play", function() {
            return clearTimeout(t3);
          }, { passive: true, once: true });
        } }, { key: "autoplay", value: function(e2) {
          var t3 = this, r3 = this.elt.getAttribute("autoplay");
          return this.elt.setAttribute("autoplay", e2), e2 && !r3 && (e2 = function() {
            return t3._setupAutoplayFailDetection();
          }, 4 === this.elt.readyState ? e2() : this.elt.addEventListener("canplay", e2, { passive: true, once: true })), this;
        } }, { key: "volume", value: function(e2) {
          if (void 0 === e2) return this.elt.volume;
          this.elt.volume = e2;
        } }, { key: "speed", value: function(e2) {
          if (void 0 === e2) return this.presetPlaybackRate || this.elt.playbackRate;
          this.loadedmetadata ? this.elt.playbackRate = e2 : this.presetPlaybackRate = e2;
        } }, { key: "time", value: function(e2) {
          return void 0 === e2 ? this.elt.currentTime : (this.elt.currentTime = e2, this);
        } }, { key: "duration", value: function() {
          return this.elt.duration;
        } }, { key: "_ensureCanvas", value: function() {
          this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d"), this.setModified(true));
          var e2 = this._frameOnCanvas !== this._pInst.frameCount;
          this.loadedmetadata && e2 && (this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, this.width = this.canvas.width, this.height = this.canvas.height), this.drawingContext.clearRect(0, 0, this.canvas.width, this.canvas.height), true === this.flipped && (this.drawingContext.save(), this.drawingContext.scale(-1, 1), this.drawingContext.translate(-this.canvas.width, 0)), this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), true === this.flipped && this.drawingContext.restore(), this.setModified(true), this._frameOnCanvas = this._pInst.frameCount);
        } }, { key: "loadPixels", value: function() {
          this._ensureCanvas();
          for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0; r3 < e2; r3++) t3[r3] = arguments[r3];
          return f.default.Renderer2D.prototype.loadPixels.apply(this, t3);
        } }, { key: "updatePixels", value: function(e2, t3, r3, o3) {
          return this.loadedmetadata && (this._ensureCanvas(), f.default.Renderer2D.prototype.updatePixels.call(this, e2, t3, r3, o3)), this.setModified(true), this;
        } }, { key: "get", value: function() {
          this._ensureCanvas();
          for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0; r3 < e2; r3++) t3[r3] = arguments[r3];
          return f.default.Renderer2D.prototype.get.apply(this, t3);
        } }, { key: "_getPixel", value: function() {
          this.loadPixels();
          for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0; r3 < e2; r3++) t3[r3] = arguments[r3];
          return f.default.Renderer2D.prototype._getPixel.apply(this, t3);
        } }, { key: "set", value: function(e2, t3, r3) {
          this.loadedmetadata && (this._ensureCanvas(), f.default.Renderer2D.prototype.set.call(this, e2, t3, r3), this.setModified(true));
        } }, { key: "copy", value: function() {
          this._ensureCanvas();
          for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0; r3 < e2; r3++) t3[r3] = arguments[r3];
          f.default.prototype.copy.apply(this, t3);
        } }, { key: "mask", value: function() {
          this.loadPixels(), this.setModified(true);
          for (var e2 = arguments.length, t3 = new Array(e2), r3 = 0; r3 < e2; r3++) t3[r3] = arguments[r3];
          f.default.Image.prototype.mask.apply(this, t3);
        } }, { key: "isModified", value: function() {
          return this._modified;
        } }, { key: "setModified", value: function(e2) {
          this._modified = e2;
        } }, { key: "onended", value: function(e2) {
          return this._onended = e2, this;
        } }, { key: "connect", value: function(e2) {
          var t3, r3;
          if ("function" == typeof f.default.prototype.getAudioContext) t3 = f.default.prototype.getAudioContext(), r3 = f.default.soundOut.input;
          else try {
            r3 = (t3 = e2.context).destination;
          } catch (e3) {
            throw "connect() is meant to be used with Web Audio API or p5.sound.js";
          }
          this.audioSourceNode || (this.audioSourceNode = t3.createMediaElementSource(this.elt), this.audioSourceNode.connect(r3)), e2 ? e2.input ? this.audioSourceNode.connect(e2.input) : this.audioSourceNode.connect(e2) : this.audioSourceNode.connect(r3);
        } }, { key: "disconnect", value: function() {
          if (!this.audioSourceNode) throw "nothing to disconnect";
          this.audioSourceNode.disconnect();
        } }, { key: "showControls", value: function() {
          this.elt.style["text-align"] = "inherit", this.elt.controls = true;
        } }, { key: "hideControls", value: function() {
          this.elt.controls = false;
        } }, { key: "addCue", value: function(e2, t3, r3) {
          var o3 = this._cueIDCounter++, t3 = new g(t3, e2, o3, r3);
          return this._cues.push(t3), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), o3;
        } }, { key: "removeCue", value: function(e2) {
          for (var t3 = 0; t3 < this._cues.length; t3++) this._cues[t3].id === e2 && (console.log(e2), this._cues.splice(t3, 1));
          0 === this._cues.length && (this.elt.ontimeupdate = null);
        } }, { key: "clearCues", value: function() {
          this._cues = [], this.elt.ontimeupdate = null;
        } }, { key: "_onTimeUpdate", value: function() {
          for (var e2 = this.time(), t3 = 0; t3 < this._cues.length; t3++) {
            var r3 = this._cues[t3].time, o3 = this._cues[t3].val;
            this._prevTime < r3 && r3 <= e2 && this._cues[t3].callback(o3);
          }
          this._prevTime = e2;
        } }]), i2;
      }(f.default.Element), f.default.MediaElement = t, t = function() {
        function r2(e2, t2) {
          d(this, r2), this.file = e2, this._pInst = t2;
          t2 = e2.type.split("/");
          this.type = t2[0], this.subtype = t2[1], this.name = e2.name, this.size = e2.size, this.data = void 0;
        }
        return a2(r2, null, [{ key: "_createLoader", value: function(o3, n2) {
          var e2 = new FileReader();
          return e2.onload = function(e3) {
            var t2, r3 = new f.default.File(o3);
            "application/json" === r3.file.type ? r3.data = JSON.parse(e3.target.result) : "text/xml" === r3.file.type ? (t2 = new DOMParser().parseFromString(e3.target.result, "text/xml"), r3.data = new f.default.XML(t2.documentElement)) : r3.data = e3.target.result, n2(r3);
          }, e2;
        } }, { key: "_load", value: function(e2, t2) {
          var r3;
          /^text\//.test(e2.type) || "application/json" === e2.type ? f.default.File._createLoader(e2, t2).readAsText(e2) : /^(video|audio)\//.test(e2.type) ? ((r3 = new f.default.File(e2)).data = URL.createObjectURL(e2), t2(r3)) : f.default.File._createLoader(e2, t2).readAsDataURL(e2);
        } }]), r2;
      }(), f.default.File = t, t = f.default;
      o.default = t;
    }, { "../core/main": 283, "core-js/modules/es.array.every": 155, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.splice": 171, "core-js/modules/es.function.name": 174, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.trim": 209, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246, "core-js/modules/web.url": 248 }], 300: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      o.default.prototype.deviceOrientation = 1 < window.innerWidth / window.innerHeight ? "landscape" : "portrait", o.default.prototype.accelerationX = 0, o.default.prototype.accelerationY = 0, o.default.prototype.accelerationZ = 0, o.default.prototype.pAccelerationX = 0, o.default.prototype.pAccelerationY = 0, o.default.prototype.pAccelerationZ = 0, o.default.prototype._updatePAccelerations = function() {
        this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
      }, o.default.prototype.rotationX = 0, o.default.prototype.rotationY = 0, o.default.prototype.rotationZ = 0, o.default.prototype.pRotationX = 0, o.default.prototype.pRotationY = 0;
      var i = o.default.prototype.pRotationZ = 0, a2 = 0, l = 0, u = "clockwise", c = "clockwise", d = "clockwise", h = (o.default.prototype.pRotateDirectionX = void 0, o.default.prototype.pRotateDirectionY = void 0, o.default.prototype.pRotateDirectionZ = void 0, o.default.prototype._updatePRotations = function() {
        this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
      }, o.default.prototype.turnAxis = void 0, 0.5), f = 30, e2 = (o.default.prototype.setMoveThreshold = function(e3) {
        o.default._validateParameters("setMoveThreshold", arguments), h = e3;
      }, o.default.prototype.setShakeThreshold = function(e3) {
        o.default._validateParameters("setShakeThreshold", arguments), f = e3;
      }, o.default.prototype._ondeviceorientation = function(e3) {
        this._updatePRotations(), this._setProperty("rotationX", this._fromDegrees(e3.beta)), this._setProperty("rotationY", this._fromDegrees(e3.gamma)), this._setProperty("rotationZ", this._fromDegrees(e3.alpha)), this._handleMotion();
      }, o.default.prototype._ondevicemotion = function(e3) {
        this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e3.acceleration.x), this._setProperty("accelerationY", 2 * e3.acceleration.y), this._setProperty("accelerationZ", 2 * e3.acceleration.z), this._handleMotion();
      }, o.default.prototype._handleMotion = function() {
        90 === window.orientation || -90 === window.orientation ? this._setProperty("deviceOrientation", "landscape") : 0 === window.orientation ? this._setProperty("deviceOrientation", "portrait") : void 0 === window.orientation && this._setProperty("deviceOrientation", "undefined");
        var e3, t2, r2, o3, n, s2 = this._isGlobal ? window : this;
        "function" == typeof s2.deviceMoved && (Math.abs(this.accelerationX - this.pAccelerationX) > h || Math.abs(this.accelerationY - this.pAccelerationY) > h || Math.abs(this.accelerationZ - this.pAccelerationZ) > h) && s2.deviceMoved(), "function" == typeof s2.deviceTurned && (t2 = this._toDegrees(this.rotationX) + 180, r2 = this._toDegrees(this.pRotationX) + 180, e3 = i + 180, 0 < t2 - r2 && t2 - r2 < 270 || t2 - r2 < -270 ? u = "clockwise" : (t2 - r2 < 0 || 270 < t2 - r2) && (u = "counter-clockwise"), u !== this.pRotateDirectionX && (e3 = t2), 90 < Math.abs(t2 - e3) && Math.abs(t2 - e3) < 270 && (e3 = t2, this._setProperty("turnAxis", "X"), s2.deviceTurned()), this.pRotateDirectionX = u, i = e3 - 180, r2 = this._toDegrees(this.rotationY) + 180, t2 = this._toDegrees(this.pRotationY) + 180, e3 = a2 + 180, 0 < r2 - t2 && r2 - t2 < 270 || r2 - t2 < -270 ? c = "clockwise" : (r2 - t2 < 0 || 270 < r2 - this.pRotationY) && (c = "counter-clockwise"), c !== this.pRotateDirectionY && (e3 = r2), 90 < Math.abs(r2 - e3) && Math.abs(r2 - e3) < 270 && (e3 = r2, this._setProperty("turnAxis", "Y"), s2.deviceTurned()), this.pRotateDirectionY = c, a2 = e3 - 180, 0 < (t2 = this._toDegrees(this.rotationZ)) - (r2 = this._toDegrees(this.pRotationZ)) && t2 - r2 < 270 || t2 - r2 < -270 ? d = "clockwise" : (t2 - r2 < 0 || 270 < t2 - r2) && (d = "counter-clockwise"), d !== this.pRotateDirectionZ && (l = t2), 90 < Math.abs(t2 - l) && Math.abs(t2 - l) < 270 && (l = t2, this._setProperty("turnAxis", "Z"), s2.deviceTurned()), this.pRotateDirectionZ = d, this._setProperty("turnAxis", void 0)), "function" == typeof s2.deviceShaken && (null !== this.pAccelerationX && (o3 = Math.abs(this.accelerationX - this.pAccelerationX), n = Math.abs(this.accelerationY - this.pAccelerationY)), f < o3 + n && s2.deviceShaken());
      }, o.default);
      r.default = e2;
    }, { "../core/main": 283 }], 301: [function(e2, t, r) {
      e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.string.repeat"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.string.repeat"), e2("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      o.default.prototype.isKeyPressed = false, o.default.prototype.keyIsPressed = false, o.default.prototype.key = "", o.default.prototype.keyCode = 0, o.default.prototype._onkeydown = function(e3) {
        var t2;
        e3.repeat ? this._setProperty("isKeyRepeated", true) : (this._setProperty("isKeyRepeated", false), this._setProperty("isKeyPressed", true), this._setProperty("keyIsPressed", true), this._setProperty("keyCode", e3.which), this._downKeys[e3.which] = true, this._setProperty("key", e3.key || String.fromCharCode(e3.which) || e3.which), e3.metaKey && (this._metaKeys || (this._metaKeys = []), this._metaKeys.push(e3.which)), "function" != typeof (t2 = this._isGlobal ? window : this).keyPressed || e3.charCode || false === t2.keyPressed(e3) && e3.preventDefault());
      }, o.default.prototype._onkeyup = function(e3) {
        var t2 = this, r2 = (this._setProperty("isKeyPressed", false), this._setProperty("keyIsPressed", false), this._setProperty("_lastKeyCodePressed", this._keyCode), this._downKeys[e3.which] = false, "Meta" === e3.key && this._metaKeys && (this._metaKeys.forEach(function(e4) {
          t2._downKeys[e4] = false;
        }), this._metaKeys = []), this._isGlobal ? window : this);
        "function" == typeof r2.keyReleased && false === r2.keyReleased(e3) && e3.preventDefault();
      }, o.default.prototype._onkeypress = function(e3) {
        var t2;
        e3.which === this._lastKeyCodeTyped && this.isKeyRepeated || (this._setProperty("_lastKeyCodeTyped", e3.which), this._setProperty("key", e3.key || String.fromCharCode(e3.which) || e3.which), "function" == typeof (t2 = this._isGlobal ? window : this).keyTyped && false === t2.keyTyped(e3) && e3.preventDefault());
      }, o.default.prototype._onblur = function(e3) {
        this._downKeys = {};
      }, o.default.prototype.keyIsDown = function(e3) {
        return o.default._validateParameters("keyIsDown", arguments), this._downKeys[e3] || false;
      }, o.default.prototype._areDownKeys = function() {
        for (var e3 in this._downKeys) if (this._downKeys.hasOwnProperty(e3) && true === this._downKeys[e3]) return true;
        return false;
      };
      e2 = o.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.string.repeat": 203, "core-js/modules/web.dom-collections.for-each": 245 }], 302: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, s2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      n.default.prototype.movedX = 0, n.default.prototype.movedY = 0, n.default.prototype._hasMouseInteracted = false, n.default.prototype.mouseX = 0, n.default.prototype.mouseY = 0, n.default.prototype.pmouseX = 0, n.default.prototype.pmouseY = 0, n.default.prototype.winMouseX = 0, n.default.prototype.winMouseY = 0, n.default.prototype.pwinMouseX = 0, n.default.prototype.pwinMouseY = 0, n.default.prototype.mouseButton = 0, n.default.prototype.mouseIsPressed = false, n.default.prototype._updateNextMouseCoords = function(e3) {
        var t2, r2, o3, n2;
        null !== this._curElement && (!e3.touches || 0 < e3.touches.length) && (t2 = this._curElement.elt, r2 = this.width, o3 = this.height, (e3 = e3) && !e3.clientX && (e3.touches ? e3 = e3.touches[0] : e3.changedTouches && (e3 = e3.changedTouches[0])), n2 = t2.getBoundingClientRect(), r2 = t2.scrollWidth / r2 || 1, t2 = t2.scrollHeight / o3 || 1, o3 = { x: (e3.clientX - n2.left) / r2, y: (e3.clientY - n2.top) / t2, winX: e3.clientX, winY: e3.clientY, id: e3.identifier }, this._setProperty("mouseX", o3.x), this._setProperty("mouseY", o3.y), this._setProperty("winMouseX", o3.winX), this._setProperty("winMouseY", o3.winY), r2 = this.mouseX - this.pmouseX, n2 = this.mouseY - this.pmouseY, this._setProperty("movedX", r2), this._setProperty("movedY", n2)), this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", true));
      }, n.default.prototype._updateMouseCoords = function() {
        this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
      }, n.default.prototype._setMouseButton = function(e3) {
        1 === e3.button ? this._setProperty("mouseButton", s2.CENTER) : 2 === e3.button ? this._setProperty("mouseButton", s2.RIGHT) : this._setProperty("mouseButton", s2.LEFT);
      }, n.default.prototype._onmousemove = function(e3) {
        var t2 = this._isGlobal ? window : this;
        this._updateNextMouseCoords(e3), this.mouseIsPressed ? "function" == typeof t2.mouseDragged ? false === t2.mouseDragged(e3) && e3.preventDefault() : "function" == typeof t2.touchMoved && false === t2.touchMoved(e3) && e3.preventDefault() : "function" == typeof t2.mouseMoved && false === t2.mouseMoved(e3) && e3.preventDefault();
      }, n.default.prototype._onmousedown = function(e3) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", true), this._setMouseButton(e3), this._updateNextMouseCoords(e3), this.touchstart || ("function" == typeof t2.mousePressed ? false === t2.mousePressed(e3) && e3.preventDefault() : "function" == typeof t2.touchStarted && false === t2.touchStarted(e3) && e3.preventDefault(), this.touchstart = false);
      }, n.default.prototype._onmouseup = function(e3) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", false), this.touchend || ("function" == typeof t2.mouseReleased ? false === t2.mouseReleased(e3) && e3.preventDefault() : "function" == typeof t2.touchEnded && false === t2.touchEnded(e3) && e3.preventDefault(), this.touchend = false);
      }, n.default.prototype._ondragend = n.default.prototype._onmouseup, n.default.prototype._ondragover = n.default.prototype._onmousemove, n.default.prototype._onclick = function(e3) {
        var t2 = this._isGlobal ? window : this;
        "function" == typeof t2.mouseClicked && false === t2.mouseClicked(e3) && e3.preventDefault();
      }, n.default.prototype._ondblclick = function(e3) {
        var t2 = this._isGlobal ? window : this;
        "function" == typeof t2.doubleClicked && false === t2.doubleClicked(e3) && e3.preventDefault();
      }, n.default.prototype._mouseWheelDeltaY = 0, n.default.prototype._pmouseWheelDeltaY = 0, n.default.prototype._onwheel = function(e3) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("_mouseWheelDeltaY", e3.deltaY), "function" == typeof t2.mouseWheel && (e3.delta = e3.deltaY, false === t2.mouseWheel(e3) && e3.preventDefault());
      }, n.default.prototype.requestPointerLock = function() {
        var e3 = this._curElement.elt;
        return e3.requestPointerLock = e3.requestPointerLock || e3.mozRequestPointerLock, e3.requestPointerLock ? (e3.requestPointerLock(), true) : (console.log("requestPointerLock is not implemented in this browser"), false);
      }, n.default.prototype.exitPointerLock = function() {
        document.exitPointerLock();
      };
      e2 = n.default;
      r.default = e2;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 303: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.touches = [], e2.default.prototype._updateTouchCoords = function(e3) {
        if (null !== this._curElement) {
          for (var t2 = [], r2 = 0; r2 < e3.touches.length; r2++) t2[r2] = function(e4, t3, r3, o) {
            var n = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0, s2 = e4.getBoundingClientRect(), t3 = e4.scrollWidth / t3 || 1, e4 = e4.scrollHeight / r3 || 1, r3 = o.touches[n] || o.changedTouches[n];
            return { x: (r3.clientX - s2.left) / t3, y: (r3.clientY - s2.top) / e4, winX: r3.clientX, winY: r3.clientY, id: r3.identifier };
          }(this._curElement.elt, this.width, this.height, e3, r2);
          this._setProperty("touches", t2);
        }
      }, e2.default.prototype._ontouchstart = function(e3) {
        var t2 = this._isGlobal ? window : this;
        this._setProperty("mouseIsPressed", true), this._updateTouchCoords(e3), this._updateNextMouseCoords(e3), this._updateMouseCoords(), "function" == typeof t2.touchStarted && (false === t2.touchStarted(e3) && e3.preventDefault(), this.touchstart = true);
      }, e2.default.prototype._ontouchmove = function(e3) {
        var t2 = this._isGlobal ? window : this;
        this._updateTouchCoords(e3), this._updateNextMouseCoords(e3), "function" == typeof t2.touchMoved ? false === t2.touchMoved(e3) && e3.preventDefault() : "function" == typeof t2.mouseDragged && false === t2.mouseDragged(e3) && e3.preventDefault();
      }, e2.default.prototype._ontouchend = function(e3) {
        this._setProperty("mouseIsPressed", false), this._updateTouchCoords(e3), this._updateNextMouseCoords(e3);
        var t2 = this._isGlobal ? window : this;
        "function" == typeof t2.touchEnded && (false === t2.touchEnded(e3) && e3.preventDefault(), this.touchend = true);
      };
      e2 = e2.default;
      r.default = e2;
    }, { "../core/main": 283 }], 304: [function(e2, t, r) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.int32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.int32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var U, N, B, G, V = { _toPixels: function(e3) {
        var t2, r2;
        return e3 instanceof ImageData ? e3.data : e3.getContext("2d") ? e3.getContext("2d").getImageData(0, 0, e3.width, e3.height).data : e3.getContext("webgl") ? (r2 = (t2 = e3.getContext("webgl")).drawingBufferWidth * t2.drawingBufferHeight * 4, r2 = new Uint8Array(r2), t2.readPixels(0, 0, e3.width, e3.height, t2.RGBA, t2.UNSIGNED_BYTE, r2), r2) : void 0;
      }, _getARGB: function(e3, t2) {
        t2 *= 4;
        return e3[3 + t2] << 24 & 4278190080 | e3[t2] << 16 & 16711680 | e3[1 + t2] << 8 & 65280 | 255 & e3[2 + t2];
      }, _setPixels: function(e3, t2) {
        for (var r2, o = 0, n = e3.length; o < n; o++) e3[0 + (r2 = 4 * o)] = (16711680 & t2[o]) >>> 16, e3[1 + r2] = (65280 & t2[o]) >>> 8, e3[2 + r2] = 255 & t2[o], e3[3 + r2] = (4278190080 & t2[o]) >>> 24;
      }, _toImageData: function(e3) {
        return e3 instanceof ImageData ? e3 : e3.getContext("2d").getImageData(0, 0, e3.width, e3.height);
      }, _createImageData: function(e3, t2) {
        return V._tmpCanvas = document.createElement("canvas"), V._tmpCtx = V._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e3, t2);
      }, apply: function(e3, t2, r2) {
        var o = e3.getContext("2d"), n = o.getImageData(0, 0, e3.width, e3.height), t2 = t2(n, r2);
        t2 instanceof ImageData ? o.putImageData(t2, 0, 0, 0, 0, e3.width, e3.height) : o.putImageData(n, 0, 0, 0, 0, e3.width, e3.height);
      }, threshold: function(e3) {
        for (var t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0.5, r2 = V._toPixels(e3), o = Math.floor(255 * t2), n = 0; n < r2.length; n += 4) {
          var s2 = void 0, s2 = o <= 0.2126 * r2[n] + 0.7152 * r2[n + 1] + 0.0722 * r2[n + 2] ? 255 : 0;
          r2[n] = r2[n + 1] = r2[n + 2] = s2;
        }
      }, gray: function(e3) {
        for (var t2 = V._toPixels(e3), r2 = 0; r2 < t2.length; r2 += 4) {
          var o = t2[r2], n = t2[r2 + 1], s2 = t2[r2 + 2];
          t2[r2] = t2[r2 + 1] = t2[r2 + 2] = 0.2126 * o + 0.7152 * n + 0.0722 * s2;
        }
      }, opaque: function(e3) {
        for (var t2 = V._toPixels(e3), r2 = 0; r2 < t2.length; r2 += 4) t2[r2 + 3] = 255;
        return t2;
      }, invert: function(e3) {
        for (var t2 = V._toPixels(e3), r2 = 0; r2 < t2.length; r2 += 4) t2[r2] = 255 - t2[r2], t2[r2 + 1] = 255 - t2[r2 + 1], t2[r2 + 2] = 255 - t2[r2 + 2];
      }, posterize: function(e3) {
        var t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 4, r2 = V._toPixels(e3);
        if (t2 < 2 || 255 < t2) throw new Error("Level must be greater than 2 and less than 255 for posterize");
        for (var o = t2 - 1, n = 0; n < r2.length; n += 4) {
          var s2 = r2[n], i = r2[n + 1], a2 = r2[n + 2];
          r2[n] = 255 * (s2 * t2 >> 8) / o, r2[n + 1] = 255 * (i * t2 >> 8) / o, r2[n + 2] = 255 * (a2 * t2 >> 8) / o;
        }
      }, dilate: function(e3) {
        for (var t2, r2, o, n, s2, i, a2, l, u, c = V._toPixels(e3), d = 0, h = c.length ? c.length / 4 : 0, f = new Int32Array(h); d < h; ) for (r2 = (t2 = d) + e3.width; d < r2; ) n = o = V._getARGB(c, d), (u = d - 1) < t2 && (u = d), r2 <= (l = d + 1) && (l = d), (s2 = d - e3.width) < 0 && (s2 = 0), h <= (i = d + e3.width) && (i = d), s2 = V._getARGB(c, s2), u = V._getARGB(c, u), i = V._getARGB(c, i), (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) < (a2 = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a2), n < (a2 = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o = u, n = a2), n < (l = 77 * (s2 >> 16 & 255) + 151 * (s2 >> 8 & 255) + 28 * (255 & s2)) && (o = s2, n = l), n < (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) && (o = i, n = u), f[d++] = o;
        V._setPixels(c, f);
      }, erode: function(e3) {
        for (var t2, r2, o, n, s2, i, a2, l, u, c = V._toPixels(e3), d = 0, h = c.length ? c.length / 4 : 0, f = new Int32Array(h); d < h; ) for (r2 = (t2 = d) + e3.width; d < r2; ) n = o = V._getARGB(c, d), (u = d - 1) < t2 && (u = d), r2 <= (l = d + 1) && (l = d), (s2 = d - e3.width) < 0 && (s2 = 0), h <= (i = d + e3.width) && (i = d), s2 = V._getARGB(c, s2), u = V._getARGB(c, u), i = V._getARGB(c, i), (a2 = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < (n = 77 * (n >> 16 & 255) + 151 * (n >> 8 & 255) + 28 * (255 & n)) && (o = u, n = a2), (a2 = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < n && (o = u, n = a2), (l = 77 * (s2 >> 16 & 255) + 151 * (s2 >> 8 & 255) + 28 * (255 & s2)) < n && (o = s2, n = l), (u = 77 * (i >> 16 & 255) + 151 * (i >> 8 & 255) + 28 * (255 & i)) < n && (o = i, n = u), f[d++] = o;
        V._setPixels(c, f);
      }, blur: function(e3, D) {
        for (var t2, r2, o, n, s2, i, a2, l, u, c, d = V._toPixels(e3), h = e3.width, f = e3.height, p = h * f, m = new Int32Array(p), y = 0; y < p; y++) m[y] = V._getARGB(d, y);
        var g, v, b, _, j, x2, w, S, T = new Int32Array(p), E = new Int32Array(p), M = new Int32Array(p), F = new Int32Array(p), k = 0, O = 3.5 * D | 0;
        if (U !== (O = O < 1 ? 1 : O < 248 ? O : 248)) {
          N = 1 + (U = O) << 1, B = new Int32Array(N), G = new Array(N);
          for (var C = 0; C < N; C++) G[C] = new Int32Array(256);
          for (var A = 1, P = O - 1; A < O; A++) {
            B[O + A] = B[P] = x2 = P * P, w = G[O + A], S = G[P--];
            for (var L = 0; L < 256; L++) w[L] = S[L] = x2 * L;
          }
          j = B[O] = O * O, w = G[O];
          for (var R = 0; R < 256; R++) w[R] = j * R;
        }
        for (v = 0; v < f; v++) {
          for (g = 0; g < h; g++) {
            if (n = o = r2 = s2 = t2 = 0, (i = g - U) < 0) c = -i, i = 0;
            else {
              if (h <= i) break;
              c = 0;
            }
            for (b = c; b < N && !(h <= i); b++) {
              var I = m[i + k];
              _ = G[b], s2 += _[(-16777216 & I) >>> 24], r2 += _[(16711680 & I) >> 16], o += _[(65280 & I) >> 8], n += _[255 & I], t2 += B[b], i++;
            }
            T[a2 = k + g] = s2 / t2, E[a2] = r2 / t2, M[a2] = o / t2, F[a2] = n / t2;
          }
          k += h;
        }
        for (u = (l = -U) * h, v = k = 0; v < f; v++) {
          for (g = 0; g < h; g++) {
            if (n = o = r2 = s2 = t2 = 0, l < 0) c = a2 = -l, i = g;
            else {
              if (f <= l) break;
              c = 0, a2 = l, i = g + u;
            }
            for (b = c; b < N && !(f <= a2); b++) _ = G[b], s2 += _[T[i]], r2 += _[E[i]], o += _[M[i]], n += _[F[i]], t2 += B[b], a2++, i += h;
            m[g + k] = s2 / t2 << 24 | r2 / t2 << 16 | o / t2 << 8 | n / t2;
          }
          k += h, u += h, l++;
        }
        V._setPixels(d, m);
      } };
      r.default = V;
    }, { "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.int32-array": 225, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint8-array": 242 }], 305: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var O = o(e2("../core/main")), C = o(e2("omggif"));
      function o(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function A(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      O.default.prototype.createImage = function(e3, t2) {
        return O.default._validateParameters("createImage", arguments), new O.default.Image(e3, t2);
      }, O.default.prototype.saveCanvas = function() {
        for (var e3, t2, r2, o3, n, s2, i = arguments.length, a2 = new Array(i), l = 0; l < i; l++) a2[l] = arguments[l];
        switch (O.default._validateParameters("saveCanvas", a2), a2[0] instanceof HTMLCanvasElement ? (e3 = a2[0], a2.shift()) : a2[0] instanceof O.default.Element ? (e3 = a2[0].elt, a2.shift()) : a2[0] instanceof O.default.Framebuffer ? (o3 = a2[0], (n = this.createGraphics(o3.width, o3.height)).pixelDensity(pixelDensity()), o3.loadPixels(), n.loadPixels(), n.pixels.set(o3.pixels), n.updatePixels(), e3 = n.elt, a2.shift()) : e3 = this._curElement && this._curElement.elt, 1 <= a2.length && (t2 = a2[0]), r2 = (r2 = 2 <= a2.length ? a2[1] : r2) || O.default.prototype._checkFileExtension(t2, r2)[1] || "png") {
          default:
            s2 = "image/png";
            break;
          case "webp":
            s2 = "image/webp";
            break;
          case "jpeg":
          case "jpg":
            s2 = "image/jpeg";
        }
        e3.toBlob(function(e4) {
          O.default.prototype.downloadFile(e4, t2, r2), n && n.remove();
        }, s2);
      }, O.default.prototype.encodeAndDownloadGif = function(d, e3) {
        for (var h = d.gifProperties, t2 = h.loopLimit, r2 = (1 === t2 ? t2 = null : null === t2 && (t2 = 0), new Uint8Array(d.width * d.height * h.numFrames)), f = [], o3 = {}, n = 0; n < h.numFrames; n++) {
          for (var s2 = /* @__PURE__ */ new Set(), i = h.frames[n].image.data, a2 = i.length, l = new Uint32Array(d.width * d.height), u = 0, c = 0; u < a2; u += 4, c++) {
            var p = i[u + 0] << 16 | i[u + 1] << 8 | i[u + 2] << 0;
            s2.add(p), l[c] = p;
          }
          var m = A(s2).sort().toString();
          void 0 === o3[m] ? o3[m] = { freq: 1, frames: [n] } : (o3[m].freq += 1, o3[m].frames.push(n)), f.push(l);
        }
        for (var y = [], g = Object.keys(o3).sort(function(e4, t3) {
          return o3[t3].freq - o3[e4].freq;
        }), v = g[0].split(",").map(function(e4) {
          return parseInt(e4);
        }), y = y.concat(o3[v].frames), b = new Set(v), _ = 1; _ < g.length; _++) {
          var j = g[_].split(",").map(function(e4) {
            return parseInt(e4);
          }).filter(function(e4) {
            return !b.has(e4);
          });
          if (v.length + j.length <= 256) {
            for (var x2 = 0; x2 < j.length; x2++) v.push(j[x2]), b.add(j[x2]);
            y = y.concat(o3[g[_]].frames);
          }
        }
        y = new Set(y);
        for (var w = {}, S = 0; S < v.length; S++) w[v[S]] || (w[v[S]] = S);
        for (var T = 1; T < v.length; ) T <<= 1;
        v.length = T;
        for (var t2 = { loop: t2, palette: new Uint32Array(v) }, E = new C.default.GifWriter(r2, d.width, d.height, t2), M = {}, k = 0; k < h.numFrames; k++) !function(r3) {
          var o4 = !y.has(r3), n2 = o4 ? [] : v, s3 = new Uint8Array(d.width * d.height), i2 = {}, a3 = /* @__PURE__ */ new Set(), e4 = (f[r3].forEach(function(e5, t4) {
            o4 ? (void 0 === i2[e5] && (i2[e5] = n2.length, n2.push(e5)), s3[t4] = i2[e5]) : s3[t4] = w[e5], 0 < r3 && f[r3 - 1][t4] !== e5 && a3.add(e5);
          }), {}), t3 = n2.filter(function(e5) {
            return !a3.has(e5);
          });
          if (0 < t3.length) {
            var t3 = t3[0], l2 = (o4 ? i2 : w)[t3];
            if (0 < r3) {
              for (var u2 = 0; u2 < f[r3].length; u2++) f[r3 - 1][u2] === f[r3][u2] && (s3[u2] = l2);
              e4.transparent = l2, M.frameOpts.disposal = 1;
            }
          }
          if (e4.delay = h.frames[r3].delay / 10, o4) {
            for (var c2 = 1; c2 < n2.length; ) c2 <<= 1;
            n2.length = c2, e4.palette = new Uint32Array(n2);
          }
          0 < r3 && E.addFrame(0, 0, d.width, d.height, M.pixelPaletteIndex, M.frameOpts), M = { pixelPaletteIndex: s3, frameOpts: e4 };
        }(k);
        M.frameOpts.disposal = 1, E.addFrame(0, 0, d.width, d.height, M.pixelPaletteIndex, M.frameOpts);
        t2 = new Blob([r2.slice(0, E.end())], { type: "image/gif" });
        O.default.prototype.downloadFile(t2, e3, "gif");
      }, O.default.prototype.saveFrames = function(e3, t2, r2, o3, n) {
        O.default._validateParameters("saveFrames", arguments);
        r2 = O.default.prototype.constrain(r2 = r2 || 3, 0, 15);
        r2 *= 1e3;
        var o3 = O.default.prototype.constrain(o3 || 15, 0, 22), s2 = 0, i = O.default.prototype._makeFrame, a2 = this._curElement.elt, l = [], u = setInterval(function() {
          l.push(i(e3 + s2, t2, a2)), s2++;
        }, 1e3 / o3);
        setTimeout(function() {
          if (clearInterval(u), n) n(l);
          else for (var e4 = 0, t3 = l; e4 < t3.length; e4++) {
            var r3 = t3[e4];
            O.default.prototype.downloadFile(r3.imageData, r3.filename, r3.ext);
          }
          l = [];
        }, 0.01 + r2);
      }, O.default.prototype._makeFrame = function(e3, t2, r2) {
        var o3, r2 = this ? this._curElement.elt : r2;
        if (t2) switch (t2.toLowerCase()) {
          case "png":
            o3 = "image/png";
            break;
          case "jpeg":
          case "jpg":
            o3 = "image/jpeg";
            break;
          default:
            o3 = "image/png";
        }
        else t2 = "png", o3 = "image/png";
        var r2 = (r2 = r2.toDataURL(o3)).replace(o3, "image/octet-stream"), n = {};
        return n.imageData = r2, n.filename = e3, n.ext = t2, n;
      };
      e2 = O.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.set": 197, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint32-array": 241, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246, omggif: 256 }], 306: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0, e2("regenerator-runtime/runtime");
      var C = n(e2("../core/main")), m = n(e2("../core/helpers")), _ = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants")), g = n(e2("omggif")), A = e2("gifenc");
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function l(e3, t2, r2, o3, n2, s2, i2) {
        try {
          var a3 = e3[s2](i2), l2 = a3.value;
        } catch (e4) {
          return void r2(e4);
        }
        a3.done ? t2(l2) : Promise.resolve(l2).then(o3, n2);
      }
      function y(e3, t2, r2, o3, n2, s2, i2, a3, l2, u, c) {
        var d, h, f, p, m2, y2, g2, v2, b;
        return e3 === _.COVER && (d = t2, f = r2, g2 = s2, v2 = i2, y2 = a3, b = l2, h = u, p = c, m2 = Math.max(g2 / h, v2 / p), g2 /= m2, v2 /= m2, m2 = y2, y2 = b, d === _.CENTER ? m2 += (h - g2) / 2 : d === _.RIGHT && (m2 += h - g2), f === _.CENTER ? y2 += (p - v2) / 2 : f === _.BOTTOM && (y2 += p - v2), a3 = (b = { x: m2, y: y2, w: g2, h: v2 }).x, l2 = b.y, u = b.w, c = b.h), e3 === _.CONTAIN && (d = t2, h = r2, f = o3, p = n2, m2 = s2, y2 = i2, g2 = u, v2 = c, b = Math.max(g2 / m2, v2 / y2), g2 /= b, v2 /= b, b = f, f = p, d === _.CENTER ? b += (m2 - g2) / 2 : d === _.RIGHT && (b += m2 - g2), h === _.CENTER ? f += (y2 - v2) / 2 : h === _.BOTTOM && (f += y2 - v2), o3 = (e3 = { x: b, y: f, w: g2, h: v2 }).x, n2 = e3.y, s2 = e3.w, i2 = e3.h), { sx: a3, sy: l2, sw: u, sh: c, dx: o3, dy: n2, dw: s2, dh: i2 };
      }
      function v(e3, t2) {
        return 0 < e3 && e3 < t2 ? e3 : t2;
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), C.default.prototype.loadImage = function(o3, f, p) {
        C.default._validateParameters("loadImage", arguments);
        var m2 = new C.default.Image(1, 1, this), y2 = this, e3 = new Request(o3, { method: "GET", mode: "cors" });
        return fetch(o3, e3).then(function(e4) {
          var t2, r2 = e4.headers.get("content-type");
          null === r2 && console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."), r2 && r2.includes("image/gif") ? e4.arrayBuffer().then(function(e5) {
            if (e5) {
              for (var e5 = new Uint8Array(e5), r3 = m2, t3 = f, o4 = p, n2 = (function(e6) {
                y2._decrementPreload();
              }).bind(y2), s2 = new g.default.GifReader(e5), i2 = (r3.width = r3.canvas.width = s2.width, r3.height = r3.canvas.height = s2.height, []), a3 = s2.numFrames(), l2 = new Uint8ClampedArray(r3.width * r3.height * 4), u = 0; u < a3; u++) {
                var c = s2.frameInfo(u), d = r3.drawingContext.getImageData(0, 0, r3.width, r3.height), h = (l2 = d.data.slice(), !function(e6, t4) {
                  try {
                    t4.decodeAndBlitFrameRGBA(e6, l2);
                  } catch (e7) {
                    C.default._friendlyFileLoadError(8, r3.src), "function" == typeof o4 ? o4(e7) : console.error(e7);
                  }
                }(u, s2), new ImageData(l2, r3.width, r3.height)), h = (r3.drawingContext.putImageData(h, 0, 0), c.delay);
                0 === h && (h = 10), i2.push({ image: r3.drawingContext.getImageData(0, 0, r3.width, r3.height), delay: 10 * h }), 2 === c.disposal ? r3.drawingContext.clearRect(c.x, c.y, c.width, c.height) : 3 === c.disposal && r3.drawingContext.putImageData(d, 0, 0, c.x, c.y, c.width, c.height);
              }
              null === (e5 = s2.loopCount()) ? e5 = 1 : 0 === e5 && (e5 = null), r3.drawingContext.putImageData(i2[0].image, 0, 0), 1 < i2.length && (r3.gifProperties = { displayIndex: 0, loopLimit: e5, loopCount: 0, frames: i2, numFrames: a3, playing: true, timeDisplayed: 0, lastChangeTime: 0 }), "function" == typeof t3 && t3(r3), n2();
            }
          }, function(e5) {
            "function" == typeof p ? (p(e5), y2._decrementPreload()) : console.error(e5);
          }) : ((t2 = new Image()).onload = function() {
            m2.width = m2.canvas.width = t2.width, m2.height = m2.canvas.height = t2.height, m2.drawingContext.drawImage(t2, 0, 0), m2.modified = true, "function" == typeof f && f(m2), y2._decrementPreload();
          }, t2.onerror = function(e5) {
            C.default._friendlyFileLoadError(0, t2.src), "function" == typeof p ? (p(e5), y2._decrementPreload()) : console.error(e5);
          }, 0 !== o3.indexOf("data:image/") && (t2.crossOrigin = "Anonymous"), t2.src = o3), m2.modified = true;
        }).catch(function(e4) {
          C.default._friendlyFileLoadError(0, o3), "function" == typeof p ? (p(e4), y2._decrementPreload()) : console.error(e4);
        }), m2;
      }, C.default.prototype.saveGif = function() {
        a3 = regeneratorRuntime.mark(function e3(t2, r3) {
          var o3, n2, s2, i2, a4, l2, u, c, d, h, f, p, m2, y2, g2, v2, b, _2, j, x2, w, S, T, E, M, k, O = arguments;
          return regeneratorRuntime.wrap(function(e4) {
            for (; ; ) switch (e4.prev = e4.next) {
              case 0:
                if (o3 = 2 < O.length && void 0 !== O[2] ? O[2] : { delay: 0, units: "seconds", silent: false, notificationDuration: 0, notificationID: "progressBar" }, "string" != typeof t2) throw TypeError("fileName parameter must be a string");
                e4.next = 3;
                break;
              case 3:
                if ("number" != typeof r3) throw TypeError("Duration parameter must be a number");
                e4.next = 5;
                break;
              case 5:
                if (n2 = o3 && o3.delay || 0, s2 = o3 && o3.units || "seconds", i2 = o3 && o3.silent || false, a4 = o3 && o3.notificationDuration || 0, l2 = o3 && o3.notificationID || "progressBar", "number" != typeof n2) throw TypeError("Delay parameter must be a number");
                e4.next = 12;
                break;
              case 12:
                if ("seconds" !== s2 && "frames" !== s2) throw TypeError('Units parameter must be either "frames" or "seconds"');
                e4.next = 14;
                break;
              case 14:
                if ("boolean" != typeof i2) throw TypeError("Silent parameter must be a boolean");
                e4.next = 16;
                break;
              case 16:
                if ("number" != typeof a4) throw TypeError("Notification duration parameter must be a number");
                e4.next = 18;
                break;
              case 18:
                if ("string" != typeof l2) throw TypeError("Notification ID parameter must be a string");
                e4.next = 20;
                break;
              case 20:
                return this._recording = true, h = this._targetFrameRate, u = (u = 1 / (h = h !== 1 / 0 && void 0 !== h && 0 !== h ? h : 60) * 1e3) < 20 ? 20 : u, d = (c = "seconds" === s2 ? r3 * h : r3) + (h = "seconds" === s2 ? n2 * h : n2), h = h, this.frameCount = h, f = this._pixelDensity, this.pixelDensity(1), p = [], null !== document.getElementById(l2) && document.getElementById(l2).remove(), i2 || ((m2 = this.createP("")).id(l2), m2.style("font-size", "16px"), m2.style("font-family", "Montserrat"), m2.style("background-color", "#ffffffa0"), m2.style("padding", "8px"), m2.style("border-radius", "10px"), m2.position(0, 0)), this._renderer instanceof C.default.RendererGL && (g2 = this.drawingContext, y2 = new Uint8Array(g2.drawingBufferWidth * g2.drawingBufferHeight * 4)), this.noLoop(), e4.next = 39, Promise.resolve();
              case 39:
                if (h < d) return this.redraw(), E = void 0, E = this._renderer instanceof C.default.RendererGL ? (y2 = new Uint8Array(g2.drawingBufferWidth * g2.drawingBufferHeight * 4), g2.readPixels(0, 0, g2.drawingBufferWidth, g2.drawingBufferHeight, g2.RGBA, g2.UNSIGNED_BYTE, y2), function(e5, t3, r4) {
                  for (var o4 = parseInt(r4 / 2), n3 = 4 * t3, s3 = new Uint8Array(4 * t3), i3 = 0; i3 < o4; ++i3) {
                    var a5 = i3 * n3, l3 = (r4 - i3 - 1) * n3;
                    s3.set(e5.subarray(a5, a5 + n3)), e5.copyWithin(a5, l3, l3 + n3), e5.set(s3, l3);
                  }
                  return e5;
                }(y2, this.width, this.height)) : this.drawingContext.getImageData(0, 0, this.width, this.height).data, p.push(E), h++, i2 || m2.html("Saved frame <b>" + p.length.toString() + "</b> out of " + c.toString()), e4.next = 48, new Promise(function(e5) {
                  return setTimeout(e5, 0);
                });
                e4.next = 50;
                break;
              case 48:
                e4.next = 39;
                break;
              case 50:
                i2 || m2.html("Frames processed, generating color palette..."), this.loop(), this.pixelDensity(f), v2 = (0, A.GIFEncoder)(), b = function(e5) {
                  for (var t3 = new Uint8Array(e5.length * e5[0].length), r4 = 0; r4 < e5.length; r4++) t3.set(e5[r4], r4 * e5[0].length);
                  var o4 = (0, A.quantize)(t3, 256, { format: "rgba4444", oneBitAlpha: true });
                  256 === o4.length ? o4[o4.length - 1] = [255 * Math.random(), 255 * Math.random(), 255 * Math.random(), 0] : o4.push([255 * Math.random(), 255 * Math.random(), 255 * Math.random(), 0]);
                  return o4;
                }(p), _2 = {}, j = function(e5) {
                  for (var t3 = e5.length / 4, r4 = new Uint8Array(t3), o4 = 0; o4 < t3; o4++) {
                    var n3 = e5[4 * o4] << 24 | e5[4 * o4 + 1] << 16 | e5[4 * o4 + 2] << 8 | e5[4 * o4 + 3];
                    void 0 === _2[n3] && (_2[n3] = (0, A.nearestColorIndex)(b, e5.slice(4 * o4, 4 * (o4 + 1)))), r4[o4] = _2[n3];
                  }
                  return r4;
                }, x2 = b.length - 1, w = [], S = 0;
              case 60:
                if (!(S < p.length)) {
                  e4.next = 71;
                  break;
                }
                if (T = j(p[S]), E = T.slice(), 0 === S) v2.writeFrame(T, this.width, this.height, { palette: b, delay: u, dispose: 1 });
                else {
                  for (M = 0; M < T.length; M++) T[M] === w[M] && (T[M] = x2);
                  v2.writeFrame(T, this.width, this.height, { delay: u, transparent: true, transparentIndex: x2, dispose: 1 });
                }
                return w = E, i2 || m2.html("Rendered frame <b>" + S.toString() + "</b> out of " + c.toString()), e4.next = 68, new Promise(function(e5) {
                  return setTimeout(e5, 0);
                });
              case 68:
                S++, e4.next = 60;
                break;
              case 71:
                v2.finish(), k = v2.bytesView(), k = new Blob([k], { type: "image/gif" }), p = [], this._recording = false, this.loop(), i2 || (m2.html("Done. Downloading your gif!🌸"), 0 < a4 && setTimeout(function() {
                  return m2.remove();
                }, 1e3 * a4)), C.default.prototype.downloadFile(k, t2, "gif");
              case 80:
              case "end":
                return e4.stop();
            }
          }, e3, this);
        });
        var a3, r2 = function() {
          var e3 = this, i2 = arguments;
          return new Promise(function(t2, r3) {
            var o3 = a3.apply(e3, i2);
            function n2(e4) {
              l(o3, t2, r3, n2, s2, "next", e4);
            }
            function s2(e4) {
              l(o3, t2, r3, n2, s2, "throw", e4);
            }
            n2(void 0);
          });
        };
        return function(e3, t2) {
          return r2.apply(this, arguments);
        };
      }(), C.default.prototype.image = function(e3, t2, r2, o3, n2, s2, i2, a3, l2, u, c, d) {
        C.default._validateParameters("image", arguments);
        var h = e3.width, f = e3.height, p = (d = d || _.CENTER, c = c || _.CENTER, e3.elt && (h = void 0 !== h ? h : e3.elt.width, f = void 0 !== f ? f : e3.elt.height), e3.elt && e3.elt.videoWidth && !e3.canvas && (h = void 0 !== h ? h : e3.elt.videoWidth, f = void 0 !== f ? f : e3.elt.videoHeight), o3 || h), n2 = n2 || f, s2 = s2 || 0, i2 = i2 || 0, a3 = v(void 0 !== a3 ? a3 : h, h), h = v(void 0 !== l2 ? l2 : f, f), l2 = 1;
        e3.elt && !e3.canvas && e3.elt.style.width && (l2 = e3.elt.videoWidth && !o3 ? e3.elt.videoWidth : e3.elt.width, l2 /= parseInt(e3.elt.style.width, 10)), s2 *= l2, i2 *= l2, h *= l2, a3 *= l2;
        f = y(u, c, d, (f = m.default.modeAdjust(t2, r2, p, n2, this._renderer._imageMode)).x, f.y, f.w, f.h, s2, i2, a3, h);
        this._renderer.image(e3, f.sx, f.sy, f.sw, f.sh, f.dx, f.dy, f.dw, f.dh);
      }, C.default.prototype.tint = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        C.default._validateParameters("tint", t2);
        var o3 = this.color.apply(this, t2);
        this._renderer._tint = o3.levels;
      }, C.default.prototype.noTint = function() {
        this._renderer._tint = null;
      }, C.default.prototype._getTintedImageCanvas = C.default.Renderer2D.prototype._getTintedImageCanvas, C.default.prototype.imageMode = function(e3) {
        C.default._validateParameters("imageMode", arguments), e3 !== _.CORNER && e3 !== _.CORNERS && e3 !== _.CENTER || (this._renderer._imageMode = e3);
      };
      e2 = C.default;
      r.default = e2;
    }, { "../core/constants": 272, "../core/friendly_errors/fes_core": 274, "../core/friendly_errors/file_errors": 275, "../core/friendly_errors/validate_params": 278, "../core/helpers": 279, "../core/main": 283, "core-js/modules/es.array.copy-within": 154, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/es.typed-array.uint8-clamped-array": 243, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246, gifenc: 253, omggif: 256, "regenerator-runtime/runtime": 260 }], 307: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var i = o(e2("../core/main")), n = o(e2("./filters"));
      function o(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      i.default.Image = function() {
        function r2(e4, t3) {
          if (!(this instanceof r2)) throw new TypeError("Cannot call a class as a function");
          this.width = e4, this.height = t3, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), (this._pixelsState = this)._pixelDensity = 1, this.gifProperties = null, this._modified = false, this.pixels = [];
        }
        var e3, t2;
        return e3 = r2, (t2 = [{ key: "pixelDensity", value: function(e4) {
          return void 0 !== e4 ? (e4 <= 0 && (i.default._friendlyParamError({ type: "INVALID_VALUE", format: { types: ["Number"] }, position: 1 }, "pixelDensity"), e4 = 1), this._pixelDensity = e4, this.width /= e4, this.height /= e4, this) : this._pixelDensity;
        } }, { key: "_animateGif", value: function(e4) {
          var t3, r3 = this.gifProperties, e4 = e4._lastRealFrameTime || window.performance.now();
          0 === r3.lastChangeTime && (r3.lastChangeTime = e4), r3.playing && (r3.timeDisplayed = e4 - r3.lastChangeTime, t3 = r3.frames[r3.displayIndex].delay, r3.timeDisplayed >= t3 && (t3 = Math.floor(r3.timeDisplayed / t3), r3.timeDisplayed = 0, r3.lastChangeTime = e4, r3.displayIndex += t3, r3.loopCount = Math.floor(r3.displayIndex / r3.numFrames), null !== r3.loopLimit && r3.loopCount >= r3.loopLimit ? r3.playing = false : (e4 = r3.displayIndex % r3.numFrames, this.drawingContext.putImageData(r3.frames[e4].image, 0, 0), r3.displayIndex = e4, this.setModified(true))));
        } }, { key: "_setProperty", value: function(e4, t3) {
          this[e4] = t3, this.setModified(true);
        } }, { key: "loadPixels", value: function() {
          i.default.Renderer2D.prototype.loadPixels.call(this), this.setModified(true);
        } }, { key: "updatePixels", value: function(e4, t3, r3, o3) {
          i.default.Renderer2D.prototype.updatePixels.call(this, e4, t3, r3, o3), this.setModified(true);
        } }, { key: "get", value: function(e4, t3, r3, o3) {
          return i.default._validateParameters("p5.Image.get", arguments), i.default.Renderer2D.prototype.get.apply(this, arguments);
        } }, { key: "_getPixel", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          return i.default.Renderer2D.prototype._getPixel.apply(this, t3);
        } }, { key: "set", value: function(e4, t3, r3) {
          i.default.Renderer2D.prototype.set.call(this, e4, t3, r3), this.setModified(true);
        } }, { key: "resize", value: function(e4, t3) {
          0 === e4 && 0 === t3 ? (e4 = this.canvas.width, t3 = this.canvas.height) : 0 === e4 ? e4 = this.canvas.width * t3 / this.canvas.height : 0 === t3 && (t3 = this.canvas.height * e4 / this.canvas.width), e4 = Math.floor(e4), t3 = Math.floor(t3);
          var r3 = document.createElement("canvas");
          if (r3.width = e4, r3.height = t3, this.gifProperties) for (var o3 = this.gifProperties, n2 = 0; n2 < o3.numFrames; n2++) {
            for (var s3 = this.drawingContext.createImageData(e4, t3), i2 = (d = d = c = u = l = void 0, o3.frames[n2].image), a2 = s3, l = 0, u = 0; u < a2.height; u++) for (var c = 0; c < a2.width; c++) {
              var d = Math.floor(c * i2.width / a2.width), d = 4 * (Math.floor(u * i2.height / a2.height) * i2.width + d);
              a2.data[l++] = i2.data[d++], a2.data[l++] = i2.data[d++], a2.data[l++] = i2.data[d++], a2.data[l++] = i2.data[+d];
            }
            o3.frames[n2].image = s3;
          }
          r3.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r3.width, r3.height), this.canvas.width = this.width = e4, this.canvas.height = this.height = t3, this.drawingContext.drawImage(r3, 0, 0, e4, t3, 0, 0, e4, t3), 0 < this.pixels.length && this.loadPixels(), this.setModified(true);
        } }, { key: "copy", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          i.default.prototype.copy.apply(this, t3);
        } }, { key: "mask", value: function(e4) {
          var t3 = this.drawingContext.globalCompositeOperation, r3 = this._pixelDensity, o3 = 1, n2 = [e4 = void 0 === e4 ? this : e4, 0, 0, (o3 = e4 instanceof i.default.Renderer ? e4._pInst._pixelDensity : o3) * e4.width, o3 * e4.height, 0, 0, r3 * this.width, r3 * this.height];
          if (this.drawingContext.globalCompositeOperation = "destination-in", this.gifProperties) {
            for (var s3 = 0; s3 < this.gifProperties.frames.length; s3++) this.drawingContext.putImageData(this.gifProperties.frames[s3].image, 0, 0), this.copy.apply(this, n2), this.gifProperties.frames[s3].image = this.drawingContext.getImageData(0, 0, r3 * this.width, r3 * this.height);
            this.drawingContext.putImageData(this.gifProperties.frames[this.gifProperties.displayIndex].image, 0, 0);
          } else this.copy.apply(this, n2);
          this.drawingContext.globalCompositeOperation = t3, this.setModified(true);
        } }, { key: "filter", value: function(e4, t3) {
          n.default.apply(this.canvas, n.default[e4], t3), this.setModified(true);
        } }, { key: "blend", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          i.default._validateParameters("p5.Image.blend", arguments), i.default.prototype.blend.apply(this, t3), this.setModified(true);
        } }, { key: "setModified", value: function(e4) {
          this._modified = e4;
        } }, { key: "isModified", value: function() {
          return this._modified;
        } }, { key: "save", value: function(e4, t3) {
          this.gifProperties ? i.default.prototype.encodeAndDownloadGif(this, e4) : i.default.prototype.saveCanvas(this.canvas, e4, t3);
        } }, { key: "reset", value: function() {
          var e4;
          this.gifProperties && ((e4 = this.gifProperties).playing = true, e4.timeSinceStart = 0, e4.timeDisplayed = 0, e4.lastChangeTime = 0, e4.loopCount = 0, e4.displayIndex = 0, this.drawingContext.putImageData(e4.frames[0].image, 0, 0));
        } }, { key: "getCurrentFrame", value: function() {
          var e4;
          if (this.gifProperties) return (e4 = this.gifProperties).displayIndex % e4.numFrames;
        } }, { key: "setFrame", value: function(e4) {
          var t3;
          this.gifProperties && (e4 < (t3 = this.gifProperties).numFrames && 0 <= e4 ? (t3.timeDisplayed = 0, t3.lastChangeTime = 0, t3.displayIndex = e4, this.drawingContext.putImageData(t3.frames[e4].image, 0, 0)) : console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero."));
        } }, { key: "numFrames", value: function() {
          if (this.gifProperties) return this.gifProperties.numFrames;
        } }, { key: "play", value: function() {
          this.gifProperties && (this.gifProperties.playing = true);
        } }, { key: "pause", value: function() {
          this.gifProperties && (this.gifProperties.playing = false);
        } }, { key: "delay", value: function(e4, t3) {
          if (this.gifProperties) {
            var r3 = this.gifProperties;
            if (t3 < r3.numFrames && 0 <= t3) r3.frames[t3].delay = e4;
            else {
              var o3 = true, t3 = false, n2 = void 0;
              try {
                for (var s3, i2 = r3.frames[Symbol.iterator](); !(o3 = (s3 = i2.next()).done); o3 = true) s3.value.delay = e4;
              } catch (e5) {
                t3 = true, n2 = e5;
              } finally {
                try {
                  o3 || null == i2.return || i2.return();
                } finally {
                  if (t3) throw n2;
                }
              }
            }
          }
        } }]) && s2(e3.prototype, t2), r2;
      }();
      e2 = i.default.Image;
      r.default = e2;
    }, { "../core/main": 283, "./filters": 304, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 308: [function(e2, t, r) {
      e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.filter"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var f = o(e2("../core/main")), a2 = o(e2("./filters"));
      function o(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      e2("../color/p5.Color"), f.default.prototype.pixels = [], f.default.prototype.blend = function() {
        for (var e3, t2 = arguments.length, r2 = new Array(t2), o3 = 0; o3 < t2; o3++) r2[o3] = arguments[o3];
        f.default._validateParameters("blend", r2), this._renderer ? (e3 = this._renderer).blend.apply(e3, r2) : f.default.Renderer2D.prototype.blend.apply(this, r2);
      }, f.default.prototype.copy = function() {
        for (var e3, t2, r2, o3, n, s2, i, a3, l, u = arguments.length, c = new Array(u), d = 0; d < u; d++) c[d] = arguments[d];
        if (f.default._validateParameters("copy", c), 9 === c.length) e3 = c[0], t2 = c[1], r2 = c[2], o3 = c[3], n = c[4], s2 = c[5], i = c[6], a3 = c[7], l = c[8];
        else {
          if (8 !== c.length) throw new Error("Signature not supported");
          e3 = this, t2 = c[0], r2 = c[1], o3 = c[2], n = c[3], s2 = c[4], i = c[5], a3 = c[6], l = c[7];
        }
        f.default.prototype._copyHelper(this, e3, t2, r2, o3, n, s2, i, a3, l);
      }, f.default.prototype._copyHelper = function(e3, t2, r2, o3, n, s2, i, a3, l, u) {
        var c = t2.canvas.width / t2.width, d = 0, h = 0;
        t2._renderer && t2._renderer.isP3D && (d = t2.width / 2, h = t2.height / 2), e3._renderer && e3._renderer.isP3D ? (e3.push(), e3.resetMatrix(), e3.noLights(), e3.blendMode(e3.BLEND), e3.imageMode(e3.CORNER), f.default.RendererGL.prototype.image.call(e3._renderer, t2, r2 + d, o3 + h, n, s2, i, a3, l, u), e3.pop()) : e3.drawingContext.drawImage(t2.canvas, c * (r2 + d), c * (o3 + h), c * n, c * s2, i, a3, l, u);
      }, f.default.prototype.getFilterGraphicsLayer = function() {
        return this._renderer.getFilterGraphicsLayer();
      }, f.default.prototype.filter = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        f.default._validateParameters("filter", t2);
        var o3 = (function() {
          var e4, t3 = { shader: void 0, operation: void 0, value: void 0, useWebGL: true };
          return (arguments.length <= 0 ? void 0 : arguments[0]) instanceof f.default.Shader ? t3.shader = arguments.length <= 0 ? void 0 : arguments[0] : (t3.operation = arguments.length <= 0 ? void 0 : arguments[0], 1 < arguments.length && "number" == typeof (arguments.length <= 1 ? void 0 : arguments[1]) && (t3.value = arguments.length <= 1 ? void 0 : arguments[1]), false === ((e4 = arguments.length - 1) < 0 || arguments.length <= e4 ? void 0 : arguments[e4]) && (t3.useWebGL = false)), t3;
        }).apply(void 0, t2), n = o3.shader, s2 = o3.operation, i = o3.value, o3 = o3.useWebGL;
        this._renderer.isP3D && n ? f.default.RendererGL.prototype.filter.call(this._renderer, n) : o3 || this._renderer.isP3D ? (!o3 && this._renderer.isP3D && console.warn("filter() with useWebGL=false is not supported in WEBGL"), this._renderer.isP3D ? f.default.RendererGL.prototype.filter.call(this._renderer, s2, i) : ((n = this.getFilterGraphicsLayer()).copy(this._renderer, 0, 0, this.width, this.height, -this.width / 2, -this.height / 2, this.width, this.height), this._renderer.clear(), this._renderer.resetMatrix(), n.filter.apply(n, t2), this.copy(n._renderer, 0, 0, this.width, this.height, 0, 0, this.width, this.height), n.clear())) : void 0 !== this.canvas ? a2.default.apply(this.canvas, a2.default[s2], i) : a2.default.apply(this.elt, a2.default[s2], i);
      }, f.default.prototype.get = function(e3, t2, r2, o3) {
        var n;
        return f.default._validateParameters("get", arguments), (n = this._renderer).get.apply(n, arguments);
      }, f.default.prototype.loadPixels = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        f.default._validateParameters("loadPixels", t2), this._renderer.loadPixels();
      }, f.default.prototype.set = function(e3, t2, r2) {
        this._renderer.set(e3, t2, r2);
      }, f.default.prototype.updatePixels = function(e3, t2, r2, o3) {
        f.default._validateParameters("updatePixels", arguments), 0 !== this.pixels.length && this._renderer.updatePixels(e3, t2, r2, o3);
      };
      e2 = f.default;
      r.default = e2;
    }, { "../color/p5.Color": 270, "../core/main": 283, "./filters": 304, "core-js/modules/es.array.filter": 157 }], 309: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/web.url"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/web.url"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var v = s2(e2("../core/main")), m = (e2("whatwg-fetch"), e2("es6-promise/auto"), s2(e2("fetch-jsonp"))), n = s2(e2("file-saver"));
      function s2(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function y(e3) {
        return (y = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function g(e3) {
        return e3.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
      }
      function i(e3, t2) {
        t2 && true !== t2 && "true" !== t2 || (t2 = "");
        var r2 = "";
        return (e3 = e3 || "untitled") && e3.includes(".") && (r2 = e3.split(".").pop()), t2 && r2 !== t2 && (r2 = t2, e3 = "".concat(e3, ".").concat(r2)), [e3, r2];
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), v.default.prototype.loadJSON = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        v.default._validateParameters("loadJSON", t2);
        for (var o3, n2, s3, i2 = t2[0], a2 = {}, l = "json", u = 1; u < t2.length; u++) {
          var c = t2[u];
          "string" == typeof c ? "jsonp" !== c && "json" !== c || (l = c) : "function" == typeof c ? o3 ? n2 = c : o3 = c : "object" === y(c) && (c.hasOwnProperty("jsonpCallback") || c.hasOwnProperty("jsonpCallbackFunction")) && (l = "jsonp", s3 = c);
        }
        var d = this;
        return this.httpDo(i2, "GET", s3, l, function(e4) {
          for (var t3 in e4) a2[t3] = e4[t3];
          void 0 !== o3 && o3(e4), d._decrementPreload();
        }, function(e4) {
          if (v.default._friendlyFileLoadError(5, i2), !n2) throw e4;
          n2(e4);
        }), a2;
      }, v.default.prototype.loadStrings = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        v.default._validateParameters("loadStrings", t2);
        for (var n2, o3, s3 = [], i2 = 1; i2 < t2.length; i2++) {
          var a2 = t2[i2];
          "function" == typeof a2 && (void 0 === n2 ? n2 = a2 : void 0 === o3 && (o3 = a2));
        }
        var l = this;
        return v.default.prototype.httpDo.call(this, t2[0], "GET", "text", function(e4) {
          for (var t3 = e4.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/), r3 = 0, o4 = t3.length; r3 < o4; r3 += 32768) Array.prototype.push.apply(s3, t3.slice(r3, Math.min(r3 + 32768, o4)));
          void 0 !== n2 && n2(s3), l._decrementPreload();
        }, function(e4) {
          if (v.default._friendlyFileLoadError(3, e4), !o3) throw e4;
          o3(e4);
        }), s3;
      }, v.default.prototype.loadTable = function(t2) {
        var f, r2, p, m2 = false, o3 = t2.substring(t2.lastIndexOf(".") + 1, t2.length);
        "csv" === o3 ? p = "," : "ssv" === o3 ? p = ";" : "tsv" === o3 && (p = "	");
        for (var n2 = 1; n2 < arguments.length; n2++) "function" == typeof arguments[n2] ? void 0 === f ? f = arguments[n2] : void 0 === r2 && (r2 = arguments[n2]) : "string" == typeof arguments[n2] && ("header" === arguments[n2] && (m2 = true), "csv" === arguments[n2] ? p = "," : "ssv" === arguments[n2] ? p = ";" : "tsv" === arguments[n2] && (p = "	"));
        var y2 = new v.default.Table(), g2 = this;
        return this.httpDo(t2, "GET", "table", function(e3) {
          for (var t3, r3, o4 = {}, n3 = 0, s3 = [], i2 = 0, a2 = null, l = function() {
            o4.currentState = n3, o4.token = "";
          }, u = function() {
            a2.push(o4.token), l();
          }, c = function() {
            o4.currentState = 4, s3.push(a2), a2 = null;
          }; ; ) {
            if (null == (t3 = e3[i2++])) {
              if (o4.escaped) throw new Error("Unclosed quote in file.");
              if (a2) {
                u(), c();
                break;
              }
            }
            if (null === a2 && (o4.escaped = false, a2 = [], l()), o4.currentState === n3) {
              if ('"' === t3) {
                o4.escaped = true, o4.currentState = 1;
                continue;
              }
              o4.currentState = 1;
            }
            if (1 === o4.currentState && o4.escaped) if ('"' === t3) '"' === e3[i2] ? (o4.token += '"', i2++) : (o4.escaped = false, o4.currentState = 2);
            else {
              if ("\r" === t3) continue;
              o4.token += t3;
            }
            else "\r" === t3 ? ("\n" === e3[i2] && i2++, u(), c()) : "\n" === t3 ? (u(), c()) : t3 === p ? u() : 1 === o4.currentState && (o4.token += t3);
          }
          if (m2) y2.columns = s3.shift();
          else for (var d = 0; d < s3[0].length; d++) y2.columns[d] = "null";
          for (var h = 0; h < s3.length; h++) (1 !== s3[h].length || "undefined" !== s3[h][0] && "" !== s3[h][0]) && ((r3 = new v.default.TableRow()).arr = s3[h], r3.obj = function(r4, e4) {
            if (void 0 === (e4 = e4 || [])) for (var t4 = 0; t4 < r4.length; t4++) e4[t4.toString()] = t4;
            return Object.fromEntries(e4.map(function(e5, t5) {
              return [e5, r4[t5]];
            }));
          }(s3[h], y2.columns), y2.addRow(r3));
          "function" == typeof f && f(y2), g2._decrementPreload();
        }, function(e3) {
          v.default._friendlyFileLoadError(2, t2), r2 ? r2(e3) : console.error(e3);
        }), y2;
      }, v.default.prototype.loadXML = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        for (var o3, n2, s3 = new v.default.XML(), i2 = 1; i2 < t2.length; i2++) {
          var a2 = t2[i2];
          "function" == typeof a2 && (void 0 === o3 ? o3 = a2 : void 0 === n2 && (n2 = a2));
        }
        var l = this;
        return this.httpDo(t2[0], "GET", "xml", function(e4) {
          for (var t3 in e4) s3[t3] = e4[t3];
          void 0 !== o3 && o3(s3), l._decrementPreload();
        }, function(e4) {
          if (v.default._friendlyFileLoadError(1, e4), !n2) throw e4;
          n2(e4);
        }), s3;
      }, v.default.prototype.loadBytes = function(t2, r2, o3) {
        var n2 = {}, s3 = this;
        return this.httpDo(t2, "GET", "arrayBuffer", function(e3) {
          n2.bytes = new Uint8Array(e3), "function" == typeof r2 && r2(n2), s3._decrementPreload();
        }, function(e3) {
          if (v.default._friendlyFileLoadError(6, t2), !o3) throw e3;
          o3(e3);
        }), n2;
      }, v.default.prototype.httpGet = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return v.default._validateParameters("httpGet", t2), t2.splice(1, 0, "GET"), v.default.prototype.httpDo.apply(this, t2);
      }, v.default.prototype.httpPost = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return v.default._validateParameters("httpPost", t2), t2.splice(1, 0, "POST"), v.default.prototype.httpDo.apply(this, t2);
      }, v.default.prototype.httpDo = function() {
        for (var r2, e3, t2, o3 = {}, n2 = 0, s3 = "text/plain", i2 = arguments.length - 1; 0 < i2 && "function" == typeof (i2 < 0 || arguments.length <= i2 ? void 0 : arguments[i2]); i2--) n2++;
        var a2 = arguments.length - n2, l = arguments.length <= 0 ? void 0 : arguments[0];
        if (2 == a2 && "string" == typeof l && "object" === y(arguments.length <= 1 ? void 0 : arguments[1])) p = new Request(l, arguments.length <= 1 ? void 0 : arguments[1]), e3 = arguments.length <= 2 ? void 0 : arguments[2], t2 = arguments.length <= 3 ? void 0 : arguments[3];
        else {
          for (var u, c = "GET", d = 1; d < arguments.length; d++) {
            var h = d < 0 || arguments.length <= d ? void 0 : arguments[d];
            if ("string" == typeof h) "GET" === h || "POST" === h || "PUT" === h || "DELETE" === h ? c = h : "json" === h || "jsonp" === h || "binary" === h || "arrayBuffer" === h || "xml" === h || "text" === h || "table" === h ? r2 = h : u = h;
            else if ("number" == typeof h) u = h.toString();
            else if ("object" === y(h)) if (h.hasOwnProperty("jsonpCallback") || h.hasOwnProperty("jsonpCallbackFunction")) for (var f in h) o3[f] = h[f];
            else s3 = h instanceof v.default.XML ? (u = h.serialize(), "application/xml") : (u = JSON.stringify(h), "application/json");
            else "function" == typeof h && (e3 ? t2 = h : e3 = h);
          }
          var a2 = "GET" === c ? new Headers() : new Headers({ "Content-Type": s3 }), p = new Request(l, { method: c, mode: "cors", body: u, headers: a2 });
        }
        return (a2 = (a2 = "jsonp" === (r2 = r2 || (l.includes("json") ? "json" : l.includes("xml") ? "xml" : "text")) ? (0, m.default)(l, o3) : fetch(p)).then(function(e4) {
          if (!e4.ok) throw (t3 = new Error(e4.body)).status = e4.status, t3.ok = false, t3;
          var t3 = 0;
          switch ((t3 = "jsonp" !== r2 ? e4.headers.get("content-length") : t3) && 64e6 < t3 && v.default._friendlyFileLoadError(7, l), r2) {
            case "json":
            case "jsonp":
              return e4.json();
            case "binary":
              return e4.blob();
            case "arrayBuffer":
              return e4.arrayBuffer();
            case "xml":
              return e4.text().then(function(e5) {
                e5 = new DOMParser().parseFromString(e5, "text/xml");
                return new v.default.XML(e5.documentElement);
              });
            default:
              return e4.text();
          }
        })).then(e3 || function() {
        }), a2.catch(t2 || console.error), a2;
      }, window.URL = window.URL || window.webkitURL, v.default.prototype._pWriters = [], v.default.prototype.createWriter = function(e3, t2) {
        var r2, o3;
        for (o3 in v.default.prototype._pWriters) if (v.default.prototype._pWriters[o3].name === e3) return r2 = new v.default.PrintWriter(e3 + this.millis(), t2), v.default.prototype._pWriters.push(r2), r2;
        return r2 = new v.default.PrintWriter(e3, t2), v.default.prototype._pWriters.push(r2), r2;
      }, v.default.PrintWriter = function(r2, o3) {
        var n2 = this;
        this.name = r2, this.content = "", this.write = function(e3) {
          this.content += e3;
        }, this.print = function(e3) {
          this.content += "".concat(e3, "\n");
        }, this.clear = function() {
          this.content = "";
        }, this.close = function() {
          var e3, t2 = [];
          for (e3 in t2.push(this.content), v.default.prototype.writeFile(t2, r2, o3), v.default.prototype._pWriters) v.default.prototype._pWriters[e3].name === this.name && v.default.prototype._pWriters.splice(e3, 1);
          n2.clear(), n2 = {};
        };
      }, v.default.prototype.save = function(e3, t2, r2) {
        var o3 = arguments, n2 = (this._curElement || this).elt;
        if (0 === o3.length) v.default.prototype.saveCanvas(n2);
        else if (o3[0] instanceof v.default.Renderer || o3[0] instanceof v.default.Graphics) v.default.prototype.saveCanvas(o3[0].elt, o3[1], o3[2]);
        else if (1 === o3.length && "string" == typeof o3[0]) v.default.prototype.saveCanvas(n2, o3[0]);
        else switch (i(o3[1], o3[2])[1]) {
          case "json":
            return void v.default.prototype.saveJSON(o3[0], o3[1], o3[2]);
          case "txt":
            return void v.default.prototype.saveStrings(o3[0], o3[1], o3[2]);
          default:
            o3[0] instanceof Array ? v.default.prototype.saveStrings(o3[0], o3[1], o3[2]) : o3[0] instanceof v.default.Table ? v.default.prototype.saveTable(o3[0], o3[1], o3[2]) : o3[0] instanceof v.default.Image ? v.default.prototype.saveCanvas(o3[0].canvas, o3[1]) : o3[0] instanceof v.default.SoundFile && v.default.prototype.saveSound(o3[0], o3[1], o3[2], o3[3]);
        }
      }, v.default.prototype.saveJSON = function(e3, t2, r2) {
        v.default._validateParameters("saveJSON", arguments), r2 = r2 ? JSON.stringify(e3) : JSON.stringify(e3, void 0, 2), this.saveStrings(r2.split("\n"), t2, "json");
      }, v.default.prototype.saveJSONObject = v.default.prototype.saveJSON, v.default.prototype.saveJSONArray = v.default.prototype.saveJSON, v.default.prototype.saveStrings = function(e3, t2, r2, o3) {
        v.default._validateParameters("saveStrings", arguments);
        for (var n2 = this.createWriter(t2, r2 || "txt"), s3 = 0; s3 < e3.length; s3++) o3 ? n2.write(e3[s3] + "\r\n") : n2.write(e3[s3] + "\n");
        n2.close(), n2.clear();
      }, v.default.prototype.saveTable = function(e3, t2, r2) {
        v.default._validateParameters("saveTable", arguments), o3 = void 0 === r2 ? t2.substring(t2.lastIndexOf(".") + 1, t2.length) : r2;
        var o3, n2 = this.createWriter(t2, o3), s3 = e3.columns, i2 = "tsv" === o3 ? "	" : ",";
        if ("html" !== o3) {
          if ("0" !== s3[0]) {
            for (var a2 = 0; a2 < s3.length; a2++) a2 < s3.length - 1 ? n2.write(s3[a2] + i2) : n2.write(s3[a2]);
            n2.write("\n");
          }
          for (var l = 0; l < e3.rows.length; l++) {
            for (var u = void 0, u = 0; u < e3.rows[l].arr.length; u++) u < e3.rows[l].arr.length - 1 ? "csv" === o3 && String(e3.rows[l].arr[u]).includes(",") ? n2.write('"' + e3.rows[l].arr[u] + '"' + i2) : n2.write(e3.rows[l].arr[u] + i2) : "csv" === o3 && String(e3.rows[l].arr[u]).includes(",") ? n2.write('"' + e3.rows[l].arr[u] + '"') : n2.write(e3.rows[l].arr[u]);
            n2.write("\n");
          }
        } else {
          n2.print("<html>"), n2.print("<head>");
          if (n2.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), n2.print("</head>"), n2.print("<body>"), n2.print("  <table>"), "0" !== s3[0]) {
            n2.print("    <tr>");
            for (var c = 0; c < s3.length; c++) {
              var d = g(s3[c]);
              n2.print("      <td>".concat(d)), n2.print("      </td>");
            }
            n2.print("    </tr>");
          }
          for (var h = 0; h < e3.rows.length; h++) {
            n2.print("    <tr>");
            for (var f = 0; f < e3.columns.length; f++) {
              var p = g(e3.rows[h].getString(f));
              n2.print("      <td>".concat(p)), n2.print("      </td>");
            }
            n2.print("    </tr>");
          }
          n2.print("  </table>"), n2.print("</body>"), n2.print("</html>");
        }
        n2.close(), n2.clear();
      }, v.default.prototype.writeFile = function(e3, t2, r2) {
        var o3 = "application/octet-stream", e3 = (v.default.prototype._isSafari() && (o3 = "text/plain"), new Blob(e3, { type: o3 }));
        v.default.prototype.downloadFile(e3, t2, r2);
      }, v.default.prototype.downloadFile = function(e3, t2, r2) {
        var o3, t2 = i(t2, r2), r2 = t2[0];
        e3 instanceof Blob ? n.default.saveAs(e3, r2) : ((o3 = document.createElement("a")).href = e3, o3.download = r2, o3.onclick = function(e4) {
          document.body.removeChild(e4.target), e4.stopPropagation();
        }, o3.style.display = "none", document.body.appendChild(o3), v.default.prototype._isSafari() && (e3 = (e3 = 'Hello, Safari user! To download this file...\n1. Go to File --> Save As.\n2. Choose "Page Source" as the Format.\n') + '3. Name it with this extension: ."'.concat(t2[1], '"'), alert(e3)), o3.click());
      }, v.default.prototype._checkFileExtension = i, v.default.prototype._isSafari = function() {
        return window.HTMLElement.toString().includes("Constructor");
      };
      e2 = v.default;
      r.default = e2;
    }, { "../core/friendly_errors/fes_core": 274, "../core/friendly_errors/file_errors": 275, "../core/friendly_errors/validate_params": 278, "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.last-index-of": 167, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.splice": 171, "core-js/modules/es.function.name": 174, "core-js/modules/es.object.from-entries": 185, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/web.dom-collections.iterator": 246, "core-js/modules/web.url": 248, "es6-promise/auto": 249, "fetch-jsonp": 251, "file-saver": 252, "whatwg-fetch": 261 }], 310: [function(e2, t, r) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.replace"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      n.default.Table = function() {
        function o() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], t3 = this, r2 = o;
          if (!(t3 instanceof r2)) throw new TypeError("Cannot call a class as a function");
          this.columns = [], this.rows = e4;
        }
        var e3, t2;
        return e3 = o, (t2 = [{ key: "addRow", value: function(e4) {
          e4 = e4 || new n.default.TableRow();
          if (void 0 === e4.arr || void 0 === e4.obj) throw new Error("invalid TableRow: ".concat(e4));
          return (e4.table = this).rows.push(e4), e4;
        } }, { key: "removeRow", value: function(e4) {
          this.rows[e4].table = null;
          e4 = this.rows.splice(e4 + 1, this.rows.length);
          this.rows.pop(), this.rows = this.rows.concat(e4);
        } }, { key: "getRow", value: function(e4) {
          return this.rows[e4];
        } }, { key: "getRows", value: function() {
          return this.rows;
        } }, { key: "findRow", value: function(e4, t3) {
          if ("string" == typeof t3) {
            for (var r2 = 0; r2 < this.rows.length; r2++) if (this.rows[r2].obj[t3] === e4) return this.rows[r2];
          } else for (var o3 = 0; o3 < this.rows.length; o3++) if (this.rows[o3].arr[t3] === e4) return this.rows[o3];
          return null;
        } }, { key: "findRows", value: function(e4, t3) {
          var r2 = [];
          if ("string" == typeof t3) for (var o3 = 0; o3 < this.rows.length; o3++) this.rows[o3].obj[t3] === e4 && r2.push(this.rows[o3]);
          else for (var n2 = 0; n2 < this.rows.length; n2++) this.rows[n2].arr[t3] === e4 && r2.push(this.rows[n2]);
          return r2;
        } }, { key: "matchRow", value: function(e4, t3) {
          if ("number" == typeof t3) {
            for (var r2 = 0; r2 < this.rows.length; r2++) if (this.rows[r2].arr[t3].match(e4)) return this.rows[r2];
          } else for (var o3 = 0; o3 < this.rows.length; o3++) if (this.rows[o3].obj[t3].match(e4)) return this.rows[o3];
          return null;
        } }, { key: "matchRows", value: function(e4, t3) {
          var r2 = [];
          if ("number" == typeof t3) for (var o3 = 0; o3 < this.rows.length; o3++) this.rows[o3].arr[t3].match(e4) && r2.push(this.rows[o3]);
          else for (var n2 = 0; n2 < this.rows.length; n2++) this.rows[n2].obj[t3].match(e4) && r2.push(this.rows[n2]);
          return r2;
        } }, { key: "getColumn", value: function(e4) {
          var t3 = [];
          if ("string" == typeof e4) for (var r2 = 0; r2 < this.rows.length; r2++) t3.push(this.rows[r2].obj[e4]);
          else for (var o3 = 0; o3 < this.rows.length; o3++) t3.push(this.rows[o3].arr[e4]);
          return t3;
        } }, { key: "clearRows", value: function() {
          delete this.rows, this.rows = [];
        } }, { key: "addColumn", value: function(e4) {
          this.columns.push(e4 || null);
        } }, { key: "getColumnCount", value: function() {
          return this.columns.length;
        } }, { key: "getRowCount", value: function() {
          return this.rows.length;
        } }, { key: "removeTokens", value: function(e4, t3) {
          for (var r2 = [], o3 = 0; o3 < e4.length; o3++) r2.push(e4.charAt(o3).replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"));
          var n2 = new RegExp(r2.join("|"), "g");
          if (void 0 === t3) for (var s3 = 0; s3 < this.columns.length; s3++) for (var i = 0; i < this.rows.length; i++) {
            var a2 = (a2 = this.rows[i].arr[s3]).replace(n2, "");
            this.rows[i].arr[s3] = a2, this.rows[i].obj[this.columns[s3]] = a2;
          }
          else if ("string" == typeof t3) for (var l = 0; l < this.rows.length; l++) {
            var u = (u = this.rows[l].obj[t3]).replace(n2, ""), c = (this.rows[l].obj[t3] = u, this.columns.indexOf(t3));
            this.rows[l].arr[c] = u;
          }
          else for (var d = 0; d < this.rows.length; d++) {
            var h = (h = this.rows[d].arr[t3]).replace(n2, "");
            this.rows[d].arr[t3] = h, this.rows[d].obj[this.columns[t3]] = h;
          }
        } }, { key: "trim", value: function(e4) {
          var t3 = new RegExp(" ", "g");
          if (void 0 === e4) for (var r2 = 0; r2 < this.columns.length; r2++) for (var o3 = 0; o3 < this.rows.length; o3++) {
            var n2 = (n2 = this.rows[o3].arr[r2]).replace(t3, "");
            this.rows[o3].arr[r2] = n2, this.rows[o3].obj[this.columns[r2]] = n2;
          }
          else if ("string" == typeof e4) for (var s3 = 0; s3 < this.rows.length; s3++) {
            var i = (i = this.rows[s3].obj[e4]).replace(t3, ""), a2 = (this.rows[s3].obj[e4] = i, this.columns.indexOf(e4));
            this.rows[s3].arr[a2] = i;
          }
          else for (var l = 0; l < this.rows.length; l++) {
            var u = (u = this.rows[l].arr[e4]).replace(t3, "");
            this.rows[l].arr[e4] = u, this.rows[l].obj[this.columns[e4]] = u;
          }
        } }, { key: "removeColumn", value: function(e4) {
          "string" == typeof e4 ? r2 = this.columns.indexOf(t3 = e4) : t3 = this.columns[r2 = e4];
          var t3, r2, e4 = this.columns.splice(r2 + 1, this.columns.length);
          this.columns.pop(), this.columns = this.columns.concat(e4);
          for (var o3 = 0; o3 < this.rows.length; o3++) {
            var n2 = this.rows[o3].arr, s3 = n2.splice(r2 + 1, n2.length);
            n2.pop(), this.rows[o3].arr = n2.concat(s3), delete this.rows[o3].obj[t3];
          }
        } }, { key: "set", value: function(e4, t3, r2) {
          this.rows[e4].set(t3, r2);
        } }, { key: "setNum", value: function(e4, t3, r2) {
          this.rows[e4].setNum(t3, r2);
        } }, { key: "setString", value: function(e4, t3, r2) {
          this.rows[e4].setString(t3, r2);
        } }, { key: "get", value: function(e4, t3) {
          return this.rows[e4].get(t3);
        } }, { key: "getNum", value: function(e4, t3) {
          return this.rows[e4].getNum(t3);
        } }, { key: "getString", value: function(e4, t3) {
          return this.rows[e4].getString(t3);
        } }, { key: "getObject", value: function(e4) {
          for (var t3, r2 = {}, o3 = 0; o3 < this.rows.length; o3++) if (t3 = this.rows[o3].obj, "string" == typeof e4) {
            if (!(0 <= this.columns.indexOf(e4))) throw new Error('This table has no column named "'.concat(e4, '"'));
            r2[t3[e4]] = t3;
          } else r2[o3] = this.rows[o3].obj;
          return r2;
        } }, { key: "getArray", value: function() {
          for (var e4 = [], t3 = 0; t3 < this.rows.length; t3++) e4.push(this.rows[t3].arr);
          return e4;
        } }]) && s2(e3.prototype, t2), o;
      }();
      e2 = n.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.splice": 171, "core-js/modules/es.regexp.constructor": 194, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.match": 201, "core-js/modules/es.string.replace": 204 }], 311: [function(e2, t, r) {
      e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.from-entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      e2.default.TableRow = function() {
        function o(e4, t3) {
          if (!(this instanceof o)) throw new TypeError("Cannot call a class as a function");
          var r2 = [];
          e4 && (r2 = e4.split(t3 = t3 || ",")), this.arr = r2, this.obj = Object.fromEntries(r2.entries()), this.table = null;
        }
        var e3, t2;
        return e3 = o, (t2 = [{ key: "set", value: function(e4, t3) {
          if ("string" == typeof e4) {
            var r2 = this.table.columns.indexOf(e4);
            if (!(0 <= r2)) throw new Error('This table has no column named "'.concat(e4, '"'));
            this.obj[e4] = t3, this.arr[r2] = t3;
          } else {
            if (!(e4 < this.table.columns.length)) throw new Error("Column #".concat(e4, " is out of the range of this table"));
            this.arr[e4] = t3;
            r2 = this.table.columns[e4];
            this.obj[r2] = t3;
          }
        } }, { key: "setNum", value: function(e4, t3) {
          t3 = parseFloat(t3);
          this.set(e4, t3);
        } }, { key: "setString", value: function(e4, t3) {
          t3 = t3.toString();
          this.set(e4, t3);
        } }, { key: "get", value: function(e4) {
          return ("string" == typeof e4 ? this.obj : this.arr)[e4];
        } }, { key: "getNum", value: function(e4) {
          var t3 = "string" == typeof e4 ? parseFloat(this.obj[e4]) : parseFloat(this.arr[e4]);
          if ("NaN" === t3.toString()) throw "Error: ".concat(this.obj[e4], " is NaN (Not a Number)");
          return t3;
        } }, { key: "getString", value: function(e4) {
          return ("string" == typeof e4 ? this.obj : this.arr)[e4].toString();
        } }]) && n(e3.prototype, t2), o;
      }();
      e2 = e2.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.from-entries": 185, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.split": 206, "core-js/modules/web.dom-collections.iterator": 246 }], 312: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var a2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      function s2(e3) {
        for (var t2 = [], r2 = 0; r2 < e3.length; r2++) t2.push(new a2.default.XML(e3[r2]));
        return t2;
      }
      a2.default.XML = function() {
        function t2(e4) {
          if (!(this instanceof t2)) throw new TypeError("Cannot call a class as a function");
          e4 ? this.DOM = e4 : (e4 = document.implementation.createDocument(null, "doc"), this.DOM = e4.createElement("root"));
        }
        var e3, r2;
        return e3 = t2, (r2 = [{ key: "getParent", value: function() {
          return new a2.default.XML(this.DOM.parentElement);
        } }, { key: "getName", value: function() {
          return this.DOM.tagName;
        } }, { key: "setName", value: function(e4) {
          var t3 = this.DOM.innerHTML, r3 = this.DOM.attributes, o = document.implementation.createDocument(null, "default").createElement(e4);
          o.innerHTML = t3;
          for (var n2 = 0; n2 < r3.length; n2++) o.setAttribute(r3[n2].nodeName, r3[n2].nodeValue);
          this.DOM = o;
        } }, { key: "hasChildren", value: function() {
          return 0 < this.DOM.children.length;
        } }, { key: "listChildren", value: function() {
          for (var e4 = [], t3 = 0; t3 < this.DOM.childNodes.length; t3++) e4.push(this.DOM.childNodes[t3].nodeName);
          return e4;
        } }, { key: "getChildren", value: function(e4) {
          return s2(e4 ? this.DOM.getElementsByTagName(e4) : this.DOM.children);
        } }, { key: "getChild", value: function(e4) {
          if ("string" != typeof e4) return new a2.default.XML(this.DOM.children[e4]);
          var t3 = true, r3 = false, o = void 0;
          try {
            for (var n2, s3 = this.DOM.children[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) {
              var i = n2.value;
              if (i.tagName === e4) return new a2.default.XML(i);
            }
          } catch (e5) {
            r3 = true, o = e5;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r3) throw o;
            }
          }
        } }, { key: "addChild", value: function(e4) {
          e4 instanceof a2.default.XML && this.DOM.appendChild(e4.DOM);
        } }, { key: "removeChild", value: function(e4) {
          var t3 = -1;
          if ("string" == typeof e4) {
            for (var r3 = 0; r3 < this.DOM.children.length; r3++) if (this.DOM.children[r3].tagName === e4) {
              t3 = r3;
              break;
            }
          } else t3 = e4;
          -1 !== t3 && this.DOM.removeChild(this.DOM.children[t3]);
        } }, { key: "getAttributeCount", value: function() {
          return this.DOM.attributes.length;
        } }, { key: "listAttributes", value: function() {
          var e4 = [], t3 = true, r3 = false, o = void 0;
          try {
            for (var n2, s3 = this.DOM.attributes[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) {
              var i = n2.value;
              e4.push(i.nodeName);
            }
          } catch (e5) {
            r3 = true, o = e5;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r3) throw o;
            }
          }
          return e4;
        } }, { key: "hasAttribute", value: function(e4) {
          var t3 = {}, r3 = true, o = false, n2 = void 0;
          try {
            for (var s3, i = this.DOM.attributes[Symbol.iterator](); !(r3 = (s3 = i.next()).done); r3 = true) {
              var a3 = s3.value;
              t3[a3.nodeName] = a3.nodeValue;
            }
          } catch (e5) {
            o = true, n2 = e5;
          } finally {
            try {
              r3 || null == i.return || i.return();
            } finally {
              if (o) throw n2;
            }
          }
          return !!t3[e4];
        } }, { key: "getNum", value: function(e4, t3) {
          var r3 = {}, o = true, n2 = false, s3 = void 0;
          try {
            for (var i, a3 = this.DOM.attributes[Symbol.iterator](); !(o = (i = a3.next()).done); o = true) {
              var l = i.value;
              r3[l.nodeName] = l.nodeValue;
            }
          } catch (e5) {
            n2 = true, s3 = e5;
          } finally {
            try {
              o || null == a3.return || a3.return();
            } finally {
              if (n2) throw s3;
            }
          }
          return Number(r3[e4]) || t3 || 0;
        } }, { key: "getString", value: function(e4, t3) {
          var r3 = {}, o = true, n2 = false, s3 = void 0;
          try {
            for (var i, a3 = this.DOM.attributes[Symbol.iterator](); !(o = (i = a3.next()).done); o = true) {
              var l = i.value;
              r3[l.nodeName] = l.nodeValue;
            }
          } catch (e5) {
            n2 = true, s3 = e5;
          } finally {
            try {
              o || null == a3.return || a3.return();
            } finally {
              if (n2) throw s3;
            }
          }
          return r3[e4] ? String(r3[e4]) : t3 || null;
        } }, { key: "setAttribute", value: function(e4, t3) {
          this.DOM.setAttribute(e4, t3);
        } }, { key: "getContent", value: function(e4) {
          var t3 = this.DOM.textContent;
          return (t3 = t3.replace(/\s\s+/g, ",")) || e4 || null;
        } }, { key: "setContent", value: function(e4) {
          this.DOM.children.length || (this.DOM.textContent = e4);
        } }, { key: "serialize", value: function() {
          return new XMLSerializer().serializeToString(this.DOM);
        } }]) && n(e3.prototype, r2), t2;
      }();
      e2 = a2.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 313: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.string.includes"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var i = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      i.default.prototype.abs = Math.abs, i.default.prototype.ceil = Math.ceil, i.default.prototype.constrain = function(e3, t2, r2) {
        return i.default._validateParameters("constrain", arguments), Math.max(Math.min(e3, r2), t2);
      }, i.default.prototype.dist = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return i.default._validateParameters("dist", t2), 4 === t2.length ? Math.hypot(t2[2] - t2[0], t2[3] - t2[1]) : 6 === t2.length ? Math.hypot(t2[3] - t2[0], t2[4] - t2[1], t2[5] - t2[2]) : void 0;
      }, i.default.prototype.exp = Math.exp, i.default.prototype.floor = Math.floor, i.default.prototype.lerp = function(e3, t2, r2) {
        return i.default._validateParameters("lerp", arguments), r2 * (t2 - e3) + e3;
      }, i.default.prototype.log = Math.log, i.default.prototype.mag = function(e3, t2) {
        return i.default._validateParameters("mag", arguments), Math.hypot(e3, t2);
      }, i.default.prototype.map = function(e3, t2, r2, o, n2, s2) {
        i.default._validateParameters("map", arguments);
        e3 = (e3 - t2) / (r2 - t2) * (n2 - o) + o;
        return s2 ? o < n2 ? this.constrain(e3, o, n2) : this.constrain(e3, n2, o) : e3;
      }, i.default.prototype.max = function() {
        for (var e3 = function(e4) {
          return Math.max.apply(Math, n(e4));
        }, t2 = arguments.length, r2 = new Array(t2), o = 0; o < t2; o++) r2[o] = arguments[o];
        return Array.isArray(r2[0]) ? e3(r2[0]) : e3(r2);
      }, i.default.prototype.min = function() {
        for (var e3 = function(e4) {
          return Math.min.apply(Math, n(e4));
        }, t2 = arguments.length, r2 = new Array(t2), o = 0; o < t2; o++) r2[o] = arguments[o];
        return Array.isArray(r2[0]) ? e3(r2[0]) : e3(r2);
      }, i.default.prototype.norm = function(e3, t2, r2) {
        return i.default._validateParameters("norm", arguments), this.map(e3, t2, r2, 0, 1);
      }, i.default.prototype.pow = Math.pow, i.default.prototype.round = function(e3, t2) {
        return t2 ? (t2 = Math.pow(10, t2), Math.round(e3 * t2) / t2) : Math.round(e3);
      }, i.default.prototype.sq = function(e3) {
        return e3 * e3;
      }, i.default.prototype.sqrt = Math.sqrt, i.default.prototype.fract = function(e3) {
        i.default._validateParameters("fract", arguments);
        var t2, r2 = 0, e3 = Number(e3);
        return isNaN(e3) || Math.abs(e3) === 1 / 0 ? e3 : (e3 < 0 && (e3 = -e3, r2 = 1), String(e3).includes(".") && !String(e3).includes("e") ? (t2 = String(e3), t2 = Number("0" + t2.slice(t2.indexOf("."))), Math.abs(r2 - t2)) : e3 < 1 ? Math.abs(r2 - e3) : 0);
      };
      e2 = i.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.math.hypot": 176, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 314: [function(e2, t, r) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t2, r2) {
        return (n = function() {
          if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
            if ("function" == typeof Proxy) return 1;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), 1;
            } catch (e4) {
            }
          }
        }() ? Reflect.construct : function(e4, t3, r3) {
          var o3 = [null];
          o3.push.apply(o3, t3);
          t3 = new (Function.bind.apply(e4, o3))();
          return r3 && s2(t3, r3.prototype), t3;
        }).apply(null, arguments);
      }
      function s2(e3, t2) {
        return (s2 = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      o.default.prototype.createVector = function(e3, t2, r2) {
        return this instanceof o.default ? n(o.default.Vector, [this._fromRadians.bind(this), this._toRadians.bind(this)].concat(Array.prototype.slice.call(arguments))) : new o.default.Vector(e3, t2, r2);
      };
      e2 = o.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.to-string": 196 }], 315: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function b(e3) {
        return 0.5 * (1 - Math.cos(e3 * Math.PI));
      }
      var _, j = 4095, x2 = 4, w = 0.5, e2 = (e2.default.prototype.noise = function(e3) {
        var t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0;
        if (null == _) {
          _ = new Array(4096);
          for (var o = 0; o < 4096; o++) _[o] = Math.random();
        }
        e3 < 0 && (e3 = -e3), t2 < 0 && (t2 = -t2), r2 < 0 && (r2 = -r2);
        for (var n, s2, i = Math.floor(e3), a2 = Math.floor(t2), l = Math.floor(r2), u = e3 - i, c = t2 - a2, d = r2 - l, h = 0, f = 0.5, p = 0; p < x2; p++) {
          var m = i + (a2 << 4) + (l << 8), y = b(u), g = b(c), v = _[m & j];
          v += y * (_[m + 1 & j] - v), n = _[m + 16 & j], v += g * ((n += y * (_[m + 16 + 1 & j] - n)) - v), n = _[(m += 256) & j], n += y * (_[m + 1 & j] - n), s2 = _[m + 16 & j], n += g * ((s2 += y * (_[m + 16 + 1 & j] - s2)) - n), h += (v += b(d) * (n - v)) * f, f *= w, i <<= 1, a2 <<= 1, l <<= 1, 1 <= (u *= 2) && (i++, u--), 1 <= (c *= 2) && (a2++, c--), 1 <= (d *= 2) && (l++, d--);
        }
        return h;
      }, e2.default.prototype.noiseDetail = function(e3, t2) {
        0 < e3 && (x2 = e3), 0 < t2 && (w = t2);
      }, e2.default.prototype.noiseSeed = function(e3) {
        o = 4294967296;
        var t2, r2, o, n = { setSeed: function(e4) {
          r2 = t2 = (null == e4 ? Math.random() * o : e4) >>> 0;
        }, getSeed: function() {
          return t2;
        }, rand: function() {
          return (r2 = (1664525 * r2 + 1013904223) % o) / o;
        } };
        n.setSeed(e3), _ = new Array(4096);
        for (var s2 = 0; s2 < 4096; s2++) _[s2] = n.rand();
      }, e2.default);
      r.default = e2;
    }, { "../core/main": 283 }], 316: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.number.epsilon"), e2("core-js/modules/es.number.is-finite"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.number.epsilon"), e2("core-js/modules/es.number.is-finite"), e2("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var u = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, s2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function l(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      u.default.Vector = function() {
        function n2() {
          var e4 = this, t3 = n2;
          if (!(e4 instanceof t3)) throw new TypeError("Cannot call a class as a function");
          var r3, o3, e4 = "function" == typeof (arguments.length <= 0 ? void 0 : arguments[0]) ? (this.isPInst = true, this._fromRadians = arguments.length <= 0 ? void 0 : arguments[0], this._toRadians = arguments.length <= 1 ? void 0 : arguments[1], r3 = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, o3 = (arguments.length <= 3 ? void 0 : arguments[3]) || 0, (arguments.length <= 4 ? void 0 : arguments[4]) || 0) : (r3 = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, o3 = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0);
          this.x = r3, this.y = o3, this.z = e4;
        }
        var e3, t2, r2;
        return e3 = n2, r2 = [{ key: "fromAngle", value: function(e4) {
          var t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1;
          return new u.default.Vector(t3 * Math.cos(e4), t3 * Math.sin(e4), 0);
        } }, { key: "fromAngles", value: function(e4, t3) {
          var r3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1, o3 = Math.cos(t3), t3 = Math.sin(t3), n3 = Math.cos(e4), e4 = Math.sin(e4);
          return new u.default.Vector(r3 * e4 * t3, -r3 * n3, r3 * e4 * o3);
        } }, { key: "random2D", value: function() {
          return this.fromAngle(Math.random() * s2.TWO_PI);
        } }, { key: "random3D", value: function() {
          var e4 = Math.random() * s2.TWO_PI, t3 = 2 * Math.random() - 1, r3 = Math.sqrt(1 - t3 * t3), o3 = r3 * Math.cos(e4), r3 = r3 * Math.sin(e4);
          return new u.default.Vector(o3, r3, t3);
        } }, { key: "copy", value: function(e4) {
          return e4.copy(e4);
        } }, { key: "add", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return s3 ? s3.set(o3) : (s3 = o3.copy(), 3 === t3.length && u.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.add")), s3.add(n3), s3;
        } }, { key: "rem", value: function(e4, t3) {
          if (e4 instanceof u.default.Vector && t3 instanceof u.default.Vector) return (e4 = e4.copy()).rem(t3), e4;
        } }, { key: "sub", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return s3 ? s3.set(o3) : (s3 = o3.copy(), 3 === t3.length && u.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.sub")), s3.sub(n3), s3;
        } }, { key: "mult", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return s3 ? s3.set(o3) : (s3 = o3.copy(), 3 === t3.length && u.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.mult")), s3.mult(n3), s3;
        } }, { key: "rotate", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return 2 === t3.length ? s3 = o3.copy() : (s3 instanceof u.default.Vector || u.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.rotate"), s3.set(o3)), s3.rotate(n3), s3;
        } }, { key: "div", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return s3 ? s3.set(o3) : (s3 = o3.copy(), 3 === t3.length && u.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.div")), s3.div(n3), s3;
        } }, { key: "dot", value: function(e4, t3) {
          return e4.dot(t3);
        } }, { key: "cross", value: function(e4, t3) {
          return e4.cross(t3);
        } }, { key: "dist", value: function(e4, t3) {
          return e4.dist(t3);
        } }, { key: "lerp", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2], i2 = t3[3];
          return i2 ? i2.set(o3) : (i2 = o3.copy(), 4 === t3.length && u.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.lerp")), i2.lerp(n3, s3), i2;
        } }, { key: "slerp", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2], i2 = t3[3];
          return i2 ? i2.set(o3) : (i2 = o3.copy(), 4 === t3.length && u.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.slerp")), i2.slerp(n3, s3), i2;
        } }, { key: "mag", value: function(e4) {
          return e4.mag();
        } }, { key: "magSq", value: function(e4) {
          return e4.magSq();
        } }, { key: "normalize", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1];
          return t3.length < 2 ? n3 = o3.copy() : (n3 instanceof u.default.Vector || u.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.normalize"), n3.set(o3)), n3.normalize();
        } }, { key: "limit", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return t3.length < 3 ? s3 = o3.copy() : (s3 instanceof u.default.Vector || u.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.limit"), s3.set(o3)), s3.limit(n3);
        } }, { key: "setMag", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return t3.length < 3 ? s3 = o3.copy() : (s3 instanceof u.default.Vector || u.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.setMag"), s3.set(o3)), s3.setMag(n3);
        } }, { key: "heading", value: function(e4) {
          return e4.heading();
        } }, { key: "angleBetween", value: function(e4, t3) {
          return e4.angleBetween(t3);
        } }, { key: "reflect", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          return t3.length < 3 ? s3 = o3.copy() : (s3 instanceof u.default.Vector || u.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.reflect"), s3.set(o3)), s3.reflect(n3);
        } }, { key: "array", value: function(e4) {
          return e4.array();
        } }, { key: "equals", value: function(e4, t3) {
          var r3;
          return e4 instanceof u.default.Vector ? r3 = e4 : Array.isArray(e4) ? r3 = new u.default.Vector().set(e4) : u.default._friendlyError("The v1 parameter should be of type Array or p5.Vector", "p5.Vector.equals"), r3.equals(t3);
        } }], (t2 = [{ key: "toString", value: function() {
          return "p5.Vector Object : [".concat(this.x, ", ").concat(this.y, ", ").concat(this.z, "]");
        } }, { key: "set", value: function(e4, t3, r3) {
          return e4 instanceof u.default.Vector ? (this.x = e4.x || 0, this.y = e4.y || 0, this.z = e4.z || 0) : Array.isArray(e4) ? (this.x = e4[0] || 0, this.y = e4[1] || 0, this.z = e4[2] || 0) : (this.x = e4 || 0, this.y = t3 || 0, this.z = r3 || 0), this;
        } }, { key: "copy", value: function() {
          return this.isPInst ? new u.default.Vector(this._fromRadians, this._toRadians, this.x, this.y, this.z) : new u.default.Vector(this.x, this.y, this.z);
        } }, { key: "add", value: function(e4, t3, r3) {
          return e4 instanceof u.default.Vector ? (this.x += e4.x || 0, this.y += e4.y || 0, this.z += e4.z || 0) : Array.isArray(e4) ? (this.x += e4[0] || 0, this.y += e4[1] || 0, this.z += e4[2] || 0) : (this.x += e4 || 0, this.y += t3 || 0, this.z += r3 || 0), this;
        } }, { key: "calculateRemainder2D", value: function(e4, t3) {
          return 0 !== e4 && (this.x = this.x % e4), 0 !== t3 && (this.y = this.y % t3), this;
        } }, { key: "calculateRemainder3D", value: function(e4, t3, r3) {
          return 0 !== e4 && (this.x = this.x % e4), 0 !== t3 && (this.y = this.y % t3), 0 !== r3 && (this.z = this.z % r3), this;
        } }, { key: "rem", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3, n3, s3, i2 = t3[0], a3 = t3[1], l2 = t3[2];
          if (i2 instanceof u.default.Vector) {
            if ([i2.x, i2.y, i2.z].every(Number.isFinite)) return o3 = parseFloat(i2.x), n3 = parseFloat(i2.y), s3 = parseFloat(i2.z), this.calculateRemainder3D(o3, n3, s3);
          } else if (Array.isArray(i2)) {
            if (i2.every(Number.isFinite)) return 2 === i2.length ? this.calculateRemainder2D(i2[0], i2[1]) : 3 === i2.length ? this.calculateRemainder3D(i2[0], i2[1], i2[2]) : void 0;
          } else if (1 === t3.length) {
            if (Number.isFinite(i2) && 0 !== i2) return this.x = this.x % i2, this.y = this.y % i2, this.z = this.z % i2, this;
          } else if (2 === t3.length) {
            if (t3.every(Number.isFinite)) return this.calculateRemainder2D(i2, a3);
          } else if (3 === t3.length && t3.every(Number.isFinite)) return this.calculateRemainder3D(i2, a3, l2);
        } }, { key: "sub", value: function(e4, t3, r3) {
          return e4 instanceof u.default.Vector ? (this.x -= e4.x || 0, this.y -= e4.y || 0, this.z -= e4.z || 0) : Array.isArray(e4) ? (this.x -= e4[0] || 0, this.y -= e4[1] || 0, this.z -= e4[2] || 0) : (this.x -= e4 || 0, this.y -= t3 || 0, this.z -= r3 || 0), this;
        } }, { key: "mult", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3, n3 = t3[0], s3 = t3[1], i2 = t3[2];
          return n3 instanceof u.default.Vector ? Number.isFinite(n3.x) && Number.isFinite(n3.y) && Number.isFinite(n3.z) && "number" == typeof n3.x && "number" == typeof n3.y && "number" == typeof n3.z ? (this.x *= n3.x, this.y *= n3.y, this.z *= n3.z) : console.warn("p5.Vector.prototype.mult:", "x contains components that are either undefined or not finite numbers") : Array.isArray(n3) ? n3.every(function(e5) {
            return Number.isFinite(e5);
          }) && n3.every(function(e5) {
            return "number" == typeof e5;
          }) ? 1 === n3.length ? (this.x *= n3[0], this.y *= n3[0], this.z *= n3[0]) : 2 === n3.length ? (this.x *= n3[0], this.y *= n3[1]) : 3 === n3.length && (this.x *= n3[0], this.y *= n3[1], this.z *= n3[2]) : console.warn("p5.Vector.prototype.mult:", "x contains elements that are either undefined or not finite numbers") : (o3 = t3).every(function(e5) {
            return Number.isFinite(e5);
          }) && o3.every(function(e5) {
            return "number" == typeof e5;
          }) ? (1 === t3.length && (this.x *= n3, this.y *= n3, this.z *= n3), 2 === t3.length && (this.x *= n3, this.y *= s3), 3 === t3.length && (this.x *= n3, this.y *= s3, this.z *= i2)) : console.warn("p5.Vector.prototype.mult:", "x, y, or z arguments are either undefined or not a finite number"), this;
        } }, { key: "div", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r3 = 0; r3 < e4; r3++) t3[r3] = arguments[r3];
          var o3 = t3[0], n3 = t3[1], s3 = t3[2];
          if (o3 instanceof u.default.Vector) if (Number.isFinite(o3.x) && Number.isFinite(o3.y) && Number.isFinite(o3.z) && "number" == typeof o3.x && "number" == typeof o3.y && "number" == typeof o3.z) {
            var i2 = 0 === o3.z && 0 === this.z;
            if (0 === o3.x || 0 === o3.y || !i2 && 0 === o3.z) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
            this.x /= o3.x, this.y /= o3.y, i2 || (this.z /= o3.z);
          } else console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
          else if (Array.isArray(o3)) if (o3.every(Number.isFinite) && o3.every(function(e5) {
            return "number" == typeof e5;
          })) {
            if (o3.some(function(e5) {
              return 0 === e5;
            })) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
            1 === o3.length ? (this.x /= o3[0], this.y /= o3[0], this.z /= o3[0]) : 2 === o3.length ? (this.x /= o3[0], this.y /= o3[1]) : 3 === o3.length && (this.x /= o3[0], this.y /= o3[1], this.z /= o3[2]);
          } else console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
          else if (t3.every(Number.isFinite) && t3.every(function(e5) {
            return "number" == typeof e5;
          })) {
            if (t3.some(function(e5) {
              return 0 === e5;
            })) return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
            1 === t3.length && (this.x /= o3, this.y /= o3, this.z /= o3), 2 === t3.length && (this.x /= o3, this.y /= n3), 3 === t3.length && (this.x /= o3, this.y /= n3, this.z /= s3);
          } else console.warn("p5.Vector.prototype.div:", "x, y, or z arguments are either undefined or not a finite number");
          return this;
        } }, { key: "mag", value: function() {
          return Math.sqrt(this.magSq());
        } }, { key: "magSq", value: function() {
          var e4 = this.x, t3 = this.y, r3 = this.z;
          return e4 * e4 + t3 * t3 + r3 * r3;
        } }, { key: "dot", value: function(e4, t3, r3) {
          return e4 instanceof u.default.Vector ? this.dot(e4.x, e4.y, e4.z) : this.x * (e4 || 0) + this.y * (t3 || 0) + this.z * (r3 || 0);
        } }, { key: "cross", value: function(e4) {
          var t3 = this.y * e4.z - this.z * e4.y, r3 = this.z * e4.x - this.x * e4.z, e4 = this.x * e4.y - this.y * e4.x;
          return this.isPInst ? new u.default.Vector(this._fromRadians, this._toRadians, t3, r3, e4) : new u.default.Vector(t3, r3, e4);
        } }, { key: "dist", value: function(e4) {
          return e4.copy().sub(this).mag();
        } }, { key: "normalize", value: function() {
          var e4 = this.mag();
          return 0 !== e4 && this.mult(1 / e4), this;
        } }, { key: "limit", value: function(e4) {
          var t3 = this.magSq();
          return e4 * e4 < t3 && this.div(Math.sqrt(t3)).mult(e4), this;
        } }, { key: "setMag", value: function(e4) {
          return this.normalize().mult(e4);
        } }, { key: "heading", value: function() {
          var e4 = Math.atan2(this.y, this.x);
          return this.isPInst ? this._fromRadians(e4) : e4;
        } }, { key: "setHeading", value: function(e4) {
          this.isPInst && (e4 = this._toRadians(e4));
          var t3 = this.mag();
          return this.x = t3 * Math.cos(e4), this.y = t3 * Math.sin(e4), this;
        } }, { key: "rotate", value: function(e4) {
          var e4 = this.heading() + e4, t3 = (this.isPInst && (e4 = this._toRadians(e4)), this.mag());
          return this.x = Math.cos(e4) * t3, this.y = Math.sin(e4) * t3, this;
        } }, { key: "angleBetween", value: function(e4) {
          var t3;
          return 0 == this.magSq() * e4.magSq() ? NaN : (t3 = this.cross(e4), e4 = Math.atan2(t3.mag(), this.dot(e4)) * Math.sign(t3.z || 1), this.isPInst ? this._fromRadians(e4) : e4);
        } }, { key: "lerp", value: function(e4, t3, r3, o3) {
          return e4 instanceof u.default.Vector ? this.lerp(e4.x, e4.y, e4.z, t3) : (this.x += (e4 - this.x) * o3 || 0, this.y += (t3 - this.y) * o3 || 0, this.z += (r3 - this.z) * o3 || 0, this);
        } }, { key: "slerp", value: function(e4, t3) {
          if (0 !== t3) {
            if (1 === t3) return this.set(e4);
            var r3 = this.mag(), o3 = e4.mag();
            if (0 == r3 * o3) this.mult(1 - t3).add(e4.x * t3, e4.y * t3, e4.z * t3);
            else {
              var n3 = this.cross(e4), s3 = n3.mag(), i2 = Math.atan2(s3, this.dot(e4));
              if (0 < s3) n3.x /= s3, n3.y /= s3, n3.z /= s3;
              else {
                if (i2 < 0.5 * Math.PI) return this.mult(1 - t3).add(e4.x * t3, e4.y * t3, e4.z * t3), this;
                0 === this.z && 0 === e4.z ? n3.set(0, 0, 1) : 0 !== this.x ? n3.set(this.y, -this.x, 0).normalize() : n3.set(1, 0, 0);
              }
              s3 = n3.cross(this), e4 = 1 - t3 + t3 * o3 / r3, n3 = e4 * Math.cos(t3 * i2), o3 = e4 * Math.sin(t3 * i2);
              this.x = this.x * n3 + s3.x * o3, this.y = this.y * n3 + s3.y * o3, this.z = this.z * n3 + s3.z * o3;
            }
          }
          return this;
        } }, { key: "reflect", value: function(e4) {
          e4 = u.default.Vector.normalize(e4);
          return this.sub(e4.mult(2 * this.dot(e4)));
        } }, { key: "array", value: function() {
          return [this.x || 0, this.y || 0, this.z || 0];
        } }, { key: "equals", value: function(e4, t3, r3) {
          var o3, n3, e4 = e4 instanceof u.default.Vector ? (o3 = e4.x || 0, n3 = e4.y || 0, e4.z || 0) : Array.isArray(e4) ? (o3 = e4[0] || 0, n3 = e4[1] || 0, e4[2] || 0) : (o3 = e4 || 0, n3 = t3 || 0, r3 || 0);
          return this.x === o3 && this.y === n3 && this.z === e4;
        } }, { key: "clampToZero", value: function() {
          return this.x = this._clampToZero(this.x), this.y = this._clampToZero(this.y), this.z = this._clampToZero(this.z), this;
        } }, { key: "_clampToZero", value: function(e4) {
          return Math.abs(+(e4 || 0)) <= Number.EPSILON ? 0 : e4;
        } }]) && l(e3.prototype, t2), r2 && l(e3, r2), n2;
      }();
      var n = u.default.Vector;
      r.default = n;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.every": 155, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.some": 170, "core-js/modules/es.math.sign": 178, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.number.epsilon": 180, "core-js/modules/es.number.is-finite": 181, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.sub": 208, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 317: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      var s2 = "_lcg_random_state", o = 4294967296, i = 0, e2 = (n.default.prototype._lcg = function(e3) {
        return this[e3] = (1664525 * this[e3] + 1013904223) % o, this[e3] / o;
      }, n.default.prototype._lcgSetSeed = function(e3, t2) {
        this[e3] = (null == t2 ? Math.random() * o : t2) >>> 0;
      }, n.default.prototype.randomSeed = function(e3) {
        this._lcgSetSeed(s2, e3), this._gaussian_previous = false;
      }, n.default.prototype.random = function(e3, t2) {
        var r2, o3;
        return n.default._validateParameters("random", arguments), r2 = null != this[s2] ? this._lcg(s2) : Math.random(), void 0 === e3 ? r2 : void 0 === t2 ? Array.isArray(e3) ? e3[Math.floor(r2 * e3.length)] : r2 * e3 : (t2 < e3 && (o3 = e3, e3 = t2, t2 = o3), r2 * (t2 - e3) + e3);
      }, n.default.prototype.randomGaussian = function(e3) {
        var t2, r2, o3, n2, s3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1;
        if (this._gaussian_previous) t2 = i, this._gaussian_previous = false;
        else {
          for (; 1 <= (n2 = (r2 = this.random(2) - 1) * r2 + (o3 = this.random(2) - 1) * o3); ) ;
          t2 = r2 * (n2 = Math.sqrt(-2 * Math.log(n2) / n2)), i = o3 * n2, this._gaussian_previous = true;
        }
        return t2 * s3 + (e3 || 0);
      }, n.default);
      r.default = e2;
    }, { "../core/main": 283 }], 318: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (l = e2("../core/main")) && l.__esModule ? l : { default: l }, s2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      n.default.prototype._angleMode = s2.RADIANS, n.default.prototype.acos = function(e3) {
        return this._fromRadians(Math.acos(e3));
      }, n.default.prototype.asin = function(e3) {
        return this._fromRadians(Math.asin(e3));
      }, n.default.prototype.atan = function(e3) {
        return this._fromRadians(Math.atan(e3));
      }, n.default.prototype.atan2 = function(e3, t2) {
        return this._fromRadians(Math.atan2(e3, t2));
      }, n.default.prototype.cos = function(e3) {
        return Math.cos(this._toRadians(e3));
      }, n.default.prototype.sin = function(e3) {
        return Math.sin(this._toRadians(e3));
      }, n.default.prototype.tan = function(e3) {
        return Math.tan(this._toRadians(e3));
      }, n.default.prototype.degrees = function(e3) {
        return e3 * s2.RAD_TO_DEG;
      }, n.default.prototype.radians = function(e3) {
        return e3 * s2.DEG_TO_RAD;
      }, n.default.prototype.angleMode = function(e3) {
        if (n.default._validateParameters("angleMode", arguments), void 0 === e3) return this._angleMode;
        e3 !== s2.DEGREES && e3 !== s2.RADIANS || e3 !== this._angleMode && (e3 === s2.RADIANS ? (this._setProperty("pRotationX", this.pRotationX * s2.DEG_TO_RAD), this._setProperty("pRotationY", this.pRotationY * s2.DEG_TO_RAD), this._setProperty("pRotationZ", this.pRotationZ * s2.DEG_TO_RAD)) : (this._setProperty("pRotationX", this.pRotationX * s2.RAD_TO_DEG), this._setProperty("pRotationY", this.pRotationY * s2.RAD_TO_DEG), this._setProperty("pRotationZ", this.pRotationZ * s2.RAD_TO_DEG)), this._angleMode = e3);
      }, n.default.prototype._toRadians = function(e3) {
        return this._angleMode === s2.DEGREES ? e3 * s2.DEG_TO_RAD : e3;
      }, n.default.prototype._toDegrees = function(e3) {
        return this._angleMode === s2.RADIANS ? e3 * s2.RAD_TO_DEG : e3;
      }, n.default.prototype._fromRadians = function(e3) {
        return this._angleMode === s2.DEGREES ? e3 * s2.RAD_TO_DEG : e3;
      }, n.default.prototype._fromDegrees = function(e3) {
        return this._angleMode === s2.RADIANS ? e3 * s2.DEG_TO_RAD : e3;
      };
      var l = n.default;
      r.default = l;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 319: [function(e2, t, r) {
      e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var i = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      i.default.prototype.textAlign = function(e3, t2) {
        var r2;
        return i.default._validateParameters("textAlign", arguments), (r2 = this._renderer).textAlign.apply(r2, arguments);
      }, i.default.prototype.textLeading = function(e3) {
        var t2;
        return i.default._validateParameters("textLeading", arguments), (t2 = this._renderer).textLeading.apply(t2, arguments);
      }, i.default.prototype.textSize = function(e3) {
        var t2;
        return i.default._validateParameters("textSize", arguments), (t2 = this._renderer).textSize.apply(t2, arguments);
      }, i.default.prototype.textStyle = function(e3) {
        var t2;
        return i.default._validateParameters("textStyle", arguments), (t2 = this._renderer).textStyle.apply(t2, arguments);
      }, i.default.prototype.textWidth = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        if (t2[0] += "", i.default._validateParameters("textWidth", t2), 0 === t2[0].length) return 0;
        for (var o = t2[0].replace(/\t/g, "  ").split(/\r?\n|\r|\n/g), n = [], s2 = 0; s2 < o.length; s2++) n.push(this._renderer.textWidth(o[s2]));
        return Math.max.apply(Math, n);
      }, i.default.prototype.textAscent = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return i.default._validateParameters("textAscent", t2), this._renderer.textAscent();
      }, i.default.prototype.textDescent = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return i.default._validateParameters("textDescent", t2), this._renderer.textDescent();
      }, i.default.prototype._updateTextMetrics = function() {
        return this._renderer._updateTextMetrics();
      }, i.default.prototype.textWrap = function(e3) {
        return i.default._validateParameters("textWrap", [e3]), this._renderer.textWrap(e3);
      };
      e2 = i.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206 }], 320: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.split"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l = (c = e2("../core/main")) && c.__esModule ? c : { default: c }, n = s2(e2("../core/constants")), u = s2(e2("opentype.js"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function s2(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3, n2 = {}, s3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) Object.prototype.hasOwnProperty.call(e3, r2) && ((o3 = s3 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (o3.get || o3.set) ? Object.defineProperty(n2, r2, o3) : n2[r2] = e3[r2]);
        return n2.default = e3, t2 && t2.set(e3, n2), n2;
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), l.default.prototype.loadFont = function(o3, n2, s3) {
        l.default._validateParameters("loadFont", arguments);
        var i2 = new l.default.Font(this), a3 = this;
        return u.load(o3, function(e3, t2) {
          if (e3) return l.default._friendlyFileLoadError(4, o3), void 0 !== s3 ? s3(e3) : void console.error(e3, o3);
          i2.font = t2, void 0 !== n2 && n2(i2), a3._decrementPreload();
          var e3 = o3.split("\\").pop().split("/").pop(), t2 = e3.lastIndexOf("."), r2 = t2 < 1 ? null : e3.slice(t2 + 1);
          ["ttf", "otf", "woff", "woff2"].includes(r2) && (r2 = e3.slice(0, -1 !== t2 ? t2 : 0), (e3 = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r2, ";\nsrc: url(").concat(o3, ");\n}\n"))), document.head.appendChild(e3));
        }), i2;
      }, l.default.prototype.text = function(e3, t2, r2, o3, n2) {
        var s3;
        return l.default._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? (s3 = this._renderer).text.apply(s3, arguments) : this;
      }, l.default.prototype.textFont = function(e3, t2) {
        if (l.default._validateParameters("textFont", arguments), arguments.length) {
          if (e3) return this._renderer._setProperty("_textFont", e3), t2 && (this._renderer._setProperty("_textSize", t2), this._renderer._leadingSet || this._renderer._setProperty("_textLeading", t2 * n._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
          throw new Error("null font passed to textFont");
        }
        return this._renderer._textFont;
      };
      var c = l.default;
      r.default = c;
    }, { "../core/constants": 272, "../core/friendly_errors/fes_core": 274, "../core/friendly_errors/file_errors": 275, "../core/friendly_errors/validate_params": 278, "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.last-index-of": 167, "core-js/modules/es.array.slice": 169, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246, "opentype.js": 257 }], 321: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, v = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== x2(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = i();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function i() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), i = function() {
          return e3;
        }, e3);
      }
      function x2(e3) {
        return (x2 = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function w(e3, t2) {
        var r2 = e3.length;
        return e3[t2 < 0 ? t2 % r2 + r2 : t2 % r2];
      }
      function S(e3, t2, r2, o3) {
        var n2, s3, i2;
        return o3 ? (void 0 === S.tmpPoint1 && (S.tmpPoint1 = [], S.tmpPoint2 = []), s3 = S.tmpPoint1, i2 = S.tmpPoint2, s3.x = t2.x - e3.x, s3.y = t2.y - e3.y, i2.x = r2.x - t2.x, i2.y = r2.y - t2.y, n2 = s3.x * i2.x + s3.y * i2.y, s3 = Math.sqrt(s3.x * s3.x + s3.y * s3.y), i2 = Math.sqrt(i2.x * i2.x + i2.y * i2.y), Math.acos(n2 / (s3 * i2)) < o3) : 0 == (t2[0] - e3[0]) * (r2[1] - e3[1]) - (r2[0] - e3[0]) * (t2[1] - e3[1]);
      }
      function d(e3, t2, r2, o3, n2, s3, i2, a2, l) {
        var u = 1 - l, c = Math.pow(u, 3), d2 = Math.pow(u, 2), h2 = l * l, f2 = h2 * l, p = c * e3 + 3 * d2 * l * r2 + 3 * u * l * l * n2 + f2 * i2, c = c * t2 + 3 * d2 * l * o3 + 3 * u * l * l * s3 + f2 * a2, d2 = e3 + 2 * l * (r2 - e3) + h2 * (n2 - 2 * r2 + e3), f2 = t2 + 2 * l * (o3 - t2) + h2 * (s3 - 2 * o3 + t2), m = r2 + 2 * l * (n2 - r2) + h2 * (i2 - 2 * n2 + r2), h2 = o3 + 2 * l * (s3 - o3) + h2 * (a2 - 2 * s3 + o3), e3 = u * e3 + l * r2, r2 = u * t2 + l * o3, t2 = u * n2 + l * i2, o3 = u * s3 + l * a2, n2 = 90 - 180 * Math.atan2(d2 - m, f2 - h2) / Math.PI;
        return (m < d2 || f2 < h2) && (n2 += 180), { x: p, y: c, m: { x: d2, y: f2 }, n: { x: m, y: h2 }, start: { x: e3, y: r2 }, end: { x: t2, y: o3 }, alpha: n2 };
      }
      function h(e3, t2, r2, o3, n2, s3, i2, a2, l) {
        return null == l ? f(e3, t2, r2, o3, n2, s3, i2, a2) : d(e3, t2, r2, o3, n2, s3, i2, a2, function(e4, t3, r3, o4, n3, s4, i3, a3, l2) {
          if (!(l2 < 0 || f(e4, t3, r3, o4, n3, s4, i3, a3) < l2)) {
            var u, c = 0.5, d2 = 1 - c;
            for (u = f(e4, t3, r3, o4, n3, s4, i3, a3, d2); 0.01 < Math.abs(u - l2); ) u = f(e4, t3, r3, o4, n3, s4, i3, a3, d2 += (u < l2 ? 1 : -1) * (c /= 2));
            return d2;
          }
        }(e3, t2, r2, o3, n2, s3, i2, a2, l));
      }
      function T(e3, t2, r2) {
        for (var o3, n2, s3, i2, a2, l = 0, u = 0, c = (e3 = function(e4, t3) {
          function r3(e5, t4, r4) {
            var o5, n4;
            if (!e5) return ["C", t4.x, t4.y, t4.x, t4.y, t4.x, t4.y];
            switch (e5[0] in { T: 1, Q: 1 } || (t4.qx = t4.qy = null), e5[0]) {
              case "M":
                t4.X = e5[1], t4.Y = e5[2];
                break;
              case "A":
                e5 = ["C"].concat(E.apply(0, [t4.x, t4.y].concat(e5.slice(1))));
                break;
              case "S":
                n4 = "C" === r4 || "S" === r4 ? (o5 = 2 * t4.x - t4.bx, 2 * t4.y - t4.by) : (o5 = t4.x, t4.y), e5 = ["C", o5, n4].concat(e5.slice(1));
                break;
              case "T":
                "Q" === r4 || "T" === r4 ? (t4.qx = 2 * t4.x - t4.qx, t4.qy = 2 * t4.y - t4.qy) : (t4.qx = t4.x, t4.qy = t4.y), e5 = ["C"].concat(M(t4.x, t4.y, t4.qx, t4.qy, e5[1], e5[2]));
                break;
              case "Q":
                t4.qx = e5[1], t4.qy = e5[2], e5 = ["C"].concat(M(t4.x, t4.y, e5[1], e5[2], e5[3], e5[4]));
                break;
              case "L":
                e5 = ["C"].concat(j(t4.x, t4.y, e5[1], e5[2]));
                break;
              case "H":
                e5 = ["C"].concat(j(t4.x, t4.y, e5[1], t4.y));
                break;
              case "V":
                e5 = ["C"].concat(j(t4.x, t4.y, t4.x, e5[1]));
                break;
              case "Z":
                e5 = ["C"].concat(j(t4.x, t4.y, t4.X, t4.Y));
            }
            return e5;
          }
          function o4(e5, t4) {
            if (7 < e5[t4].length) {
              e5[t4].shift();
              for (var r4 = e5[t4]; r4.length; ) c2[t4] = "A", a3 && (d2[t4] = "A"), e5.splice(t4++, 0, ["C"].concat(r4.splice(0, 6)));
              e5.splice(t4, 1), s4 = Math.max(i3.length, a3 && a3.length || 0);
            }
          }
          function n3(e5, t4, r4, o5, n4) {
            e5 && t4 && "M" === e5[n4][0] && "M" !== t4[n4][0] && (t4.splice(n4, 0, ["M", o5.x, o5.y]), r4.bx = 0, r4.by = 0, r4.x = e5[n4][1], r4.y = e5[n4][2], s4 = Math.max(i3.length, a3 && a3.length || 0));
          }
          var s4, i3 = b(e4), a3 = t3 && b(t3), l2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, u2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, c2 = [], d2 = [], h2 = "", f2 = "";
          s4 = Math.max(i3.length, a3 && a3.length || 0);
          for (var p = 0; p < s4; p++) {
            "C" !== (h2 = i3[p] ? i3[p][0] : h2) && (c2[p] = h2, p && (f2 = c2[p - 1])), i3[p] = r3(i3[p], l2, f2), "A" !== c2[p] && "C" === h2 && (c2[p] = "C"), o4(i3, p), a3 && ("C" !== (h2 = a3[p] ? a3[p][0] : h2) && (d2[p] = h2, p && (f2 = d2[p - 1])), a3[p] = r3(a3[p], u2, f2), "A" !== d2[p] && "C" === h2 && (d2[p] = "C"), o4(a3, p)), n3(i3, a3, l2, u2, p), n3(a3, i3, u2, l2, p);
            var m = i3[p], y2 = a3 && a3[p], g = m.length, v2 = a3 && y2.length;
            l2.x = m[g - 2], l2.y = m[g - 1], l2.bx = parseFloat(m[g - 4]) || l2.x, l2.by = parseFloat(m[g - 3]) || l2.y, u2.bx = a3 && (parseFloat(y2[v2 - 4]) || u2.x), u2.by = a3 && (parseFloat(y2[v2 - 3]) || u2.y), u2.x = a3 && y2[v2 - 2], u2.y = a3 && y2[v2 - 1];
          }
          return a3 ? [i3, a3] : i3;
        }(e3)).length; u < c; u++) {
          if ("M" === (s3 = e3[u])[0]) o3 = +s3[1], n2 = +s3[2];
          else {
            if (t2 < l + (i2 = h(o3, n2, s3[1], s3[2], s3[3], s3[4], s3[5], s3[6])) && !r2) return { x: (a2 = h(o3, n2, s3[1], s3[2], s3[3], s3[4], s3[5], s3[6], t2 - l)).x, y: a2.y, alpha: a2.alpha };
            l += i2, o3 = +s3[5], n2 = +s3[6];
          }
          s3.shift();
        }
        return a2 = (a2 = r2 ? l : d(o3, n2, s3[0], s3[1], s3[2], s3[3], s3[4], s3[5], 1)).alpha ? { x: a2.x, y: a2.y, alpha: a2.alpha } : a2;
      }
      function b(e3) {
        var t2 = [], r2 = 0, o3 = 0, n2 = 0, s3 = 0, i2 = 0;
        if (e3) {
          "M" === e3[0][0] && (n2 = r2 = +e3[0][1], s3 = o3 = +e3[0][2], i2++, t2[0] = ["M", r2, o3]);
          for (var a2, l, u = 3 === e3.length && "M" === e3[0][0] && "R" === e3[1][0].toUpperCase() && "Z" === e3[2][0].toUpperCase(), c = i2, d2 = e3.length; c < d2; c++) {
            if (t2.push(a2 = []), (l = e3[c])[0] !== l[0].toUpperCase()) switch (a2[0] = l[0].toUpperCase(), a2[0]) {
              case "A":
                a2[1] = l[1], a2[2] = l[2], a2[3] = l[3], a2[4] = l[4], a2[5] = l[5], a2[6] = +(l[6] + r2), a2[7] = +(l[7] + o3);
                break;
              case "V":
                a2[1] = +l[1] + o3;
                break;
              case "H":
                a2[1] = +l[1] + r2;
                break;
              case "R":
                for (var h2, f2 = 2, p = (h2 = [r2, o3].concat(l.slice(1))).length; f2 < p; f2++) h2[f2] = +h2[f2] + r2, h2[++f2] = +h2[f2] + o3;
                t2.pop(), t2 = t2.concat(_(h2, u));
                break;
              case "M":
                n2 = +l[1] + r2, s3 = +l[2] + o3;
                break;
              default:
                for (var m = 1, y2 = l.length; m < y2; m++) a2[m] = +l[m] + (m % 2 ? r2 : o3);
            }
            else if ("R" === l[0]) h2 = [r2, o3].concat(l.slice(1)), t2.pop(), t2 = t2.concat(_(h2, u)), a2 = ["R"].concat(l.slice(-2));
            else for (var g = 0, v2 = l.length; g < v2; g++) a2[g] = l[g];
            switch (a2[0]) {
              case "Z":
                r2 = n2, o3 = s3;
                break;
              case "H":
                r2 = a2[1];
                break;
              case "V":
                o3 = a2[1];
                break;
              case "M":
                n2 = a2[a2.length - 2], s3 = a2[a2.length - 1];
                break;
              default:
                r2 = a2[a2.length - 2], o3 = a2[a2.length - 1];
            }
          }
        }
        return t2;
      }
      function E(e3, t2, r2, o3, n2, s3, i2, a2, l, u) {
        function c(e4, t3, r3) {
          return { x: e4 * Math.cos(r3) - t3 * Math.sin(r3), y: e4 * Math.sin(r3) + t3 * Math.cos(r3) };
        }
        var d2, h2 = Math.PI, f2 = 120 * h2 / 180, p = h2 / 180 * (+n2 || 0), m = [], y2 = (u ? (x3 = u[0], d2 = u[1], _2 = u[2], j2 = u[3]) : (e3 = (v2 = c(e3, t2, -p)).x, t2 = v2.y, 1 < (y2 = (g = (e3 - (a2 = (v2 = c(a2, l, -p)).x)) / 2) * g / (r2 * r2) + (v2 = (t2 - (l = v2.y)) / 2) * v2 / (o3 * o3)) && (r2 *= y2 = Math.sqrt(y2), o3 *= y2), y2 = r2 * r2, b2 = o3 * o3, _2 = (s3 = (s3 === i2 ? -1 : 1) * Math.sqrt(Math.abs((y2 * b2 - y2 * v2 * v2 - b2 * g * g) / (y2 * v2 * v2 + b2 * g * g)))) * r2 * v2 / o3 + (e3 + a2) / 2, j2 = s3 * -o3 * g / r2 + (t2 + l) / 2, x3 = Math.asin(((t2 - j2) / o3).toFixed(9)), d2 = Math.asin(((l - j2) / o3).toFixed(9)), (x3 = e3 < _2 ? h2 - x3 : x3) < 0 && (x3 = 2 * h2 + x3), (d2 = a2 < _2 ? h2 - d2 : d2) < 0 && (d2 = 2 * h2 + d2), i2 && d2 < x3 && (x3 -= 2 * h2), !i2 && x3 < d2 && (d2 -= 2 * h2)), d2 - x3), g = (Math.abs(y2) > f2 && (b2 = d2, v2 = a2, s3 = l, d2 = x3 + f2 * (i2 && x3 < d2 ? 1 : -1), m = E(a2 = _2 + r2 * Math.cos(d2), l = j2 + o3 * Math.sin(d2), r2, o3, n2, 0, i2, v2, s3, [d2, b2, _2, j2])), y2 = d2 - x3, Math.cos(x3)), h2 = Math.sin(x3), f2 = Math.cos(d2), n2 = Math.sin(d2), i2 = Math.tan(y2 / 4), v2 = 4 / 3 * r2 * i2, s3 = 4 / 3 * o3 * i2, b2 = [e3, t2], _2 = [e3 + v2 * h2, t2 - s3 * g], j2 = [a2 + v2 * n2, l - s3 * f2], x3 = [a2, l];
        if (_2[0] = 2 * b2[0] - _2[0], _2[1] = 2 * b2[1] - _2[1], u) return [_2, j2, x3].concat(m);
        for (var w2 = [], S2 = 0, T2 = (m = [_2, j2, x3].concat(m).join().split(",")).length; S2 < T2; S2++) w2[S2] = S2 % 2 ? c(m[S2 - 1], m[S2], p).y : c(m[S2], m[S2 + 1], p).x;
        return w2;
      }
      function _(e3, t2) {
        for (var r2 = [], o3 = 0, n2 = e3.length; o3 < n2 - 2 * !t2; o3 += 2) {
          var s3 = [{ x: +e3[o3 - 2], y: +e3[o3 - 1] }, { x: +e3[o3], y: +e3[o3 + 1] }, { x: +e3[o3 + 2], y: +e3[o3 + 3] }, { x: +e3[o3 + 4], y: +e3[o3 + 5] }];
          t2 ? o3 ? n2 - 4 === o3 ? s3[3] = { x: +e3[0], y: +e3[1] } : n2 - 2 === o3 && (s3[2] = { x: +e3[0], y: +e3[1] }, s3[3] = { x: +e3[2], y: +e3[3] }) : s3[0] = { x: +e3[n2 - 2], y: +e3[n2 - 1] } : n2 - 4 === o3 ? s3[3] = s3[2] : o3 || (s3[0] = { x: +e3[o3], y: +e3[o3 + 1] }), r2.push(["C", (-s3[0].x + 6 * s3[1].x + s3[2].x) / 6, (-s3[0].y + 6 * s3[1].y + s3[2].y) / 6, (s3[1].x + 6 * s3[2].x - s3[3].x) / 6, (s3[1].y + 6 * s3[2].y - s3[3].y) / 6, s3[2].x, s3[2].y]);
        }
        return r2;
      }
      function j(e3, t2, r2, o3) {
        return [e3, t2, r2, o3, r2, o3];
      }
      function M(e3, t2, r2, o3, n2, s3) {
        return [1 / 3 * e3 + 2 / 3 * r2, 1 / 3 * t2 + 2 / 3 * o3, 1 / 3 * n2 + 2 / 3 * r2, 1 / 3 * s3 + 2 / 3 * o3, n2, s3];
      }
      function f(e3, t2, r2, o3, n2, s3, i2, a2, l) {
        for (var u = (l = 1 < (l = null == l ? 1 : l) ? 1 : l < 0 ? 0 : l) / 2, c = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816], d2 = 0, h2 = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472], f2 = 0; f2 < 12; f2++) {
          var p = u * c[f2] + u, m = y(p, e3, r2, n2, i2), p = y(p, t2, o3, s3, a2);
          d2 += h2[f2] * Math.sqrt(m * m + p * p);
        }
        return u * d2;
      }
      function y(e3, t2, r2, o3, n2) {
        return e3 * (e3 * (-3 * t2 + 9 * r2 - 9 * o3 + 3 * n2) + 6 * t2 - 12 * r2 + 6 * o3) - 3 * t2 + 3 * r2;
      }
      n.default.Font = function() {
        function t2(e4) {
          if (!(this instanceof t2)) throw new TypeError("Cannot call a class as a function");
          this.parent = e4, this.cache = {}, this.font = void 0;
        }
        var e3, r2;
        return e3 = t2, (r2 = [{ key: "textBounds", value: function(e4) {
          var t3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0, o3 = 3 < arguments.length ? arguments[3] : void 0, n2 = 4 < arguments.length ? arguments[4] : void 0, s3 = n2 && n2.renderer && n2.renderer._pInst || this.parent, i2 = s3._renderer.drawingContext, o3 = (i2.textAlign || v.LEFT, i2.textBaseline || v.BASELINE, o3 || s3._renderer._textSize);
          if (!g) {
            for (var a2 = [], l = [], u = [], c = (u[0] = [], []), d2 = this._scale(o3), h2 = s3._renderer.textLeading(), f2 = 0, p = (this.font.forEachGlyph(e4, t3, r3, o3, n2, function(e5, t4, r4, o4) {
              var n3 = e5.getMetrics();
              0 === e5.index ? u[f2 += 1] = [] : (u[f2].push(t4 + n3.xMin * d2), u[f2].push(t4 + n3.xMax * d2), c.push(r4 + f2 * h2 + -n3.yMin * d2), c.push(r4 + f2 * h2 + -n3.yMax * d2));
            }), 0 < u[f2].length && (a2[f2] = Math.min.apply(null, u[f2]), l[f2] = Math.max.apply(null, u[f2])), 0), m = 0; m <= f2; m++) {
              a2[m] = Math.min.apply(null, u[m]), l[m] = Math.max.apply(null, u[m]);
              var y2 = l[m] - a2[m];
              p < y2 && (p = y2);
            }
            var i2 = Math.min.apply(null, a2), g = { x: i2, y: r3 = Math.min.apply(null, c), h: Math.max.apply(null, c) - r3, w: p, advance: i2 - t3 }, o3 = this._handleAlignment(s3._renderer, e4, g.x, g.y, g.w + g.advance);
            g.x = o3.x, g.y = o3.y;
          }
          return g;
        } }, { key: "textToPoints", value: function(e4, t3, r3, o3, n2) {
          var s3, i2 = t3, a2 = [], l = this.parent, u = e4.split(/\r?\n|\r|\n/g);
          o3 = o3 || this.parent._renderer._textSize;
          for (var c, d2, h2, f2 = 0; f2 < u.length; f2++) {
            var p = 0;
            t3 = i2;
            for (var m = (m = u[f2]).replace("	", "  "), y2 = this._getGlyphs(m), g = 0; g < y2.length; g++) {
              if (d2 = m, !((h2 = y2)[c = g].name && "space" === h2[c].name || d2.length === h2.length && " " === d2[c])) for (var v2 = function(e5) {
                for (var t4, r4 = [], o4 = 0; o4 < e5.length; o4++) "M" === e5[o4].type && (t4 && r4.push(t4), t4 = []), t4.push(function(e6) {
                  var t5 = [e6.type];
                  "M" === e6.type || "L" === e6.type ? t5.push(e6.x, e6.y) : "C" === e6.type ? t5.push(e6.x1, e6.y1, e6.x2, e6.y2, e6.x, e6.y) : "Q" === e6.type && t5.push(e6.x1, e6.y1, e6.x, e6.y);
                  return t5;
                }(e5[o4]));
                return r4.push(t4), r4;
              }(y2[g].getPath(t3, r3, o3).commands), b2 = 0; b2 < v2.length; b2++) for (var _2 = function(e5, t4) {
                for (var t4 = function(e6, t5) {
                  if ("object" !== x2(e6)) e6 = t5;
                  else for (var r5 in t5) void 0 === e6[r5] && (e6[r5] = t5[r5]);
                  return e6;
                }(t4, { sampleFactor: 0.1, simplifyThreshold: 0 }), r4 = T(e5, 0, 1), o4 = r4 / (r4 * t4.sampleFactor), n3 = [], s4 = 0; s4 < r4; s4 += o4) n3.push(T(e5, s4));
                t4.simplifyThreshold && !function(e6) {
                  for (var t5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r5 = 0, o5 = e6.length - 1; 3 < e6.length && 0 <= o5; --o5) S(w(e6, o5 - 1), w(e6, o5), w(e6, o5 + 1), t5) && (e6.splice(o5 % e6.length, 1), r5++);
                }(n3, t4.simplifyThreshold);
                return n3;
              }(v2[b2], n2), j2 = 0; j2 < _2.length; j2++) _2[j2].x += p, s3 = this._handleAlignment(l._renderer, m, _2[j2].x, _2[j2].y), _2[j2].x = s3.x, _2[j2].y = s3.y, a2.push(_2[j2]);
              p += y2[g].advanceWidth * this._scale(o3);
            }
            r3 += this.parent._renderer._textLeading;
          }
          return a2;
        } }, { key: "_getGlyphs", value: function(e4) {
          return this.font.stringToGlyphs(e4);
        } }, { key: "_getPath", value: function(e4, t3, r3, o3) {
          var n2 = (o3 && o3.renderer && o3.renderer._pInst || this.parent)._renderer, t3 = this._handleAlignment(n2, e4, t3, r3);
          return this.font.getPath(e4, t3.x, t3.y, n2._textSize, o3);
        } }, { key: "_getPathData", value: function(e4, t3, r3, o3) {
          var n2 = 3;
          return "string" == typeof e4 && 2 < arguments.length ? e4 = this._getPath(e4, t3, r3, o3) : "object" === x2(t3) && (o3 = t3), o3 && "number" == typeof o3.decimals && (n2 = o3.decimals), e4.toPathData(n2);
        } }, { key: "_getSVG", value: function(e4, t3, r3, o3) {
          var n2 = 3;
          return "string" == typeof e4 && 2 < arguments.length ? e4 = this._getPath(e4, t3, r3, o3) : "object" === x2(t3) && (o3 = t3), o3 && ("number" == typeof o3.decimals && (n2 = o3.decimals), "number" == typeof o3.strokeWidth && (e4.strokeWidth = o3.strokeWidth), void 0 !== o3.fill && (e4.fill = o3.fill), void 0 !== o3.stroke && (e4.stroke = o3.stroke)), e4.toSVG(n2);
        } }, { key: "_renderPath", value: function(e4, t3, r3, o3) {
          var n2 = o3 && o3.renderer || this.parent._renderer, s3 = n2.drawingContext, e4 = ("object" === x2(e4) && e4.commands ? e4 : this._getPath(e4, t3, r3, o3)).commands, i2 = (n2._clipping || s3.beginPath(), true), t3 = false, r3 = void 0;
          try {
            for (var a2, l = e4[Symbol.iterator](); !(i2 = (a2 = l.next()).done); i2 = true) {
              var u = a2.value;
              "M" === u.type ? s3.moveTo(u.x, u.y) : "L" === u.type ? s3.lineTo(u.x, u.y) : "C" === u.type ? s3.bezierCurveTo(u.x1, u.y1, u.x2, u.y2, u.x, u.y) : "Q" === u.type ? s3.quadraticCurveTo(u.x1, u.y1, u.x, u.y) : "Z" === u.type && s3.closePath();
            }
          } catch (e5) {
            t3 = true, r3 = e5;
          } finally {
            try {
              i2 || null == l.return || l.return();
            } finally {
              if (t3) throw r3;
            }
          }
          return n2._doStroke && n2._strokeSet && !n2._clipping && s3.stroke(), n2._doFill && !n2._clipping && (n2._fillSet || n2._setFill(v._DEFAULT_TEXT_FILL), s3.fill()), this;
        } }, { key: "_textWidth", value: function(e4, t3) {
          return this.font.getAdvanceWidth(e4, t3);
        } }, { key: "_textAscent", value: function(e4) {
          return this.font.ascender * this._scale(e4);
        } }, { key: "_textDescent", value: function(e4) {
          return -this.font.descender * this._scale(e4);
        } }, { key: "_scale", value: function(e4) {
          return 1 / this.font.unitsPerEm * (e4 || this.parent._renderer._textSize);
        } }, { key: "_handleAlignment", value: function(e4, t3, r3, o3, n2) {
          var s3 = e4._textSize;
          switch (void 0 === n2 && (n2 = this._textWidth(t3, s3)), e4._textAlign) {
            case v.CENTER:
              r3 -= n2 / 2;
              break;
            case v.RIGHT:
              r3 -= n2;
          }
          switch (e4._textBaseline) {
            case v.TOP:
              o3 += this._textAscent(s3);
              break;
            case v.CENTER:
              o3 += this._textAscent(s3) / 2;
              break;
            case v.BOTTOM:
              o3 -= this._textDescent(s3);
          }
          return { x: r3, y: o3 };
        } }]) && s2(e3.prototype, r2), t2;
      }();
      e2 = n.default;
      r.default = e2;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.splice": 171, "core-js/modules/es.function.name": 174, "core-js/modules/es.number.to-fixed": 182, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 322: [function(e2, t, r) {
      e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.array-buffer.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.array-buffer.constructor"), e2("core-js/modules/es.object.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.append = function(e3, t2) {
        return e3.push(t2), e3;
      }, e2.default.prototype.arrayCopy = function(e3, t2, r2, o, n) {
        var s2, i;
        e3 = void 0 !== n ? (i = Math.min(n, e3.length), s2 = o, e3.slice(t2, i + t2)) : (i = void 0 !== r2 ? (i = r2, Math.min(i, e3.length)) : e3.length, r2 = t2, e3.slice(s2 = 0, i)), Array.prototype.splice.apply(r2, [s2, i].concat(e3));
      }, e2.default.prototype.concat = function(e3, t2) {
        return e3.concat(t2);
      }, e2.default.prototype.reverse = function(e3) {
        return e3.reverse();
      }, e2.default.prototype.shorten = function(e3) {
        return e3.pop(), e3;
      }, e2.default.prototype.shuffle = function(e3, t2) {
        for (var r2, o, n = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e3), s2 = (e3 = t2 || n ? e3 : e3.slice()).length; 1 < s2; ) r2 = this.random(0, 1) * s2 | 0, o = e3[--s2], e3[s2] = e3[r2], e3[r2] = o;
        return e3;
      }, e2.default.prototype.sort = function(e3, t2) {
        var r2 = t2 ? e3.slice(0, Math.min(t2, e3.length)) : e3, t2 = t2 ? e3.slice(Math.min(t2, e3.length)) : [];
        return (r2 = "string" == typeof r2[0] ? r2.sort() : r2.sort(function(e4, t3) {
          return e4 - t3;
        })).concat(t2);
      }, e2.default.prototype.splice = function(e3, t2, r2) {
        return Array.prototype.splice.apply(e3, [r2, 0].concat(t2)), e3;
      }, e2.default.prototype.subset = function(e3, t2, r2) {
        return void 0 !== r2 ? e3.slice(t2, t2 + r2) : e3.slice(t2, e3.length);
      };
      e2 = e2.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array-buffer.constructor": 152, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.splice": 171, "core-js/modules/es.object.to-string": 190 }], 323: [function(e2, t, r) {
      e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.repeat"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.repeat"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var o = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      o.default.prototype.float = function(e3) {
        return e3 instanceof Array ? e3.map(parseFloat) : parseFloat(e3);
      }, o.default.prototype.int = function(e3) {
        var t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 10;
        return e3 === 1 / 0 || "Infinity" === e3 ? 1 / 0 : e3 === -1 / 0 || "-Infinity" === e3 ? -1 / 0 : "string" == typeof e3 ? parseInt(e3, t2) : "number" == typeof e3 ? 0 | e3 : "boolean" == typeof e3 ? e3 ? 1 : 0 : e3 instanceof Array ? e3.map(function(e4) {
          return o.default.prototype.int(e4, t2);
        }) : void 0;
      }, o.default.prototype.str = function(e3) {
        return e3 instanceof Array ? e3.map(o.default.prototype.str) : String(e3);
      }, o.default.prototype.boolean = function(e3) {
        return "number" == typeof e3 ? 0 !== e3 : "string" == typeof e3 ? "true" === e3.toLowerCase() : "boolean" == typeof e3 ? e3 : e3 instanceof Array ? e3.map(o.default.prototype.boolean) : void 0;
      }, o.default.prototype.byte = function(e3) {
        e3 = o.default.prototype.int(e3, 10);
        return "number" == typeof e3 ? (e3 + 128) % 256 - 128 : e3 instanceof Array ? e3.map(o.default.prototype.byte) : void 0;
      }, o.default.prototype.char = function(e3) {
        return "number" != typeof e3 || isNaN(e3) ? e3 instanceof Array ? e3.map(o.default.prototype.char) : "string" == typeof e3 ? o.default.prototype.char(parseInt(e3, 10)) : void 0 : String.fromCharCode(e3);
      }, o.default.prototype.unchar = function(e3) {
        return "string" == typeof e3 && 1 === e3.length ? e3.charCodeAt(0) : e3 instanceof Array ? e3.map(o.default.prototype.unchar) : void 0;
      }, o.default.prototype.hex = function(e3, t2) {
        if (t2 = null == t2 ? 8 : t2, e3 instanceof Array) return e3.map(function(e4) {
          return o.default.prototype.hex(e4, t2);
        });
        if (e3 === 1 / 0 || e3 === -1 / 0) return (e3 === 1 / 0 ? "F" : "0").repeat(t2);
        if ("number" == typeof e3) {
          e3 < 0 && (e3 = 4294967295 + e3 + 1);
          for (var r2 = Number(e3).toString(16).toUpperCase(); r2.length < t2; ) r2 = "0".concat(r2);
          return r2 = r2.length >= t2 ? r2.substring(r2.length - t2, r2.length) : r2;
        }
      }, o.default.prototype.unhex = function(e3) {
        return e3 instanceof Array ? e3.map(o.default.prototype.unhex) : parseInt("0x".concat(e3), 16);
      };
      e2 = o.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.map": 168, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.repeat": 203 }], 324: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.pad-start"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.constructor"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.pad-start"), e2("core-js/modules/es.string.replace"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var s2 = (u = e2("../core/main")) && u.__esModule ? u : { default: u };
      function a2(e3, t2) {
        return function(e4) {
          if (Array.isArray(e4)) return e4;
        }(e3) || function(e4, t3) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) {
            var r2 = [], o3 = true, n2 = false, s3 = void 0;
            try {
              for (var i2, a3 = e4[Symbol.iterator](); !(o3 = (i2 = a3.next()).done) && (r2.push(i2.value), !t3 || r2.length !== t3); o3 = true) ;
            } catch (e5) {
              n2 = true, s3 = e5;
            } finally {
              try {
                o3 || null == a3.return || a3.return();
              } finally {
                if (n2) throw s3;
              }
            }
            return r2;
          }
        }(e3, t2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function o(e3, t2, r2) {
        var o3, n2 = e3 < 0, s3 = a2((e3 = Math.abs(e3)).toString().split("."), 2), i2 = s3[0], s3 = s3[1];
        return void 0 === r2 ? (i2 = i2.padStart(t2, "0"), o3 = s3 ? i2 + "." + s3 : i2, n2 ? "-" + o3 : o3) : (i2 = (o3 = a2(e3.toFixed(r2).toString().split("."), 2))[0], s3 = o3[1], i2 = i2.padStart(t2, "0"), e3 = void 0 === s3 ? i2 : i2 + "." + s3, n2 ? "-" + e3 : e3);
      }
      function n(e3, t2) {
        var r2 = (e3 = e3.toString()).indexOf("."), o3 = -1 !== r2 ? e3.substring(r2) : "", e3 = (e3 = -1 !== r2 ? e3.substring(0, r2) : e3).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        if (0 === t2) o3 = "";
        else if (void 0 !== t2) if (t2 > o3.length) for (var n2 = t2 - (o3 += -1 === r2 ? "." : "").length + 1, s3 = 0; s3 < n2; s3++) o3 += "0";
        else o3 = o3.substring(0, t2 + 1);
        return e3 + o3;
      }
      function i(e3) {
        return 0 < parseFloat(e3) ? "+".concat(e3.toString()) : e3.toString();
      }
      function l(e3) {
        return 0 <= parseFloat(e3) ? " ".concat(e3.toString()) : e3.toString();
      }
      e2("../core/friendly_errors/validate_params"), e2("../core/friendly_errors/file_errors"), e2("../core/friendly_errors/fes_core"), s2.default.prototype.join = function(e3, t2) {
        return s2.default._validateParameters("join", arguments), e3.join(t2);
      }, s2.default.prototype.match = function(e3, t2) {
        return s2.default._validateParameters("match", arguments), e3.match(t2);
      }, s2.default.prototype.matchAll = function(e3, t2) {
        s2.default._validateParameters("matchAll", arguments);
        for (var r2 = new RegExp(t2, "g"), o3 = r2.exec(e3), n2 = []; null !== o3; ) n2.push(o3), o3 = r2.exec(e3);
        return n2;
      }, s2.default.prototype.nf = function(e3, t2, r2) {
        return s2.default._validateParameters("nf", arguments), e3 instanceof Array ? e3.map(function(e4) {
          return o(e4, t2, r2);
        }) : "[object Arguments]" === Object.prototype.toString.call(e3) ? 3 === e3.length ? this.nf(e3[0], e3[1], e3[2]) : 2 === e3.length ? this.nf(e3[0], e3[1]) : this.nf(e3[0]) : o(e3, t2, r2);
      }, s2.default.prototype.nfc = function(e3, t2) {
        return s2.default._validateParameters("nfc", arguments), e3 instanceof Array ? e3.map(function(e4) {
          return n(e4, t2);
        }) : n(e3, t2);
      }, s2.default.prototype.nfp = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        s2.default._validateParameters("nfp", t2);
        var o3 = s2.default.prototype.nf.apply(this, t2);
        return o3 instanceof Array ? o3.map(i) : i(o3);
      }, s2.default.prototype.nfs = function() {
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        s2.default._validateParameters("nfs", t2);
        var o3 = s2.default.prototype.nf.apply(this, t2);
        return o3 instanceof Array ? o3.map(l) : l(o3);
      }, s2.default.prototype.split = function(e3, t2) {
        return s2.default._validateParameters("split", arguments), e3.split(t2);
      }, s2.default.prototype.splitTokens = function(e3, t2) {
        var r2, o3;
        return s2.default._validateParameters("splitTokens", arguments), o3 = void 0 !== t2 ? (o3 = /\]/g.exec(t2 = t2), (r2 = /\[/g.exec(t2)) && o3 ? (t2 = t2.slice(0, o3.index) + t2.slice(o3.index + 1), r2 = /\[/g.exec(t2), t2 = t2.slice(0, r2.index) + t2.slice(r2.index + 1), new RegExp("[\\[".concat(t2, "\\]]"), "g")) : o3 ? (t2 = t2.slice(0, o3.index) + t2.slice(o3.index + 1), new RegExp("[".concat(t2, "\\]]"), "g")) : r2 ? (t2 = t2.slice(0, r2.index) + t2.slice(r2.index + 1), new RegExp("[".concat(t2, "\\[]"), "g")) : new RegExp("[".concat(t2, "]"), "g")) : /\s/g, e3.split(o3).filter(function(e4) {
          return e4;
        });
      }, s2.default.prototype.trim = function(e3) {
        return s2.default._validateParameters("trim", arguments), e3 instanceof Array ? e3.map(this.trim) : e3.trim();
      };
      var u = s2.default;
      r.default = u;
    }, { "../core/friendly_errors/fes_core": 274, "../core/friendly_errors/file_errors": 275, "../core/friendly_errors/validate_params": 278, "../core/main": 283, "core-js/modules/es.array.filter": 157, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.number.to-fixed": 182, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.constructor": 194, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.match": 201, "core-js/modules/es.string.pad-start": 202, "core-js/modules/es.string.replace": 204, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.trim": 209, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 325: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      e2.default.prototype.day = function() {
        return (/* @__PURE__ */ new Date()).getDate();
      }, e2.default.prototype.hour = function() {
        return (/* @__PURE__ */ new Date()).getHours();
      }, e2.default.prototype.minute = function() {
        return (/* @__PURE__ */ new Date()).getMinutes();
      }, e2.default.prototype.millis = function() {
        return -1 === this._millisStart ? 0 : window.performance.now() - this._millisStart;
      }, e2.default.prototype.month = function() {
        return (/* @__PURE__ */ new Date()).getMonth() + 1;
      }, e2.default.prototype.second = function() {
        return (/* @__PURE__ */ new Date()).getSeconds();
      }, e2.default.prototype.year = function() {
        return (/* @__PURE__ */ new Date()).getFullYear();
      };
      e2 = e2.default;
      r.default = e2;
    }, { "../core/main": 283 }], 326: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.number.to-fixed"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var S = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, j = (e2("./p5.Geometry"), function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants")));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      S.default.prototype.beginGeometry = function() {
        return this._renderer.beginGeometry();
      }, S.default.prototype.endGeometry = function() {
        return this._renderer.endGeometry();
      }, S.default.prototype.buildGeometry = function(e3) {
        return this._renderer.buildGeometry(e3);
      }, S.default.prototype.freeGeometry = function(e3) {
        this._renderer._freeBuffers(e3.gid);
      }, S.default.prototype.plane = function() {
        var e3, t2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 50, r2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : t2, o3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1, n2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 1, s2 = (this._assert3d("plane"), S.default._validateParameters("plane", arguments), "plane|".concat(o3, "|").concat(n2));
        return this._renderer.geometryInHash(s2) || ((e3 = new S.default.Geometry(o3, n2, function() {
          for (var e4, t3, r3 = 0; r3 <= this.detailY; r3++) for (var o4 = r3 / this.detailY, n3 = 0; n3 <= this.detailX; n3++) e4 = n3 / this.detailX, t3 = new S.default.Vector(e4 - 0.5, o4 - 0.5, 0), this.vertices.push(t3), this.uvs.push(e4, o4);
        })).computeFaces().computeNormals(), o3 <= 1 && n2 <= 1 ? e3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(s2, e3)), this._renderer.drawBuffersScaled(s2, t2, r2, 1), this;
      }, S.default.prototype.box = function(e3, t2, r2, o3, n2) {
        this._assert3d("box"), S.default._validateParameters("box", arguments), void 0 === e3 && (e3 = 50), void 0 === t2 && (t2 = e3), void 0 === r2 && (r2 = t2);
        var s2, i2 = this._renderer.attributes && this._renderer.attributes.perPixelLighting, i2 = (void 0 === n2 && (n2 = i2 ? 1 : 4), "box|".concat(o3 = void 0 === o3 ? i2 ? 1 : 4 : o3, "|").concat(n2));
        return this._renderer.geometryInHash(i2) || ((s2 = new S.default.Geometry(o3, n2, function() {
          var n3 = this;
          this.edges = [[0, 1], [1, 3], [3, 2], [6, 7], [8, 9], [9, 11], [14, 15], [16, 17], [17, 19], [18, 19], [20, 21], [22, 23]], [[0, 4, 2, 6], [1, 3, 5, 7], [0, 1, 4, 5], [2, 6, 3, 7], [0, 2, 1, 3], [4, 5, 6, 7]].forEach(function(e4, t3) {
            for (var t3 = 4 * t3, r3 = 0; r3 < 4; r3++) {
              var o4 = e4[r3], o4 = new S.default.Vector((2 * (1 & o4) - 1) / 2, ((2 & o4) - 1) / 2, ((4 & o4) / 2 - 1) / 2);
              n3.vertices.push(o4), n3.uvs.push(1 & r3, (2 & r3) / 2);
            }
            n3.faces.push([t3, 1 + t3, 2 + t3]), n3.faces.push([2 + t3, 1 + t3, 3 + t3]);
          });
        })).computeNormals(), o3 <= 4 && n2 <= 4 ? s2._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(i2, s2)), this._renderer.drawBuffersScaled(i2, e3, t2, r2), this;
      }, S.default.prototype.sphere = function() {
        var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 50, t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 24, r2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 16;
        return this._assert3d("sphere"), S.default._validateParameters("sphere", arguments), this.ellipsoid(e3, e3, e3, t2, r2), this;
      };
      function l(e3, t2, r2, o3, n2, s2, i2) {
        e3 = e3 <= 0 ? 1 : e3, t2 = t2 < 0 ? 0 : t2, r2 = r2 <= 0 ? e3 : r2, o3 = o3 < 3 ? 3 : o3;
        for (var a3, l2, u = (s2 = void 0 === s2 || s2) ? -2 : 0, c = (n2 = n2 < 1 ? 1 : n2) + ((i2 = void 0 === i2 ? 0 !== t2 : i2) ? 2 : 0), d = Math.atan2(e3 - t2, r2), h = Math.sin(d), f = Math.cos(d), p = u; p <= c; ++p) {
          var m = p / n2, y = r2 * m, g = void 0, g = p < 0 ? (m = y = 0, e3) : n2 < p ? (y = r2, m = 1, t2) : e3 + (t2 - e3) * m;
          for (-2 !== p && p !== n2 + 2 || (g = 0), y -= r2 / 2, a3 = 0; a3 < o3; ++a3) {
            var v = a3 / (o3 - 1), b = 2 * Math.PI * v, _ = Math.sin(b), b = Math.cos(b), j2 = (this.vertices.push(new S.default.Vector(_ * g, y, b * g)), void 0), j2 = p < 0 ? new S.default.Vector(0, -1, 0) : n2 < p && t2 ? new S.default.Vector(0, 1, 0) : new S.default.Vector(_ * f, h, b * f);
            this.vertexNormals.push(j2), this.uvs.push(v, m);
          }
        }
        var x2 = 0;
        if (s2) {
          for (l2 = 0; l2 < o3; ++l2) this.faces.push([x2 + l2, x2 + o3 + (l2 + 1) % o3, x2 + o3 + l2]);
          x2 += 2 * o3;
        }
        for (p = 0; p < n2; ++p) {
          for (a3 = 0; a3 < o3; ++a3) {
            var w = (a3 + 1) % o3;
            this.faces.push([x2 + a3, x2 + w, x2 + o3 + w]), this.faces.push([x2 + a3, x2 + o3 + w, x2 + o3 + a3]);
          }
          x2 += o3;
        }
        if (i2) for (x2 += o3, a3 = 0; a3 < o3; ++a3) this.faces.push([x2 + a3, x2 + (a3 + 1) % o3, x2 + o3]);
      }
      S.default.prototype.cylinder = function() {
        var e3, t2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 50, r2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : t2, o3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 24, n2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 1, s2 = !(4 < arguments.length && void 0 !== arguments[4]) || arguments[4], i2 = !(5 < arguments.length && void 0 !== arguments[5]) || arguments[5], a3 = (this._assert3d("cylinder"), S.default._validateParameters("cylinder", arguments), "cylinder|".concat(o3, "|").concat(n2, "|").concat(s2, "|").concat(i2));
        return this._renderer.geometryInHash(a3) || (e3 = new S.default.Geometry(o3, n2), l.call(e3, 1, 1, 1, o3, n2, s2, i2), o3 <= 24 && n2 <= 16 ? e3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(a3, e3)), this._renderer.drawBuffersScaled(a3, t2, r2, t2), this;
      }, S.default.prototype.cone = function() {
        var e3, t2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 50, r2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : t2, o3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 24, n2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 1, s2 = !(4 < arguments.length && void 0 !== arguments[4]) || arguments[4], i2 = (this._assert3d("cone"), S.default._validateParameters("cone", arguments), "cone|".concat(o3, "|").concat(n2, "|").concat(s2));
        return this._renderer.geometryInHash(i2) || (e3 = new S.default.Geometry(o3, n2), l.call(e3, 1, 0, 1, o3, n2, s2, false), o3 <= 24 && n2 <= 16 ? e3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(i2, e3)), this._renderer.drawBuffersScaled(i2, t2, r2, t2), this;
      }, S.default.prototype.ellipsoid = function() {
        var e3, t2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 50, r2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : t2, o3 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : t2, n2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : 24, s2 = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 16, i2 = (this._assert3d("ellipsoid"), S.default._validateParameters("ellipsoid", arguments), "ellipsoid|".concat(n2, "|").concat(s2));
        return this._renderer.geometryInHash(i2) || ((e3 = new S.default.Geometry(n2, s2, function() {
          for (var e4 = 0; e4 <= this.detailY; e4++) for (var t3 = e4 / this.detailY, r3 = Math.PI * t3 - Math.PI / 2, o4 = Math.cos(r3), n3 = Math.sin(r3), s3 = 0; s3 <= this.detailX; s3++) {
            var i3 = s3 / this.detailX, a3 = 2 * Math.PI * i3, l2 = Math.cos(a3), a3 = Math.sin(a3), a3 = new S.default.Vector(o4 * a3, n3, o4 * l2);
            this.vertices.push(a3), this.vertexNormals.push(a3), this.uvs.push(i3, t3);
          }
        })).computeFaces(), n2 <= 24 && s2 <= 24 ? e3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(i2, e3)), this._renderer.drawBuffersScaled(i2, t2, r2, o3), this;
      }, S.default.prototype.torus = function(e3, t2, r2, o3) {
        if (this._assert3d("torus"), S.default._validateParameters("torus", arguments), void 0 === e3) e3 = 50;
        else if (!e3) return;
        if (void 0 === t2) t2 = 10;
        else if (!t2) return;
        void 0 === r2 && (r2 = 24), void 0 === o3 && (o3 = 16);
        var n2, d = (t2 / e3).toPrecision(4), t2 = "torus|".concat(d, "|").concat(r2, "|").concat(o3);
        return this._renderer.geometryInHash(t2) || ((n2 = new S.default.Geometry(r2, o3, function() {
          for (var e4 = 0; e4 <= this.detailY; e4++) for (var t3 = e4 / this.detailY, r3 = 2 * Math.PI * t3, o4 = Math.cos(r3), n3 = Math.sin(r3), s2 = 1 + d * o4, i2 = 0; i2 <= this.detailX; i2++) {
            var a3 = i2 / this.detailX, l2 = 2 * Math.PI * a3, u = Math.cos(l2), l2 = Math.sin(l2), c = new S.default.Vector(s2 * u, s2 * l2, d * n3), u = new S.default.Vector(o4 * u, o4 * l2, n3);
            this.vertices.push(c), this.vertexNormals.push(u), this.uvs.push(a3, t3);
          }
        })).computeFaces(), r2 <= 24 && o3 <= 16 ? n2._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(t2, n2)), this._renderer.drawBuffersScaled(t2, e3, e3, e3), this;
      }, S.default.RendererGL.prototype.point = function(e3, t2) {
        var r2 = [];
        return r2.push(new S.default.Vector(e3, t2, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0)), this._drawPoints(r2, this.immediateMode.buffers.point), this;
      }, S.default.RendererGL.prototype.triangle = function(e3) {
        var t2 = e3[0], r2 = e3[1], o3 = e3[2], n2 = e3[3], s2 = e3[4], e3 = e3[5], i2 = (this.geometryInHash("tri") || ((i2 = new S.default.Geometry(1, 1, function() {
          var e4 = [];
          e4.push(new S.default.Vector(0, 0, 0)), e4.push(new S.default.Vector(1, 0, 0)), e4.push(new S.default.Vector(0, 1, 0)), this.edges = [[0, 1], [1, 2], [2, 0]], this.vertices = e4, this.faces = [[0, 1, 2]], this.uvs = [0, 0, 1, 0, 1, 1];
        }))._edgesToVertices(), i2.computeNormals(), this.createBuffers("tri", i2)), this.uModelMatrix.copy());
        try {
          var a3 = Math.sign(t2 * n2 - o3 * r2 + o3 * e3 - s2 * n2 + s2 * r2 - t2 * e3), l2 = new S.default.Matrix([o3 - t2, n2 - r2, 0, 0, s2 - t2, e3 - r2, 0, 0, 0, 0, a3, 0, t2, r2, 0, 1]).mult(this.uModelMatrix);
          this.uModelMatrix = l2, this.drawBuffers("tri");
        } finally {
          this.uModelMatrix = i2;
        }
        return this;
      }, S.default.RendererGL.prototype.ellipse = function(e3) {
        this.arc(e3[0], e3[1], e3[2], e3[3], 0, j.TWO_PI, j.OPEN, e3[4]);
      }, S.default.RendererGL.prototype.arc = function() {
        var e3, t2 = arguments.length <= 0 ? void 0 : arguments[0], r2 = arguments.length <= 1 ? void 0 : arguments[1], o3 = arguments.length <= 2 ? void 0 : arguments[2], n2 = arguments.length <= 3 ? void 0 : arguments[3], s2 = arguments.length <= 4 ? void 0 : arguments[4], i2 = arguments.length <= 5 ? void 0 : arguments[5], a3 = arguments.length <= 6 ? void 0 : arguments[6], l2 = (arguments.length <= 7 ? void 0 : arguments[7]) || 25, u = (Math.abs(i2 - s2) >= j.TWO_PI ? "".concat(c = "ellipse", "|") : "".concat(c = "arc", "|").concat(s2, "|").concat(i2, "|").concat(a3, "|")).concat(l2, "|"), c = (this.geometryInHash(u) || ((e3 = new S.default.Geometry(l2, 1, function() {
          if (s2.toFixed(10) !== i2.toFixed(10)) {
            a3 !== j.PIE && void 0 !== a3 || (this.vertices.push(new S.default.Vector(0.5, 0.5, 0)), this.uvs.push([0.5, 0.5]));
            for (var e4 = 0; e4 <= l2; e4++) {
              var t3 = (i2 - s2) * (e4 / l2) + s2, r3 = 0.5 + Math.cos(t3) / 2, t3 = 0.5 + Math.sin(t3) / 2;
              this.vertices.push(new S.default.Vector(r3, t3, 0)), this.uvs.push([r3, t3]), e4 < l2 - 1 && (this.faces.push([0, e4 + 1, e4 + 2]), this.edges.push([e4 + 1, e4 + 2]));
            }
            switch (a3) {
              case j.PIE:
                this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([0, 1]), this.edges.push([this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([0, this.vertices.length - 1]);
                break;
              case j.CHORD:
                this.edges.push([0, 1]), this.edges.push([0, this.vertices.length - 1]);
                break;
              case j.OPEN:
                this.edges.push([0, 1]);
                break;
              default:
                this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([this.vertices.length - 2, this.vertices.length - 1]);
            }
          }
        })).computeNormals(), l2 <= 50 ? e3._edgesToVertices(e3) : this._doStroke && console.log("Cannot apply a stroke to an ".concat(c, " with more than 50 detail")), this.createBuffers(u, e3)), this.uModelMatrix.copy());
        try {
          this.uModelMatrix.translate([t2, r2, 0]), this.uModelMatrix.scale(o3, n2, 1), this.drawBuffers(u);
        } finally {
          this.uModelMatrix = c;
        }
        return this;
      }, S.default.RendererGL.prototype.rect = function(e3) {
        var t2 = e3[0], r2 = e3[1], o3 = e3[2], n2 = e3[3];
        if (void 0 === e3[4]) {
          var s2 = this._pInst._glAttributes.perPixelLighting, i2 = e3[4] || (s2 ? 1 : 24), a3 = e3[5] || (s2 ? 1 : 16), s2 = "rect|".concat(i2, "|").concat(a3), l2 = (this.geometryInHash(s2) || ((l2 = new S.default.Geometry(i2, a3, function() {
            for (var e4 = 0; e4 <= this.detailY; e4++) for (var t3 = e4 / this.detailY, r3 = 0; r3 <= this.detailX; r3++) {
              var o4 = r3 / this.detailX, n3 = new S.default.Vector(o4, t3, 0);
              this.vertices.push(n3), this.uvs.push(o4, t3);
            }
            0 < i2 && 0 < a3 && (this.edges = [[0, i2], [i2, (i2 + 1) * (a3 + 1) - 1], [(i2 + 1) * (a3 + 1) - 1, (i2 + 1) * a3], [(i2 + 1) * a3, 0]]);
          })).computeFaces().computeNormals()._edgesToVertices(), this.createBuffers(s2, l2)), this.uModelMatrix.copy());
          try {
            this.uModelMatrix.translate([t2, r2, 0]), this.uModelMatrix.scale(o3, n2, 1), this.drawBuffers(s2);
          } finally {
            this.uModelMatrix = l2;
          }
        } else {
          var s2 = e3[4], l2 = void 0 === e3[5] ? s2 : e3[5], u = void 0 === e3[6] ? l2 : e3[6], e3 = void 0 === e3[7] ? u : e3[7], c = o3, d = n2, h = ((c += t2) < t2 && (h = t2, t2 = c, c = h), (d += r2) < r2 && (h = r2, r2 = d, d = h), Math.min((c - t2) / 2, (d - r2) / 2)), f = (h < s2 && (s2 = h), h < l2 && (l2 = h), h < u && (u = h), h < e3 && (e3 = h), t2), p = r2, h = c, t2 = d, m = (this.beginShape(), 0 !== l2 ? (this.vertex(h - l2, p), this.quadraticVertex(h, p, h, p + l2)) : this.vertex(h, p), 0 !== u ? (this.vertex(h, t2 - u), this.quadraticVertex(h, t2, h - u, t2)) : this.vertex(h, t2), 0 !== e3 ? (this.vertex(f + e3, t2), this.quadraticVertex(f, t2, f, t2 - e3)) : this.vertex(f, t2), 0 !== s2 ? (this.vertex(f, p + s2), this.quadraticVertex(f, p, f + s2, p)) : this.vertex(f, p), !(this.immediateMode.geometry.uvs.length = 0)), r2 = false, c = void 0;
          try {
            for (var y, g = this.immediateMode.geometry.vertices[Symbol.iterator](); !(m = (y = g.next()).done); m = true) {
              var v = y.value, b = (v.x - f) / o3, _ = (v.y - p) / n2;
              this.immediateMode.geometry.uvs.push(b, _);
            }
          } catch (e4) {
            r2 = true, c = e4;
          } finally {
            try {
              m || null == g.return || g.return();
            } finally {
              if (r2) throw c;
            }
          }
          this.endShape(j.CLOSE);
        }
        return this;
      }, S.default.RendererGL.prototype.quad = function(i2, a3, l2, u, c, d, h, f, p, m, y, g) {
        var e3 = 12 < arguments.length && void 0 !== arguments[12] ? arguments[12] : 2, t2 = 13 < arguments.length && void 0 !== arguments[13] ? arguments[13] : 2, r2 = "quad|".concat(i2, "|").concat(a3, "|").concat(l2, "|").concat(u, "|").concat(c, "|").concat(d, "|").concat(h, "|").concat(f, "|").concat(p, "|").concat(m, "|").concat(y, "|").concat(g, "|").concat(e3, "|").concat(t2);
        if (!this.geometryInHash(r2)) {
          var o3 = new S.default.Geometry(e3, t2, function() {
            for (var e4 = 1 / (this.detailX - 1), t3 = 1 / (this.detailY - 1), r3 = 0; r3 < this.detailY; r3++) for (var o4 = 0; o4 < this.detailX; o4++) {
              var n3 = o4 * e4, s3 = r3 * t3;
              this.vertices.push(new S.default.Vector((1 - n3) * ((1 - s3) * i2 + s3 * m) + n3 * ((1 - s3) * u + s3 * h), (1 - n3) * ((1 - s3) * a3 + s3 * y) + n3 * ((1 - s3) * c + s3 * f), (1 - n3) * ((1 - s3) * l2 + s3 * g) + n3 * ((1 - s3) * d + s3 * p))), this.uvs.push([n3, s3]);
            }
          });
          o3.faces = [];
          for (var n2 = 0; n2 < t2 - 1; n2++) for (var s2 = 0; s2 < e3 - 1; s2++) {
            var v = s2 + n2 * e3, b = s2 + 1 + (n2 + 1) * e3, _ = s2 + (n2 + 1) * e3;
            o3.faces.push([v, s2 + 1 + n2 * e3, b]), o3.faces.push([v, b, _]);
          }
          o3.computeNormals();
          for (var j2 = [o3.edges.length = 0, 2, 3, 1], x2 = 0; x2 < j2.length; x2++) o3.edges.push([j2[x2], j2[(x2 + 1) % j2.length]]);
          o3._edgesToVertices(), this.createBuffers(r2, o3);
        }
        return this.drawBuffers(r2), this;
      }, S.default.RendererGL.prototype.bezier = function(e3, t2, r2, o3, n2, s2, i2, a3, l2, u, c, d) {
        8 === arguments.length && (c = a3, u = i2, a3 = s2, i2 = n2, n2 = o3, o3 = r2, r2 = s2 = l2 = d = 0);
        var h = this._pInst._bezierDetail || 20;
        this.beginShape();
        for (var f = 0; f <= h; f++) {
          var p = Math.pow(1 - f / h, 3), m = f / h * 3 * Math.pow(1 - f / h, 2), y = 3 * Math.pow(f / h, 2) * (1 - f / h), g = Math.pow(f / h, 3);
          this.vertex(e3 * p + o3 * m + i2 * y + u * g, t2 * p + n2 * m + a3 * y + c * g, r2 * p + s2 * m + l2 * y + d * g);
        }
        return this.endShape(), this;
      }, S.default.RendererGL.prototype.curve = function(e3, t2, r2, o3, n2, s2, i2, a3, l2, u, c, d) {
        8 === arguments.length && (u = i2, c = a3, i2 = n2, a3 = o3, n2 = o3 = r2, r2 = s2 = l2 = d = 0);
        var h = this._pInst._curveDetail;
        this.beginShape();
        for (var f = 0; f <= h; f++) {
          var p = 0.5 * Math.pow(f / h, 3), m = 0.5 * Math.pow(f / h, 2), y = f / h * 0.5;
          this.vertex(p * (3 * o3 - e3 - 3 * i2 + u) + m * (2 * e3 - 5 * o3 + 4 * i2 - u) + y * (-e3 + i2) + 2 * o3 * 0.5, p * (3 * n2 - t2 - 3 * a3 + c) + m * (2 * t2 - 5 * n2 + 4 * a3 - c) + y * (-t2 + a3) + 2 * n2 * 0.5, p * (3 * s2 - r2 - 3 * l2 + d) + m * (2 * r2 - 5 * s2 + 4 * l2 - d) + y * (-r2 + l2) + 2 * s2 * 0.5);
        }
        return this.endShape(), this;
      }, S.default.RendererGL.prototype.line = function() {
        return 6 === arguments.length ? (this.beginShape(j.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 2 ? void 0 : arguments[2]), this.vertex(arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 5 ? void 0 : arguments[5]), this.endShape()) : 4 === arguments.length && (this.beginShape(j.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], 0), this.vertex(arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 3 ? void 0 : arguments[3], 0), this.endShape()), this;
      }, S.default.RendererGL.prototype.bezierVertex = function() {
        if (0 === this.immediateMode._bezierVertex.length) throw Error("vertex() must be used once before calling bezierVertex()");
        var e3, t2, r2, o3, n2, s2, i2 = [], a3 = [], l2 = arguments.length;
        if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
          this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutBezierDetail, c = u, d = 1, h = 0; c < 1; ) {
            if (s2 = parseFloat(c.toFixed(6)), this._lookUpTableBezier[h] = this._bezierCoefficients(s2), d.toFixed(6) === u.toFixed(6)) {
              s2 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++h, this._lookUpTableBezier[h] = this._bezierCoefficients(s2);
              break;
            }
            c += u, d -= u, ++h;
          }
        }
        for (var f = this._lookUpTableBezier.length, p = [], m = 0; m < 4; m++) p.push([]);
        p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[3] = this.curFillColor.slice();
        var y = [];
        for (m = 0; m < 4; m++) y.push([]);
        if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[3] = this.curStrokeColor.slice(), 6 === l2) {
          this.isBezier = true;
          var i2 = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 4 ? void 0 : arguments[4]], a3 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 5 ? void 0 : arguments[5]], g = Math.hypot(i2[0] - i2[1], a3[0] - a3[1]), v = Math.hypot(i2[1] - i2[2], a3[1] - a3[2]), b = Math.hypot(i2[2] - i2[3], a3[2] - a3[3]), v = g + v + b;
          for (g /= v, b /= v, n2 = 0; n2 < 4; n2++) p[1].push(p[0][n2] * (1 - g) + p[3][n2] * g), p[2].push(p[0][n2] * b + p[3][n2] * (1 - b)), y[1].push(y[0][n2] * (1 - g) + y[3][n2] * g), y[2].push(y[0][n2] * b + y[3][n2] * (1 - b));
          for (o3 = 0; o3 < f; o3++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t2 = 0; m < 4; m++) {
              for (n2 = 0; n2 < 4; n2++) this.curFillColor[n2] += this._lookUpTableBezier[o3][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableBezier[o3][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableBezier[o3][m], t2 += a3[m] * this._lookUpTableBezier[o3][m];
            }
            this.vertex(e3, t2);
          }
          this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._bezierVertex[1] = arguments.length <= 5 ? void 0 : arguments[5];
        } else if (9 === l2) {
          this.isBezier = true, i2 = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 6 ? void 0 : arguments[6]], a3 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 7 ? void 0 : arguments[7]];
          var _ = [this.immediateMode._bezierVertex[2], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 5 ? void 0 : arguments[5], arguments.length <= 8 ? void 0 : arguments[8]], j2 = Math.hypot(i2[0] - i2[1], a3[0] - a3[1], _[0] - _[1]), v = Math.hypot(i2[1] - i2[2], a3[1] - a3[2], _[1] - _[2]), x2 = Math.hypot(i2[2] - i2[3], a3[2] - a3[3], _[2] - _[3]), l2 = j2 + v + x2;
          for (j2 /= l2, x2 /= l2, n2 = 0; n2 < 4; n2++) p[1].push(p[0][n2] * (1 - j2) + p[3][n2] * j2), p[2].push(p[0][n2] * x2 + p[3][n2] * (1 - x2)), y[1].push(y[0][n2] * (1 - j2) + y[3][n2] * j2), y[2].push(y[0][n2] * x2 + y[3][n2] * (1 - x2));
          for (o3 = 0; o3 < f; o3++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t2 = r2 = 0; m < 4; m++) {
              for (n2 = 0; n2 < 4; n2++) this.curFillColor[n2] += this._lookUpTableBezier[o3][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableBezier[o3][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableBezier[o3][m], t2 += a3[m] * this._lookUpTableBezier[o3][m], r2 += _[m] * this._lookUpTableBezier[o3][m];
            }
            this.vertex(e3, t2, r2);
          }
          this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 6 ? void 0 : arguments[6], this.immediateMode._bezierVertex[1] = arguments.length <= 7 ? void 0 : arguments[7], this.immediateMode._bezierVertex[2] = arguments.length <= 8 ? void 0 : arguments[8];
        }
      }, S.default.RendererGL.prototype.quadraticVertex = function() {
        if (0 === this.immediateMode._quadraticVertex.length) throw Error("vertex() must be used once before calling quadraticVertex()");
        var e3, t2, r2, o3, n2, s2, i2 = [], a3 = [], l2 = arguments.length;
        if (0 === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
          this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutQuadraticDetail, c = u, d = 1, h = 0; c < 1; ) {
            if (s2 = parseFloat(c.toFixed(6)), this._lookUpTableQuadratic[h] = this._quadraticCoefficients(s2), d.toFixed(6) === u.toFixed(6)) {
              s2 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++h, this._lookUpTableQuadratic[h] = this._quadraticCoefficients(s2);
              break;
            }
            c += u, d -= u, ++h;
          }
        }
        for (var f = this._lookUpTableQuadratic.length, p = [], m = 0; m < 3; m++) p.push([]);
        p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[2] = this.curFillColor.slice();
        var y = [];
        for (m = 0; m < 3; m++) y.push([]);
        if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[2] = this.curStrokeColor.slice(), 4 === l2) {
          this.isQuadratic = true;
          var i2 = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 2 ? void 0 : arguments[2]], a3 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 3 ? void 0 : arguments[3]], g = Math.hypot(i2[0] - i2[1], a3[0] - a3[1]);
          for (g /= g + Math.hypot(i2[1] - i2[2], a3[1] - a3[2]), n2 = 0; n2 < 4; n2++) p[1].push(p[0][n2] * (1 - g) + p[2][n2] * g), y[1].push(y[0][n2] * (1 - g) + y[2][n2] * g);
          for (o3 = 0; o3 < f; o3++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t2 = 0; m < 3; m++) {
              for (n2 = 0; n2 < 4; n2++) this.curFillColor[n2] += this._lookUpTableQuadratic[o3][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableQuadratic[o3][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableQuadratic[o3][m], t2 += a3[m] * this._lookUpTableQuadratic[o3][m];
            }
            this.vertex(e3, t2);
          }
          this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 2 ? void 0 : arguments[2], this.immediateMode._quadraticVertex[1] = arguments.length <= 3 ? void 0 : arguments[3];
        } else if (6 === l2) {
          this.isQuadratic = true, i2 = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 3 ? void 0 : arguments[3]], a3 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 4 ? void 0 : arguments[4]];
          var v = [this.immediateMode._quadraticVertex[2], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 5 ? void 0 : arguments[5]], b = Math.hypot(i2[0] - i2[1], a3[0] - a3[1], v[0] - v[1]);
          for (b /= b + Math.hypot(i2[1] - i2[2], a3[1] - a3[2], v[1] - v[2]), n2 = 0; n2 < 4; n2++) p[1].push(p[0][n2] * (1 - b) + p[2][n2] * b), y[1].push(y[0][n2] * (1 - b) + y[2][n2] * b);
          for (o3 = 0; o3 < f; o3++) {
            for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e3 = t2 = r2 = 0; m < 3; m++) {
              for (n2 = 0; n2 < 4; n2++) this.curFillColor[n2] += this._lookUpTableQuadratic[o3][m] * p[m][n2], this.curStrokeColor[n2] += this._lookUpTableQuadratic[o3][m] * y[m][n2];
              e3 += i2[m] * this._lookUpTableQuadratic[o3][m], t2 += a3[m] * this._lookUpTableQuadratic[o3][m], r2 += v[m] * this._lookUpTableQuadratic[o3][m];
            }
            this.vertex(e3, t2, r2);
          }
          this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 3 ? void 0 : arguments[3], this.immediateMode._quadraticVertex[1] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._quadraticVertex[2] = arguments.length <= 5 ? void 0 : arguments[5];
        }
      }, S.default.RendererGL.prototype.curveVertex = function() {
        var e3, t2, r2, o3, n2, s2, i2 = [], a3 = [], l2 = arguments.length;
        if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
          this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
          for (var u = 1 / this._lutBezierDetail, c = u, d = 1, h = 0; c < 1; ) {
            if (s2 = parseFloat(c.toFixed(6)), this._lookUpTableBezier[h] = this._bezierCoefficients(s2), d.toFixed(6) === u.toFixed(6)) {
              s2 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++h, this._lookUpTableBezier[h] = this._bezierCoefficients(s2);
              break;
            }
            c += u, d -= u, ++h;
          }
        }
        var f = this._lookUpTableBezier.length;
        if (2 === l2) {
          if (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), 8 === this.immediateMode._curveVertex.length) {
            for (this.isCurve = true, i2 = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[6]]), a3 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[7]]), n2 = 0; n2 < f; n2++) t2 = i2[0] * this._lookUpTableBezier[n2][0] + i2[1] * this._lookUpTableBezier[n2][1] + i2[2] * this._lookUpTableBezier[n2][2] + i2[3] * this._lookUpTableBezier[n2][3], r2 = a3[0] * this._lookUpTableBezier[n2][0] + a3[1] * this._lookUpTableBezier[n2][1] + a3[2] * this._lookUpTableBezier[n2][2] + a3[3] * this._lookUpTableBezier[n2][3], this.vertex(t2, r2);
            for (n2 = 0; n2 < l2; n2++) this.immediateMode._curveVertex.shift();
          }
        } else if (3 === l2 && (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), this.immediateMode._curveVertex.push(arguments.length <= 2 ? void 0 : arguments[2]), 12 === this.immediateMode._curveVertex.length)) {
          for (this.isCurve = true, i2 = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[6], this.immediateMode._curveVertex[9]]), a3 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[7], this.immediateMode._curveVertex[10]]), e3 = this._bezierToCatmull([this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[8], this.immediateMode._curveVertex[11]]), n2 = 0; n2 < f; n2++) t2 = i2[0] * this._lookUpTableBezier[n2][0] + i2[1] * this._lookUpTableBezier[n2][1] + i2[2] * this._lookUpTableBezier[n2][2] + i2[3] * this._lookUpTableBezier[n2][3], r2 = a3[0] * this._lookUpTableBezier[n2][0] + a3[1] * this._lookUpTableBezier[n2][1] + a3[2] * this._lookUpTableBezier[n2][2] + a3[3] * this._lookUpTableBezier[n2][3], o3 = e3[0] * this._lookUpTableBezier[n2][0] + e3[1] * this._lookUpTableBezier[n2][1] + e3[2] * this._lookUpTableBezier[n2][2] + e3[3] * this._lookUpTableBezier[n2][3], this.vertex(t2, r2, o3);
          for (n2 = 0; n2 < l2; n2++) this.immediateMode._curveVertex.shift();
        }
      }, S.default.RendererGL.prototype.image = function(e3, t2, r2, o3, n2, s2, i2, a3, l2) {
        this._isErasing && this.blendMode(this._cachedBlendMode), this._pInst.push(), this._pInst.noLights(), this._pInst.noStroke(), this._pInst.texture(e3), this._pInst.textureMode(j.NORMAL);
        var u = 0, c = (t2 <= e3.width && (u = t2 / e3.width), 1), t2 = (t2 + o3 <= e3.width && (c = (t2 + o3) / e3.width), 0), o3 = (r2 <= e3.height && (t2 = r2 / e3.height), 1);
        r2 + n2 <= e3.height && (o3 = (r2 + n2) / e3.height), this.beginShape(), this.vertex(s2, i2, 0, u, t2), this.vertex(s2 + a3, i2, 0, c, t2), this.vertex(s2 + a3, i2 + l2, 0, c, o3), this.vertex(s2, i2 + l2, 0, u, o3), this.endShape(j.CLOSE), this._pInst.pop(), this._isErasing && this.blendMode(j.REMOVE);
      };
      var n = S.default;
      r.default = n;
    }, { "../core/constants": 272, "../core/main": 283, "./p5.Geometry": 335, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.math.hypot": 176, "core-js/modules/es.math.sign": 178, "core-js/modules/es.number.to-fixed": 182, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 327: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.object.assign"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var n = (c = e2("../core/main")) && c.__esModule ? c : { default: c }, a2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = l();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), l = function() {
          return e3;
        }, e3);
      }
      function s2(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function u(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      var c = function() {
        function t2(e4) {
          if (!(this instanceof t2)) throw new TypeError("Cannot call a class as a function");
          (this.renderer = e4)._pInst.push(), this.identityMatrix = new n.default.Matrix(), e4.uModelMatrix = new n.default.Matrix(), this.geometry = new n.default.Geometry(), this.geometry.gid = "_p5_GeometryBuilder_".concat(t2.nextGeometryId), t2.nextGeometryId++, this.hasTransform = false;
        }
        var e3, r2;
        return e3 = t2, (r2 = [{ key: "transformVertices", value: function(e4) {
          var t3 = this;
          return this.hasTransform ? e4.map(function(e5) {
            return t3.renderer.uModelMatrix.multiplyPoint(e5);
          }) : e4;
        } }, { key: "transformNormals", value: function(e4) {
          var t3 = this;
          return this.hasTransform ? e4.map(function(e5) {
            return t3.renderer.uNMatrix.multiplyVec3(e5);
          }) : e4;
        } }, { key: "addGeometry", value: function(e4) {
          for (var t3, r3 = this, o3 = (this.hasTransform = !this.renderer.uModelMatrix.mat4.every(function(e5, t4) {
            return e5 === r3.identityMatrix.mat4[t4];
          }), this.hasTransform && this.renderer.uNMatrix.inverseTranspose(this.renderer.uModelMatrix), this.geometry.vertices.length), n2 = ((t3 = this.geometry.vertices).push.apply(t3, s2(this.transformVertices(e4.vertices))), (t3 = this.geometry.vertexNormals).push.apply(t3, s2(this.transformNormals(e4.vertexNormals))), (t3 = this.geometry.uvs).push.apply(t3, s2(e4.uvs)), this.renderer._doFill && (t3 = this.geometry.faces).push.apply(t3, s2(e4.faces.map(function(e5) {
            return e5.map(function(e6) {
              return e6 + o3;
            });
          }))), this.renderer._doStroke && (t3 = this.geometry.edges).push.apply(t3, s2(e4.edges.map(function(e5) {
            return e5.map(function(e6) {
              return e6 + o3;
            });
          }))), s2(e4.vertexColors)); n2.length < 4 * e4.vertices.length; ) n2.push.apply(n2, s2(this.renderer.curFillColor));
          (t3 = this.geometry.vertexColors).push.apply(t3, s2(n2));
        } }, { key: "addImmediate", value: function() {
          var e4 = this.renderer.immediateMode.geometry, t3 = this.renderer.immediateMode.shapeMode, r3 = [];
          if (this.renderer._doFill) if (t3 === a2.TRIANGLE_STRIP || t3 === a2.QUAD_STRIP) for (var o3 = 2; o3 < e4.vertices.length; o3++) o3 % 2 == 0 ? r3.push([o3, o3 - 1, o3 - 2]) : r3.push([o3, o3 - 2, o3 - 1]);
          else if (t3 === a2.TRIANGLE_FAN) for (var n2 = 2; n2 < e4.vertices.length; n2++) r3.push([0, n2 - 1, n2]);
          else for (var s3 = 0; s3 < e4.vertices.length; s3 += 3) r3.push([s3, s3 + 1, s3 + 2]);
          this.addGeometry(Object.assign({}, e4, { faces: r3 }));
        } }, { key: "addRetained", value: function(e4) {
          this.addGeometry(e4.model);
        } }, { key: "finish", value: function() {
          return this.renderer._pInst.pop(), this.geometry;
        } }]) && u(e3.prototype, r2), t2;
      }();
      c.nextGeometryId = 0, r.default = c;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.every": 155, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 328: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.math.sign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var g = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, n = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== v(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = i();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function i() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), i = function() {
          return e3;
        }, e3);
      }
      function v(e3) {
        return (v = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      g.default.prototype.orbitControl = function(e3, t2, r2, o3) {
        var n2 = this, s3 = (this._assert3d("orbitControl"), g.default._validateParameters("orbitControl", arguments), this._renderer._curCamera);
        void 0 === e3 && (e3 = 1), void 0 === t2 && (t2 = e3), void 0 === r2 && (r2 = 1), "object" !== v(o3) && (o3 = {}), true !== this.contextMenuDisabled && (this.canvas.oncontextmenu = function() {
          return false;
        }, this._setProperty("contextMenuDisabled", true)), true !== this.wheelDefaultDisabled && (this.canvas.onwheel = function() {
          return false;
        }, this._setProperty("wheelDefaultDisabled", true));
        var i2 = o3.disableTouchActions;
        true === this.touchActionsDisabled || void 0 !== i2 && !i2 || (this.canvas.style["touch-action"] = "none", this._setProperty("touchActionsDisabled", true));
        var a2, l, u, i2 = o3.freeRotation, o3 = void 0 !== i2 && i2, c = [], i2 = (this.touches.forEach(function(t3) {
          n2._renderer.prevTouches.forEach(function(e4) {
            t3.id === e4.id && (e4 = { x: t3.x, y: t3.y, px: e4.x, py: e4.y }, c.push(e4));
          });
        }), this._renderer.prevTouches = this.touches, 0), d = 0, h = 0, f = 0, p = 0, m = this.height < this.width ? this.height : this.width, y = false;
        return 0 < c.length ? (y = 0 < c[0].x && c[0].x < this.width && 0 < c[0].y && c[0].y < this.height, 1 === c.length ? (d = -e3 * ((a2 = c[0]).x - a2.px) / m, h = t2 * (a2.y - a2.py) / m) : (a2 = c[0], l = c[1], i2 = -(Math.hypot(a2.x - l.x, a2.y - l.y) - Math.hypot(a2.px - l.px, a2.py - l.py)) * r2 * 4e-4, f = 0.5 * (a2.x + l.x) - 0.5 * (a2.px + l.px), p = 0.5 * (a2.y + l.y) - 0.5 * (a2.py + l.py)), 0 < this.touches.length ? y && (this._renderer.executeRotateAndMove = true, this._renderer.executeZoom = true) : (this._renderer.executeRotateAndMove = false, this._renderer.executeZoom = false)) : (y = 0 < this.mouseX && this.mouseX < this.width && 0 < this.mouseY && this.mouseY < this.height, 0 !== this._mouseWheelDeltaY ? (i2 = Math.sign(this._mouseWheelDeltaY) * r2, i2 *= 0.01, this._mouseWheelDeltaY = 0, y && (this._renderer.executeZoom = true)) : this._renderer.executeZoom = false, this.mouseIsPressed ? (this.mouseButton === this.LEFT ? (d = -e3 * this.movedX / m, h = t2 * this.movedY / m) : this.mouseButton === this.RIGHT && (f = this.movedX, p = this.movedY * s3.yScale), y && (this._renderer.executeRotateAndMove = true)) : this._renderer.executeRotateAndMove = false), 0 !== i2 && this._renderer.executeZoom && (this._renderer.zoomVelocity += i2), 1e-3 < Math.abs(this._renderer.zoomVelocity) ? (o3 ? s3._orbitFree(0, 0, this._renderer.zoomVelocity) : s3._orbit(0, 0, this._renderer.zoomVelocity), 0 !== s3.projMatrix.mat4[15] && (s3.projMatrix.mat4[0] *= Math.pow(10, -this._renderer.zoomVelocity), s3.projMatrix.mat4[5] *= Math.pow(10, -this._renderer.zoomVelocity), this._renderer.uPMatrix.mat4[0] = s3.projMatrix.mat4[0], this._renderer.uPMatrix.mat4[5] = s3.projMatrix.mat4[5]), this._renderer.zoomVelocity *= 0.85) : this._renderer.zoomVelocity = 0, 0 === d && 0 === h || !this._renderer.executeRotateAndMove || this._renderer.rotateVelocity.add(0.6 * d, 0.6 * h), 1e-6 < this._renderer.rotateVelocity.magSq() ? (o3 ? s3._orbitFree(-this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0) : s3._orbit(this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0), this._renderer.rotateVelocity.mult(0.85)) : this._renderer.rotateVelocity.set(0, 0), 0 === f && 0 === p || !this._renderer.executeRotateAndMove || (a2 = 2 * f / this.width, l = 2 * -p / this.height, this._renderer.moveVelocity.add(0.15 * a2, 0.15 * l)), 1e-6 < this._renderer.moveVelocity.magSq() ? (r2 = s3._getLocalAxes(), e3 = s3.eyeX - s3.centerX, t2 = s3.eyeY - s3.centerY, m = s3.eyeZ - s3.centerZ, y = Math.sqrt(e3 * e3 + t2 * t2 + m * m), i2 = new g.default.Vector(s3.centerX, s3.centerY, s3.centerZ), i2 = s3.cameraMatrix.multiplyPoint(i2), (i2 = this._renderer.uPMatrix.multiplyAndNormalizePoint(i2)).x -= this._renderer.moveVelocity.x, i2.y -= this._renderer.moveVelocity.y, h = 0 === (d = this._renderer.uPMatrix.mat4)[15] ? (u = (d[8] + i2.x) / d[0] * y, (d[9] + i2.y) / d[5] * y) : (u = (i2.x - d[12]) / d[0], (i2.y - d[13]) / d[5]), s3.setPosition(s3.eyeX + u * r2.x[0] + h * r2.y[0], s3.eyeY + u * r2.x[1] + h * r2.y[1], s3.eyeZ + u * r2.x[2] + h * r2.y[2]), this._renderer.moveVelocity.mult(0.85)) : this._renderer.moveVelocity.set(0, 0), this;
      }, g.default.prototype.debugMode = function() {
        this._assert3d("debugMode");
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        g.default._validateParameters("debugMode", t2);
        for (var o3 = this._registeredMethods.post.length - 1; 0 <= o3; o3--) this._registeredMethods.post[o3].toString() !== this._grid().toString() && this._registeredMethods.post[o3].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(o3, 1);
        t2[0] === n.GRID ? this.registerMethod("post", this._grid(t2[1], t2[2], t2[3], t2[4], t2[5])) : t2[0] === n.AXES ? this.registerMethod("post", this._axesIcon(t2[1], t2[2], t2[3], t2[4])) : (this.registerMethod("post", this._grid(t2[0], t2[1], t2[2], t2[3], t2[4])), this.registerMethod("post", this._axesIcon(t2[5], t2[6], t2[7], t2[8])));
      }, g.default.prototype.noDebugMode = function() {
        this._assert3d("noDebugMode");
        for (var e3 = this._registeredMethods.post.length - 1; 0 <= e3; e3--) this._registeredMethods.post[e3].toString() !== this._grid().toString() && this._registeredMethods.post[e3].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e3, 1);
      }, g.default.prototype._grid = function(e3, r2, o3, n2, s3) {
        void 0 === e3 && (e3 = this.width / 2), void 0 === r2 && (r2 = Math.round(e3 / 30) < 4 ? 4 : Math.round(e3 / 30)), void 0 === o3 && (o3 = 0), void 0 === n2 && (n2 = 0), void 0 === s3 && (s3 = 0);
        var i2 = e3 / r2, a2 = e3 / 2;
        return function() {
          this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uModelMatrix.reset();
          for (var e4 = 0; e4 <= r2; e4++) this.beginShape(this.LINES), this.vertex(-a2 + o3, n2, e4 * i2 - a2 + s3), this.vertex(a2 + o3, n2, e4 * i2 - a2 + s3), this.endShape();
          for (var t2 = 0; t2 <= r2; t2++) this.beginShape(this.LINES), this.vertex(t2 * i2 - a2 + o3, n2, -a2 + s3), this.vertex(t2 * i2 - a2 + o3, n2, a2 + s3), this.endShape();
          this.pop();
        };
      }, g.default.prototype._axesIcon = function(e3, t2, r2, o3) {
        return void 0 === e3 && (e3 = 40 < this.width / 20 ? this.width / 20 : 40), void 0 === t2 && (t2 = -this.width / 4), void 0 === r2 && (r2 = t2), void 0 === o3 && (o3 = t2), function() {
          this.push(), this._renderer.uModelMatrix.reset(), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t2, r2, o3), this.vertex(t2 + e3, r2, o3), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t2, r2, o3), this.vertex(t2, r2 + e3, o3), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t2, r2, o3), this.vertex(t2, r2, o3 + e3), this.endShape(), this.pop();
        };
      };
      var s2 = g.default;
      r.default = s2;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.splice": 171, "core-js/modules/es.math.hypot": 176, "core-js/modules/es.math.sign": 178, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 329: [function(e2, t, r) {
      e2("core-js/modules/es.array.filter"), e2("core-js/modules/es.array.filter"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var m = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      m.default.prototype.ambientLight = function(e3, t2, r2, o) {
        this._assert3d("ambientLight"), m.default._validateParameters("ambientLight", arguments);
        var n = this.color.apply(this, arguments);
        return this._renderer.ambientLightColors.push(n._array[0], n._array[1], n._array[2]), this._renderer._enableLighting = true, this;
      }, m.default.prototype.specularColor = function(e3, t2, r2) {
        this._assert3d("specularColor"), m.default._validateParameters("specularColor", arguments);
        var o = this.color.apply(this, arguments);
        return this._renderer.specularColors = [o._array[0], o._array[1], o._array[2]], this;
      }, m.default.prototype.directionalLight = function(e3, t2, r2, o, n, s2) {
        this._assert3d("directionalLight"), m.default._validateParameters("directionalLight", arguments), e3 = e3 instanceof m.default.Color ? e3 : this.color(e3, t2, r2);
        var i, a2, t2 = arguments[arguments.length - 1], r2 = "number" == typeof t2 ? (i = arguments[arguments.length - 3], a2 = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t2.x, a2 = t2.y, t2.z), t2 = Math.sqrt(i * i + a2 * a2 + r2 * r2);
        return this._renderer.directionalLightDirections.push(i / t2, a2 / t2, r2 / t2), this._renderer.directionalLightDiffuseColors.push(e3._array[0], e3._array[1], e3._array[2]), Array.prototype.push.apply(this._renderer.directionalLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
      }, m.default.prototype.pointLight = function(e3, t2, r2, o, n, s2) {
        this._assert3d("pointLight"), m.default._validateParameters("pointLight", arguments), e3 = e3 instanceof m.default.Color ? e3 : this.color(e3, t2, r2);
        var i, a2, t2 = arguments[arguments.length - 1], r2 = "number" == typeof t2 ? (i = arguments[arguments.length - 3], a2 = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i = t2.x, a2 = t2.y, t2.z);
        return this._renderer.pointLightPositions.push(i, a2, r2), this._renderer.pointLightDiffuseColors.push(e3._array[0], e3._array[1], e3._array[2]), Array.prototype.push.apply(this._renderer.pointLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
      }, m.default.prototype.imageLight = function(e3) {
        this._renderer.activeImageLight = e3, this._renderer._enableLighting = true;
      }, m.default.prototype.panorama = function(e3) {
        this.filter(this._renderer._getSphereMapping(e3));
      }, m.default.prototype.lights = function() {
        this._assert3d("lights");
        var e3 = this.color("rgb(128,128,128)");
        return this.ambientLight(e3), this.directionalLight(e3, 0, 0, -1), this;
      }, m.default.prototype.lightFalloff = function(e3, t2, r2) {
        return this._assert3d("lightFalloff"), m.default._validateParameters("lightFalloff", arguments), e3 < 0 && (e3 = 0, console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")), t2 < 0 && (t2 = 0, console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")), r2 < 0 && (r2 = 0, console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")), 0 === e3 && 0 === t2 && 0 === r2 && (e3 = 1, console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")), this._renderer.constantAttenuation = e3, this._renderer.linearAttenuation = t2, this._renderer.quadraticAttenuation = r2, this;
      }, m.default.prototype.spotLight = function(e3, t2, r2, o, n, s2, i, a2, l, u, c) {
        this._assert3d("spotLight"), m.default._validateParameters("spotLight", arguments);
        var d, h, f, p = arguments.length;
        switch (p) {
          case 11:
          case 10:
            d = this.color(e3, t2, r2), h = new m.default.Vector(o, n, s2), f = new m.default.Vector(i, a2, l);
            break;
          case 9:
            e3 instanceof m.default.Color ? (d = e3, h = new m.default.Vector(t2, r2, o), f = new m.default.Vector(n, s2, i), u = a2, c = l) : o instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = o, f = new m.default.Vector(n, s2, i), u = a2, c = l) : i instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = new m.default.Vector(o, n, s2), f = i, u = a2, c = l) : (d = this.color(e3, t2, r2), h = new m.default.Vector(o, n, s2), f = new m.default.Vector(i, a2, l));
            break;
          case 8:
            u = (f = e3 instanceof m.default.Color ? (d = e3, h = new m.default.Vector(t2, r2, o), new m.default.Vector(n, s2, i)) : o instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = o, new m.default.Vector(n, s2, i)) : (d = this.color(e3, t2, r2), h = new m.default.Vector(o, n, s2), i), a2);
            break;
          case 7:
            e3 instanceof m.default.Color && t2 instanceof m.default.Vector ? (d = e3, h = t2, f = new m.default.Vector(r2, o, n), u = s2, c = i) : e3 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e3, h = new m.default.Vector(t2, r2, o), f = n, u = s2, c = i) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = o, f = n, u = s2, c = i) : f = e3 instanceof m.default.Color ? (d = e3, h = new m.default.Vector(t2, r2, o), new m.default.Vector(n, s2, i)) : o instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = o, new m.default.Vector(n, s2, i)) : (d = this.color(e3, t2, r2), h = new m.default.Vector(o, n, s2), i);
            break;
          case 6:
            o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = o, f = n, u = s2) : e3 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e3, h = new m.default.Vector(t2, r2, o), f = n, u = s2) : e3 instanceof m.default.Color && t2 instanceof m.default.Vector && (d = e3, h = t2, f = new m.default.Vector(r2, o, n), u = s2);
            break;
          case 5:
            e3 instanceof m.default.Color && t2 instanceof m.default.Vector && r2 instanceof m.default.Vector ? (d = e3, h = t2, f = r2, u = o, c = n) : o instanceof m.default.Vector && n instanceof m.default.Vector ? (d = this.color(e3, t2, r2), h = o, f = n) : e3 instanceof m.default.Color && n instanceof m.default.Vector ? (d = e3, h = new m.default.Vector(t2, r2, o), f = n) : e3 instanceof m.default.Color && t2 instanceof m.default.Vector && (d = e3, h = t2, f = new m.default.Vector(r2, o, n));
            break;
          case 4:
            d = e3, h = t2, f = r2, u = o;
            break;
          case 3:
            d = e3, h = t2, f = r2;
            break;
          default:
            return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p < 3 ? "few" : "many", " arguments were provided")), this;
        }
        return this._renderer.spotLightDiffuseColors.push(d._array[0], d._array[1], d._array[2]), Array.prototype.push.apply(this._renderer.spotLightSpecularColors, this._renderer.specularColors), this._renderer.spotLightPositions.push(h.x, h.y, h.z), f.normalize(), this._renderer.spotLightDirections.push(f.x, f.y, f.z), void 0 === u && (u = Math.PI / 3), void 0 !== c && c < 1 ? (c = 1, console.warn("Value of concentration needs to be greater than 1. Setting it to 1")) : void 0 === c && (c = 100), u = this._renderer._pInst._toRadians(u), this._renderer.spotLightAngle.push(Math.cos(u)), this._renderer.spotLightConc.push(c), this._renderer._enableLighting = true, this;
      }, m.default.prototype.noLights = function() {
        this._assert3d("noLights");
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return m.default._validateParameters("noLights", t2), this._renderer.activeImageLight = null, this._renderer._enableLighting = false, this._renderer.ambientLightColors.length = 0, this._renderer.specularColors = [1, 1, 1], this._renderer.directionalLightDirections.length = 0, this._renderer.directionalLightDiffuseColors.length = 0, this._renderer.directionalLightSpecularColors.length = 0, this._renderer.pointLightPositions.length = 0, this._renderer.pointLightDiffuseColors.length = 0, this._renderer.pointLightSpecularColors.length = 0, this._renderer.spotLightPositions.length = 0, this._renderer.spotLightDirections.length = 0, this._renderer.spotLightDiffuseColors.length = 0, this._renderer.spotLightSpecularColors.length = 0, this._renderer.spotLightAngle.length = 0, this._renderer.spotLightConc.length = 0, this._renderer.constantAttenuation = 1, this._renderer.linearAttenuation = 0, this._renderer.quadraticAttenuation = 0, this._renderer._useShininess = 1, this._renderer._useMetalness = 0, this;
      };
      e2 = m.default;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.filter": 157 }], 330: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.splice"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.promise"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.match"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.trim"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0, e2("regenerator-runtime/runtime");
      var L = (n = e2("../core/main")) && n.__esModule ? n : { default: n };
      function f(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function l(e3, t2, r2, o3, n2, s2, i) {
        try {
          var a2 = e3[s2](i), l2 = a2.value;
        } catch (e4) {
          return void r2(e4);
        }
        a2.done ? t2(l2) : Promise.resolve(l2).then(o3, n2);
      }
      function p(a2) {
        return function() {
          var e3 = this, i = arguments;
          return new Promise(function(t2, r2) {
            var o3 = a2.apply(e3, i);
            function n2(e4) {
              l(o3, t2, r2, n2, s2, "next", e4);
            }
            function s2(e4) {
              l(o3, t2, r2, n2, s2, "throw", e4);
            }
            n2(void 0);
          });
        };
      }
      function m(e3) {
        return (m = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      function y(e3, t2, r2) {
        for (var o3 = 2 < arguments.length && void 0 !== r2 ? r2 : {}, n2 = { v: [], vt: [], vn: [] }, s2 = {}, i = null, a2 = /* @__PURE__ */ new Set(), l2 = false, u2 = false, c = 0; c < t2.length; ++c) {
          var d = t2[c].trim().split(/\b\s+/);
          if (0 < d.length) {
            if ("usemtl" === d[0]) i = d[1];
            else if ("v" === d[0] || "vn" === d[0]) {
              var h = new L.default.Vector(parseFloat(d[1]), parseFloat(d[2]), parseFloat(d[3]));
              n2[d[0]].push(h);
            } else if ("vt" === d[0]) {
              h = [parseFloat(d[1]), 1 - parseFloat(d[2])];
              n2[d[0]].push(h);
            } else if ("f" === d[0]) for (var f2 = 3; f2 < d.length; ++f2) {
              for (var p2 = [], m2 = [1, f2 - 1, f2], y2 = 0; y2 < m2.length; ++y2) {
                for (var g2, v = d[m2[y2]], b = v.split("/"), _ = 0; _ < b.length; _++) b[_] = parseInt(b[_]) - 1;
                s2[v] || (s2[v] = {}), void 0 === s2[v][i] ? (g2 = e3.vertices.length, e3.vertices.push(n2.v[b[0]].copy()), e3.uvs.push(n2.vt[b[1]] ? n2.vt[b[1]].slice() : [0, 0]), e3.vertexNormals.push(n2.vn[b[2]] ? n2.vn[b[2]].copy() : new L.default.Vector()), s2[v][i] = g2, p2.push(g2), i && o3[i] && o3[i].diffuseColor && a2.add(n2.v[b[0]])) : p2.push(s2[v][i]);
              }
              if (p2[0] !== p2[1] && p2[0] !== p2[2] && p2[1] !== p2[2]) if (e3.faces.push(p2), i && o3[i] && o3[i].diffuseColor) for (var l2 = l2 = true, j = o3[i].diffuseColor, x2 = 0; x2 < p2.length; x2++) e3.vertexColors.push(j[0]), e3.vertexColors.push(j[1]), e3.vertexColors.push(j[2]);
              else u2 = true;
            }
          }
        }
        if (0 === e3.vertexNormals.length && e3.computeNormals(), l2 === u2) throw new Error("Model coloring is inconsistent. Either all vertices should have colors or none should.");
      }
      function g(e3, t2) {
        if (function(e4) {
          for (var t3 = new DataView(e4), r3 = [115, 111, 108, 105, 100], o4 = 0; o4 < 5; o4++) if (function(e5, t4, r4) {
            for (var o5 = 0, n3 = e5.length; o5 < n3; o5++) if (e5[o5] !== t4.getUint8(r4 + o5, false)) return;
            return 1;
          }(r3, t3, o4)) return;
          return 1;
        }(t2)) {
          for (var r2, o3, n2, s2, i, a2, l2, u2 = e3, c = new DataView(t2), d = c.getUint32(80, true), h = false, f2 = 0; f2 < 70; f2++) 1129270351 === c.getUint32(f2, false) && 82 === c.getUint8(f2 + 4) && 61 === c.getUint8(f2 + 5) && (h = true, s2 = [], i = c.getUint8(f2 + 6) / 255, a2 = c.getUint8(f2 + 7) / 255, l2 = c.getUint8(f2 + 8) / 255);
          for (var p2 = 0; p2 < d; p2++) {
            for (var m2, y2 = 84 + 50 * p2, g2 = c.getFloat32(y2, true), v = c.getFloat32(4 + y2, true), b = c.getFloat32(8 + y2, true), _ = (h && (m2 = c.getUint16(48 + y2, true), n2 = 0 == (32768 & m2) ? (r2 = (31 & m2) / 31, o3 = (m2 >> 5 & 31) / 31, (m2 >> 10 & 31) / 31) : (r2 = i, o3 = a2, l2)), new L.default.Vector(g2, v, b)), j = 1; j <= 3; j++) {
              var x2 = y2 + 12 * j, x2 = new L.default.Vector(c.getFloat32(x2, true), c.getFloat32(4 + x2, true), c.getFloat32(8 + x2, true));
              u2.vertices.push(x2), u2.vertexNormals.push(_), h && s2.push(r2, o3, n2);
            }
            u2.faces.push([3 * p2, 3 * p2 + 1, 3 * p2 + 2]), u2.uvs.push([0, 0], [0, 0], [0, 0]);
          }
        } else {
          t2 = new DataView(t2);
          if ("TextDecoder" in window) for (var w, S, T = e3, E = new TextDecoder("utf-8").decode(t2).split("\n"), M = "", k = [], O = 0; O < E.length; ++O) {
            for (var C = E[O].trim(), A = C.split(" "), P = 0; P < A.length; ++P) "" === A[P] && A.splice(P, 1);
            if (0 !== A.length) switch (M) {
              case "":
                if ("solid" !== A[0]) return void (console.error(C), console.error('Invalid state "'.concat(A[0], '", should be "solid"')));
                M = "solid";
                break;
              case "solid":
                if ("facet" !== A[0] || "normal" !== A[1]) return void (console.error(C), console.error('Invalid state "'.concat(A[0], '", should be "facet normal"')));
                w = new L.default.Vector(parseFloat(A[2]), parseFloat(A[3]), parseFloat(A[4])), T.vertexNormals.push(w, w, w), M = "facet normal";
                break;
              case "facet normal":
                if ("outer" !== A[0] || "loop" !== A[1]) return void (console.error(C), console.error('Invalid state "'.concat(A[0], '", should be "outer loop"')));
                M = "vertex";
                break;
              case "vertex":
                if ("vertex" === A[0]) S = new L.default.Vector(parseFloat(A[1]), parseFloat(A[2]), parseFloat(A[3])), T.vertices.push(S), T.uvs.push([0, 0]), k.push(T.vertices.indexOf(S));
                else {
                  if ("endloop" !== A[0]) return void (console.error(C), console.error('Invalid state "'.concat(A[0], '", should be "vertex" or "endloop"')));
                  T.faces.push(k), k = [], M = "endloop";
                }
                break;
              case "endloop":
                if ("endfacet" !== A[0]) return void (console.error(C), console.error('Invalid state "'.concat(A[0], '", should be "endfacet"')));
                M = "endfacet";
                break;
              case "endfacet":
                if ("endsolid" !== A[0]) {
                  if ("facet" !== A[0] || "normal" !== A[1]) return void (console.error(C), console.error('Invalid state "'.concat(A[0], '", should be "endsolid" or "facet normal"')));
                  w = new L.default.Vector(parseFloat(A[2]), parseFloat(A[3]), parseFloat(A[4])), T.vertexNormals.push(w, w, w), M = "facet normal";
                }
                break;
              default:
                console.error('Invalid state "'.concat(M, '"'));
            }
          }
          else console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");
        }
      }
      e2("./p5.Geometry"), L.default.prototype.loadModel = function(i, e3) {
        L.default._validateParameters("loadModel", arguments);
        var o3, n2, s2 = false, a2 = false, l2 = false, t2 = i.slice(-4), u2 = (e3 && "object" === m(e3) ? (s2 = e3.normalize || false, o3 = e3.successCallback, n2 = e3.failureCallback, t2 = e3.fileType || t2, a2 = e3.flipU || false, l2 = e3.flipV || false) : "boolean" == typeof e3 ? (s2 = e3, o3 = arguments[2], n2 = arguments[3], void 0 !== arguments[4] && (t2 = arguments[4])) : (o3 = "function" == typeof e3 ? e3 : void 0, n2 = arguments[2], void 0 !== arguments[3] && (t2 = arguments[3])), new L.default.Geometry()), c = (u2.gid = "".concat(i, "|").concat(s2), this);
        function d() {
          return (d = p(regeneratorRuntime.mark(function e4(t3) {
            var r2, o4, n3, s3;
            return regeneratorRuntime.wrap(function(e5) {
              for (; ; ) switch (e5.prev = e5.next) {
                case 0:
                  for (r2 = [], o4 = 0; o4 < t3.length; o4++) (n3 = t3[o4].match(/^mtllib (.+)/)) && !function() {
                    var o5 = "", e6 = n3[1], t4 = i.split("/");
                    o5 = 1 < t4.length ? (t4.pop(), t4.join("/") + "/" + e6) : e6, r2.push(function() {
                      return h.apply(this, arguments);
                    }(o5).then(function(e7) {
                      return e7 ? (t5 = c, r3 = o5, new Promise(function(n4, e8) {
                        var s4 = null, i2 = {};
                        t5.loadStrings(r3, function(e9) {
                          for (var t6 = 0; t6 < e9.length; ++t6) {
                            var r4, o6 = e9[t6].trim().split(/\s+/);
                            "newmtl" === o6[0] ? (r4 = o6[1], i2[s4 = r4] = {}) : "Kd" === o6[0] ? i2[s4].diffuseColor = [parseFloat(o6[1]), parseFloat(o6[2]), parseFloat(o6[3])] : "Ka" === o6[0] ? i2[s4].ambientColor = [parseFloat(o6[1]), parseFloat(o6[2]), parseFloat(o6[3])] : "Ks" === o6[0] ? i2[s4].specularColor = [parseFloat(o6[1]), parseFloat(o6[2]), parseFloat(o6[3])] : "map_Kd" === o6[0] && (i2[s4].texturePath = o6[1]);
                          }
                          n4(i2);
                        }, e8);
                      })) : (console.warn("MTL file not found or error in parsing; proceeding without materials: ".concat(o5)), {});
                      var t5, r3;
                    }).catch(function(e7) {
                      return console.warn("Error loading MTL file: ".concat(o5), e7), {};
                    }));
                  }();
                  return e5.prev = 2, e5.next = 5, Promise.all(r2);
                case 5:
                  return s3 = e5.sent, s3 = Object.assign.apply(Object, [{}].concat(f(s3))), e5.abrupt("return", s3);
                case 10:
                  return e5.prev = 10, e5.t0 = e5.catch(2), e5.abrupt("return", {});
                case 13:
                case "end":
                  return e5.stop();
              }
            }, e4, null, [[2, 10]]);
          }))).apply(this, arguments);
        }
        function h() {
          return (h = p(regeneratorRuntime.mark(function e4(t3) {
            var r2;
            return regeneratorRuntime.wrap(function(e5) {
              for (; ; ) switch (e5.prev = e5.next) {
                case 0:
                  return e5.prev = 0, e5.next = 3, fetch(t3, { method: "HEAD" });
                case 3:
                  return r2 = e5.sent, e5.abrupt("return", r2.ok);
                case 7:
                  return e5.prev = 7, e5.t0 = e5.catch(0), e5.abrupt("return", false);
                case 10:
                case "end":
                  return e5.stop();
              }
            }, e4, null, [[0, 7]]);
          }))).apply(this, arguments);
        }
        return t2.match(/\.stl$/i) ? this.httpDo(i, "GET", "arrayBuffer", function(e4) {
          g(u2, e4), s2 && u2.normalize(), a2 && u2.flipU(), l2 && u2.flipV(), c._decrementPreload(), "function" == typeof o3 && o3(u2);
        }, n2) : t2.match(/\.obj$/i) ? this.loadStrings(i, function() {
          var t3 = p(regeneratorRuntime.mark(function e4(t4) {
            var r2;
            return regeneratorRuntime.wrap(function(e5) {
              for (; ; ) switch (e5.prev = e5.next) {
                case 0:
                  return e5.prev = 0, e5.next = 3, function() {
                    return d.apply(this, arguments);
                  }(t4);
                case 3:
                  r2 = e5.sent, y(u2, t4, r2), e5.next = 11;
                  break;
                case 7:
                  return e5.prev = 7, e5.t0 = e5.catch(0), n2 ? n2(e5.t0) : L.default._friendlyError("Error during parsing: " + e5.t0.message), e5.abrupt("return");
                case 11:
                  return e5.prev = 11, s2 && u2.normalize(), a2 && u2.flipU(), l2 && u2.flipV(), u2._makeTriangleEdges(), c._decrementPreload(), "function" == typeof o3 && o3(u2), e5.finish(11);
                case 19:
                case "end":
                  return e5.stop();
              }
            }, e4, null, [[0, 7, 11, 19]]);
          }));
          return function(e4) {
            return t3.apply(this, arguments);
          };
        }(), n2) : (L.default._friendlyFileLoadError(3, i), n2 ? n2() : L.default._friendlyError("Sorry, the file type is invalid. Only OBJ and STL files are supported.")), u2;
      }, L.default.prototype.model = function(e3) {
        this._assert3d("model"), L.default._validateParameters("model", arguments), 0 < e3.vertices.length && (this._renderer.geometryInHash(e3.gid) || (e3._edgesToVertices(), this._renderer.createBuffers(e3.gid, e3)), this._renderer.drawBuffers(e3.gid));
      };
      var u = 0, n = (L.default.prototype.createModel = function(e3) {
        var t2, r2, o3 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : " ", n2 = 2 < arguments.length ? arguments[2] : void 0, s2 = (L.default._validateParameters("createModel", arguments), false), i = false, a2 = false, n2 = (n2 && "object" === m(n2) ? (s2 = n2.normalize || false, t2 = n2.successCallback, r2 = n2.failureCallback, i = n2.flipU || false, a2 = n2.flipV || false) : r2 = "boolean" == typeof n2 ? (s2 = n2, t2 = arguments[3], arguments[4]) : (t2 = "function" == typeof arguments[2] ? arguments[2] : void 0, arguments[3]), new L.default.Geometry());
        if (n2.gid = "".concat(o3, "|").concat(s2, "|").concat(u++), o3.match(/\.stl$/i)) try {
          g(n2, new TextEncoder().encode(e3).buffer);
        } catch (e4) {
          return void (r2 ? r2(e4) : L.default._friendlyError("Error during parsing: " + e4.message));
        }
        else if (o3.match(/\.obj$/i)) try {
          y(n2, e3.split("\n"));
        } catch (e4) {
          return void (r2 ? r2(e4) : L.default._friendlyError("Error during parsing: " + e4.message));
        }
        else L.default._friendlyFileLoadError(3, e3), r2 ? r2() : L.default._friendlyError("Sorry, the file type is invalid. Only OBJ and STL files are supported.");
        return s2 && n2.normalize(), i && n2.flipU(), a2 && n2.flipV(), n2._makeTriangleEdges(), "function" == typeof t2 && t2(n2), n2;
      }, L.default);
      r.default = n;
    }, { "../core/main": 283, "./p5.Geometry": 335, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.splice": 171, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.promise": 191, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.set": 197, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.match": 201, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.trim": 209, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246, "regenerator-runtime/runtime": 260 }], 331: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.join"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var u = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, n = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      e2("./p5.Texture"), u.default.prototype.loadShader = function(e3, t2, r2, o3) {
        u.default._validateParameters("loadShader", arguments), o3 = o3 || console.error;
        function n2() {
          i2._decrementPreload(), r2 && r2(s3);
        }
        var s3 = new u.default.Shader(), i2 = this, a3 = false, l = false;
        return this.loadStrings(e3, function(e4) {
          s3._vertSrc = e4.join("\n"), l = true, a3 && n2();
        }, o3), this.loadStrings(t2, function(e4) {
          s3._fragSrc = e4.join("\n"), a3 = true, l && n2();
        }, o3), s3;
      }, u.default.prototype.createShader = function(e3, t2, r2) {
        return u.default._validateParameters("createShader", arguments), new u.default.Shader(this._renderer, e3, t2, r2);
      }, u.default.prototype.createFilterShader = function(e3) {
        u.default._validateParameters("createFilterShader", arguments);
        var t2 = e3.includes("#version 300 es") ? "#version 300 es\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    in vec3 aPosition;\n    in vec2 aTexCoord;\n    out vec2 vTexCoord;\n\n    void main() {\n      // transferring texcoords for the frag shader\n      vTexCoord = aTexCoord;\n\n      // copy position with a fourth coordinate for projection (1.0 is normal)\n      vec4 positionVec4 = vec4(aPosition, 1.0);\n\n      // project to 3D space\n      gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n    }\n  " : "\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    attribute vec3 aPosition;\n    // texcoords only come from p5 to vertex shader\n    // so pass texcoords on to the fragment shader in a varying variable\n    attribute vec2 aTexCoord;\n    varying vec2 vTexCoord;\n\n    void main() {\n      // transferring texcoords for the frag shader\n      vTexCoord = aTexCoord;\n\n      // copy position with a fourth coordinate for projection (1.0 is normal)\n      vec4 positionVec4 = vec4(aPosition, 1.0);\n\n      // project to 3D space\n      gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n    }\n  ", t2 = new u.default.Shader(this._renderer, t2, e3);
        return this._renderer.GL ? t2.ensureCompiledOnContext(this) : t2.ensureCompiledOnContext(this._renderer.getFilterGraphicsLayer()), t2;
      }, u.default.prototype.shader = function(e3) {
        return this._assert3d("shader"), u.default._validateParameters("shader", arguments), e3.ensureCompiledOnContext(this), e3.isStrokeShader() ? this._renderer.userStrokeShader = e3 : (this._renderer.userFillShader = e3, this._renderer._useNormalMaterial = false), e3.setDefaultUniforms(), this;
      }, u.default.prototype.baseMaterialShader = function() {
        return this._assert3d("baseMaterialShader"), this._renderer.baseMaterialShader();
      }, u.default.prototype.baseNormalShader = function() {
        return this._assert3d("baseNormalShader"), this._renderer.baseNormalShader();
      }, u.default.prototype.baseColorShader = function() {
        return this._assert3d("baseColorShader"), this._renderer.baseColorShader();
      }, u.default.prototype.baseStrokeShader = function() {
        return this._assert3d("baseStrokeShader"), this._renderer.baseStrokeShader();
      }, u.default.prototype.resetShader = function() {
        return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
      }, u.default.prototype.texture = function(e3) {
        return this._assert3d("texture"), u.default._validateParameters("texture", arguments), e3.gifProperties && e3._animateGif(this), this._renderer.drawMode = n.TEXTURE, this._renderer._useNormalMaterial = false, this._renderer._tex = e3, this._renderer._setProperty("_doFill", true), this;
      }, u.default.prototype.textureMode = function(e3) {
        e3 !== n.IMAGE && e3 !== n.NORMAL ? console.warn("You tried to set ".concat(e3, " textureMode only supports IMAGE & NORMAL ")) : this._renderer.textureMode = e3;
      }, u.default.prototype.textureWrap = function(e3) {
        var t2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : e3, r2 = (this._renderer.textureWrapX = e3, this._renderer.textureWrapY = t2, true), o3 = false, n2 = void 0;
        try {
          for (var s3, i2 = this._renderer.textures.values()[Symbol.iterator](); !(r2 = (s3 = i2.next()).done); r2 = true) s3.value.setWrapMode(e3, t2);
        } catch (e4) {
          o3 = true, n2 = e4;
        } finally {
          try {
            r2 || null == i2.return || i2.return();
          } finally {
            if (o3) throw n2;
          }
        }
      }, u.default.prototype.normalMaterial = function() {
        this._assert3d("normalMaterial");
        for (var e3 = arguments.length, t2 = new Array(e3), r2 = 0; r2 < e3; r2++) t2[r2] = arguments[r2];
        return u.default._validateParameters("normalMaterial", t2), this._renderer.drawMode = n.FILL, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = true, this._renderer.curFillColor = [1, 1, 1, 1], this._renderer._setProperty("_doFill", true), this.noStroke(), this;
      }, u.default.prototype.ambientMaterial = function(e3, t2, r2) {
        this._assert3d("ambientMaterial"), u.default._validateParameters("ambientMaterial", arguments);
        var o3 = u.default.prototype.color.apply(this, arguments);
        return this._renderer._hasSetAmbient = true, this._renderer.curAmbientColor = o3._array, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this._renderer._setProperty("_doFill", true), this;
      }, u.default.prototype.emissiveMaterial = function(e3, t2, r2, o3) {
        this._assert3d("emissiveMaterial"), u.default._validateParameters("emissiveMaterial", arguments);
        var n2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curEmissiveColor = n2._array, this._renderer._useEmissiveMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this;
      }, u.default.prototype.specularMaterial = function(e3, t2, r2, o3) {
        this._assert3d("specularMaterial"), u.default._validateParameters("specularMaterial", arguments);
        var n2 = u.default.prototype.color.apply(this, arguments);
        return this._renderer.curSpecularColor = n2._array, this._renderer._useSpecularMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this;
      }, u.default.prototype.shininess = function(e3) {
        return this._assert3d("shininess"), u.default._validateParameters("shininess", arguments), this._renderer._useShininess = e3 = e3 < 1 ? 1 : e3, this;
      }, u.default.prototype.metalness = function(e3) {
        this._assert3d("metalness");
        e3 = 1 - Math.exp(-e3 / 100);
        return this._renderer._useMetalness = e3, this;
      }, u.default.RendererGL.prototype._applyColorBlend = function(e3, t2) {
        var r2 = this.GL, o3 = this.drawMode === n.TEXTURE, t2 = t2 || this.userFillShader || this.userStrokeShader || this.userPointShader || o3 || this.curBlendMode !== n.BLEND || e3[e3.length - 1] < 1 || this._isErasing;
        return t2 !== this._isBlending && (t2 || this.curBlendMode !== n.BLEND && this.curBlendMode !== n.ADD ? r2.enable(r2.BLEND) : r2.disable(r2.BLEND), r2.depthMask(true), this._isBlending = t2), this._applyBlendMode(), e3;
      }, u.default.RendererGL.prototype._applyBlendMode = function() {
        if (this._cachedBlendMode !== this.curBlendMode) {
          var e3 = this.GL;
          switch (this.curBlendMode) {
            case n.BLEND:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.ADD:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ONE);
              break;
            case n.REMOVE:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ZERO, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.MULTIPLY:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.DST_COLOR, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.SCREEN:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ONE_MINUS_SRC_COLOR);
              break;
            case n.EXCLUSION:
              e3.blendEquationSeparate(e3.FUNC_ADD, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE_MINUS_DST_COLOR, e3.ONE_MINUS_SRC_COLOR, e3.ONE, e3.ONE);
              break;
            case n.REPLACE:
              e3.blendEquation(e3.FUNC_ADD), e3.blendFunc(e3.ONE, e3.ZERO);
              break;
            case n.SUBTRACT:
              e3.blendEquationSeparate(e3.FUNC_REVERSE_SUBTRACT, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE, e3.ONE, e3.ONE, e3.ONE_MINUS_SRC_ALPHA);
              break;
            case n.DARKEST:
              this.blendExt ? (e3.blendEquationSeparate(this.blendExt.MIN || this.blendExt.MIN_EXT, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE, e3.ONE, e3.ONE, e3.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
              break;
            case n.LIGHTEST:
              this.blendExt ? (e3.blendEquationSeparate(this.blendExt.MAX || this.blendExt.MAX_EXT, e3.FUNC_ADD), e3.blendFuncSeparate(e3.ONE, e3.ONE, e3.ONE, e3.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
              break;
            default:
              console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
          }
          this._isErasing || (this._cachedBlendMode = this.curBlendMode);
        }
      };
      var s2 = u.default;
      r.default = s2;
    }, { "../core/constants": 272, "../core/main": 283, "./p5.Texture": 343, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.join": 166, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 332: [function(e2, t, r) {
      e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.hypot"), e2("core-js/modules/es.string.sub"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var j = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      j.default.prototype.camera = function() {
        var e3;
        this._assert3d("camera");
        for (var t2 = arguments.length, r2 = new Array(t2), o = 0; o < t2; o++) r2[o] = arguments[o];
        return j.default._validateParameters("camera", r2), (e3 = this._renderer._curCamera).camera.apply(e3, r2), this;
      }, j.default.prototype.perspective = function() {
        var e3;
        this._assert3d("perspective");
        for (var t2 = arguments.length, r2 = new Array(t2), o = 0; o < t2; o++) r2[o] = arguments[o];
        return j.default._validateParameters("perspective", r2), (e3 = this._renderer._curCamera).perspective.apply(e3, r2), this;
      }, j.default.prototype.linePerspective = function(e3) {
        if (j.default._validateParameters("linePerspective", arguments), !(this._renderer instanceof j.default.RendererGL)) throw new Error("linePerspective() must be called in WebGL mode.");
        if (void 0 === e3) return this._renderer._curCamera.useLinePerspective;
        this._renderer._curCamera.useLinePerspective = e3;
      }, j.default.prototype.ortho = function() {
        var e3;
        this._assert3d("ortho");
        for (var t2 = arguments.length, r2 = new Array(t2), o = 0; o < t2; o++) r2[o] = arguments[o];
        return j.default._validateParameters("ortho", r2), (e3 = this._renderer._curCamera).ortho.apply(e3, r2), this;
      }, j.default.prototype.frustum = function() {
        var e3;
        this._assert3d("frustum");
        for (var t2 = arguments.length, r2 = new Array(t2), o = 0; o < t2; o++) r2[o] = arguments[o];
        return j.default._validateParameters("frustum", r2), (e3 = this._renderer._curCamera).frustum.apply(e3, r2), this;
      }, j.default.prototype.createCamera = function() {
        this._assert3d("createCamera");
        var e3 = new j.default.Camera(this._renderer);
        return e3._computeCameraDefaultSettings(), e3._setDefaultCamera(), this._renderer._curCamera = e3;
      }, j.default.Camera = function() {
        function t2(e4) {
          if (!(this instanceof t2)) throw new TypeError("Cannot call a class as a function");
          this._renderer = e4, this.cameraType = "default", this.useLinePerspective = true, this.cameraMatrix = new j.default.Matrix(), this.projMatrix = new j.default.Matrix(), this.yScale = 1;
        }
        var e3, r2;
        return e3 = t2, (r2 = [{ key: "perspective", value: function(e4, t3, r3, o) {
          this.cameraType = 0 < arguments.length ? "custom" : "default", void 0 === e4 ? (e4 = this.defaultCameraFOV, this.cameraFOV = e4) : this.cameraFOV = this._renderer._pInst._toRadians(e4), void 0 === t3 && (t3 = this.defaultAspectRatio), void 0 === r3 && (r3 = this.defaultCameraNear), void 0 === o && (o = this.defaultCameraFar), r3 <= 1e-4 && (r3 = 0.01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), o < r3 && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t3, this.cameraNear = r3, this.cameraFar = o, this.projMatrix = j.default.Matrix.identity();
          var e4 = 1 / Math.tan(this.cameraFOV / 2), n2 = 1 / (this.cameraNear - this.cameraFar);
          this.projMatrix.set(e4 / t3, 0, 0, 0, 0, -e4 * this.yScale, 0, 0, 0, 0, (o + r3) * n2, -1, 0, 0, 2 * o * r3 * n2, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix);
        } }, { key: "ortho", value: function(e4, t3, r3, o, n2, s2) {
          var i = this.fbo || this._renderer, i = (void 0 === e4 && (e4 = -i.width / 2), void 0 === t3 && (t3 = +i.width / 2), void 0 === r3 && (r3 = -i.height / 2), void 0 === o && (o = +i.height / 2), void 0 === n2 && (n2 = 0), void 0 === s2 && (s2 = Math.max(i.width, i.height) + 800), this.cameraNear = n2, t3 - e4), a2 = o - r3, l = (this.cameraFar = s2) - n2, u = 2 / i, c = 2 / a2 * this.yScale, d = -2 / l, t3 = -(t3 + e4) / i, e4 = -(o + r3) / a2, i = -(s2 + n2) / l;
          this.projMatrix = j.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, 0, 0, d, 0, t3, e4, i, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix), this.cameraType = "custom";
        } }, { key: "frustum", value: function(e4, t3, r3, o, n2, s2) {
          void 0 === e4 && (e4 = 0.05 * -this._renderer.width), void 0 === t3 && (t3 = 0.05 * +this._renderer.width), void 0 === r3 && (r3 = 0.05 * +this._renderer.height), void 0 === o && (o = 0.05 * -this._renderer.height), void 0 === n2 && (n2 = this.defaultCameraNear), void 0 === s2 && (s2 = this.defaultCameraFar), this.cameraNear = n2;
          var i = t3 - e4, a2 = o - r3, l = (this.cameraFar = s2) - n2, u = 2 * n2 / i, c = 2 * n2 / a2 * this.yScale, d = -2 * s2 * n2 / l, t3 = (t3 + e4) / i, e4 = (o + r3) / a2, i = -(s2 + n2) / l;
          this.projMatrix = j.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, t3, e4, i, -1, 0, 0, d, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix), this.cameraType = "custom";
        } }, { key: "_rotateView", value: function(e4, t3, r3, o) {
          var n2 = this.centerX, s2 = this.centerY, i = this.centerZ, a2 = (n2 -= this.eyeX, s2 -= this.eyeY, i -= this.eyeZ, j.default.Matrix.identity(this._renderer._pInst)), e4 = (a2.rotate(this._renderer._pInst._toRadians(e4), t3, r3, o), [n2 * a2.mat4[0] + s2 * a2.mat4[4] + i * a2.mat4[8], n2 * a2.mat4[1] + s2 * a2.mat4[5] + i * a2.mat4[9], n2 * a2.mat4[2] + s2 * a2.mat4[6] + i * a2.mat4[10]]), t3 = (e4[0] += this.eyeX, e4[1] += this.eyeY, e4[2] += this.eyeZ, this.upX * a2.mat4[0] + this.upY * a2.mat4[4] + this.upZ * a2.mat4[8]), r3 = this.upX * a2.mat4[1] + this.upY * a2.mat4[5] + this.upZ * a2.mat4[9], o = this.upX * a2.mat4[2] + this.upY * a2.mat4[6] + this.upZ * a2.mat4[10];
          this.camera(this.eyeX, this.eyeY, this.eyeZ, e4[0], e4[1], e4[2], t3, r3, o);
        } }, { key: "roll", value: function(e4) {
          var t3 = this._getLocalAxes(), e4 = j.default.Quat.fromAxisAngle(this._renderer._pInst._toRadians(e4), t3.z[0], t3.z[1], t3.z[2]).rotateVector(new j.default.Vector(this.upX, this.upY, this.upZ));
          this.camera(this.eyeX, this.eyeY, this.eyeZ, this.centerX, this.centerY, this.centerZ, e4.x, e4.y, e4.z);
        } }, { key: "pan", value: function(e4) {
          var t3 = this._getLocalAxes();
          this._rotateView(e4, t3.y[0], t3.y[1], t3.y[2]);
        } }, { key: "tilt", value: function(e4) {
          var t3 = this._getLocalAxes();
          this._rotateView(e4, t3.x[0], t3.x[1], t3.x[2]);
        } }, { key: "lookAt", value: function(e4, t3, r3) {
          this.camera(this.eyeX, this.eyeY, this.eyeZ, e4, t3, r3, this.upX, this.upY, this.upZ);
        } }, { key: "camera", value: function(e4, t3, r3, o, n2, s2, i, a2, l) {
          void 0 === e4 && (e4 = this.defaultEyeX, t3 = this.defaultEyeY, r3 = this.defaultEyeZ, o = e4, n2 = t3, a2 = 1, l = i = s2 = 0), this.eyeX = e4, this.eyeY = t3, this.eyeZ = r3, void 0 !== o && (this.centerX = o, this.centerY = n2, this.centerZ = s2), void 0 !== i && (this.upX = i, this.upY = a2, this.upZ = l);
          o = this._getLocalAxes(), this.cameraMatrix.set(o.x[0], o.y[0], o.z[0], 0, o.x[1], o.y[1], o.z[1], 0, o.x[2], o.y[2], o.z[2], 0, 0, 0, 0, 1), n2 = -e4;
          return this.cameraMatrix.translate([n2, -t3, -r3]), this._isActive() && this._renderer.uViewMatrix.set(this.cameraMatrix), this;
        } }, { key: "move", value: function(e4, t3, r3) {
          var o = this._getLocalAxes(), e4 = [o.x[0] * e4, o.x[1] * e4, o.x[2] * e4], t3 = [o.y[0] * t3, o.y[1] * t3, o.y[2] * t3], o = [o.z[0] * r3, o.z[1] * r3, o.z[2] * r3];
          this.camera(this.eyeX + e4[0] + t3[0] + o[0], this.eyeY + e4[1] + t3[1] + o[1], this.eyeZ + e4[2] + t3[2] + o[2], this.centerX + e4[0] + t3[0] + o[0], this.centerY + e4[1] + t3[1] + o[1], this.centerZ + e4[2] + t3[2] + o[2], this.upX, this.upY, this.upZ);
        } }, { key: "setPosition", value: function(e4, t3, r3) {
          var o = e4 - this.eyeX, n2 = t3 - this.eyeY, s2 = r3 - this.eyeZ;
          this.camera(e4, t3, r3, this.centerX + o, this.centerY + n2, this.centerZ + s2, this.upX, this.upY, this.upZ);
        } }, { key: "set", value: function(e4) {
          for (var t3 = 0, r3 = ["eyeX", "eyeY", "eyeZ", "centerX", "centerY", "centerZ", "upX", "upY", "upZ", "cameraFOV", "aspectRatio", "cameraNear", "cameraFar", "cameraType", "yScale", "useLinePerspective"]; t3 < r3.length; t3++) {
            var o = r3[t3];
            this[o] = e4[o];
          }
          this.cameraMatrix = e4.cameraMatrix.copy(), this.projMatrix = e4.projMatrix.copy(), this._isActive() && (this._renderer.uModelMatrix.reset(), this._renderer.uViewMatrix.set(this.cameraMatrix), this._renderer.uPMatrix.set(this.projMatrix));
        } }, { key: "slerp", value: function(e4, t3, r3) {
          var o, n2, s2, i, a2, l, u, c, d, h, f, p, m, y, g, v, b, _;
          0 === r3 ? this.set(e4) : 1 === r3 ? this.set(t3) : (0 !== this.projMatrix.mat4[15] && (this.projMatrix.mat4[0] = e4.projMatrix.mat4[0] * Math.pow(t3.projMatrix.mat4[0] / e4.projMatrix.mat4[0], r3), this.projMatrix.mat4[5] = e4.projMatrix.mat4[5] * Math.pow(t3.projMatrix.mat4[5] / e4.projMatrix.mat4[5], r3), this._isActive() && (this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice())), i = new j.default.Vector(e4.eyeX, e4.eyeY, e4.eyeZ), a2 = new j.default.Vector(t3.eyeX, t3.eyeY, t3.eyeZ), v = new j.default.Vector(e4.centerX, e4.centerY, e4.centerZ), _ = new j.default.Vector(t3.centerX, t3.centerY, t3.centerZ), s2 = j.default.Vector.dist(i, v), o = j.default.Vector.dist(a2, _), o = s2 * Math.pow(o / s2, r3), s2 = j.default.Vector.sub(i, a2), n2 = 1, 1e-6 < (b = (y = i.copy().sub(a2).sub(v).add(_)).magSq()) && (n2 = j.default.Vector.dot(s2, y) / b, n2 = Math.max(0, Math.min(n2, 1))), s2 = j.default.Vector.lerp(j.default.Vector.lerp(i, v, n2), j.default.Vector.lerp(a2, _, n2), r3), y = e4.cameraMatrix.createSubMatrix3x3(), b = t3.cameraMatrix.createSubMatrix3x3(), i = y.row(2), v = b.row(2), a2 = y.row(1), _ = b.row(1), e4 = new j.default.Vector(), t3 = new j.default.Vector(), l = new j.default.Vector(), u = new j.default.Vector(), 1 - (c = 0.5 * ((y = (b = b.mult3x3(y.copy().transpose3x3())).diagonal())[0] + y[1] + y[2] - 1)) < 1e-7 ? (e4.set(j.default.Vector.lerp(i, v, r3)).normalize(), l.set(e4).mult(n2 * o).add(s2), u.set(e4).mult((n2 - 1) * o).add(s2), t3.set(j.default.Vector.lerp(a2, _, r3)).normalize()) : (v = 1 / (1 - c), _ = Math.max(y[0], y[1], y[2]), p = b.mat3[1] + b.mat3[3], m = b.mat3[2] + b.mat3[6], g = b.mat3[5] + b.mat3[7], _ = _ === y[0] ? (h = 0.5 * p * (v /= d = Math.sqrt((y[0] - c) * v)), f = 0.5 * m * v, 0.5 * (b.mat3[7] - b.mat3[5]) / d) : _ === y[1] ? (f = 0.5 * g * (v /= h = Math.sqrt((y[1] - c) * v)), d = 0.5 * p * v, 0.5 * (b.mat3[2] - b.mat3[6]) / h) : (d = 0.5 * m * (v /= f = Math.sqrt((y[2] - c) * v)), h = 0.5 * g * v, 0.5 * (b.mat3[3] - b.mat3[1]) / f), p = r3 * Math.atan2(_, c), m = Math.cos(p), y = Math.sin(p), (_ = new j.default.Matrix("mat3", [m + (g = 1 - m) * d * d, g * (v = d * h) + y * f, g * (b = f * d) - y * h, g * v - y * f, m + g * h * h, g * (r3 = h * f) + y * d, g * b + y * h, g * r3 - y * d, m + g * f * f])).multiplyVec3(i, e4), l.set(e4).mult(n2 * o).add(s2), u.set(e4).mult((n2 - 1) * o).add(s2), _.multiplyVec3(a2, t3)), this.camera(l.x, l.y, l.z, u.x, u.y, u.z, t3.x, t3.y, t3.z));
        } }, { key: "_computeCameraDefaultSettings", value: function() {
          this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = 800, this.defaultCameraFOV = 2 * Math.atan(this._renderer.height / 2 / this.defaultEyeZ), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = 0.1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
        } }, { key: "_setDefaultCamera", value: function() {
          this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
        } }, { key: "_resize", value: function() {
          "default" === this.cameraType && (this._computeCameraDefaultSettings(), this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.perspective());
        } }, { key: "copy", value: function() {
          var e4 = new j.default.Camera(this._renderer);
          return e4.cameraFOV = this.cameraFOV, e4.aspectRatio = this.aspectRatio, e4.eyeX = this.eyeX, e4.eyeY = this.eyeY, e4.eyeZ = this.eyeZ, e4.centerX = this.centerX, e4.centerY = this.centerY, e4.centerZ = this.centerZ, e4.upX = this.upX, e4.upY = this.upY, e4.upZ = this.upZ, e4.cameraNear = this.cameraNear, e4.cameraFar = this.cameraFar, e4.cameraType = this.cameraType, e4.useLinePerspective = this.useLinePerspective, e4.cameraMatrix = this.cameraMatrix.copy(), e4.projMatrix = this.projMatrix.copy(), e4.yScale = this.yScale, e4;
        } }, { key: "_getLocalAxes", value: function() {
          var e4 = this.eyeX - this.centerX, t3 = this.eyeY - this.centerY, r3 = this.eyeZ - this.centerZ, o = Math.sqrt(e4 * e4 + t3 * t3 + r3 * r3), o = (0 !== o && (e4 /= o, t3 /= o, r3 /= o), this.upX), n2 = (a2 = this.upY) * r3 - (l = this.upZ) * t3, s2 = -o * r3 + l * e4, i = o * t3 - a2 * e4, o = t3 * i - r3 * s2, a2 = -e4 * i + r3 * n2, l = e4 * s2 - t3 * n2, u = Math.sqrt(n2 * n2 + s2 * s2 + i * i), u = (0 !== u && (n2 /= u, s2 /= u, i /= u), Math.sqrt(o * o + a2 * a2 + l * l));
          return 0 !== u && (o /= u, a2 /= u, l /= u), { x: [n2, s2, i], y: [o, a2, l], z: [e4, t3, r3] };
        } }, { key: "_orbit", value: function(e4, t3, r3) {
          var o = this.eyeX - this.centerX, n2 = this.eyeY - this.centerY, s2 = this.eyeZ - this.centerZ, i = Math.hypot(o, n2, s2), o = new j.default.Vector(o, n2, s2).normalize(), n2 = new j.default.Vector(this.upX, this.upY, this.upZ).normalize(), s2 = j.default.Vector.cross(n2, o).normalize(), a2 = j.default.Vector.cross(s2, n2), r3 = ((i = (i *= Math.pow(10, r3)) < this.cameraNear ? this.cameraNear : i) > this.cameraFar && (i = this.cameraFar), Math.acos(Math.max(-1, Math.min(1, j.default.Vector.dot(o, n2)))) + t3), t3 = e4;
          (r3 <= 0 || r3 >= Math.PI) && (this.upX *= -1, this.upY *= -1, this.upZ *= -1), n2.mult(Math.cos(r3)), a2.mult(Math.cos(t3) * Math.sin(r3)), s2.mult(Math.sin(t3) * Math.sin(r3)), o.set(n2).add(a2).add(s2), this.eyeX = i * o.x + this.centerX, this.eyeY = i * o.y + this.centerY, this.eyeZ = i * o.z + this.centerZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, this.centerX, this.centerY, this.centerZ, this.upX, this.upY, this.upZ);
        } }, { key: "_orbitFree", value: function(e4, t3, r3) {
          var o = this.eyeX - this.centerX, n2 = this.eyeY - this.centerY, s2 = this.eyeZ - this.centerZ, i = Math.hypot(o, n2, s2), o = new j.default.Vector(o, n2, s2).normalize(), n2 = new j.default.Vector(this.upX, this.upY, this.upZ), s2 = j.default.Vector.cross(n2, o).normalize(), a2 = j.default.Vector.cross(o, s2), l = Math.atan2(t3, e4), l = (a2.mult(Math.sin(l)), s2.mult(Math.cos(l)).add(a2), Math.sqrt(e4 * e4 + t3 * t3)), a2 = j.default.Vector.cross(o, s2), e4 = ((i = (i *= Math.pow(10, r3)) < this.cameraNear ? this.cameraNear : i) > this.cameraFar && (i = this.cameraFar), Math.cos(l)), t3 = Math.sin(l), r3 = n2.dot(o), l = n2.dot(s2), u = r3 * e4 + l * t3, r3 = -r3 * t3 + l * e4, l = n2.dot(a2);
          n2.x = u * o.x + r3 * s2.x + l * a2.x, n2.y = u * o.y + r3 * s2.y + l * a2.y, n2.z = u * o.z + r3 * s2.z + l * a2.z, s2.mult(-t3), o.mult(e4).add(s2).mult(i), this.camera(o.x + this.centerX, o.y + this.centerY, o.z + this.centerZ, this.centerX, this.centerY, this.centerZ, n2.x, n2.y, n2.z);
        } }, { key: "_isActive", value: function() {
          return this === this._renderer._curCamera;
        } }]) && n(e3.prototype, r2), t2;
      }(), j.default.prototype.setCamera = function(e3) {
        this._renderer._curCamera = e3, this._renderer.uPMatrix.set(e3.projMatrix), this._renderer.uViewMatrix.set(e3.cameraMatrix);
      };
      e2 = j.default.Camera;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.slice": 169, "core-js/modules/es.math.hypot": 176, "core-js/modules/es.string.sub": 208 }], 333: [function(e2, t, r) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.log2"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.math.log2"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      e2.default.DataArray = function() {
        function o() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 128, t3 = this, r2 = o;
          if (!(t3 instanceof r2)) throw new TypeError("Cannot call a class as a function");
          this.length = 0, this.data = new Float32Array(e4), this.initialLength = e4;
        }
        var e3, t2;
        return e3 = o, (t2 = [{ key: "dataArray", value: function() {
          return this.subArray(0, this.length);
        } }, { key: "clear", value: function() {
          this.length = 0;
        } }, { key: "rescale", value: function() {
          var e4;
          this.length < this.data.length / 2 && (e4 = 1 << Math.ceil(Math.log2(this.length)), (e4 = new Float32Array(e4)).set(this.data.subarray(0, this.length), 0), this.data = e4);
        } }, { key: "reset", value: function() {
          this.clear(), this.data = new Float32Array(this.initialLength);
        } }, { key: "push", value: function() {
          for (var e4 = arguments.length, t3 = new Array(e4), r2 = 0; r2 < e4; r2++) t3[r2] = arguments[r2];
          this.ensureLength(this.length + t3.length), this.data.set(t3, this.length), this.length += t3.length;
        } }, { key: "slice", value: function(e4, t3) {
          return this.data.slice(e4, Math.min(t3, this.length));
        } }, { key: "subArray", value: function(e4, t3) {
          return this.data.subarray(e4, Math.min(t3, this.length));
        } }, { key: "ensureLength", value: function(e4) {
          for (; this.data.length < e4; ) {
            var t3 = new Float32Array(2 * this.data.length);
            t3.set(this.data, 0), this.data = t3;
          }
        } }]) && n(e3.prototype, t2), o;
      }();
      e2 = e2.default.DataArray;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.math.log2": 177, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.float32-array": 219, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239 }], 334: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.reflect.get"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint8-clamped-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var f = (j = e2("../core/main")) && j.__esModule ? j : { default: j }, a2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = l();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants")), n = e2("./p5.Texture"), p = e2("./p5.RendererGL");
      function l() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), l = function() {
          return e3;
        }, e3);
      }
      function u(e3, t2) {
        return function(e4) {
          if (Array.isArray(e4)) return e4;
        }(e3) || function(e4, t3) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) {
            var r2 = [], o3 = true, n2 = false, s3 = void 0;
            try {
              for (var i2, a3 = e4[Symbol.iterator](); !(o3 = (i2 = a3.next()).done) && (r2.push(i2.value), !t3 || r2.length !== t3); o3 = true) ;
            } catch (e5) {
              n2 = true, s3 = e5;
            } finally {
              try {
                o3 || null == a3.return || a3.return();
              } finally {
                if (n2) throw s3;
              }
            }
            return r2;
          }
        }(e3, t2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function c(e3, t2, r2) {
        return t2 in e3 ? Object.defineProperty(e3, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e3[t2] = r2, e3;
      }
      function d(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      }
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function h(e3, t2, r2) {
        t2 && s2(e3.prototype, t2);
      }
      function m(e3, t2, r2) {
        return (m = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e4, t3, r3) {
          var e4 = function(e5, t4) {
            for (; !Object.prototype.hasOwnProperty.call(e5, t4) && null !== (e5 = v(e5)); ) ;
            return e5;
          }(e4, t3);
          if (e4) return (e4 = Object.getOwnPropertyDescriptor(e4, t3)).get ? e4.get.call(r3) : e4.value;
        })(e3, t2, r2 || e3);
      }
      function y(e3, t2) {
        return (y = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function g(r2) {
        return function() {
          var e3, t2 = v(r2), t2 = (e3 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = v(this).constructor, Reflect.construct(t2, arguments, e3)) : t2.apply(this, arguments), this);
          if (!e3 || "object" !== i(e3) && "function" != typeof e3) {
            if (void 0 !== t2) return t2;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function v(e3) {
        return (v = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      var b = function(e3) {
        var t2 = o3;
        if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e3 && y(t2, e3);
        var r2 = g(o3);
        function o3(e4) {
          var t3;
          return d(this, o3), (t3 = r2.call(this, e4.target._renderer)).fbo = e4, t3.yScale = -1, t3;
        }
        return h(o3, [{ key: "_computeCameraDefaultSettings", value: function() {
          m(v(o3.prototype), "_computeCameraDefaultSettings", this).call(this), this.defaultAspectRatio = this.fbo.width / this.fbo.height, this.defaultCameraFOV = 2 * Math.atan(this.fbo.height / 2 / this.defaultEyeZ);
        } }]), o3;
      }(f.default.Camera), _ = (f.default.FramebufferCamera = b, function() {
        function r2(e3, t2) {
          d(this, r2), this.framebuffer = e3, this.property = t2;
        }
        return h(r2, [{ key: "rawTexture", value: function() {
          return this.framebuffer[this.property];
        } }, { key: "width", get: function() {
          return this.framebuffer.width * this.framebuffer.density;
        } }, { key: "height", get: function() {
          return this.framebuffer.height * this.framebuffer.density;
        } }]), r2;
      }()), j = (f.default.FramebufferTexture = _, function() {
        function s3(e3) {
          var t2 = this, r2 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, o3 = (d(this, s3), this.target = e3, this.target._renderer.framebuffers.add(this), this._isClipApplied = false, this.pixels = [], this.format = r2.format || a2.UNSIGNED_BYTE, this.channels = r2.channels || (e3._renderer._pInst._glAttributes.alpha ? a2.RGBA : a2.RGB), this.useDepth = void 0 === r2.depth || r2.depth, this.depthFormat = r2.depthFormat || a2.FLOAT, this.textureFiltering = r2.textureFiltering || a2.LINEAR, void 0 === r2.antialias ? this.antialiasSamples = e3._renderer._pInst._glAttributes.antialias ? 2 : 0 : "number" == typeof r2.antialias ? this.antialiasSamples = r2.antialias : this.antialiasSamples = r2.antialias ? 2 : 0, this.antialias = 0 < this.antialiasSamples, this.antialias && e3.webglVersion !== a2.WEBGL2 && (console.warn("Antialiasing is unsupported in a WebGL 1 context"), this.antialias = false), this.density = r2.density || e3.pixelDensity(), e3._renderer.GL);
          if (this.gl = o3, r2.width && r2.height ? (n2 = e3._renderer._adjustDimensions(r2.width, r2.height), this.width = n2.adjustedWidth, this.height = n2.adjustedHeight, this._autoSized = false) : (void 0 === r2.width != (void 0 === r2.height) && console.warn("Please supply both width and height for a framebuffer to give it a size. Only one was given, so the framebuffer will match the size of its canvas."), this.width = e3.width, this.height = e3.height, this._autoSized = true), this._checkIfFormatsAvailable(), r2.stencil && !this.useDepth && console.warn("A stencil buffer can only be used if also using depth. Since the framebuffer has no depth buffer, the stencil buffer will be ignored."), this.useStencil = this.useDepth && (void 0 === r2.stencil || r2.stencil), this.framebuffer = o3.createFramebuffer(), !this.framebuffer) throw new Error("Unable to create a framebuffer");
          if (this.antialias && (this.aaFramebuffer = o3.createFramebuffer(), !this.aaFramebuffer)) throw new Error("Unable to create a framebuffer for antialiasing");
          this._recreateTextures();
          var n2 = this.target._renderer._curCamera;
          this.defaultCamera = this.createCamera(), this.filterCamera = this.createCamera(), this.target._renderer._curCamera = n2, this.draw(function() {
            return t2.target.clear();
          });
        }
        return h(s3, [{ key: "resize", value: function(e3, t2) {
          this._autoSized = false;
          var r2 = this.target._renderer._adjustDimensions(e3, t2);
          e3 = r2.adjustedWidth, t2 = r2.adjustedHeight, this.width = e3, this.height = t2, this._handleResize();
        } }, { key: "pixelDensity", value: function(e3) {
          if (!e3) return this.density;
          this._autoSized = false, this.density = e3, this._handleResize();
        } }, { key: "autoSized", value: function(e3) {
          if (void 0 === e3) return this._autoSized;
          this._autoSized = e3, this._handleResize();
        } }, { key: "_checkIfFormatsAvailable", value: function() {
          var e3 = this.gl, e3 = (this.useDepth && this.target.webglVersion === a2.WEBGL && !e3.getExtension("WEBGL_depth_texture") && (console.warn("Unable to create depth textures in this environment. Falling back to a framebuffer without depth."), this.useDepth = false), this.useDepth && this.target.webglVersion === a2.WEBGL && this.depthFormat === a2.FLOAT && (console.warn("FLOAT depth format is unavailable in WebGL 1. Defaulting to UNSIGNED_INT."), this.depthFormat = a2.UNSIGNED_INT), [a2.UNSIGNED_BYTE, a2.FLOAT, a2.HALF_FLOAT].includes(this.format) || (console.warn("Unknown Framebuffer format. Please use UNSIGNED_BYTE, FLOAT, or HALF_FLOAT. Defaulting to UNSIGNED_BYTE."), this.format = a2.UNSIGNED_BYTE), this.useDepth && ![a2.UNSIGNED_INT, a2.FLOAT].includes(this.depthFormat) && (console.warn("Unknown Framebuffer depth format. Please use UNSIGNED_INT or FLOAT. Defaulting to FLOAT."), this.depthFormat = a2.FLOAT), (0, n.checkWebGLCapabilities)(this.target._renderer));
          e3.float || this.format !== a2.FLOAT || (console.warn("This environment does not support FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = a2.UNSIGNED_BYTE), this.useDepth && !e3.float && this.depthFormat === a2.FLOAT && (console.warn("This environment does not support FLOAT depth textures. Falling back to UNSIGNED_INT."), this.depthFormat = a2.UNSIGNED_INT), e3.halfFloat || this.format !== a2.HALF_FLOAT || (console.warn("This environment does not support HALF_FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = a2.UNSIGNED_BYTE), this.channels === a2.RGB && [a2.FLOAT, a2.HALF_FLOAT].includes(this.format) && (console.warn("FLOAT and HALF_FLOAT formats do not work cross-platform with only RGB channels. Falling back to RGBA."), this.channels = a2.RGBA);
        } }, { key: "_recreateTextures", value: function() {
          var e3 = this.gl, t2 = (this._updateSize(), e3.getParameter(e3.TEXTURE_BINDING_2D)), r2 = e3.getParameter(e3.FRAMEBUFFER_BINDING), o3 = e3.createTexture();
          if (!o3) throw new Error("Unable to create color texture");
          e3.bindTexture(e3.TEXTURE_2D, o3);
          var n2 = this._glColorFormat();
          if (e3.texImage2D(e3.TEXTURE_2D, 0, n2.internalFormat, this.width * this.density, this.height * this.density, 0, n2.format, n2.type, null), this.colorTexture = o3, e3.bindFramebuffer(e3.FRAMEBUFFER, this.framebuffer), e3.framebufferTexture2D(e3.FRAMEBUFFER, e3.COLOR_ATTACHMENT0, e3.TEXTURE_2D, o3, 0), this.useDepth) {
            var o3 = e3.createTexture();
            if (!o3) throw new Error("Unable to create depth texture");
            var s4 = this._glDepthFormat();
            e3.bindTexture(e3.TEXTURE_2D, o3), e3.texImage2D(e3.TEXTURE_2D, 0, s4.internalFormat, this.width * this.density, this.height * this.density, 0, s4.format, s4.type, null), e3.framebufferTexture2D(e3.FRAMEBUFFER, this.useStencil ? e3.DEPTH_STENCIL_ATTACHMENT : e3.DEPTH_ATTACHMENT, e3.TEXTURE_2D, o3, 0), this.depthTexture = o3;
          }
          this.antialias && (this.colorRenderbuffer = e3.createRenderbuffer(), e3.bindRenderbuffer(e3.RENDERBUFFER, this.colorRenderbuffer), e3.renderbufferStorageMultisample(e3.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e3.getParameter(e3.MAX_SAMPLES))), n2.internalFormat, this.width * this.density, this.height * this.density), this.useDepth && (s4 = this._glDepthFormat(), this.depthRenderbuffer = e3.createRenderbuffer(), e3.bindRenderbuffer(e3.RENDERBUFFER, this.depthRenderbuffer), e3.renderbufferStorageMultisample(e3.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e3.getParameter(e3.MAX_SAMPLES))), s4.internalFormat, this.width * this.density, this.height * this.density)), e3.bindFramebuffer(e3.FRAMEBUFFER, this.aaFramebuffer), e3.framebufferRenderbuffer(e3.FRAMEBUFFER, e3.COLOR_ATTACHMENT0, e3.RENDERBUFFER, this.colorRenderbuffer), this.useDepth && e3.framebufferRenderbuffer(e3.FRAMEBUFFER, this.useStencil ? e3.DEPTH_STENCIL_ATTACHMENT : e3.DEPTH_ATTACHMENT, e3.RENDERBUFFER, this.depthRenderbuffer)), this.useDepth && (this.depth = new _(this, "depthTexture"), o3 = e3.NEAREST, this.depthP5Texture = new f.default.Texture(this.target._renderer, this.depth, { minFilter: o3, magFilter: o3 }), this.target._renderer.textures.set(this.depth, this.depthP5Texture)), this.color = new _(this, "colorTexture");
          n2 = this.textureFiltering === a2.LINEAR ? e3.LINEAR : e3.NEAREST;
          this.colorP5Texture = new f.default.Texture(this.target._renderer, this.color, { minFilter: n2, magFilter: n2 }), this.target._renderer.textures.set(this.color, this.colorP5Texture), e3.bindTexture(e3.TEXTURE_2D, t2), e3.bindFramebuffer(e3.FRAMEBUFFER, r2);
        } }, { key: "_glColorFormat", value: function() {
          var e3, t2, r2 = this.gl, o3 = this.format === a2.FLOAT ? r2.FLOAT : this.format === a2.HALF_FLOAT ? this.target.webglVersion === a2.WEBGL2 ? r2.HALF_FLOAT : r2.getExtension("OES_texture_half_float").HALF_FLOAT_OES : r2.UNSIGNED_BYTE, n2 = this.channels === a2.RGBA ? r2.RGBA : r2.RGB;
          return { internalFormat: this.target.webglVersion === a2.WEBGL2 ? (c(t2 = {}, r2.FLOAT, c({}, r2.RGBA, r2.RGBA32F)), c(t2, r2.HALF_FLOAT, c({}, r2.RGBA, r2.RGBA16F)), c(t2, r2.UNSIGNED_BYTE, (c(e3 = {}, r2.RGBA, r2.RGBA8), c(e3, r2.RGB, r2.RGB8), e3)), t2[o3][n2]) : this.format === a2.HALF_FLOAT ? r2.RGBA : n2, format: n2, type: o3 };
        } }, { key: "_glDepthFormat", value: function() {
          var e3 = this.gl, t2 = this.useStencil ? this.depthFormat === a2.FLOAT ? e3.FLOAT_32_UNSIGNED_INT_24_8_REV : this.target.webglVersion === a2.WEBGL2 ? e3.UNSIGNED_INT_24_8 : e3.getExtension("WEBGL_depth_texture").UNSIGNED_INT_24_8_WEBGL : this.depthFormat === a2.FLOAT ? e3.FLOAT : e3.UNSIGNED_INT, r2 = this.useStencil ? e3.DEPTH_STENCIL : e3.DEPTH_COMPONENT, e3 = this.useStencil ? this.depthFormat === a2.FLOAT ? e3.DEPTH32F_STENCIL8 : this.target.webglVersion === a2.WEBGL2 ? e3.DEPTH24_STENCIL8 : e3.DEPTH_STENCIL : this.target.webglVersion === a2.WEBGL2 ? this.depthFormat === a2.FLOAT ? e3.DEPTH_COMPONENT32F : e3.DEPTH_COMPONENT24 : e3.DEPTH_COMPONENT;
          return { internalFormat: e3, format: r2, type: t2 };
        } }, { key: "_updateSize", value: function() {
          this._autoSized && (this.width = this.target.width, this.height = this.target.height, this.density = this.target.pixelDensity());
        } }, { key: "_canvasSizeChanged", value: function() {
          this._autoSized && this._handleResize();
        } }, { key: "_handleResize", value: function() {
          var e3 = this.color, t2 = this.depth, r2 = this.colorRenderbuffer, o3 = this.depthRenderbuffer, e3 = (this._deleteTexture(e3), t2 && this._deleteTexture(t2), this.gl);
          r2 && e3.deleteRenderbuffer(r2), o3 && e3.deleteRenderbuffer(o3), this._recreateTextures(), this.defaultCamera._resize();
        } }, { key: "createCamera", value: function() {
          var e3 = new b(this);
          return e3._computeCameraDefaultSettings(), e3._setDefaultCamera(), this.target._renderer._curCamera = e3;
        } }, { key: "_deleteTexture", value: function(e3) {
          this.gl.deleteTexture(e3.rawTexture()), this.target._renderer.textures.delete(e3);
        } }, { key: "remove", value: function() {
          var e3 = this.gl;
          this._deleteTexture(this.color), this.depth && this._deleteTexture(this.depth), e3.deleteFramebuffer(this.framebuffer), this.aaFramebuffer && e3.deleteFramebuffer(this.aaFramebuffer), this.depthRenderbuffer && e3.deleteRenderbuffer(this.depthRenderbuffer), this.colorRenderbuffer && e3.deleteRenderbuffer(this.colorRenderbuffer), this.target._renderer.framebuffers.delete(this);
        } }, { key: "begin", value: function() {
          this.prevFramebuffer = this.target._renderer.activeFramebuffer(), this.prevFramebuffer && this.prevFramebuffer._beforeEnd(), this.target._renderer.activeFramebuffers.push(this), this._beforeBegin(), this.target.push(), this.target.setCamera(this.defaultCamera), this.target.resetMatrix(), this.target._renderer.uViewMatrix.set(this.target._renderer._curCamera.cameraMatrix), this.target._renderer.uModelMatrix.reset(), this.target._renderer._applyStencilTestIfClipping();
        } }, { key: "_framebufferToBind", value: function() {
          return this.antialias ? this.aaFramebuffer : this.framebuffer;
        } }, { key: "_beforeBegin", value: function() {
          var e3 = this.gl;
          e3.bindFramebuffer(e3.FRAMEBUFFER, this._framebufferToBind()), this.target._renderer.viewport(this.width * this.density, this.height * this.density);
        } }, { key: "_beforeEnd", value: function() {
          if (this.antialias) {
            var e3 = this.gl, t2 = (e3.bindFramebuffer(e3.READ_FRAMEBUFFER, this.aaFramebuffer), e3.bindFramebuffer(e3.DRAW_FRAMEBUFFER, this.framebuffer), [[e3.COLOR_BUFFER_BIT, this.colorP5Texture.glMagFilter]]);
            this.useDepth && t2.push([e3.DEPTH_BUFFER_BIT, this.depthP5Texture.glMagFilter]);
            for (var r2 = 0, o3 = t2; r2 < o3.length; r2++) {
              var n2 = u(o3[r2], 2), s4 = n2[0], n2 = n2[1];
              e3.blitFramebuffer(0, 0, this.width * this.density, this.height * this.density, 0, 0, this.width * this.density, this.height * this.density, s4, n2);
            }
          }
        } }, { key: "end", value: function() {
          var e3 = this.gl;
          if (this.target.pop(), this.target._renderer.activeFramebuffers.pop() !== this) throw new Error("It looks like you've called end() while another Framebuffer is active.");
          this._beforeEnd(), this.prevFramebuffer ? this.prevFramebuffer._beforeBegin() : (e3.bindFramebuffer(e3.FRAMEBUFFER, null), this.target._renderer.viewport(this.target._renderer._origViewport.width, this.target._renderer._origViewport.height)), this.target._renderer._applyStencilTestIfClipping();
        } }, { key: "draw", value: function(e3) {
          this.begin(), e3(), this.end();
        } }, { key: "loadPixels", value: function() {
          var e3 = this.gl, t2 = this.target._renderer.activeFramebuffer(), r2 = (e3.bindFramebuffer(e3.FRAMEBUFFER, this.framebuffer), this._glColorFormat());
          this.pixels = (0, p.readPixelsWebGL)(this.pixels, e3, this.framebuffer, 0, 0, this.width * this.density, this.height * this.density, r2.format, r2.type), t2 ? e3.bindFramebuffer(e3.FRAMEBUFFER, t2._framebufferToBind()) : e3.bindFramebuffer(e3.FRAMEBUFFER, null);
        } }, { key: "get", value: function(e3, t2, r2, o3) {
          f.default._validateParameters("p5.Framebuffer.get", arguments);
          var n2 = this._glColorFormat();
          if (void 0 === e3 && void 0 === t2) t2 = e3 = 0, r2 = this.width, o3 = this.height;
          else if (void 0 === r2 && void 0 === o3) return (e3 < 0 || t2 < 0 || e3 >= this.width || t2 >= this.height) && (console.warn("The x and y values passed to p5.Framebuffer.get are outside of its range and will be clamped."), e3 = this.target.constrain(e3, 0, this.width - 1), t2 = this.target.constrain(t2, 0, this.height - 1)), (0, p.readPixelWebGL)(this.gl, this.framebuffer, e3 * this.density, t2 * this.density, n2.format, n2.type);
          e3 = this.target.constrain(e3, 0, this.width - 1), t2 = this.target.constrain(t2, 0, this.height - 1), r2 = this.target.constrain(r2, 1, this.width - e3), o3 = this.target.constrain(o3, 1, this.height - t2);
          for (var s4 = (0, p.readPixelsWebGL)(void 0, this.gl, this.framebuffer, e3 * this.density, t2 * this.density, r2 * this.density, o3 * this.density, n2.format, n2.type), i2 = new Uint8ClampedArray(r2 * o3 * this.density * this.density * 4), a3 = (i2.fill(255), n2.type === this.gl.RGB ? 3 : 4), l2 = 0; l2 < o3 * this.density; l2++) for (var u2 = 0; u2 < r2 * this.density; u2++) for (var c2 = 0; c2 < 4; c2++) {
            var d2, h2 = 4 * (l2 * r2 * this.density + u2) + c2;
            c2 < a3 && (d2 = 4 == a3 ? h2 : (l2 * r2 * this.density + u2) * a3 + c2, i2[h2] = s4[d2]);
          }
          e3 = new f.default.Image(r2 * this.density, o3 * this.density);
          return e3.imageData = e3.canvas.getContext("2d").createImageData(e3.width, e3.height), e3.imageData.data.set(i2), e3.pixels = e3.imageData.data, e3.updatePixels(), 1 !== this.density && e3.resize(r2, o3), e3;
        } }, { key: "updatePixels", value: function() {
          var e3 = this.gl, t2 = (this.colorP5Texture.bindTexture(), this._glColorFormat()), r2 = t2.format === e3.RGBA ? 4 : 3, r2 = this.width * this.height * this.density * this.density * r2, o3 = t2.type === e3.UNSIGNED_BYTE ? Uint8Array : Float32Array;
          if (!(this.pixels instanceof o3) || this.pixels.length !== r2) throw new Error("The pixels array has not been set correctly. Please call loadPixels() before updatePixels().");
          e3.texImage2D(e3.TEXTURE_2D, 0, t2.internalFormat, this.width * this.density, this.height * this.density, 0, t2.format, t2.type, this.pixels), this.colorP5Texture.unbindTexture();
          o3 = this.target._renderer.activeFramebuffer();
          this.antialias ? (this.begin(), this.target.push(), this.target.imageMode(this.target.CENTER), this.target.resetMatrix(), this.target.noStroke(), this.target.clear(), this.target.image(this, 0, 0), this.target.pop(), this.useDepth && (e3.clearDepth(1), e3.clear(e3.DEPTH_BUFFER_BIT)), this.end()) : (e3.bindFramebuffer(e3.FRAMEBUFFER, this.framebuffer), this.useDepth && (e3.clearDepth(1), e3.clear(e3.DEPTH_BUFFER_BIT)), o3 ? e3.bindFramebuffer(e3.FRAMEBUFFER, o3._framebufferToBind()) : e3.bindFramebuffer(e3.FRAMEBUFFER, null));
        } }]), s3;
      }()), e2 = f.default.Framebuffer = j;
      r.default = e2;
    }, { "../core/constants": 272, "../core/main": 283, "./p5.RendererGL": 341, "./p5.Texture": 343, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.reflect.get": 193, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.float32-array": 219, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/es.typed-array.uint8-clamped-array": 243, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 335: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.flat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.unscopables.flat"), e2("core-js/modules/es.array-buffer.constructor"), e2("core-js/modules/es.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.entries"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.flat"), e2("core-js/modules/es.array.for-each"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.last-index-of"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.unscopables.flat"), e2("core-js/modules/es.array-buffer.constructor"), e2("core-js/modules/es.map"), e2("core-js/modules/es.number.constructor"), e2("core-js/modules/es.object.entries"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/web.dom-collections.for-each"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var F = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, m = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function c(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function U(e3, t2) {
        return function(e4) {
          if (Array.isArray(e4)) return e4;
        }(e3) || function(e4, t3) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) {
            var r2 = [], o3 = true, n2 = false, s3 = void 0;
            try {
              for (var i2, a3 = e4[Symbol.iterator](); !(o3 = (i2 = a3.next()).done) && (r2.push(i2.value), !t3 || r2.length !== t3); o3 = true) ;
            } catch (e5) {
              n2 = true, s3 = e5;
            } finally {
              try {
                o3 || null == a3.return || a3.return();
              } finally {
                if (n2) throw s3;
              }
            }
            return r2;
          }
        }(e3, t2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      F.default.Geometry = function() {
        function o3(e4, t3, r2) {
          if (!(this instanceof o3)) throw new TypeError("Cannot call a class as a function");
          this.vertices = [], this.boundingBoxCache = null, this.lineVertices = new F.default.DataArray(), this.lineTangentsIn = new F.default.DataArray(), this.lineTangentsOut = new F.default.DataArray(), this.lineSides = new F.default.DataArray(), this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.vertexColors = [], this.vertexStrokeColors = [], this.lineVertexColors = new F.default.DataArray(), this.detailX = void 0 !== e4 ? e4 : 1, this.detailY = void 0 !== t3 ? t3 : 1, this.dirtyFlags = {}, this._hasFillTransparency = void 0, this._hasStrokeTransparency = void 0, r2 instanceof Function && r2.call(this);
        }
        var e3, t2;
        return e3 = o3, (t2 = [{ key: "calculateBoundingBox", value: function() {
          if (!this.boundingBoxCache) {
            for (var e4 = new F.default.Vector(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), t3 = new F.default.Vector(Number.MIN_VALUE, Number.MIN_VALUE, Number.MIN_VALUE), r2 = 0; r2 < this.vertices.length; r2++) {
              var o4 = this.vertices[r2];
              e4.x = Math.min(e4.x, o4.x), e4.y = Math.min(e4.y, o4.y), e4.z = Math.min(e4.z, o4.z), t3.x = Math.max(t3.x, o4.x), t3.y = Math.max(t3.y, o4.y), t3.z = Math.max(t3.z, o4.z);
            }
            var n2 = new F.default.Vector(t3.x - e4.x, t3.y - e4.y, t3.z - e4.z), s3 = new F.default.Vector((e4.x + t3.x) / 2, (e4.y + t3.y) / 2, (e4.z + t3.z) / 2);
            this.boundingBoxCache = { min: e4, max: t3, size: n2, offset: s3 };
          }
          return this.boundingBoxCache;
        } }, { key: "reset", value: function() {
          this._hasFillTransparency = void 0, this._hasStrokeTransparency = void 0, this.lineVertices.clear(), this.lineTangentsIn.clear(), this.lineTangentsOut.clear(), this.lineSides.clear(), this.vertices.length = 0, this.edges.length = 0, this.vertexColors.length = 0, this.vertexStrokeColors.length = 0, this.lineVertexColors.clear(), this.vertexNormals.length = 0, this.uvs.length = 0, this.dirtyFlags = {};
        } }, { key: "hasFillTransparency", value: function() {
          if (void 0 === this._hasFillTransparency) {
            this._hasFillTransparency = false;
            for (var e4 = 0; e4 < this.vertexColors.length; e4 += 4) if (this.vertexColors[e4 + 3] < 1) {
              this._hasFillTransparency = true;
              break;
            }
          }
          return this._hasFillTransparency;
        } }, { key: "hasStrokeTransparency", value: function() {
          if (void 0 === this._hasStrokeTransparency) {
            this._hasStrokeTransparency = false;
            for (var e4 = 0; e4 < this.lineVertexColors.length; e4 += 4) if (this.lineVertexColors[e4 + 3] < 1) {
              this._hasStrokeTransparency = true;
              break;
            }
          }
          return this._hasStrokeTransparency;
        } }, { key: "clearColors", value: function() {
          return this.vertexColors = [], this;
        } }, { key: "saveObj", value: function() {
          var r2 = this, e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "model.obj", o4 = "";
          if (this.vertices.forEach(function(e5) {
            o4 += "v ".concat(e5.x, " ").concat(e5.y, " ").concat(e5.z, "\n");
          }), this.uvs && 0 < this.uvs.length) for (var t3 = 0; t3 < this.uvs.length; t3 += 2) o4 += "vt ".concat(this.uvs[t3], " ").concat(this.uvs[t3 + 1], "\n");
          this.vertexNormals && 0 < this.vertexNormals.length && this.vertexNormals.forEach(function(e5) {
            o4 += "vn ".concat(e5.x, " ").concat(e5.y, " ").concat(e5.z, "\n");
          }), this.faces.forEach(function(e5) {
            var t4 = "f";
            e5.forEach(function(e6) {
              t4 = t4 + " " + (e6 + 1), (0 < r2.vertexNormals.length || 0 < r2.uvs.length) && (t4 += "/", 0 < r2.uvs.length && (t4 += e6 + 1), t4 += "/", 0 < r2.vertexNormals.length && (t4 += e6 + 1));
            }), o4 += t4 + "\n";
          });
          var n2 = new Blob([o4], { type: "text/plain" });
          F.default.prototype.downloadFile(n2, e4, "obj");
        } }, { key: "saveStl", value: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "model.stl", t3 = (1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}).binary, t3 = void 0 !== t3 && t3, r2 = e4.substring(0, e4.lastIndexOf(".")), o4 = [], n2 = true, s3 = false, i2 = void 0;
          try {
            for (var a3, l = this.faces[Symbol.iterator](); !(n2 = (a3 = l.next()).done); n2 = true) {
              var u = a3.value, c2 = F.default.Vector.sub(this.vertices[u[1]], this.vertices[u[0]]), d = F.default.Vector.sub(this.vertices[u[2]], this.vertices[u[0]]), h = c2.y * d.z - c2.z * d.y, f = c2.z * d.x - c2.x * d.z, p = c2.x * d.y - c2.y * d.x;
              o4.push(new F.default.Vector(h, f, p).normalize());
            }
          } catch (e5) {
            s3 = true, i2 = e5;
          } finally {
            try {
              n2 || null == l.return || l.return();
            } finally {
              if (s3) throw i2;
            }
          }
          if (t3) {
            var m2, y = 80, s3 = 2 * this.faces.length + 3 * this.faces.length * 4 * 4 + 80 + 4, i2 = new ArrayBuffer(s3);
            (m2 = new DataView(i2)).setUint32(y, this.faces.length, true), y += 4;
            for (var g = 0, v = Object.entries(this.faces); g < v.length; g++) {
              var b = U(v[g], 2), _ = b[0], b = b[1], _ = o4[_], j = (m2.setFloat32(y, _.x, true), y += 4, m2.setFloat32(y, _.y, true), y += 4, m2.setFloat32(y, _.z, true), y += 4, true), _ = false, x2 = void 0;
              try {
                for (var w, S = b[Symbol.iterator](); !(j = (w = S.next()).done); j = true) {
                  var I = w.value, T = this.vertices[I];
                  m2.setFloat32(y, T.x, true), y += 4, m2.setFloat32(y, T.y, true), y += 4, m2.setFloat32(y, T.z, true), y += 4;
                }
              } catch (e5) {
                _ = true, x2 = e5;
              } finally {
                try {
                  j || null == S.return || S.return();
                } finally {
                  if (_) throw x2;
                }
              }
              m2.setUint16(y, 0, true), y += 2;
            }
          } else {
            m2 = "solid " + r2 + "\n";
            for (var E = 0, M = Object.entries(this.faces); E < M.length; E++) {
              var k = U(M[E], 2), O = k[0], k = k[1], O = o4[O], C = (m2 = m2 + (" facet norm " + O.x + " " + O.y + " " + O.z + "\n") + "  outer loop\n", true), O = false, A = void 0;
              try {
                for (var P, L = k[Symbol.iterator](); !(C = (P = L.next()).done); C = true) {
                  var D = P.value, R = this.vertices[D];
                  m2 += "   vertex " + R.x + " " + R.y + " " + R.z + "\n";
                }
              } catch (e5) {
                O = true, A = e5;
              } finally {
                try {
                  C || null == L.return || L.return();
                } finally {
                  if (O) throw A;
                }
              }
              m2 = m2 + "  endloop\n endfacet\n";
            }
            m2 += "endsolid " + r2 + "\n";
          }
          t3 = new Blob([m2], { type: "text/plain" });
          F.default.prototype.downloadFile(t3, e4, "stl");
        } }, { key: "flipU", value: function() {
          this.uvs = this.uvs.flat().map(function(e4, t3) {
            return t3 % 2 == 0 ? 1 - e4 : e4;
          });
        } }, { key: "flipV", value: function() {
          this.uvs = this.uvs.flat().map(function(e4, t3) {
            return t3 % 2 == 0 ? e4 : 1 - e4;
          });
        } }, { key: "computeFaces", value: function() {
          this.faces.length = 0;
          for (var e4, t3, r2, o4 = this.detailX + 1, n2 = 0; n2 < this.detailY; n2++) for (var s3 = 0; s3 < this.detailX; s3++) t3 = (n2 + 1) * o4 + s3 + 1, this.faces.push([n2 * o4 + s3, e4 = n2 * o4 + s3 + 1, r2 = (n2 + 1) * o4 + s3]), this.faces.push([r2, e4, t3]);
          return this;
        } }, { key: "_getFaceNormal", value: function(e4) {
          var e4 = this.faces[e4], t3 = this.vertices[e4[0]], r2 = this.vertices[e4[1]], e4 = this.vertices[e4[2]], r2 = F.default.Vector.sub(r2, t3), e4 = F.default.Vector.sub(e4, t3), t3 = F.default.Vector.cross(r2, e4), o4 = F.default.Vector.mag(t3), r2 = o4 / (F.default.Vector.mag(r2) * F.default.Vector.mag(e4));
          return 0 === r2 || isNaN(r2) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), t3) : (1 < r2 && (r2 = 1), t3.mult(Math.asin(r2) / o4));
        } }, { key: "computeNormals", value: function() {
          var e4, s3 = this, t3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : m.FLAT, r2 = (1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}).roundToPrecision, i2 = this.vertexNormals, o4 = this.vertices, n2 = this.faces;
          if (t3 === m.SMOOTH) {
            for (var a3 = {}, l = [], u = Math.pow(10, void 0 === r2 ? 3 : r2), c2 = function(e5) {
              return Math.round(e5 * u) / u;
            }, d = function(e5) {
              return "".concat(c2(e5.x), ",").concat(c2(e5.y), ",").concat(c2(e5.z));
            }, h = 0; h < o4.length; h++) {
              var f = o4[h], p = d(f);
              void 0 === a3[p] && (a3[p] = l.length, l.push(f));
            }
            n2.forEach(function(e5) {
              for (var t4 = 0; t4 < 3; ++t4) {
                var r3 = e5[t4], r3 = o4[r3], r3 = d(r3);
                e5[t4] = a3[r3];
              }
            }), this.edges.forEach(function(e5) {
              for (var t4 = 0; t4 < 2; ++t4) {
                var r3 = e5[t4], r3 = o4[r3], r3 = d(r3);
                e5[t4] = a3[r3];
              }
            }), this.vertices = o4 = l;
          }
          for (e4 = i2.length = 0; e4 < o4.length; ++e4) i2.push(new F.default.Vector());
          for (n2.forEach(function(e5, t4) {
            for (var r3 = s3._getFaceNormal(t4), o5 = 0; o5 < 3; ++o5) {
              var n3 = e5[o5];
              i2[n3].add(r3);
            }
          }), e4 = 0; e4 < o4.length; ++e4) i2[e4].normalize();
          return this;
        } }, { key: "averageNormals", value: function() {
          for (var e4 = 0; e4 <= this.detailY; e4++) {
            var t3 = this.detailX + 1, r2 = F.default.Vector.add(this.vertexNormals[e4 * t3], this.vertexNormals[e4 * t3 + this.detailX]), r2 = F.default.Vector.div(r2, 2);
            this.vertexNormals[e4 * t3] = r2, this.vertexNormals[e4 * t3 + this.detailX] = r2;
          }
          return this;
        } }, { key: "averagePoleNormals", value: function() {
          for (var e4 = new F.default.Vector(0, 0, 0), t3 = 0; t3 < this.detailX; t3++) e4.add(this.vertexNormals[t3]);
          for (var e4 = F.default.Vector.div(e4, this.detailX), r2 = 0; r2 < this.detailX; r2++) this.vertexNormals[r2] = e4;
          e4 = new F.default.Vector(0, 0, 0);
          for (var o4 = this.vertices.length - 1; o4 > this.vertices.length - 1 - this.detailX; o4--) e4.add(this.vertexNormals[o4]);
          e4 = F.default.Vector.div(e4, this.detailX);
          for (var n2 = this.vertices.length - 1; n2 > this.vertices.length - 1 - this.detailX; n2--) this.vertexNormals[n2] = e4;
          return this;
        } }, { key: "_makeTriangleEdges", value: function() {
          for (var e4 = this.edges.length = 0; e4 < this.faces.length; e4++) this.edges.push([this.faces[e4][0], this.faces[e4][1]]), this.edges.push([this.faces[e4][1], this.faces[e4][2]]), this.edges.push([this.faces[e4][2], this.faces[e4][0]]);
          return this;
        } }, { key: "_edgesToVertices", value: function() {
          this.lineVertices.clear(), this.lineTangentsIn.clear(), this.lineTangentsOut.clear(), this.lineSides.clear();
          for (var e4, t3 = /* @__PURE__ */ new Map(), r2 = /* @__PURE__ */ new Set(), o4 = 0; o4 < this.edges.length; o4++) {
            var n2, s3 = this.edges[o4 - 1], i2 = this.edges[o4], a3 = this.vertices[i2[0]], l = this.vertices[i2[1]], u = 0 < this.vertexStrokeColors.length && s3 ? this.vertexStrokeColors.slice(4 * s3[1], 4 * (s3[1] + 1)) : [0, 0, 0, 0], c2 = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * i2[0], 4 * (i2[0] + 1)) : [0, 0, 0, 0], d = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * i2[1], 4 * (i2[1] + 1)) : [0, 0, 0, 0], h = l.copy().sub(a3).normalize(), f = 0 < h.magSq();
            f && this._addSegment(a3, l, c2, d, h), 0 < o4 && s3[1] === i2[0] ? r2.has(i2[0]) || (r2.add(i2[0]), t3.delete(i2[0]), e4 && f && h.dot(e4) < 1 - 1e-8 && this._addJoin(a3, e4, h, c2)) : (f && !r2.has(i2[0]) && ((n2 = t3.get(i2[0])) ? (this._addJoin(a3, n2.dir, h, c2), t3.delete(i2[0]), r2.add(i2[0])) : t3.set(i2[0], { point: a3, dir: h.copy().mult(-1), color: c2 })), e4 && !r2.has(s3[1]) && ((n2 = t3.get(s3[1])) ? (this._addJoin(this.vertices[s3[1]], e4, n2.dir.copy().mult(-1), u), t3.delete(s3[1]), r2.add(s3[1])) : t3.set(s3[1], { point: this.vertices[s3[1]], dir: e4, color: u }), e4 = void 0)), o4 !== this.edges.length - 1 || r2.has(i2[1]) || ((a3 = t3.get(i2[1])) ? (this._addJoin(l, h, a3.dir.copy().mult(-1), d), t3.delete(i2[1]), r2.add(i2[1])) : t3.set(i2[1], { point: l, dir: h, color: d })), f && (e4 = h);
          }
          var p = true, m2 = false, y = void 0;
          try {
            for (var g, v = t3.values()[Symbol.iterator](); !(p = (g = v.next()).done); p = true) {
              var b = g.value, _ = b.point, j = b.dir, x2 = b.color;
              this._addCap(_, j, x2);
            }
          } catch (e5) {
            m2 = true, y = e5;
          } finally {
            try {
              p || null == v.return || v.return();
            } finally {
              if (m2) throw y;
            }
          }
          return this;
        } }, { key: "_addSegment", value: function(e4, t3, r2, o4, n2) {
          var e4 = e4.array(), t3 = t3.array(), s3 = n2.array();
          this.lineSides.push(1, 1, -1, 1, -1, -1);
          for (var i2 = 0, a3 = [this.lineTangentsIn, this.lineTangentsOut]; i2 < a3.length; i2++) for (var l = a3[i2], u = 0; u < 6; u++) l.push.apply(l, c(s3));
          return (n2 = this.lineVertices).push.apply(n2, c(e4).concat(c(t3), c(e4), c(t3), c(t3), c(e4))), (n2 = this.lineVertexColors).push.apply(n2, c(r2).concat(c(o4), c(r2), c(o4), c(o4), c(r2))), this;
        } }, { key: "_addCap", value: function(e4, t3, r2) {
          for (var o4, n2 = e4.array(), s3 = t3.array(), i2 = [0, 0, 0], a3 = 0; a3 < 6; a3++) (o4 = this.lineVertices).push.apply(o4, c(n2)), (o4 = this.lineTangentsIn).push.apply(o4, c(s3)), (o4 = this.lineTangentsOut).push.apply(o4, i2), (o4 = this.lineVertexColors).push.apply(o4, c(r2));
          return this.lineSides.push(-1, 2, -2, 1, 2, -1), this;
        } }, { key: "_addJoin", value: function(e4, t3, r2, o4) {
          for (var n2, s3 = e4.array(), i2 = t3.array(), a3 = r2.array(), l = 0; l < 12; l++) (n2 = this.lineVertices).push.apply(n2, c(s3)), (n2 = this.lineTangentsIn).push.apply(n2, c(i2)), (n2 = this.lineTangentsOut).push.apply(n2, c(a3)), (n2 = this.lineVertexColors).push.apply(n2, c(o4));
          return this.lineSides.push(-1, -3, -2, -1, 0, -3), this.lineSides.push(3, 1, 2, 3, 0, 1), this;
        } }, { key: "normalize", value: function() {
          if (0 < this.vertices.length) {
            for (var e4 = this.vertices[0].copy(), t3 = this.vertices[0].copy(), r2 = 0; r2 < this.vertices.length; r2++) e4.x = Math.max(e4.x, this.vertices[r2].x), t3.x = Math.min(t3.x, this.vertices[r2].x), e4.y = Math.max(e4.y, this.vertices[r2].y), t3.y = Math.min(t3.y, this.vertices[r2].y), e4.z = Math.max(e4.z, this.vertices[r2].z), t3.z = Math.min(t3.z, this.vertices[r2].z);
            for (var o4 = F.default.Vector.lerp(e4, t3, 0.5), n2 = F.default.Vector.sub(e4, t3), s3 = 200 / Math.max(Math.max(n2.x, n2.y), n2.z), i2 = 0; i2 < this.vertices.length; i2++) this.vertices[i2].sub(o4), this.vertices[i2].mult(s3);
          }
          return this;
        } }]) && n(e3.prototype, t2), o3;
      }();
      var s2 = F.default.Geometry;
      r.default = s2;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array-buffer.constructor": 152, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.flat": 160, "core-js/modules/es.array.for-each": 161, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.last-index-of": 167, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.unscopables.flat": 173, "core-js/modules/es.map": 175, "core-js/modules/es.number.constructor": 179, "core-js/modules/es.object.entries": 184, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.set": 197, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.sub": 208, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.for-each": 245, "core-js/modules/web.dom-collections.iterator": 246 }], 336: [function(e2, t, r) {
      e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var O = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function n(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o = t2[r2];
          o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e3, o.key, o);
        }
      }
      var s2 = Array, C = function(e3) {
        return Array.isArray(e3);
      }, e2 = ("undefined" != typeof Float32Array && (s2 = Float32Array, C = function(e3) {
        return Array.isArray(e3) || e3 instanceof Float32Array;
      }), O.default.Matrix = function() {
        function r2() {
          var e4 = this, t3 = r2;
          if (e4 instanceof t3) return arguments.length && ((e4 = arguments.length - 1) < 0 || arguments.length <= e4 ? void 0 : arguments[e4]) instanceof O.default && (this.p5 = (t3 = arguments.length - 1) < 0 || arguments.length <= t3 ? void 0 : arguments[t3]), "mat3" === (arguments.length <= 0 ? void 0 : arguments[0]) ? this.mat3 = Array.isArray(arguments.length <= 1 ? void 0 : arguments[1]) ? arguments.length <= 1 ? void 0 : arguments[1] : new s2([1, 0, 0, 0, 1, 0, 0, 0, 1]) : this.mat4 = Array.isArray(arguments.length <= 0 ? void 0 : arguments[0]) ? arguments.length <= 0 ? void 0 : arguments[0] : new s2([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this;
          throw new TypeError("Cannot call a class as a function");
        }
        var e3, t2, o;
        return e3 = r2, o = [{ key: "identity", value: function(e4) {
          return new O.default.Matrix(e4);
        } }], (t2 = [{ key: "reset", value: function() {
          return this.mat3 ? this.mat3.set([1, 0, 0, 0, 1, 0, 0, 0, 1]) : this.mat4 && this.mat4.set([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this;
        } }, { key: "set", value: function(e4) {
          var t3 = arguments;
          if (e4 instanceof O.default.Matrix ? t3 = e4.mat4 : C(e4) && (t3 = e4), 16 !== t3.length) O.default._friendlyError("Expected 16 values but received ".concat(t3.length, "."), "p5.Matrix.set");
          else for (var r3 = 0; r3 < 16; r3++) this.mat4[r3] = t3[r3];
          return this;
        } }, { key: "get", value: function() {
          return new O.default.Matrix(this.mat4, this.p5);
        } }, { key: "copy", value: function() {
          var e4;
          return void 0 !== this.mat3 ? ((e4 = new O.default.Matrix("mat3", this.p5)).mat3[0] = this.mat3[0], e4.mat3[1] = this.mat3[1], e4.mat3[2] = this.mat3[2], e4.mat3[3] = this.mat3[3], e4.mat3[4] = this.mat3[4], e4.mat3[5] = this.mat3[5], e4.mat3[6] = this.mat3[6], e4.mat3[7] = this.mat3[7], e4.mat3[8] = this.mat3[8]) : ((e4 = new O.default.Matrix(this.p5)).mat4[0] = this.mat4[0], e4.mat4[1] = this.mat4[1], e4.mat4[2] = this.mat4[2], e4.mat4[3] = this.mat4[3], e4.mat4[4] = this.mat4[4], e4.mat4[5] = this.mat4[5], e4.mat4[6] = this.mat4[6], e4.mat4[7] = this.mat4[7], e4.mat4[8] = this.mat4[8], e4.mat4[9] = this.mat4[9], e4.mat4[10] = this.mat4[10], e4.mat4[11] = this.mat4[11], e4.mat4[12] = this.mat4[12], e4.mat4[13] = this.mat4[13], e4.mat4[14] = this.mat4[14], e4.mat4[15] = this.mat4[15]), e4;
        } }, { key: "transpose", value: function(e4) {
          var t3, r3, o3, n2, s3, i;
          return e4 instanceof O.default.Matrix ? (t3 = e4.mat4[1], r3 = e4.mat4[2], o3 = e4.mat4[3], n2 = e4.mat4[6], s3 = e4.mat4[7], i = e4.mat4[11], this.mat4[0] = e4.mat4[0], this.mat4[1] = e4.mat4[4], this.mat4[2] = e4.mat4[8], this.mat4[3] = e4.mat4[12], this.mat4[4] = t3, this.mat4[5] = e4.mat4[5], this.mat4[6] = e4.mat4[9], this.mat4[7] = e4.mat4[13], this.mat4[8] = r3, this.mat4[9] = n2, this.mat4[10] = e4.mat4[10], this.mat4[11] = e4.mat4[14], this.mat4[12] = o3, this.mat4[13] = s3, this.mat4[14] = i, this.mat4[15] = e4.mat4[15]) : C(e4) && (t3 = e4[1], r3 = e4[2], o3 = e4[3], n2 = e4[6], s3 = e4[7], i = e4[11], this.mat4[0] = e4[0], this.mat4[1] = e4[4], this.mat4[2] = e4[8], this.mat4[3] = e4[12], this.mat4[4] = t3, this.mat4[5] = e4[5], this.mat4[6] = e4[9], this.mat4[7] = e4[13], this.mat4[8] = r3, this.mat4[9] = n2, this.mat4[10] = e4[10], this.mat4[11] = e4[14], this.mat4[12] = o3, this.mat4[13] = s3, this.mat4[14] = i, this.mat4[15] = e4[15]), this;
        } }, { key: "invert", value: function(e4) {
          e4 instanceof O.default.Matrix ? (t3 = e4.mat4[0], r3 = e4.mat4[1], o3 = e4.mat4[2], n2 = e4.mat4[3], s3 = e4.mat4[4], i = e4.mat4[5], a2 = e4.mat4[6], l = e4.mat4[7], u = e4.mat4[8], c = e4.mat4[9], d = e4.mat4[10], h = e4.mat4[11], f = e4.mat4[12], p = e4.mat4[13], m = e4.mat4[14], y = e4.mat4[15]) : C(e4) && (t3 = e4[0], r3 = e4[1], o3 = e4[2], n2 = e4[3], s3 = e4[4], i = e4[5], a2 = e4[6], l = e4[7], u = e4[8], c = e4[9], d = e4[10], h = e4[11], f = e4[12], p = e4[13], m = e4[14], y = e4[15]);
          var t3, r3, o3, n2, s3, i, a2, l, u, c, d, h, f, p, m, y, e4 = t3 * i - r3 * s3, g = t3 * a2 - o3 * s3, v = t3 * l - n2 * s3, b = r3 * a2 - o3 * i, _ = r3 * l - n2 * i, j = o3 * l - n2 * a2, x2 = u * p - c * f, w = u * m - d * f, S = u * y - h * f, T = c * m - d * p, E = c * y - h * p, M = d * y - h * m, k = e4 * M - g * E + v * T + b * S - _ * w + j * x2;
          return k ? (this.mat4[0] = (i * M - a2 * E + l * T) * (k = 1 / k), this.mat4[1] = (o3 * E - r3 * M - n2 * T) * k, this.mat4[2] = (p * j - m * _ + y * b) * k, this.mat4[3] = (d * _ - c * j - h * b) * k, this.mat4[4] = (a2 * S - s3 * M - l * w) * k, this.mat4[5] = (t3 * M - o3 * S + n2 * w) * k, this.mat4[6] = (m * v - f * j - y * g) * k, this.mat4[7] = (u * j - d * v + h * g) * k, this.mat4[8] = (s3 * E - i * S + l * x2) * k, this.mat4[9] = (r3 * S - t3 * E - n2 * x2) * k, this.mat4[10] = (f * _ - p * v + y * e4) * k, this.mat4[11] = (c * v - u * _ - h * e4) * k, this.mat4[12] = (i * w - s3 * T - a2 * x2) * k, this.mat4[13] = (t3 * T - r3 * w + o3 * x2) * k, this.mat4[14] = (p * g - f * b - m * e4) * k, this.mat4[15] = (u * b - c * g + d * e4) * k, this) : null;
        } }, { key: "invert3x3", value: function() {
          var e4 = this.mat3[0], t3 = this.mat3[1], r3 = this.mat3[2], o3 = this.mat3[3], n2 = this.mat3[4], s3 = this.mat3[5], i = this.mat3[6], a2 = this.mat3[7], l = this.mat3[8], u = l * n2 - s3 * a2, c = -l * o3 + s3 * i, d = a2 * o3 - n2 * i, h = e4 * u + t3 * c + r3 * d;
          return h ? (this.mat3[0] = u * (h = 1 / h), this.mat3[1] = (-l * t3 + r3 * a2) * h, this.mat3[2] = (s3 * t3 - r3 * n2) * h, this.mat3[3] = c * h, this.mat3[4] = (l * e4 - r3 * i) * h, this.mat3[5] = (-s3 * e4 + r3 * o3) * h, this.mat3[6] = d * h, this.mat3[7] = (-a2 * e4 + t3 * i) * h, this.mat3[8] = (n2 * e4 - t3 * o3) * h, this) : null;
        } }, { key: "transpose3x3", value: function(e4) {
          var t3 = (e4 = void 0 === e4 ? this.mat3 : e4)[1], r3 = e4[2], o3 = e4[5];
          return this.mat3[0] = e4[0], this.mat3[1] = e4[3], this.mat3[2] = e4[6], this.mat3[3] = t3, this.mat3[4] = e4[4], this.mat3[5] = e4[7], this.mat3[6] = r3, this.mat3[7] = o3, this.mat3[8] = e4[8], this;
        } }, { key: "inverseTranspose", value: function(e4) {
          e4 = e4.mat4, void 0 === this.mat3 ? O.default._friendlyError("sorry, this function only works with mat3") : (this.mat3[0] = e4[0], this.mat3[1] = e4[1], this.mat3[2] = e4[2], this.mat3[3] = e4[4], this.mat3[4] = e4[5], this.mat3[5] = e4[6], this.mat3[6] = e4[8], this.mat3[7] = e4[9], this.mat3[8] = e4[10]), e4 = this.invert3x3();
          if (e4) e4.transpose3x3(this.mat3);
          else for (var t3 = 0; t3 < 9; t3++) this.mat3[t3] = 0;
          return this;
        } }, { key: "determinant", value: function() {
          var e4 = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t3 = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r3 = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], o3 = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n2 = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], s3 = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], i = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], a2 = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], u = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], c = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
          return e4 * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t3 * c + r3 * u + o3 * l - n2 * a2 + s3 * i;
        } }, { key: "mult", value: function(e4) {
          var t3;
          if (e4 === this || e4 === this.mat4) t3 = this.copy().mat4;
          else if (e4 instanceof O.default.Matrix) t3 = e4.mat4;
          else if (C(e4)) t3 = e4;
          else {
            if (16 !== arguments.length) return;
            t3 = arguments;
          }
          var e4 = this.mat4[0], r3 = this.mat4[1], o3 = this.mat4[2], n2 = this.mat4[3];
          return this.mat4[0] = e4 * t3[0] + r3 * t3[4] + o3 * t3[8] + n2 * t3[12], this.mat4[1] = e4 * t3[1] + r3 * t3[5] + o3 * t3[9] + n2 * t3[13], this.mat4[2] = e4 * t3[2] + r3 * t3[6] + o3 * t3[10] + n2 * t3[14], this.mat4[3] = e4 * t3[3] + r3 * t3[7] + o3 * t3[11] + n2 * t3[15], e4 = this.mat4[4], r3 = this.mat4[5], o3 = this.mat4[6], n2 = this.mat4[7], this.mat4[4] = e4 * t3[0] + r3 * t3[4] + o3 * t3[8] + n2 * t3[12], this.mat4[5] = e4 * t3[1] + r3 * t3[5] + o3 * t3[9] + n2 * t3[13], this.mat4[6] = e4 * t3[2] + r3 * t3[6] + o3 * t3[10] + n2 * t3[14], this.mat4[7] = e4 * t3[3] + r3 * t3[7] + o3 * t3[11] + n2 * t3[15], e4 = this.mat4[8], r3 = this.mat4[9], o3 = this.mat4[10], n2 = this.mat4[11], this.mat4[8] = e4 * t3[0] + r3 * t3[4] + o3 * t3[8] + n2 * t3[12], this.mat4[9] = e4 * t3[1] + r3 * t3[5] + o3 * t3[9] + n2 * t3[13], this.mat4[10] = e4 * t3[2] + r3 * t3[6] + o3 * t3[10] + n2 * t3[14], this.mat4[11] = e4 * t3[3] + r3 * t3[7] + o3 * t3[11] + n2 * t3[15], e4 = this.mat4[12], r3 = this.mat4[13], o3 = this.mat4[14], n2 = this.mat4[15], this.mat4[12] = e4 * t3[0] + r3 * t3[4] + o3 * t3[8] + n2 * t3[12], this.mat4[13] = e4 * t3[1] + r3 * t3[5] + o3 * t3[9] + n2 * t3[13], this.mat4[14] = e4 * t3[2] + r3 * t3[6] + o3 * t3[10] + n2 * t3[14], this.mat4[15] = e4 * t3[3] + r3 * t3[7] + o3 * t3[11] + n2 * t3[15], this;
        } }, { key: "apply", value: function(e4) {
          var t3;
          if (e4 === this || e4 === this.mat4) t3 = this.copy().mat4;
          else if (e4 instanceof O.default.Matrix) t3 = e4.mat4;
          else if (C(e4)) t3 = e4;
          else {
            if (16 !== arguments.length) return;
            t3 = arguments;
          }
          var e4 = this.mat4, r3 = e4[0], o3 = e4[4], n2 = e4[8], s3 = e4[12], r3 = (e4[0] = t3[0] * r3 + t3[1] * o3 + t3[2] * n2 + t3[3] * s3, e4[4] = t3[4] * r3 + t3[5] * o3 + t3[6] * n2 + t3[7] * s3, e4[8] = t3[8] * r3 + t3[9] * o3 + t3[10] * n2 + t3[11] * s3, e4[12] = t3[12] * r3 + t3[13] * o3 + t3[14] * n2 + t3[15] * s3, e4[1]), o3 = e4[5], n2 = e4[9], s3 = e4[13], r3 = (e4[1] = t3[0] * r3 + t3[1] * o3 + t3[2] * n2 + t3[3] * s3, e4[5] = t3[4] * r3 + t3[5] * o3 + t3[6] * n2 + t3[7] * s3, e4[9] = t3[8] * r3 + t3[9] * o3 + t3[10] * n2 + t3[11] * s3, e4[13] = t3[12] * r3 + t3[13] * o3 + t3[14] * n2 + t3[15] * s3, e4[2]), o3 = e4[6], n2 = e4[10], s3 = e4[14], r3 = (e4[2] = t3[0] * r3 + t3[1] * o3 + t3[2] * n2 + t3[3] * s3, e4[6] = t3[4] * r3 + t3[5] * o3 + t3[6] * n2 + t3[7] * s3, e4[10] = t3[8] * r3 + t3[9] * o3 + t3[10] * n2 + t3[11] * s3, e4[14] = t3[12] * r3 + t3[13] * o3 + t3[14] * n2 + t3[15] * s3, e4[3]), o3 = e4[7], n2 = e4[11], s3 = e4[15];
          return e4[3] = t3[0] * r3 + t3[1] * o3 + t3[2] * n2 + t3[3] * s3, e4[7] = t3[4] * r3 + t3[5] * o3 + t3[6] * n2 + t3[7] * s3, e4[11] = t3[8] * r3 + t3[9] * o3 + t3[10] * n2 + t3[11] * s3, e4[15] = t3[12] * r3 + t3[13] * o3 + t3[14] * n2 + t3[15] * s3, this;
        } }, { key: "scale", value: function(e4, t3, r3) {
          return e4 instanceof O.default.Vector ? (t3 = e4.y, r3 = e4.z, e4 = e4.x) : e4 instanceof Array && (t3 = e4[1], r3 = e4[2], e4 = e4[0]), this.mat4[0] *= e4, this.mat4[1] *= e4, this.mat4[2] *= e4, this.mat4[3] *= e4, this.mat4[4] *= t3, this.mat4[5] *= t3, this.mat4[6] *= t3, this.mat4[7] *= t3, this.mat4[8] *= r3, this.mat4[9] *= r3, this.mat4[10] *= r3, this.mat4[11] *= r3, this;
        } }, { key: "rotate", value: function(e4, t3, r3, o3) {
          t3 instanceof O.default.Vector ? (r3 = t3.y, o3 = t3.z, t3 = t3.x) : t3 instanceof Array && (r3 = t3[1], o3 = t3[2], t3 = t3[0]);
          var n2 = Math.sqrt(t3 * t3 + r3 * r3 + o3 * o3), n2 = (t3 *= 1 / n2, r3 *= 1 / n2, o3 *= 1 / n2, this.mat4[0]), s3 = this.mat4[1], i = this.mat4[2], a2 = this.mat4[3], l = this.mat4[4], u = this.mat4[5], c = this.mat4[6], d = this.mat4[7], h = this.mat4[8], f = this.mat4[9], p = this.mat4[10], m = this.mat4[11], y = Math.sin(e4), e4 = Math.cos(e4), g = 1 - e4, v = t3 * t3 * g + e4, b = r3 * t3 * g + o3 * y, _ = o3 * t3 * g - r3 * y, j = t3 * r3 * g - o3 * y, x2 = r3 * r3 * g + e4, w = o3 * r3 * g + t3 * y, S = t3 * o3 * g + r3 * y, r3 = r3 * o3 * g - t3 * y, t3 = o3 * o3 * g + e4;
          return this.mat4[0] = n2 * v + l * b + h * _, this.mat4[1] = s3 * v + u * b + f * _, this.mat4[2] = i * v + c * b + p * _, this.mat4[3] = a2 * v + d * b + m * _, this.mat4[4] = n2 * j + l * x2 + h * w, this.mat4[5] = s3 * j + u * x2 + f * w, this.mat4[6] = i * j + c * x2 + p * w, this.mat4[7] = a2 * j + d * x2 + m * w, this.mat4[8] = n2 * S + l * r3 + h * t3, this.mat4[9] = s3 * S + u * r3 + f * t3, this.mat4[10] = i * S + c * r3 + p * t3, this.mat4[11] = a2 * S + d * r3 + m * t3, this;
        } }, { key: "translate", value: function(e4) {
          var t3 = e4[0], r3 = e4[1], e4 = e4[2] || 0;
          this.mat4[12] += this.mat4[0] * t3 + this.mat4[4] * r3 + this.mat4[8] * e4, this.mat4[13] += this.mat4[1] * t3 + this.mat4[5] * r3 + this.mat4[9] * e4, this.mat4[14] += this.mat4[2] * t3 + this.mat4[6] * r3 + this.mat4[10] * e4, this.mat4[15] += this.mat4[3] * t3 + this.mat4[7] * r3 + this.mat4[11] * e4;
        } }, { key: "rotateX", value: function(e4) {
          this.rotate(e4, 1, 0, 0);
        } }, { key: "rotateY", value: function(e4) {
          this.rotate(e4, 0, 1, 0);
        } }, { key: "rotateZ", value: function(e4) {
          this.rotate(e4, 0, 0, 1);
        } }, { key: "perspective", value: function(e4, t3, r3, o3) {
          var e4 = 1 / Math.tan(e4 / 2), n2 = 1 / (r3 - o3);
          return this.mat4[0] = e4 / t3, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = e4, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (o3 + r3) * n2, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * o3 * r3 * n2, this.mat4[15] = 0, this;
        } }, { key: "ortho", value: function(e4, t3, r3, o3, n2, s3) {
          var i = 1 / (e4 - t3), a2 = 1 / (r3 - o3), l = 1 / (n2 - s3);
          return this.mat4[0] = -2 * i, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * a2, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e4 + t3) * i, this.mat4[13] = (o3 + r3) * a2, this.mat4[14] = (s3 + n2) * l, this.mat4[15] = 1, this;
        } }, { key: "multiplyVec4", value: function(e4, t3, r3, o3) {
          var n2 = new Array(4), s3 = this.mat4;
          return n2[0] = s3[0] * e4 + s3[4] * t3 + s3[8] * r3 + s3[12] * o3, n2[1] = s3[1] * e4 + s3[5] * t3 + s3[9] * r3 + s3[13] * o3, n2[2] = s3[2] * e4 + s3[6] * t3 + s3[10] * r3 + s3[14] * o3, n2[3] = s3[3] * e4 + s3[7] * t3 + s3[11] * r3 + s3[15] * o3, n2;
        } }, { key: "multiplyPoint", value: function(e4) {
          var t3 = e4.x, r3 = e4.y, e4 = e4.z, t3 = this.multiplyVec4(t3, r3, e4, 1);
          return new O.default.Vector(t3[0], t3[1], t3[2]);
        } }, { key: "multiplyAndNormalizePoint", value: function(e4) {
          var t3 = e4.x, r3 = e4.y, e4 = e4.z, t3 = this.multiplyVec4(t3, r3, e4, 1);
          return t3[0] /= t3[3], t3[1] /= t3[3], t3[2] /= t3[3], new O.default.Vector(t3[0], t3[1], t3[2]);
        } }, { key: "multiplyDirection", value: function(e4) {
          var t3 = e4.x, r3 = e4.y, e4 = e4.z, t3 = this.multiplyVec4(t3, r3, e4, 0);
          return new O.default.Vector(t3[0], t3[1], t3[2]);
        } }, { key: "mult3x3", value: function(e4) {
          var t3;
          if (e4 === this || e4 === this.mat3) t3 = this.copy().mat3;
          else if (e4 instanceof O.default.Matrix) t3 = e4.mat3;
          else if (C(e4)) t3 = e4;
          else {
            if (9 !== arguments.length) return;
            t3 = arguments;
          }
          var e4 = this.mat3[0], r3 = this.mat3[1], o3 = this.mat3[2];
          return this.mat3[0] = e4 * t3[0] + r3 * t3[3] + o3 * t3[6], this.mat3[1] = e4 * t3[1] + r3 * t3[4] + o3 * t3[7], this.mat3[2] = e4 * t3[2] + r3 * t3[5] + o3 * t3[8], e4 = this.mat3[3], r3 = this.mat3[4], o3 = this.mat3[5], this.mat3[3] = e4 * t3[0] + r3 * t3[3] + o3 * t3[6], this.mat3[4] = e4 * t3[1] + r3 * t3[4] + o3 * t3[7], this.mat3[5] = e4 * t3[2] + r3 * t3[5] + o3 * t3[8], e4 = this.mat3[6], r3 = this.mat3[7], o3 = this.mat3[8], this.mat3[6] = e4 * t3[0] + r3 * t3[3] + o3 * t3[6], this.mat3[7] = e4 * t3[1] + r3 * t3[4] + o3 * t3[7], this.mat3[8] = e4 * t3[2] + r3 * t3[5] + o3 * t3[8], this;
        } }, { key: "column", value: function(e4) {
          return new O.default.Vector(this.mat3[3 * e4], this.mat3[3 * e4 + 1], this.mat3[3 * e4 + 2]);
        } }, { key: "row", value: function(e4) {
          return new O.default.Vector(this.mat3[e4], this.mat3[e4 + 3], this.mat3[e4 + 6]);
        } }, { key: "diagonal", value: function() {
          return void 0 !== this.mat3 ? [this.mat3[0], this.mat3[4], this.mat3[8]] : [this.mat4[0], this.mat4[5], this.mat4[10], this.mat4[15]];
        } }, { key: "multiplyVec3", value: function(e4, t3) {
          return (t3 = void 0 === t3 ? e4.copy() : t3).x = this.row(0).dot(e4), t3.y = this.row(1).dot(e4), t3.z = this.row(2).dot(e4), t3;
        } }, { key: "createSubMatrix3x3", value: function() {
          var e4 = new O.default.Matrix("mat3");
          return e4.mat3[0] = this.mat4[0], e4.mat3[1] = this.mat4[1], e4.mat3[2] = this.mat4[2], e4.mat3[3] = this.mat4[4], e4.mat3[4] = this.mat4[5], e4.mat3[5] = this.mat4[6], e4.mat3[6] = this.mat4[8], e4.mat3[7] = this.mat4[9], e4.mat3[8] = this.mat4[10], e4;
        } }]) && n(e3.prototype, t2), o && n(e3, o), r2;
      }(), O.default.Matrix);
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.float32-array": 219, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239 }], 337: [function(e2, t, r) {
      Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var s2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function o(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      s2.default.Quat = function() {
        function n(e4, t3, r3, o3) {
          if (!(this instanceof n)) throw new TypeError("Cannot call a class as a function");
          this.w = e4, this.vec = new s2.default.Vector(t3, r3, o3);
        }
        var e3, t2, r2;
        return e3 = n, r2 = [{ key: "fromAxisAngle", value: function(e4, t3, r3, o3) {
          var n2 = Math.cos(e4 / 2), t3 = new s2.default.Vector(t3, r3, o3).normalize().mult(Math.sin(e4 / 2));
          return new s2.default.Quat(n2, t3.x, t3.y, t3.z);
        } }], (t2 = [{ key: "conjugate", value: function() {
          return new s2.default.Quat(this.w, -this.vec.x, -this.vec.y, -this.vec.z);
        } }, { key: "multiply", value: function(e4) {
          return new s2.default.Quat(this.w * e4.w - this.vec.x * e4.vec.x - this.vec.y * e4.vec.y - this.vec.z - e4.vec.z, this.w * e4.vec.x + this.vec.x * e4.w + this.vec.y * e4.vec.z - this.vec.z * e4.vec.y, this.w * e4.vec.y - this.vec.x * e4.vec.z + this.vec.y * e4.w + this.vec.z * e4.vec.x, this.w * e4.vec.z + this.vec.x * e4.vec.y - this.vec.y * e4.vec.x + this.vec.z * e4.w);
        } }, { key: "rotateVector", value: function(e4) {
          return new s2.default.Vector.mult(e4, this.w * this.w - this.vec.dot(this.vec)).add(s2.default.Vector.mult(this.vec, 2 * e4.dot(this.vec))).add(s2.default.Vector.mult(this.vec, 2 * this.w).cross(e4)).clampToZero();
        } }, { key: "rotateBy", value: function(e4) {
          return e4.multiply(this).multiply(e4.conjugate()).vec.clampToZero();
        } }]) && o(e3.prototype, t2), r2 && o(e3, r2), n;
      }();
      e2 = s2.default.Quat;
      r.default = e2;
    }, { "../core/main": 283 }], 338: [function(e2, t, r) {
      e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.map"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      e2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function o(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      e2.default.RenderBuffer = function() {
        function i(e4, t3, r2, o3, n, s2) {
          if (!(this instanceof i)) throw new TypeError("Cannot call a class as a function");
          this.size = e4, this.src = t3, this.dst = r2, this.attr = o3, this._renderer = n, this.map = s2;
        }
        var e3, t2;
        return e3 = i, (t2 = [{ key: "_prepareBuffer", value: function(e4, t3) {
          var r2, o3, n, s2 = t3.attributes, i2 = this._renderer.GL, a2 = e4.model || e4, s2 = s2[this.attr];
          s2 && (r2 = e4[this.dst], 0 < (o3 = a2[this.src]).length ? ((n = !r2) && (e4[this.dst] = r2 = i2.createBuffer()), i2.bindBuffer(i2.ARRAY_BUFFER, r2), !n && false === a2.dirtyFlags[this.src] || (n = (e4 = this.map) ? e4(o3) : o3, this._renderer._bindBuffer(r2, i2.ARRAY_BUFFER, n), a2.dirtyFlags[this.src] = false), t3.enableAttrib(s2, this.size)) : -1 !== (e4 = s2.location) && this._renderer.registerEnabled.has(e4) && (i2.disableVertexAttribArray(e4), this._renderer.registerEnabled.delete(e4)));
        } }]) && o(e3.prototype, t2), i;
      }();
      e2 = e2.default.RenderBuffer;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.map": 168 }], 339: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.find-index"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.find-index"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var l = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, h = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s2;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s2 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s2.get || s2.set) ? Object.defineProperty(o3, r2, s2) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function f(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      e2("./p5.RenderBuffer"), l.default.RendererGL.prototype.beginShape = function(e3) {
        return this.immediateMode.shapeMode = void 0 !== e3 ? e3 : h.TESS, this.immediateMode.geometry.reset(), this.immediateMode.contourIndices = [], this;
      };
      var u = { vertices: 1, vertexNormals: 1, vertexColors: 4, vertexStrokeColors: 4, uvs: 2 }, n = (l.default.RendererGL.prototype.beginContour = function() {
        if (this.immediateMode.shapeMode !== h.TESS) throw new Error("WebGL mode can only use contours with beginShape(TESS).");
        this.immediateMode.contourIndices.push(this.immediateMode.geometry.vertices.length);
      }, l.default.RendererGL.prototype.vertex = function(e3, t2) {
        if (this.immediateMode.shapeMode === h.QUADS && this.immediateMode.geometry.vertices.length % 6 == 3) for (var r2 in u) {
          var o3 = u[r2], r2 = this.immediateMode.geometry[r2];
          r2.push.apply(r2, f(r2.slice(r2.length - 3 * o3, r2.length - 2 * o3)).concat(f(r2.slice(r2.length - o3, r2.length))));
        }
        var n2, s2, i2 = n2 = s2 = 0, a3 = (3 === arguments.length ? i2 = arguments[2] : 4 === arguments.length ? (n2 = arguments[2], s2 = arguments[3]) : 5 === arguments.length && (i2 = arguments[2], n2 = arguments[3], s2 = arguments[4]), new l.default.Vector(e3, t2, i2)), a3 = (this.immediateMode.geometry.vertices.push(a3), this.immediateMode.geometry.vertexNormals.push(this._currentNormal), this.curFillColor || [0.5, 0.5, 0.5, 1]), a3 = (this.immediateMode.geometry.vertexColors.push(a3[0], a3[1], a3[2], a3[3]), this.curStrokeColor || [0.5, 0.5, 0.5, 1]);
        return this.immediateMode.geometry.vertexStrokeColors.push(a3[0], a3[1], a3[2], a3[3]), this.textureMode !== h.IMAGE || this.isProcessingVertices || (null !== this._tex ? 0 < this._tex.width && 0 < this._tex.height && (n2 /= this._tex.width, s2 /= this._tex.height) : void 0 === this.userFillShader && void 0 === this.userStrokeShader && void 0 === this.userPointShader && null === this._tex && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.geometry.uvs.push(n2, s2), this.immediateMode._bezierVertex[0] = e3, this.immediateMode._bezierVertex[1] = t2, this.immediateMode._bezierVertex[2] = i2, this.immediateMode._quadraticVertex[0] = e3, this.immediateMode._quadraticVertex[1] = t2, this.immediateMode._quadraticVertex[2] = i2, this;
      }, l.default.RendererGL.prototype.normal = function(e3, t2, r2) {
        return e3 instanceof l.default.Vector ? this._currentNormal = e3 : this._currentNormal = new l.default.Vector(e3, t2, r2), this;
      }, l.default.RendererGL.prototype.endShape = function(e3, t2, r2, o3, n2, s2) {
        var i2, a3 = 6 < arguments.length && void 0 !== arguments[6] ? arguments[6] : 1;
        return this.immediateMode.shapeMode === h.POINTS ? this._drawPoints(this.immediateMode.geometry.vertices, this.immediateMode.buffers.point) : (3 === this.immediateMode.geometry.vertices.length && this.immediateMode.shapeMode === h.TESS && (this.immediateMode.shapeMode = h.TRIANGLES), this.isProcessingVertices = true, this._processVertices.apply(this, arguments), i2 = this.isProcessingVertices = false, this.immediateMode.shapeMode !== h.LINE_STRIP && this.immediateMode.shapeMode !== h.LINES || (this.immediateMode.shapeMode = h.TRIANGLE_FAN, i2 = true), this.immediateMode.shapeMode === h.QUADS ? this.immediateMode.shapeMode = h.TRIANGLES : this.immediateMode.shapeMode === h.QUAD_STRIP && (this.immediateMode.shapeMode = h.TRIANGLE_STRIP), this._doFill && !i2 && !this.geometryBuilder && 3 <= this.immediateMode.geometry.vertices.length && this._drawImmediateFill(a3), this._doStroke && !this.geometryBuilder && 1 <= this.immediateMode.geometry.lineVertices.length && this._drawImmediateStroke(), this.geometryBuilder && this.geometryBuilder.addImmediate(), this.isBezier = false, this.isQuadratic = false, this.isCurve = false, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0), this;
      }, l.default.RendererGL.prototype._processVertices = function(e3) {
        var t2;
        0 !== this.immediateMode.geometry.vertices.length && (t2 = this._doStroke, e3 = e3 === h.CLOSE, t2 && (this.immediateMode.geometry.edges = this._calculateEdges(this.immediateMode.shapeMode, this.immediateMode.geometry.vertices, e3), this.geometryBuilder || this.immediateMode.geometry._edgesToVertices()), t2 = this.immediateMode.shapeMode === h.TESS, e3 = 0 < this.immediateMode.contourIndices.length, this._doFill && (this.isBezier || this.isQuadratic || this.isCurve || t2 || e3) && this.immediateMode.shapeMode !== h.LINES && this._tesselateShape());
      }, l.default.RendererGL.prototype._calculateEdges = function(e3, t2, r2) {
        var o3 = [], n2 = 0, s2 = this.immediateMode.contourIndices.slice(), i2 = 0;
        switch (e3) {
          case h.TRIANGLE_STRIP:
            for (n2 = 0; n2 < t2.length - 2; n2++) o3.push([n2, n2 + 1]), o3.push([n2, n2 + 2]);
            o3.push([n2, n2 + 1]);
            break;
          case h.TRIANGLE_FAN:
            for (n2 = 1; n2 < t2.length - 1; n2++) o3.push([0, n2]), o3.push([n2, n2 + 1]);
            o3.push([0, t2.length - 1]);
            break;
          case h.TRIANGLES:
            for (n2 = 0; n2 < t2.length - 2; n2 += 3) o3.push([n2, n2 + 1]), o3.push([n2 + 1, n2 + 2]), o3.push([n2 + 2, n2]);
            break;
          case h.LINES:
            for (n2 = 0; n2 < t2.length - 1; n2 += 2) o3.push([n2, n2 + 1]);
            break;
          case h.QUADS:
            for (n2 = 0; n2 < t2.length - 5; n2 += 6) o3.push([n2, n2 + 1]), o3.push([n2 + 1, n2 + 2]), o3.push([n2 + 3, n2 + 5]), o3.push([n2 + 4, n2 + 5]);
            break;
          case h.QUAD_STRIP:
            for (n2 = 0; n2 < t2.length - 2; n2 += 2) o3.push([n2, n2 + 1]), o3.push([n2, n2 + 2]), o3.push([n2 + 1, n2 + 3]);
            o3.push([n2, n2 + 1]);
            break;
          default:
            for (n2 = 0; n2 < t2.length; n2++) n2 + 1 < t2.length && n2 + 1 !== s2[0] ? o3.push([n2, n2 + 1]) : ((r2 || i2) && o3.push([n2, i2]), 0 < s2.length && (i2 = s2.shift()));
        }
        return e3 !== h.TESS && r2 && o3.push([t2.length - 1, 0]), o3;
      }, l.default.RendererGL.prototype._tesselateShape = function() {
        for (var u2 = this, e3 = (this.immediateMode.shapeMode = h.TRIANGLES, [[]]), t2 = 0; t2 < this.immediateMode.geometry.vertices.length; t2++) 0 < this.immediateMode.contourIndices.length && this.immediateMode.contourIndices[0] === t2 && (this.immediateMode.contourIndices.shift(), e3.push([])), e3[e3.length - 1].push(this.immediateMode.geometry.vertices[t2].x, this.immediateMode.geometry.vertices[t2].y, this.immediateMode.geometry.vertices[t2].z, this.immediateMode.geometry.uvs[2 * t2], this.immediateMode.geometry.uvs[2 * t2 + 1], this.immediateMode.geometry.vertexColors[4 * t2], this.immediateMode.geometry.vertexColors[4 * t2 + 1], this.immediateMode.geometry.vertexColors[4 * t2 + 2], this.immediateMode.geometry.vertexColors[4 * t2 + 3], this.immediateMode.geometry.vertexNormals[t2].x, this.immediateMode.geometry.vertexNormals[t2].y, this.immediateMode.geometry.vertexNormals[t2].z);
        for (var c, r2 = this._triangulate(e3), d = this.immediateMode.geometry.vertices, o3 = (this.immediateMode.geometry.vertices = [], this.immediateMode.geometry.vertexNormals = [], this.immediateMode.geometry.uvs = [], []), n2 = 0, s2 = r2.length; n2 < s2; n2 += l.default.RendererGL.prototype.tessyVertexSize) o3.push.apply(o3, f(r2.slice(n2 + 5, n2 + 9))), this.normal.apply(this, f(r2.slice(n2 + 9, n2 + 12))), this.vertex.apply(this, f(r2.slice(n2, n2 + 5)));
        this.geometryBuilder && (c = /* @__PURE__ */ new Map(), this.immediateMode.geometry.edges = this.immediateMode.geometry.edges.map(function(e4) {
          return e4.map(function(e5) {
            if (!c.has(e5)) {
              var t3 = d[e5], r3 = u2.immediateMode.geometry.vertices.findIndex(function(e6) {
                return t3.x === e6.x && t3.y === e6.y && t3.z === e6.z;
              });
              if (-1 === r3) {
                for (var o4 = 1 / 0, n3 = 0, s3 = 0; s3 < u2.immediateMode.geometry.vertices.length; s3++) {
                  var i2 = u2.immediateMode.geometry.vertices[s3], a3 = t3.x - i2.x, l2 = t3.y - i2.y, i2 = t3.z - i2.z, a3 = a3 * a3 + l2 * l2 + i2 * i2;
                  a3 < o4 && (o4 = a3, n3 = s3);
                }
                r3 = n3;
              }
              c.set(e5, r3);
            }
            return c.get(e5);
          });
        })), this.immediateMode.geometry.vertexColors = o3;
      }, l.default.RendererGL.prototype._drawImmediateFill = function() {
        var e3, t2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1, r2 = this.GL, o3 = (this._useVertexColor = 0 < this.immediateMode.geometry.vertexColors.length, e3 = this._getImmediateFillShader(), this._setFillUniforms(e3), true), n2 = false, s2 = void 0;
        try {
          for (var i2, a3 = this.immediateMode.buffers.fill[Symbol.iterator](); !(o3 = (i2 = a3.next()).done); o3 = true) i2.value._prepareBuffer(this.immediateMode.geometry, e3);
        } catch (e4) {
          n2 = true, s2 = e4;
        } finally {
          try {
            o3 || null == a3.return || a3.return();
          } finally {
            if (n2) throw s2;
          }
        }
        if (e3.disableRemainingAttributes(), this._applyColorBlend(this.curFillColor, this.immediateMode.geometry.hasFillTransparency()), 1 === t2) r2.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length);
        else try {
          r2.drawArraysInstanced(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length, t2);
        } catch (e4) {
          console.log("🌸 p5.js says: Instancing is only supported in WebGL2 mode");
        }
        e3.unbindShader();
      }, l.default.RendererGL.prototype._drawImmediateStroke = function() {
        var e3 = this.GL, t2 = (this._useLineColor = 0 < this.immediateMode.geometry.vertexStrokeColors.length, this._getImmediateStrokeShader()), r2 = (this._setStrokeUniforms(t2), true), o3 = false, n2 = void 0;
        try {
          for (var s2, i2 = this.immediateMode.buffers.stroke[Symbol.iterator](); !(r2 = (s2 = i2.next()).done); r2 = true) s2.value._prepareBuffer(this.immediateMode.geometry, t2);
        } catch (e4) {
          o3 = true, n2 = e4;
        } finally {
          try {
            r2 || null == i2.return || i2.return();
          } finally {
            if (o3) throw n2;
          }
        }
        t2.disableRemainingAttributes(), this._applyColorBlend(this.curStrokeColor, this.immediateMode.geometry.hasFillTransparency()), e3.drawArrays(e3.TRIANGLES, 0, this.immediateMode.geometry.lineVertices.length / 3), t2.unbindShader();
      }, l.default.RendererGL);
      r.default = n;
    }, { "../core/constants": 272, "../core/main": 283, "./p5.RenderBuffer": 338, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.find-index": 158, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.map": 175, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 340: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var a2 = (s2 = e2("../core/main")) && s2.__esModule ? s2 : { default: s2 }, n = (e2("./p5.RendererGL"), e2("./p5.RenderBuffer"), function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = l();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants")));
      function l() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), l = function() {
          return e3;
        }, e3);
      }
      a2.default.RendererGL.prototype.freeGeometry = function(e3) {
        e3.gid ? this._freeBuffers(e3.gid) : console.warn("The model you passed to freeGeometry does not have an id!");
      }, a2.default.RendererGL.prototype._initBufferDefaults = function(e3) {
        var t2;
        return this._freeBuffers(e3), 1e3 < Object.keys(this.retainedMode.geometry).length && (t2 = Object.keys(this.retainedMode.geometry)[0], this._freeBuffers(t2)), this.retainedMode.geometry[e3] = {};
      }, a2.default.RendererGL.prototype._freeBuffers = function(e3) {
        var a3, l2 = this.retainedMode.geometry[e3];
        function t2(e4) {
          var t3 = true, r2 = false, o3 = void 0;
          try {
            for (var n2, s3 = e4[Symbol.iterator](); !(t3 = (n2 = s3.next()).done); t3 = true) {
              var i2 = n2.value;
              l2[i2.dst] && (a3.deleteBuffer(l2[i2.dst]), l2[i2.dst] = null);
            }
          } catch (e5) {
            r2 = true, o3 = e5;
          } finally {
            try {
              t3 || null == s3.return || s3.return();
            } finally {
              if (r2) throw o3;
            }
          }
        }
        l2 && (delete this.retainedMode.geometry[e3], a3 = this.GL, l2.indexBuffer && a3.deleteBuffer(l2.indexBuffer), t2(this.retainedMode.buffers.stroke), t2(this.retainedMode.buffers.fill));
      }, a2.default.RendererGL.prototype.createBuffers = function(e3, t2) {
        var r2, o3, n2, s3 = this.GL, e3 = this._initBufferDefaults(e3), i2 = (e3.model = t2, e3.indexBuffer);
        return t2.faces.length ? (i2 = i2 || (e3.indexBuffer = s3.createBuffer()), n2 = (o3 = (r2 = a2.default.RendererGL.prototype._flatten(t2.faces)).some(function(e4) {
          return 65535 < e4;
        })) ? Uint32Array : Uint16Array, this._bindBuffer(i2, s3.ELEMENT_ARRAY_BUFFER, r2, n2), e3.indexBufferType = o3 ? s3.UNSIGNED_INT : s3.UNSIGNED_SHORT, e3.vertexCount = 3 * t2.faces.length) : (i2 && (s3.deleteBuffer(i2), e3.indexBuffer = null), e3.vertexCount = t2.vertices ? t2.vertices.length : 0), e3.lineVertexCount = t2.lineVertices ? t2.lineVertices.length / 3 : 0, e3;
      }, a2.default.RendererGL.prototype.drawBuffers = function(e3) {
        var t2 = this.GL, r2 = this.retainedMode.geometry[e3];
        if (!this.geometryBuilder && this._doFill && 0 < this.retainedMode.geometry[e3].vertexCount) {
          this._useVertexColor = 0 < r2.model.vertexColors.length;
          var o3 = this._getRetainedFillShader(), n2 = (this._setFillUniforms(o3), true), s3 = false, i2 = void 0;
          try {
            for (var a3, l2 = this.retainedMode.buffers.fill[Symbol.iterator](); !(n2 = (a3 = l2.next()).done); n2 = true) a3.value._prepareBuffer(r2, o3);
          } catch (e4) {
            s3 = true, i2 = e4;
          } finally {
            try {
              n2 || null == l2.return || l2.return();
            } finally {
              if (s3) throw i2;
            }
          }
          o3.disableRemainingAttributes(), r2.indexBuffer && this._bindBuffer(r2.indexBuffer, t2.ELEMENT_ARRAY_BUFFER), this._applyColorBlend(this.curFillColor, r2.model.hasFillTransparency()), this._drawElements(t2.TRIANGLES, e3), o3.unbindShader();
        }
        if (!this.geometryBuilder && this._doStroke && 0 < r2.lineVertexCount) {
          this._useLineColor = 0 < r2.model.vertexStrokeColors.length;
          var u = this._getRetainedStrokeShader(), c = (this._setStrokeUniforms(u), true), s3 = false, i2 = void 0;
          try {
            for (var d, h = this.retainedMode.buffers.stroke[Symbol.iterator](); !(c = (d = h.next()).done); c = true) d.value._prepareBuffer(r2, u);
          } catch (e4) {
            s3 = true, i2 = e4;
          } finally {
            try {
              c || null == h.return || h.return();
            } finally {
              if (s3) throw i2;
            }
          }
          u.disableRemainingAttributes(), this._applyColorBlend(this.curStrokeColor, r2.model.hasStrokeTransparency()), this._drawArrays(t2.TRIANGLES, e3), u.unbindShader();
        }
        return this.geometryBuilder && this.geometryBuilder.addRetained(r2), this;
      }, a2.default.RendererGL.prototype.drawBuffersScaled = function(e3, t2, r2, o3) {
        var n2 = this.uModelMatrix.copy();
        try {
          this.uModelMatrix.scale(t2, r2, o3), this.drawBuffers(e3);
        } finally {
          this.uModelMatrix = n2;
        }
      }, a2.default.RendererGL.prototype._drawArrays = function(e3, t2) {
        return this.GL.drawArrays(e3, 0, this.retainedMode.geometry[t2].lineVertexCount), this;
      }, a2.default.RendererGL.prototype._drawElements = function(e3, t2) {
        var t2 = this.retainedMode.geometry[t2], r2 = this.GL;
        if (t2.indexBuffer) {
          if (this._pInst.webglVersion !== n.WEBGL2 && t2.indexBufferType === r2.UNSIGNED_INT && !r2.getExtension("OES_element_index_uint")) throw new Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");
          r2.drawElements(r2.TRIANGLES, t2.vertexCount, t2.indexBufferType, 0);
        } else r2.drawArrays(e3 || r2.TRIANGLES, 0, t2.vertexCount);
      }, a2.default.RendererGL.prototype._drawPoints = function(e3, t2) {
        var r2 = this.GL, o3 = this._getImmediatePointShader();
        this._setPointUniforms(o3), this._bindBuffer(t2, r2.ARRAY_BUFFER, this._vToNArray(e3), Float32Array, r2.STATIC_DRAW), o3.enableAttrib(o3.attributes.aPosition, 3), this._applyColorBlend(this.curStrokeColor), r2.drawArrays(r2.Points, 0, e3.length), o3.unbindShader();
      };
      var s2 = a2.default.RendererGL;
      r.default = s2;
    }, { "../core/constants": 272, "../core/main": 283, "./p5.RenderBuffer": 338, "./p5.RendererGL": 341, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.some": 170, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.float32-array": 219, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint16-array": 240, "core-js/modules/es.typed-array.uint32-array": 241, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 341: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.flat"), e2("core-js/modules/es.array.flat-map"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.array.unscopables.flat"), e2("core-js/modules/es.array.unscopables.flat-map"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.reflect.get"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.float64-array"), e2("core-js/modules/es.typed-array.int16-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.copy-within"), e2("core-js/modules/es.array.every"), e2("core-js/modules/es.array.fill"), e2("core-js/modules/es.array.flat"), e2("core-js/modules/es.array.flat-map"), e2("core-js/modules/es.array.from"), e2("core-js/modules/es.array.includes"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.map"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.array.unscopables.flat"), e2("core-js/modules/es.array.unscopables.flat-map"), e2("core-js/modules/es.map"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.set"), e2("core-js/modules/es.string.includes"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.float32-array"), e2("core-js/modules/es.typed-array.float64-array"), e2("core-js/modules/es.typed-array.int16-array"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.uint16-array"), e2("core-js/modules/es.typed-array.uint32-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.readPixelsWebGL = O, r.readPixelWebGL = C, r.default = void 0;
      var g = n(e2("../core/main")), l = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = d();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants")), a2 = n(e2("./GeometryBuilder")), u = n(e2("libtess")), c = (e2("./p5.Shader"), e2("./p5.Camera"), e2("../core/p5.Renderer"), e2("./p5.Matrix"), e2("./p5.Framebuffer"), e2("path"), e2("./p5.Texture"));
      function d() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), d = function() {
          return e3;
        }, e3);
      }
      function n(e3) {
        return e3 && e3.__esModule ? e3 : { default: e3 };
      }
      function h(e3) {
        return function(e4) {
          if (Array.isArray(e4)) {
            for (var t2 = 0, r2 = new Array(e4.length); t2 < e4.length; t2++) r2[t2] = e4[t2];
            return r2;
          }
        }(e3) || function(e4) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) return Array.from(e4);
        }(e3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance");
        }();
      }
      function f(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function p(e3, t2, r2) {
        return (p = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e4, t3, r3) {
          var e4 = function(e5, t4) {
            for (; !Object.prototype.hasOwnProperty.call(e5, t4) && null !== (e5 = b(e5)); ) ;
            return e5;
          }(e4, t3);
          if (e4) return (e4 = Object.getOwnPropertyDescriptor(e4, t3)).get ? e4.get.call(r3) : e4.value;
        })(e3, t2, r2 || e3);
      }
      function m(e3, t2) {
        return (m = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function y(o3) {
        return function() {
          var e3, t2, r2 = b(o3);
          return e3 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = b(this).constructor, Reflect.construct(r2, arguments, e3)) : r2.apply(this, arguments), r2 = this, !(t2 = e3) || "object" !== i(t2) && "function" != typeof t2 ? v(r2) : t2;
        };
      }
      function v(e3) {
        if (void 0 === e3) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e3;
      }
      function b(e3) {
        return (b = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function _(e3, t2, r2) {
        t2 in e3 ? Object.defineProperty(e3, t2, { value: r2, enumerable: true, configurable: true, writable: true }) : e3[t2] = r2;
      }
      function s2(e3, t2) {
        T += "#define STROKE_CAP_".concat(e3, " ").concat(t2, "\n"), w[l[e3]] = t2;
      }
      function j(e3, t2) {
        T += "#define STROKE_JOIN_".concat(e3, " ").concat(t2, "\n"), S[l[e3]] = t2;
      }
      var x2, w = {}, S = {}, T = "", e2 = (s2("ROUND", 0), s2("PROJECT", 1), s2("SQUARE", 2), j("ROUND", 0), j("MITER", 1), j("BEVEL", 2), '#define PI 3.141592\n\nprecision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\nuniform mat3 uCameraRotation;\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];	\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\nuniform float uMetallic;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\n// setting from  _setImageLightUniforms()\n// boolean to initiate the calculateImageDiffuse and calculateImageSpecular\nuniform bool uUseImageLight;\n// texture for use in calculateImageDiffuse\nuniform sampler2D environmentMapDiffused;\n// texture for use in calculateImageSpecular\nuniform sampler2D environmentMapSpecular;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector, float shininess, float metallic) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  float specularIntensity = mix(1.0, 0.4, metallic);\n  float diffuseIntensity = mix(1.0, 0.1, metallic);\n  if (uSpecular)\n    lr.specular = (_phongSpecular(lightDir, viewDirection, normal, shininess)) * specularIntensity;\n    lr.diffuse = _lambertDiffuse(lightDir, normal) * diffuseIntensity;\n  return lr;\n}\n\n// converts the range of "value" from [min1 to max1] to [min2 to max2]\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 mapTextureToNormal( vec3 v ){\n  // x = r sin(phi) cos(theta)   \n  // y = r cos(phi)  \n  // z = r sin(phi) sin(theta)\n  float phi = acos( v.y );\n  // if phi is 0, then there are no x, z components\n  float theta = 0.0;\n  // else \n  theta = acos(v.x / sin(phi));\n  float sinTheta = v.z / sin(phi);\n  if (sinTheta < 0.0) {\n    // Turn it into -theta, but in the 0-2PI range\n    theta = 2.0 * PI - theta;\n  }\n  theta = theta / (2.0 * 3.14159);\n  phi = phi / 3.14159 ;\n  \n  vec2 angles = vec2( fract(theta + 0.25), 1.0 - phi );\n  return angles;\n}\n\n\nvec3 calculateImageDiffuse(vec3 vNormal, vec3 vViewPosition, float metallic){\n  // make 2 separate builds \n  vec3 worldCameraPosition =  vec3(0.0, 0.0, 0.0);  // hardcoded world camera position\n  vec3 worldNormal = normalize(vNormal * uCameraRotation);\n  vec2 newTexCoor = mapTextureToNormal( worldNormal );\n  vec4 texture = TEXTURE( environmentMapDiffused, newTexCoor );\n  // this is to make the darker sections more dark\n  // png and jpg usually flatten the brightness so it is to reverse that\n  return mix(smoothstep(vec3(0.0), vec3(1.0), texture.xyz), vec3(0.0), metallic);\n}\n\nvec3 calculateImageSpecular(vec3 vNormal, vec3 vViewPosition, float shininess, float metallic){\n  vec3 worldCameraPosition =  vec3(0.0, 0.0, 0.0);\n  vec3 worldNormal = normalize(vNormal);\n  vec3 lightDirection = normalize( vViewPosition - worldCameraPosition );\n  vec3 R = reflect(lightDirection, worldNormal) * uCameraRotation;\n  vec2 newTexCoor = mapTextureToNormal( R );\n#ifdef WEBGL2\n  // In p5js the range of shininess is >= 1,\n  // Therefore roughness range will be ([0,1]*8)*20 or [0, 160]\n  // The factor of 8 is because currently the getSpecularTexture\n  // only calculated 8 different levels of roughness\n  // The factor of 20 is just to spread up this range so that,\n  // [1, max] of shininess is converted to [0,160] of roughness\n  float roughness = 20. / shininess;\n  vec4 outColor = textureLod(environmentMapSpecular, newTexCoor, roughness * 8.);\n#else\n  vec4 outColor = TEXTURE(environmentMapSpecular, newTexCoor);\n#endif\n  // this is to make the darker sections more dark\n  // png and jpg usually flatten the brightness so it is to reverse that\n  return mix(\n    pow(outColor.xyz, vec3(10)),\n    pow(outColor.xyz, vec3(1.2)),\n    metallic \n  );\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  float shininess,\n  float metallic,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector, shininess, metallic);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector, shininess, metallic);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector, shininess, metallic);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  if( uUseImageLight ){\n    totalDiffuse += calculateImageDiffuse(normal, modelPosition, metallic);\n    totalSpecular += calculateImageSpecular(normal, modelPosition, shininess, metallic);\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n'), E = { sphereMappingFrag: "#define PI 3.141592\n\nprecision highp float;\n  \nuniform sampler2D uSampler;\nuniform mat3 uNewNormalMatrix;\nuniform float uFovY;\nuniform float uAspect;\n\nvarying vec2 vTexCoord;\n  \nvoid main() {\n    float uFovX = uFovY * uAspect; \n    vec4 newTexColor = texture2D(uSampler, vTexCoord);\n    float angleY = mix(uFovY/2.0,  -uFovY/2.0, vTexCoord.y);\n    float angleX = mix(uFovX/2.0, -uFovX/2.0, vTexCoord.x);\n    vec3 rotatedNormal = vec3( angleX, angleY, 1.0 );\n    rotatedNormal = uNewNormalMatrix * normalize(rotatedNormal);\n    float temp = rotatedNormal.z;\n    rotatedNormal.z = rotatedNormal.x;\n    rotatedNormal.x = -temp;\n    vec2 suv;\n    suv.y = 0.5 + 0.5 * (-rotatedNormal.y);\n    suv.x = atan(rotatedNormal.z, rotatedNormal.x) / (2.0 * PI) + 0.5;\n    newTexColor = texture2D(uSampler, suv.xy);\n    gl_FragColor = newTexColor;\n}\n", immediateVert: "IN vec3 aPosition;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nOUT vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n", vertexColorVert: "IN vec3 aPosition;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nOUT vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n", vertexColorFrag: "IN vec4 vColor;\nvoid main(void) {\n  OUT_COLOR = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", normalVert: "IN vec3 aPosition;\nIN vec3 aNormal;\nIN vec2 aTexCoord;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform vec4 uMaterialColor;\nuniform bool uUseVertexColor;\n\nOUT vec3 vVertexNormal;\nOUT highp vec2 vVertTexCoord;\nOUT vec4 vColor;\n\nvoid main(void) {\n  HOOK_beforeVertex();\n  vec4 positionVec4 = vec4(HOOK_getWorldPosition(\n    (uModelViewMatrix * vec4(HOOK_getLocalPosition(aPosition), 1.0)).xyz\n  ), 1.);\n\n  gl_Position = uProjectionMatrix * positionVec4;\n\n  vVertexNormal = HOOK_getWorldNormal(normalize(uNormalMatrix * HOOK_getLocalNormal(aNormal)));\n  vVertTexCoord = HOOK_getUV(aTexCoord);\n  vColor = HOOK_getVertexColor(uUseVertexColor ? aVertexColor : uMaterialColor);\n  HOOK_afterVertex();\n}\n", normalFrag: "IN vec3 vVertexNormal;\nvoid main(void) {\n  HOOK_beforeFragment();\n  OUT_COLOR = HOOK_getFinalColor(vec4(vVertexNormal, 1.0));\n  HOOK_afterFragment();\n}\n", basicFrag: "IN vec4 vColor;\nvoid main(void) {\n  HOOK_beforeFragment();\n  OUT_COLOR = HOOK_getFinalColor(vec4(vColor.rgb, 1.) * vColor.a);\n  HOOK_afterFragment();\n}\n", lightVert: e2 + "// include lighting.glgl\n\nIN vec3 aPosition;\nIN vec3 aNormal;\nIN vec2 aTexCoord;\nIN vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nOUT highp vec2 vVertTexCoord;\nOUT vec3 vDiffuseColor;\nOUT vec3 vSpecularColor;\nOUT vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", lightTextureFrag: "uniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nIN highp vec2 vVertTexCoord;\nIN vec3 vDiffuseColor;\nIN vec3 vSpecularColor;\nIN vec4 vColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    OUT_COLOR = vColor;\n  }\n  else {\n    vec4 baseColor = isTexture\n      // Textures come in with premultiplied alpha. To apply tint and still have\n      // premultiplied alpha output, we need to multiply the RGB channels by the\n      // tint RGB, and all channels by the tint alpha.\n      ? TEXTURE(uSampler, vVertTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n      // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n      // channels by alpha to convert it to premultiplied alpha.\n      : vec4(vColor.rgb * vColor.a, vColor.a);\n    OUT_COLOR = vec4(baseColor.rgb * vDiffuseColor + vSpecularColor, baseColor.a);\n  }\n}\n", phongVert: "precision highp int;\n\nIN vec3 aPosition;\nIN vec3 aNormal;\nIN vec2 aTexCoord;\nIN vec4 aVertexColor;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nOUT vec3 vNormal;\nOUT vec2 vTexCoord;\nOUT vec3 vViewPosition;\nOUT vec3 vAmbientColor;\nOUT vec4 vColor;\n\nvoid main(void) {\n  HOOK_beforeVertex();\n  vec4 viewModelPosition = vec4(HOOK_getWorldPosition(\n    (uModelViewMatrix * vec4(HOOK_getLocalPosition(aPosition), 1.0)).xyz\n  ), 1.);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = HOOK_getWorldNormal(uNormalMatrix * HOOK_getLocalNormal(aNormal));\n  vTexCoord = HOOK_getUV(aTexCoord);\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = HOOK_getVertexColor((uUseVertexColor ? aVertexColor : uMaterialColor));\n  HOOK_afterVertex();\n}\n", phongFrag: e2 + "// include lighting.glsl\nprecision highp int;\n\nuniform bool uHasSetAmbient;\nuniform vec4 uSpecularMatColor;\nuniform vec4 uAmbientMatColor;\nuniform vec4 uEmissiveMatColor;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\n\nIN vec3 vNormal;\nIN vec2 vTexCoord;\nIN vec3 vViewPosition;\nIN vec3 vAmbientColor;\nIN vec4 vColor;\n\nstruct ColorComponents {\n  vec3 baseColor;\n  float opacity;\n  vec3 ambientColor;\n  vec3 specularColor;\n  vec3 diffuse;\n  vec3 ambient;\n  vec3 specular;\n  vec3 emissive;\n};\n\nstruct Inputs {\n  vec3 normal;\n  vec2 texCoord;\n  vec3 ambientLight;\n  vec3 ambientMaterial;\n  vec3 specularMaterial;\n  vec3 emissiveMaterial;\n  vec4 color;\n  float shininess;\n  float metalness;\n};\n\nvoid main(void) {\n  HOOK_beforeFragment();\n\n  Inputs inputs;\n  inputs.normal = normalize(vNormal);\n  inputs.texCoord = vTexCoord;\n  inputs.ambientLight = vAmbientColor;\n  inputs.color = isTexture\n      // Textures come in with premultiplied alpha. To apply tint and still have\n      // premultiplied alpha output, we need to multiply the RGB channels by the\n      // tint RGB, and all channels by the tint alpha.\n      ? TEXTURE(uSampler, vTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n      // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n      // channels by alpha to convert it to premultiplied alpha.\n      : vec4(vColor.rgb * vColor.a, vColor.a);\n  inputs.shininess = uShininess;\n  inputs.metalness = uMetallic;\n  inputs.ambientMaterial = uHasSetAmbient ? uAmbientMatColor.rgb : inputs.color.rgb;\n  inputs.specularMaterial = uSpecularMatColor.rgb;\n  inputs.emissiveMaterial = uEmissiveMatColor.rgb;\n  inputs = HOOK_getPixelInputs(inputs);\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, inputs.normal, inputs.shininess, inputs.metalness, diffuse, specular);\n\n  // Calculating final color as result of all lights (plus emissive term).\n\n  vec2 texCoord = inputs.texCoord;\n  vec4 baseColor = inputs.color;\n  ColorComponents c;\n  c.opacity = baseColor.a;\n  c.baseColor = baseColor.rgb;\n  c.ambientColor = inputs.ambientMaterial;\n  c.specularColor = inputs.specularMaterial;\n  c.diffuse = diffuse;\n  c.ambient = inputs.ambientLight;\n  c.specular = specular;\n  c.emissive = inputs.emissiveMaterial;\n  OUT_COLOR = HOOK_getFinalColor(HOOK_combineColors(c));\n  HOOK_afterFragment();\n}\n", fontVert: "IN vec3 aPosition;\nIN vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nOUT vec2 vTexCoord;\nOUT float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // Expand glyph bounding boxes by 1px on each side to give a bit of room\n  // for antialiasing\n  vec3 newOrigin = (uModelViewMatrix * vec4(0., 0., 0., 1.)).xyz;\n  vec3 newDX = (uModelViewMatrix * vec4(1., 0., 0., 1.)).xyz;\n  vec3 newDY = (uModelViewMatrix * vec4(0., 1., 0., 1.)).xyz;\n  vec2 pixelScale = vec2(\n    1. / length(newOrigin - newDX),\n    1. / length(newOrigin - newDY)\n  );\n  vec2 offset = pixelScale * normalize(aTexCoord - vec2(0.5, 0.5)) * vec2(1., -1.);\n  vec2 textureOffset = offset * (1. / vec2(\n    uGlyphRect.z - uGlyphRect.x,\n    uGlyphRect.w - uGlyphRect.y\n  ));\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n\n  positionVec4.xy += offset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord + textureOffset;\n  w = gl_Position.w;\n}\n", fontFrag: "#ifndef WEBGL2\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#if 0\n  // simulate integer math using floats\n	#define int float\n	#define ivec2 vec2\n	#define INT(x) float(x)\n\n	int ifloor(float v) { return floor(v); }\n	ivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n	precision highp int;\n	#define INT(x) x\n\n	int ifloor(float v) { return int(v); }\n	int ifloor(int v) { return v; }\n	ivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nIN vec2 vTexCoord;\n\n// some helper functions\nint ROUND(float v) { return ifloor(v + 0.5); }\nivec2 ROUND(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = ROUND(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return TEXTURE(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  OUT_COLOR = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n  OUT_COLOR *= saturate(max(antialias, cover));\n}\n", lineVert: T + "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nprecision mediump int;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform bool uUseLineColor;\nuniform vec4 uMaterialColor;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\nuniform int uStrokeJoin;\n\nIN vec4 aPosition;\nIN vec3 aTangentIn;\nIN vec3 aTangentOut;\nIN float aSide;\nIN vec4 aVertexColor;\n\nOUT vec4 vColor;\nOUT vec2 vTangent;\nOUT vec2 vCenter;\nOUT vec2 vPosition;\nOUT float vMaxDist;\nOUT float vCap;\nOUT float vJoin;\nOUT float vStrokeWeight;\n\nvec2 lineIntersection(vec2 aPoint, vec2 aDir, vec2 bPoint, vec2 bDir) {\n  // Rotate and translate so a starts at the origin and goes out to the right\n  bPoint -= aPoint;\n  vec2 rotatedBFrom = vec2(\n    bPoint.x*aDir.x + bPoint.y*aDir.y,\n    bPoint.y*aDir.x - bPoint.x*aDir.y\n  );\n  vec2 bTo = bPoint + bDir;\n  vec2 rotatedBTo = vec2(\n    bTo.x*aDir.x + bTo.y*aDir.y,\n    bTo.y*aDir.x - bTo.x*aDir.y\n  );\n  float intersectionDistance =\n    rotatedBTo.x + (rotatedBFrom.x - rotatedBTo.x) * rotatedBTo.y /\n    (rotatedBTo.y - rotatedBFrom.y);\n  return aPoint + aDir * intersectionDistance;\n}\n\nvoid main() {\n  HOOK_beforeVertex();\n  // Caps have one of either the in or out tangent set to 0\n  vCap = (aTangentIn == vec3(0.)) != (aTangentOut == (vec3(0.)))\n    ? 1. : 0.;\n\n  // Joins have two unique, defined tangents\n  vJoin = (\n    aTangentIn != vec3(0.) &&\n    aTangentOut != vec3(0.) &&\n    aTangentIn != aTangentOut\n  ) ? 1. : 0.;\n\n  vec4 localPosition = vec4(HOOK_getLocalPosition(aPosition.xyz), 1.);\n  vec4 posp = vec4(HOOK_getWorldPosition((uModelViewMatrix * localPosition).xyz), 1.);\n  vec4 posqIn = posp + uModelViewMatrix * vec4(aTangentIn, 0);\n  vec4 posqOut = posp + uModelViewMatrix * vec4(aTangentOut, 0);\n  float strokeWeight = HOOK_getStrokeWeight(uStrokeWeight);\n  vStrokeWeight = strokeWeight;\n\n  float facingCamera = pow(\n    // The word space tangent's z value is 0 if it's facing the camera\n    abs(normalize(posqIn-posp).z),\n\n    // Using pow() here to ramp `facingCamera` up from 0 to 1 really quickly\n    // so most lines get scaled and don't get clipped\n    0.25\n  );\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // A mix of scaling and offsetting is used based on distance\n  // Discussion here:\n  // https://github.com/processing/p5.js/issues/7200 \n\n  // using a scale <1 moves the lines towards nearby camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  float zDistance = -posp.z; \n  float distanceFactor = smoothstep(0.0, 800.0, zDistance); \n  \n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  float scale = mix(1., 0.995, facingCamera);\n  float dynamicScale = mix(scale, 1.0, distanceFactor); // Closer = more scale, farther = less\n\n  posp.xyz = posp.xyz * dynamicScale;\n  posqIn.xyz = posqIn.xyz * dynamicScale;\n  posqOut.xyz = posqOut.xyz * dynamicScale;\n\n  // Moving vertices slightly toward camera when far away \n  // https://github.com/processing/p5.js/issues/6956 \n  float zOffset = mix(-0.00045, -1., facingCamera);\n  float dynamicZAdjustment = mix(0.0, zOffset, distanceFactor); // Closer = less zAdjustment, farther = more\n\n  posp.z -= dynamicZAdjustment;\n  posqIn.z -= dynamicZAdjustment;\n  posqOut.z -= dynamicZAdjustment;\n  \n  vec4 p = uProjectionMatrix * posp;\n  vec4 qIn = uProjectionMatrix * posqIn;\n  vec4 qOut = uProjectionMatrix * posqOut;\n  vCenter = HOOK_getLineCenter(p.xy);\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangentIn = normalize((qIn.xy*p.w - p.xy*qIn.w) * uViewport.zw);\n  vec2 tangentOut = normalize((qOut.xy*p.w - p.xy*qOut.w) * uViewport.zw);\n\n  vec2 curPerspScale;\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n\n    // The y value of the projection matrix may be flipped if rendering to a Framebuffer.\n    // Multiplying again by its sign here negates the flip to get just the scale.\n    curPerspScale = (uProjectionMatrix * vec4(1, sign(uProjectionMatrix[1][1]), 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  vec2 offset;\n  if (vJoin == 1.) {\n    vTangent = normalize(tangentIn + tangentOut);\n    vec2 normalIn = vec2(-tangentIn.y, tangentIn.x);\n    vec2 normalOut = vec2(-tangentOut.y, tangentOut.x);\n    float side = sign(aSide);\n    float sideEnum = abs(aSide);\n\n    // We generate vertices for joins on either side of the centerline, but\n    // the \"elbow\" side is the only one needing a join. By not setting the\n    // offset for the other side, all its vertices will end up in the same\n    // spot and not render, effectively discarding it.\n    if (sign(dot(tangentOut, vec2(-tangentIn.y, tangentIn.x))) != side) {\n      // Side enums:\n      //   1: the side going into the join\n      //   2: the middle of the join\n      //   3: the side going out of the join\n      if (sideEnum == 2.) {\n        // Calculate the position + tangent on either side of the join, and\n        // find where the lines intersect to find the elbow of the join\n        vec2 c = (posp.xy/posp.w + vec2(1.,1.)) * 0.5 * uViewport.zw;\n        vec2 intersection = lineIntersection(\n          c + (side * normalIn * strokeWeight / 2.),\n          tangentIn,\n          c + (side * normalOut * strokeWeight / 2.),\n          tangentOut\n        );\n        offset = (intersection - c);\n\n        // When lines are thick and the angle of the join approaches 180, the\n        // elbow might be really far from the center. We'll apply a limit to\n        // the magnitude to avoid lines going across the whole screen when this\n        // happens.\n        float mag = length(offset);\n        float maxMag = 3. * strokeWeight;\n        if (mag > maxMag) {\n          offset *= maxMag / mag;\n        }\n      } else if (sideEnum == 1.) {\n        offset = side * normalIn * strokeWeight / 2.;\n      } else if (sideEnum == 3.) {\n        offset = side * normalOut * strokeWeight / 2.;\n      }\n    }\n    if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 avgNormal = vec2(-vTangent.y, vTangent.x);\n      vMaxDist = abs(dot(avgNormal, normalIn * strokeWeight / 2.));\n    } else {\n      vMaxDist = strokeWeight / 2.;\n    }\n  } else {\n    vec2 tangent = aTangentIn == vec3(0.) ? tangentOut : tangentIn;\n    vTangent = tangent;\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    float normalOffset = sign(aSide);\n    // Caps will have side values of -2 or 2 on the edge of the cap that\n    // extends out from the line\n    float tangentOffset = abs(aSide) - 1.;\n    offset = (normal * normalOffset + tangent * tangentOffset) *\n      strokeWeight * 0.5;\n    vMaxDist = strokeWeight / 2.;\n  }\n  vPosition = HOOK_getLinePosition(vCenter + offset);\n\n  gl_Position.xy = p.xy + offset.xy * curPerspScale;\n  gl_Position.zw = p.zw;\n  \n  vColor = HOOK_getVertexColor(uUseLineColor ? aVertexColor : uMaterialColor);\n  HOOK_afterVertex();\n}\n", lineFrag: T + "precision mediump int;\n\nuniform vec4 uMaterialColor;\nuniform int uStrokeCap;\nuniform int uStrokeJoin;\n\nIN vec4 vColor;\nIN vec2 vTangent;\nIN vec2 vCenter;\nIN vec2 vPosition;\nIN float vStrokeWeight;\nIN float vMaxDist;\nIN float vCap;\nIN float vJoin;\n\nfloat distSquared(vec2 a, vec2 b) {\n  vec2 aToB = b - a;\n  return dot(aToB, aToB);\n}\n\nstruct Inputs {\n  vec4 color;\n  vec2 tangent;\n  vec2 center;\n  vec2 position;\n  float strokeWeight;\n};\n\nvoid main() {\n  HOOK_beforeFragment();\n\n  Inputs inputs;\n  inputs.color = vColor;\n  inputs.tangent = vTangent;\n  inputs.center = vCenter;\n  inputs.position = vPosition;\n  inputs.strokeWeight = vStrokeWeight;\n  inputs = HOOK_getPixelInputs(inputs);\n\n  if (vCap > 0.) {\n    if (\n      uStrokeCap == STROKE_CAP_ROUND &&\n      HOOK_shouldDiscard(distSquared(inputs.position, inputs.center) > inputs.strokeWeight * inputs.strokeWeight * 0.25)\n    ) {\n      discard;\n    } else if (\n      uStrokeCap == STROKE_CAP_SQUARE &&\n      HOOK_shouldDiscard(dot(inputs.position - inputs.center, inputs.tangent) > 0.)\n    ) {\n      discard;\n    // Use full area for PROJECT\n    } else if (HOOK_shouldDiscard(false)) {\n      discard;\n    }\n  } else if (vJoin > 0.) {\n    if (\n      uStrokeJoin == STROKE_JOIN_ROUND &&\n      HOOK_shouldDiscard(distSquared(inputs.position, inputs.center) > inputs.strokeWeight * inputs.strokeWeight * 0.25)\n    ) {\n      discard;\n    } else if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 normal = vec2(-inputs.tangent.y, inputs.tangent.x);\n      if (HOOK_shouldDiscard(abs(dot(inputs.position - inputs.center, normal)) > vMaxDist)) {\n        discard;\n      }\n    // Use full area for MITER\n    } else if (HOOK_shouldDiscard(false)) {\n      discard;\n    }\n  }\n  OUT_COLOR = HOOK_getFinalColor(vec4(inputs.color.rgb, 1.) * inputs.color.a);\n  HOOK_afterFragment();\n}\n", pointVert: "IN vec3 aPosition;\nuniform float uPointSize;\nOUT float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvoid main() {\n  HOOK_beforeVertex();\n  vec4 viewModelPosition = vec4(HOOK_getWorldPosition(\n    (uModelViewMatrix * vec4(HOOK_getLocalPosition(aPosition), 1.0)).xyz\n  ), 1.);\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  float pointSize = HOOK_getPointSize(uPointSize);\n\n	gl_PointSize = pointSize;\n	vStrokeWeight = pointSize;\n  HOOK_afterVertex();\n}\n", pointFrag: "precision mediump int;\nuniform vec4 uMaterialColor;\nIN float vStrokeWeight;\n\nvoid main(){\n  HOOK_beforeFragment();\n  float mask = 0.0;\n\n  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n  // if strokeWeight is 1 or less lets just draw a square\n  // this prevents weird artifacting from carving circles when our points are really small\n  // if strokeWeight is larger than 1, we just use it as is\n\n  mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n  // throw away the borders of the mask\n  // otherwise we get weird alpha blending issues\n\n  if(HOOK_shouldDiscard(mask > 0.98)){\n    discard;\n  }\n\n  OUT_COLOR = HOOK_getFinalColor(vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a);\n  HOOK_afterFragment();\n}\n", imageLightVert: "precision highp float;\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nvarying vec3 localPos;\nvarying vec3 vWorldNormal;\nvarying vec3 vWorldPosition;\nvarying vec2 vTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvoid main() {\n  // Multiply the position by the matrix.\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n  \n  // orient the normals and pass to the fragment shader\n  vWorldNormal = uNormalMatrix * aNormal;\n  \n  // send the view position to the fragment shader\n  vWorldPosition = (uModelViewMatrix * vec4(aPosition, 1.0)).xyz;\n  \n  localPos = vWorldPosition;\n  vTexCoord = aTexCoord;\n}\n\n\n/*\nin the vertex shader we'll compute the world position and world oriented normal of the vertices and pass those to the fragment shader as varyings.\n*/\n", imageLightDiffusedFrag: "precision highp float;\nvarying vec3 localPos;\n\n// the HDR cubemap converted (can be from an equirectangular environment map.)\nuniform sampler2D environmentMap;\nvarying vec2 vTexCoord;\n\nconst float PI = 3.14159265359;\n\nvec2 nTOE( vec3 v ){\n  // x = r sin(phi) cos(theta)   \n  // y = r cos(phi)  \n  // z = r sin(phi) sin(theta)\n  float phi = acos( v.y );\n  // if phi is 0, then there are no x, z components\n  float theta = 0.0;\n  // else \n  theta = acos(v.x / sin(phi));\n  float sinTheta = v.z / sin(phi);\n  if (sinTheta < 0.0) {\n    // Turn it into -theta, but in the 0-2PI range\n    theta = 2.0 * PI - theta;\n  }\n  theta = theta / (2.0 * 3.14159);\n  phi = phi / 3.14159 ;\n  \n  vec2 angles = vec2( phi, theta );\n  return angles;\n}\n\nfloat random(vec2 p) {\n  vec3 p3  = fract(vec3(p.xyx) * .1031);\n  p3 += dot(p3, p3.yzx + 33.33);\n  return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid main()\n{   	 \n	// the sample direction equals the hemisphere's orientation\n  float phi = vTexCoord.x * 2.0 * PI;\n  float theta = vTexCoord.y * PI;\n  float x = sin(theta) * cos(phi);\n  float y = sin(theta) * sin(phi);\n  float z = cos(theta);\n  vec3 normal = vec3( x, y, z);\n\n	// Discretely sampling the hemisphere given the integral's\n  // spherical coordinates translates to the following fragment code:\n	vec3 irradiance = vec3(0.0);  \n	vec3 up	= vec3(0.0, 1.0, 0.0);\n	vec3 right = normalize(cross(up, normal));\n	up = normalize(cross(normal, right));\n\n	//  We specify a fixed sampleDelta delta value to traverse\n  // the hemisphere; decreasing or increasing the sample delta\n  // will increase or decrease the accuracy respectively.\n	const float sampleDelta = 0.100;\n	float nrSamples = 0.0;\n  float randomOffset = random(gl_FragCoord.xy) * sampleDelta;\n	for(float rawPhi = 0.0; rawPhi < 2.0 * PI; rawPhi += sampleDelta)\n	{\n    float phi = rawPhi + randomOffset;\n    for(float rawTheta = 0.0; rawTheta < ( 0.5 ) * PI; rawTheta += sampleDelta)\n    {\n      float theta = rawTheta + randomOffset;\n      // spherical to cartesian (in tangent space) // tangent space to world // add each sample result to irradiance\n      float x = sin(theta) * cos(phi);\n      float y = sin(theta) * sin(phi);\n      float z = cos(theta);\n      vec3 tangentSample = vec3( x, y, z);\n      \n      vec3 sampleVec = tangentSample.x * right + tangentSample.y * up + tangentSample.z * normal;\n        irradiance += (texture2D(environmentMap, nTOE(sampleVec)).xyz) * cos(theta) * sin(theta);\n      nrSamples++;\n    }\n	}\n	// divide by the total number of samples taken, giving us the average sampled irradiance.\n	irradiance = PI * irradiance * (1.0 / float(nrSamples )) ;\n  \n \n	gl_FragColor = vec4(irradiance, 1.0);\n}", imageLightSpecularFrag: "precision highp float;\r\nvarying vec3 localPos;\r\nvarying vec2 vTexCoord;\r\n\r\n// our texture\r\nuniform sampler2D environmentMap;\r\nuniform float roughness;\r\n\r\nconst float PI = 3.14159265359;\r\n\r\nfloat VanDerCorput(int bits);\r\nvec2 HammersleyNoBitOps(int i, int N);\r\nvec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness);\r\n\r\n\r\nvec2 nTOE( vec3 v ){\r\n  // x = r sin(phi) cos(theta)   \r\n  // y = r cos(phi)  \r\n  // z = r sin(phi) sin(theta)\r\n  float phi = acos( v.y );\r\n  // if phi is 0, then there are no x, z components\r\n  float theta = 0.0;\r\n  // else \r\n  theta = acos(v.x / sin(phi));\r\n  float sinTheta = v.z / sin(phi);\r\n  if (sinTheta < 0.0) {\r\n    // Turn it into -theta, but in the 0-2PI range\r\n    theta = 2.0 * PI - theta;\r\n  }\r\n  theta = theta / (2.0 * 3.14159);\r\n  phi = phi / 3.14159 ;\r\n  \r\n  vec2 angles = vec2( phi, theta );\r\n  return angles;\r\n}\r\n\r\n\r\nvoid main(){\r\n  const int SAMPLE_COUNT = 400; // 4096\r\n  int lowRoughnessLimit = int(pow(2.0,(roughness+0.1)*20.0));\r\n  float totalWeight = 0.0;\r\n  vec3 prefilteredColor = vec3(0.0);\r\n  float phi = vTexCoord.x * 2.0 * PI;\r\n  float theta = vTexCoord.y * PI;\r\n  float x = sin(theta) * cos(phi);\r\n  float y = sin(theta) * sin(phi);\r\n  float z = cos(theta);\r\n  vec3 N = vec3(x,y,z);\r\n  vec3 V = N;\r\n  for (int i = 0; i < SAMPLE_COUNT; ++i)\r\n  {\r\n    // break at smaller sample numbers for low roughness levels\r\n    if(i == lowRoughnessLimit)\r\n    {\r\n      break;\r\n    }\r\n    vec2 Xi = HammersleyNoBitOps(i, SAMPLE_COUNT);\r\n    vec3 H = ImportanceSampleGGX(Xi, N, roughness);\r\n    vec3 L = normalize(2.0 * dot(V, H) * H - V);\r\n\r\n    float NdotL = max(dot(N, L), 0.0);\r\n    if (NdotL > 0.0)\r\n    {\r\n      prefilteredColor += texture2D(environmentMap, nTOE(L)).xyz * NdotL;\r\n      totalWeight += NdotL;\r\n    }\r\n  }\r\n  prefilteredColor = prefilteredColor / totalWeight;\r\n\r\n  gl_FragColor = vec4(prefilteredColor, 1.0);\r\n}\r\n\r\nvec3 ImportanceSampleGGX(vec2 Xi, vec3 N, float roughness){\r\n  float a = roughness * roughness;\r\n\r\n  float phi = 2.0 * PI * Xi.x;\r\n  float cosTheta = sqrt((1.0 - Xi.y) / (1.0 + (a * a - 1.0) * Xi.y));\r\n  float sinTheta = sqrt(1.0 - cosTheta * cosTheta);\r\n  // from spherical coordinates to cartesian coordinates\r\n  vec3 H;\r\n  H.x = cos(phi) * sinTheta;\r\n  H.y = sin(phi) * sinTheta;\r\n  H.z = cosTheta;\r\n\r\n  // from tangent-space vector to world-space sample vector\r\n  vec3 up = abs(N.z) < 0.999 ? vec3(0.0, 0.0, 1.0) : vec3(1.0, 0.0, 0.0);\r\n  vec3 tangent = normalize(cross(up, N));\r\n  vec3 bitangent = cross(N, tangent);\r\n\r\n  vec3 sampleVec = tangent * H.x + bitangent * H.y + N * H.z;\r\n  return normalize(sampleVec);\r\n}\r\n\r\n\r\nfloat VanDerCorput(int n, int base)\r\n{\r\n#ifdef WEBGL2\r\n\r\n    uint bits = uint(n);\r\n    bits = (bits << 16u) | (bits >> 16u);\r\n    bits = ((bits & 0x55555555u) << 1u) | ((bits & 0xAAAAAAAAu) >> 1u);\r\n    bits = ((bits & 0x33333333u) << 2u) | ((bits & 0xCCCCCCCCu) >> 2u);\r\n    bits = ((bits & 0x0F0F0F0Fu) << 4u) | ((bits & 0xF0F0F0F0u) >> 4u);\r\n    bits = ((bits & 0x00FF00FFu) << 8u) | ((bits & 0xFF00FF00u) >> 8u);\r\n    return float(bits) * 2.3283064365386963e-10; // / 0x100000000\r\n\r\n#else\r\n\r\n  float invBase = 1.0 / float(base);\r\n  float denom = 1.0;\r\n  float result = 0.0;\r\n\r\n\r\n  for (int i = 0; i < 32; ++i)\r\n  {\r\n        if (n > 0)\r\n        {\r\n        denom = mod(float(n), 2.0);\r\n        result += denom * invBase;\r\n        invBase = invBase / 2.0;\r\n        n = int(float(n) / 2.0);\r\n        }\r\n  }\r\n\r\n\r\n  return result;\r\n\r\n#endif\r\n}\r\n\r\nvec2 HammersleyNoBitOps(int i, int N)\r\n{\r\n  return vec2(float(i) / float(N), VanDerCorput(i, 2));\r\n}\r\n" }, M = E.sphereMappingFrag;
      for (x2 in E) E[x2] = "#ifdef WEBGL2\n\n#define IN in\n#define OUT out\n\n#ifdef FRAGMENT_SHADER\nout vec4 outColor;\n#define OUT_COLOR outColor\n#endif\n#define TEXTURE texture\n\n#else\n\n#ifdef FRAGMENT_SHADER\n#define IN varying\n#else\n#define IN attribute\n#endif\n#define OUT varying\n#define TEXTURE texture2D\n\n#ifdef FRAGMENT_SHADER\n#define OUT_COLOR gl_FragColor\n#endif\n\n#endif\n" + E[x2];
      _(e2 = {}, l.GRAY, "precision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  return dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\n\nvoid main() {\n  vec4 tex = texture2D(tex0, vTexCoord);\n  float gray = luma(tex.rgb);\n  gl_FragColor = vec4(gray, gray, gray, tex.a);\n}\n"), _(e2, l.ERODE, "// Reduces the bright areas in an image\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform vec2 texelSize;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  // weights 77, 151, 28 taken from src/image/filters.js\n  return dot(color, vec3(0.300781, 0.589844, 0.109375));\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  float lum = luma(color.rgb);\n\n  // set current color as the darkest neighbor color\n\n  vec4 neighbors[4];\n  neighbors[0] = texture2D(tex0, vTexCoord + vec2( texelSize.x, 0.0));\n  neighbors[1] = texture2D(tex0, vTexCoord + vec2(-texelSize.x, 0.0));\n  neighbors[2] = texture2D(tex0, vTexCoord + vec2(0.0,  texelSize.y));\n  neighbors[3] = texture2D(tex0, vTexCoord + vec2(0.0, -texelSize.y));\n\n  for (int i = 0; i < 4; i++) {\n    vec4 neighborColor = neighbors[i];\n    float neighborLum = luma(neighborColor.rgb);\n\n    if (neighborLum < lum) {\n      color = neighborColor;\n      lum = neighborLum;\n    }\n  }\n\n  gl_FragColor = color;\n}\n"), _(e2, l.DILATE, "// Increase the bright areas in an image\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform vec2 texelSize;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  // weights 77, 151, 28 taken from src/image/filters.js\n  return dot(color, vec3(0.300781, 0.589844, 0.109375));\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  float lum = luma(color.rgb);\n\n  // set current color as the brightest neighbor color\n\n  vec4 neighbors[4];\n  neighbors[0] = texture2D(tex0, vTexCoord + vec2( texelSize.x, 0.0));\n  neighbors[1] = texture2D(tex0, vTexCoord + vec2(-texelSize.x, 0.0));\n  neighbors[2] = texture2D(tex0, vTexCoord + vec2(0.0,  texelSize.y));\n  neighbors[3] = texture2D(tex0, vTexCoord + vec2(0.0, -texelSize.y));\n\n  for (int i = 0; i < 4; i++) {\n    vec4 neighborColor = neighbors[i];\n    float neighborLum = luma(neighborColor.rgb);\n\n    if (neighborLum > lum) {\n      color = neighborColor;\n      lum = neighborLum;\n    }\n  }\n\n  gl_FragColor = color;\n}\n"), _(e2, l.BLUR, "precision highp float;\n\n// Two-pass blur filter, unweighted kernel.\n// See also a similar blur at Adam Ferriss' repo of shader examples:\n// https://github.com/aferriss/p5jsShaderExamples/blob/gh-pages/4_image-effects/4-9_single-pass-blur/effect.frag\n\n\nuniform sampler2D tex0;\nvarying vec2 vTexCoord;\nuniform vec2 direction;\nuniform vec2 canvasSize;\nuniform float radius;\n\nfloat random(vec2 p) {\n  vec3 p3  = fract(vec3(p.xyx) * .1031);\n  p3 += dot(p3, p3.yzx + 33.33);\n  return fract((p3.x + p3.y) * p3.z);\n}\n\n// This isn't a real Gaussian weight, it's a quadratic weight. It's what the\n// CPU mode's blur uses though, so we also use it here to match.\nfloat quadWeight(float x, float e) {\n  return pow(e-abs(x), 2.);\n}\n\nvoid main(){\n  vec2 uv = vTexCoord;\n\n  // A reasonable maximum number of samples\n  const float maxSamples = 64.0;\n\n  float numSamples = floor(7. * radius);\n  if (fract(numSamples / 2.) == 0.) {\n    numSamples++;\n  }\n  vec4 avg = vec4(0.0);\n  float total = 0.0;\n\n  // Calculate the spacing to avoid skewing if numSamples > maxSamples\n  float spacing = 1.0;\n  if (numSamples > maxSamples) {\n    spacing = numSamples / maxSamples;\n    numSamples = maxSamples;\n  }\n\n  float randomOffset = (spacing - 1.0) * mix(-0.5, 0.5, random(gl_FragCoord.xy));\n  for (float i = 0.0; i < maxSamples; i++) {\n    if (i >= numSamples) break;\n\n    float sample = i * spacing - (numSamples - 1.0) * 0.5 * spacing + randomOffset;\n    vec2 sampleCoord = uv + vec2(sample, sample) / canvasSize * direction;\n    float weight = quadWeight(sample, (numSamples - 1.0) * 0.5 * spacing);\n\n    avg += weight * texture2D(tex0, sampleCoord);\n    total += weight;\n  }\n\n  avg /= total;\n  gl_FragColor = avg;\n}\n"), _(e2, l.POSTERIZE, "// Limit color space for a stylized cartoon / poster effect\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform float filterParameter;\n\nvec3 quantize(vec3 color, float n) {\n  // restrict values to N options/bins\n  // and floor each channel to nearest value\n  //\n  // eg. when N = 5, values = 0.0, 0.25, 0.50, 0.75, 1.0\n  // then quantize (0.1, 0.7, 0.9) -> (0.0, 0.5, 1.0)\n\n  color = color * n;\n  color = floor(color);\n  color = color / (n - 1.0);\n  return color;\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n\n  vec3 restrictedColor = quantize(color.rgb / color.a, filterParameter);\n\n  gl_FragColor = vec4(restrictedColor.rgb * color.a, color.a);\n}\n"), _(e2, l.OPAQUE, "// Set alpha channel to entirely opaque\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  gl_FragColor = vec4(color.rgb / color.a, 1.0);\n}\n"), _(e2, l.INVERT, "// Set each pixel to inverse value\n// Note that original INVERT does not change the opacity, so this follows suit\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\n\nvoid main() {\nvec4 color = texture2D(tex0, vTexCoord);\nvec3 origColor = color.rgb / color.a;\nvec3 invertedColor = vec3(1.0) - origColor;\ngl_FragColor = vec4(invertedColor * color.a, color.a);\n}\n"), _(e2, l.THRESHOLD, "// Convert pixels to either white or black, \n// depending on if their luma is above or below filterParameter\n\nprecision highp float;\n\nvarying vec2 vTexCoord;\n\nuniform sampler2D tex0;\nuniform float filterParameter;\n\nfloat luma(vec3 color) {\n  // weighted grayscale with luminance values\n  return dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\n\nvoid main() {\n  vec4 color = texture2D(tex0, vTexCoord);\n  float gray = luma(color.rgb / color.a);\n  // floor() used to match src/image/filters.js\n  float threshold = floor(filterParameter * 255.0) / 255.0;\n  float blackOrWhite = step(threshold, gray);\n  gl_FragColor = vec4(vec3(blackOrWhite) * color.a, color.a);\n}\n");
      var k = e2;
      function O(e3, t2, r2, o3, n2, s3, i2, a3, l2, u2) {
        var c2 = t2.getParameter(t2.FRAMEBUFFER_BINDING), r2 = (t2.bindFramebuffer(t2.FRAMEBUFFER, r2), a3 === t2.RGBA ? 4 : 3), d2 = s3 * i2 * r2, h2 = l2 === t2.UNSIGNED_BYTE ? Uint8Array : Float32Array;
        if (e3 instanceof h2 && e3.length === d2 || (e3 = new h2(d2)), t2.readPixels(o3, u2 ? u2 - n2 - i2 : n2, s3, i2, a3, l2, e3), t2.bindFramebuffer(t2.FRAMEBUFFER, c2), u2) for (var f2 = Math.floor(i2 / 2), p2 = new h2(s3 * r2), m2 = 0; m2 < f2; m2++) {
          var y2 = m2 * s3 * 4, g2 = (i2 - m2 - 1) * s3 * 4;
          p2.set(e3.subarray(y2, y2 + 4 * s3)), e3.copyWithin(y2, g2, g2 + 4 * s3), e3.set(p2, g2);
        }
        return e3;
      }
      function C(e3, t2, r2, o3, n2, s3, i2) {
        var a3 = e3.getParameter(e3.FRAMEBUFFER_BINDING), t2 = (e3.bindFramebuffer(e3.FRAMEBUFFER, t2), n2 === e3.RGBA ? 4 : 3), t2 = new (s3 === e3.UNSIGNED_BYTE ? Uint8Array : Float32Array)(t2);
        return e3.readPixels(r2, i2 ? i2 - o3 - 1 : o3, 1, 1, n2, s3, t2), e3.bindFramebuffer(e3.FRAMEBUFFER, a3), Array.from(t2);
      }
      g.default.prototype.setAttributes = function(e3, t2) {
        if (void 0 === this._glAttributes) console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");
        else {
          var r2 = true;
          if (void 0 !== t2 ? (null === this._glAttributes && (this._glAttributes = {}), this._glAttributes[e3] !== t2 && (this._glAttributes[e3] = t2, r2 = false)) : e3 instanceof Object && this._glAttributes !== e3 && (this._glAttributes = e3, r2 = false), this._renderer.isP3D && !r2) {
            if (!this._setupDone) {
              for (var o3 in this._renderer.retainedMode.geometry) if (this._renderer.retainedMode.geometry.hasOwnProperty(o3)) return void g.default._friendlyError("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
            }
            this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
          }
        }
      }, g.default.RendererGL = function(e3) {
        var t2 = s3;
        if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e3 && m(t2, e3);
        var n2 = y(s3);
        function s3(e4, t3, r2, o3) {
          if (this instanceof s3) return (e4 = n2.call(this, e4, t3, r2))._setAttributeDefaults(t3), e4._initContext(), e4.isP3D = true, e4.geometryBuilder = void 0, e4.GL = e4.drawingContext, e4._pInst._setProperty("drawingContext", e4.drawingContext), e4._isErasing = false, e4._clipDepths = [], e4._isClipApplied = false, e4._stencilTestOn = false, e4._enableLighting = false, e4.ambientLightColors = [], e4.mixedAmbientLight = [], e4.mixedSpecularColor = [], e4.specularColors = [1, 1, 1], e4.directionalLightDirections = [], e4.directionalLightDiffuseColors = [], e4.directionalLightSpecularColors = [], e4.pointLightPositions = [], e4.pointLightDiffuseColors = [], e4.pointLightSpecularColors = [], e4.spotLightPositions = [], e4.spotLightDirections = [], e4.spotLightDiffuseColors = [], e4.spotLightSpecularColors = [], e4.spotLightAngle = [], e4.spotLightConc = [], e4.activeImageLight = null, e4.diffusedTextures = /* @__PURE__ */ new Map(), e4.specularTextures = /* @__PURE__ */ new Map(), e4.drawMode = l.FILL, e4.curFillColor = e4._cachedFillStyle = [1, 1, 1, 1], e4.curAmbientColor = e4._cachedFillStyle = [1, 1, 1, 1], e4.curSpecularColor = e4._cachedFillStyle = [0, 0, 0, 0], e4.curEmissiveColor = e4._cachedFillStyle = [0, 0, 0, 0], e4.curStrokeColor = e4._cachedStrokeStyle = [0, 0, 0, 1], e4.curBlendMode = l.BLEND, e4.preEraseBlend = void 0, e4._cachedBlendMode = void 0, e4.webglVersion === l.WEBGL2 ? e4.blendExt = e4.GL : e4.blendExt = e4.GL.getExtension("EXT_blend_minmax"), e4._isBlending = false, e4._hasSetAmbient = false, e4._useSpecularMaterial = false, e4._useEmissiveMaterial = false, e4._useNormalMaterial = false, e4._useShininess = 1, e4._useMetalness = 0, e4._useLineColor = false, e4._useVertexColor = false, e4.registerEnabled = /* @__PURE__ */ new Set(), e4._tint = [255, 255, 255, 255], e4.constantAttenuation = 1, e4.linearAttenuation = 0, e4.quadraticAttenuation = 0, e4.uModelMatrix = new g.default.Matrix(), e4.uViewMatrix = new g.default.Matrix(), e4.uMVMatrix = new g.default.Matrix(), e4.uPMatrix = new g.default.Matrix(), e4.uNMatrix = new g.default.Matrix("mat3"), e4.curMatrix = new g.default.Matrix("mat3"), e4._currentNormal = new g.default.Vector(0, 0, 1), e4._curCamera = new g.default.Camera(v(e4)), e4._curCamera._computeCameraDefaultSettings(), e4._curCamera._setDefaultCamera(), e4.filterCamera = new g.default.Camera(v(e4)), e4.filterCamera._computeCameraDefaultSettings(), e4.filterCamera._setDefaultCamera(), e4.prevTouches = [], e4.zoomVelocity = 0, e4.rotateVelocity = new g.default.Vector(0, 0), e4.moveVelocity = new g.default.Vector(0, 0), e4.executeZoom = false, e4.executeRotateAndMove = false, e4.specularShader = void 0, e4.sphereMapping = void 0, e4.diffusedShader = void 0, e4._defaultLightShader = void 0, e4._defaultImmediateModeShader = void 0, e4._defaultNormalShader = void 0, e4._defaultColorShader = void 0, e4._defaultPointShader = void 0, e4.userFillShader = void 0, e4.userStrokeShader = void 0, e4.userPointShader = void 0, e4.retainedMode = { geometry: {}, buffers: { stroke: [new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", v(e4)), new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", v(e4)), new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", v(e4)), new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", v(e4))], fill: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", v(e4), e4._vToNArray), new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", v(e4), e4._vToNArray), new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", v(e4)), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", v(e4), e4._flatten)], text: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", v(e4), e4._vToNArray), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", v(e4), e4._flatten)] } }, e4.immediateMode = { geometry: new g.default.Geometry(), shapeMode: l.TRIANGLE_FAN, contourIndices: [], _bezierVertex: [], _quadraticVertex: [], _curveVertex: [], buffers: { fill: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", v(e4), e4._vToNArray), new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", v(e4), e4._vToNArray), new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", v(e4)), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", v(e4), e4._flatten)], stroke: [new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", v(e4)), new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", v(e4)), new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", v(e4)), new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", v(e4)), new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", v(e4))], point: e4.GL.createBuffer() } }, e4.pointSize = 5, e4.curStrokeWeight = 1, e4.curStrokeCap = l.ROUND, e4.curStrokeJoin = l.ROUND, e4.textures = /* @__PURE__ */ new Map(), e4.framebuffers = /* @__PURE__ */ new Set(), e4.activeFramebuffers = [], e4.filterShader = void 0, e4.filterLayer = void 0, e4.filterLayerTemp = void 0, e4.defaultFilterShaders = {}, e4.textureMode = l.IMAGE, e4.textureWrapX = l.CLAMP, e4.textureWrapY = l.CLAMP, e4._tex = null, e4._curveTightness = 6, e4._lookUpTableBezier = [], e4._lookUpTableQuadratic = [], e4._lutBezierDetail = 0, e4._lutQuadraticDetail = 0, e4.isProcessingVertices = false, e4._tessy = e4._initTessy(), e4.fontInfos = {}, e4._curShader = void 0, e4;
          throw new TypeError("Cannot call a class as a function");
        }
        return t2 = s3, (e3 = [{ key: "beginGeometry", value: function() {
          if (this.geometryBuilder) throw new Error("It looks like `beginGeometry()` is being called while another p5.Geometry is already being build.");
          this.geometryBuilder = new a2.default(this);
        } }, { key: "endGeometry", value: function() {
          var e4;
          if (this.geometryBuilder) return e4 = this.geometryBuilder.finish(), this.geometryBuilder = void 0, e4;
          throw new Error("Make sure you call beginGeometry() before endGeometry()!");
        } }, { key: "buildGeometry", value: function(e4) {
          return this.beginGeometry(), e4(), this.endGeometry();
        } }, { key: "_setAttributeDefaults", value: function(e4) {
          var t3 = { alpha: true, depth: true, stencil: true, antialias: navigator.userAgent.toLowerCase().includes("safari"), premultipliedAlpha: true, preserveDrawingBuffer: true, perPixelLighting: true, version: 2 };
          null === e4._glAttributes ? e4._glAttributes = t3 : e4._glAttributes = Object.assign(t3, e4._glAttributes);
        } }, { key: "_initContext", value: function() {
          if (1 !== this._pInst._glAttributes.version && (this.drawingContext = this.canvas.getContext("webgl2", this._pInst._glAttributes)), this.webglVersion = this.drawingContext ? l.WEBGL2 : l.WEBGL, this._pInst._setProperty("webglVersion", this.webglVersion), this.drawingContext || (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes)), null === this.drawingContext) throw new Error("Error creating webgl context");
          var e4 = this.drawingContext;
          e4.enable(e4.DEPTH_TEST), e4.depthFunc(e4.LEQUAL), e4.viewport(0, 0, e4.drawingBufferWidth, e4.drawingBufferHeight), e4.pixelStorei(e4.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
        } }, { key: "_getParam", value: function() {
          var e4 = this.drawingContext;
          return e4.getParameter(e4.MAX_TEXTURE_SIZE);
        } }, { key: "_adjustDimensions", value: function(e4, t3) {
          this._maxTextureSize || (this._maxTextureSize = this._getParam());
          var r2 = this._maxTextureSize, r2 = (g.default.prototype._maxAllowedPixelDimensions, Math.floor(r2 / this.pixelDensity())), o3 = Math.min(e4, r2), r2 = Math.min(t3, r2);
          return o3 === e4 && r2 === t3 || console.warn("Warning: The requested width/height exceeds hardware limits. " + "Adjusting dimensions to width: ".concat(o3, ", height: ").concat(r2, ".")), { adjustedWidth: o3, adjustedHeight: r2 };
        } }, { key: "_resetContext", value: function(e4, t3) {
          var r2, o3 = this.width, n3 = this.height, s4 = this.canvas.id, i2 = this._pInst instanceof g.default.Graphics, s4 = (i2 ? ((r2 = this._pInst).canvas.parentNode.removeChild(r2.canvas), r2.canvas = document.createElement("canvas"), (r2._pInst._userNode || document.body).appendChild(r2.canvas), g.default.Element.call(r2, r2.canvas, r2._pInst), r2.width = o3, r2.height = n3) : ((r2 = this.canvas) && r2.parentNode.removeChild(r2), (r2 = document.createElement("canvas")).id = s4, (this._pInst._userNode || document.body).appendChild(r2), this._pInst.canvas = r2, this.canvas = r2), new g.default.RendererGL(this._pInst.canvas, this._pInst, !i2));
          this._pInst._setProperty("_renderer", s4), s4.resize(o3, n3), s4._applyDefaults(), i2 || this._pInst._elements.push(s4), "function" == typeof t3 && setTimeout(function() {
            t3.apply(window._renderer, e4);
          }, 0);
        } }, { key: "_update", value: function() {
          this.uModelMatrix.reset(), this.uViewMatrix.set(this._curCamera.cameraMatrix), this.ambientLightColors.length = 0, this.specularColors = [1, 1, 1], this.directionalLightDirections.length = 0, this.directionalLightDiffuseColors.length = 0, this.directionalLightSpecularColors.length = 0, this.pointLightPositions.length = 0, this.pointLightDiffuseColors.length = 0, this.pointLightSpecularColors.length = 0, this.spotLightPositions.length = 0, this.spotLightDirections.length = 0, this.spotLightDiffuseColors.length = 0, this.spotLightSpecularColors.length = 0, this.spotLightAngle.length = 0, this.spotLightConc.length = 0, this._enableLighting = false, this._tint = [255, 255, 255, 255], this.GL.clearStencil(0), this.GL.clear(this.GL.DEPTH_BUFFER_BIT | this.GL.STENCIL_BUFFER_BIT), this.GL.disable(this.GL.STENCIL_TEST);
        } }, { key: "background", value: function() {
          var e4 = (e4 = this._pInst).color.apply(e4, arguments), t3 = e4.levels[0] / 255, r2 = e4.levels[1] / 255, o3 = e4.levels[2] / 255, e4 = e4.levels[3] / 255;
          this.clear(t3, r2, o3, e4);
        } }, { key: "fill", value: function(e4, t3, r2, o3) {
          var n3 = g.default.prototype.color.apply(this._pInst, arguments);
          this.curFillColor = n3._array, this.drawMode = l.FILL, this._useNormalMaterial = false, this._tex = null;
        } }, { key: "stroke", value: function(e4, t3, r2, o3) {
          var n3 = g.default.prototype.color.apply(this._pInst, arguments);
          this.curStrokeColor = n3._array;
        } }, { key: "strokeCap", value: function(e4) {
          this.curStrokeCap = e4;
        } }, { key: "strokeJoin", value: function(e4) {
          this.curStrokeJoin = e4;
        } }, { key: "getFilterLayer", value: function() {
          return this.filterLayer || (this.filterLayer = this._pInst.createFramebuffer()), this.filterLayer;
        } }, { key: "getFilterLayerTemp", value: function() {
          return this.filterLayerTemp || (this.filterLayerTemp = this._pInst.createFramebuffer()), this.filterLayerTemp;
        } }, { key: "matchSize", value: function(e4, t3) {
          e4.width === t3.width && e4.height === t3.height || e4.resize(t3.width, t3.height), e4.pixelDensity() !== t3.pixelDensity() && e4.pixelDensity(t3.pixelDensity());
        } }, { key: "filter", value: function() {
          var e4, t3, r2 = this, o3 = this.getFilterLayer(), n3 = void 0, s4 = void 0, i2 = ("string" == typeof (arguments.length <= 0 ? void 0 : arguments[0]) ? (s4 = arguments.length <= 0 ? void 0 : arguments[0], _(e4 = {}, l.BLUR, 3), _(e4, l.POSTERIZE, 4), _(e4, l.THRESHOLD, 0.5), n3 = s4 in (e4 = e4) && void 0 === (arguments.length <= 1 ? void 0 : arguments[1]) ? e4[s4] : arguments.length <= 1 ? void 0 : arguments[1], s4 in this.defaultFilterShaders || (this.defaultFilterShaders[s4] = new g.default.Shader(o3._renderer, "uniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nattribute vec3 aPosition;\n// texcoords only come from p5 to vertex shader\n// so pass texcoords on to the fragment shader in a varying variable\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n  // transferring texcoords for the frag shader\n  vTexCoord = aTexCoord;\n\n  // copy position with a fourth coordinate for projection (1.0 is normal)\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n}\n", k[s4])), this.filterShader = this.defaultFilterShaders[s4]) : this.filterShader = arguments.length <= 0 ? void 0 : arguments[0], this.activeFramebuffer() || this), a3 = (this.matchSize(o3, i2), o3.draw(function() {
            return r2._pInst.clear();
          }), [1 / (i2.width * i2.pixelDensity()), 1 / (i2.height * i2.pixelDensity())]);
          s4 === l.BLUR ? (t3 = this.getFilterLayerTemp(), this.matchSize(t3, i2), this._pInst.push(), this._pInst.noStroke(), this._pInst.blendMode(l.BLEND), this._pInst.shader(this.filterShader), this.filterShader.setUniform("texelSize", a3), this.filterShader.setUniform("canvasSize", [i2.width, i2.height]), this.filterShader.setUniform("radius", Math.max(1, n3)), t3.draw(function() {
            r2.filterShader.setUniform("direction", [1, 0]), r2.filterShader.setUniform("tex0", i2), r2._pInst.clear(), r2._pInst.shader(r2.filterShader), r2._pInst.noLights(), r2._pInst.plane(i2.width, i2.height);
          }), o3.draw(function() {
            r2.filterShader.setUniform("direction", [0, 1]), r2.filterShader.setUniform("tex0", t3), r2._pInst.clear(), r2._pInst.shader(r2.filterShader), r2._pInst.noLights(), r2._pInst.plane(i2.width, i2.height);
          }), this._pInst.pop()) : o3.draw(function() {
            r2._pInst.noStroke(), r2._pInst.blendMode(l.BLEND), r2._pInst.shader(r2.filterShader), r2.filterShader.setUniform("tex0", i2), r2.filterShader.setUniform("texelSize", a3), r2.filterShader.setUniform("canvasSize", [i2.width, i2.height]), r2.filterShader.setUniform("filterParameter", n3), r2._pInst.noLights(), r2._pInst.plane(i2.width, i2.height);
          }), this._pInst.push(), this._pInst.noStroke(), this.clear(), this._pInst.push(), this._pInst.imageMode(l.CORNER), this._pInst.blendMode(l.BLEND), i2.filterCamera._resize(), this._pInst.setCamera(i2.filterCamera), this._pInst.resetMatrix(), this._pInst.image(o3, -i2.width / 2, -i2.height / 2, i2.width, i2.height), this._pInst.clearDepth(), this._pInst.pop(), this._pInst.pop();
        } }, { key: "pixelDensity", value: function(e4) {
          return e4 ? this._pInst.pixelDensity(e4) : this._pInst.pixelDensity();
        } }, { key: "blendMode", value: function(e4) {
          e4 === l.DARKEST || e4 === l.LIGHTEST || e4 === l.ADD || e4 === l.BLEND || e4 === l.SUBTRACT || e4 === l.SCREEN || e4 === l.EXCLUSION || e4 === l.REPLACE || e4 === l.MULTIPLY || e4 === l.REMOVE ? this.curBlendMode = e4 : e4 !== l.BURN && e4 !== l.OVERLAY && e4 !== l.HARD_LIGHT && e4 !== l.SOFT_LIGHT && e4 !== l.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
        } }, { key: "erase", value: function(e4, t3) {
          this._isErasing || (this.preEraseBlend = this.curBlendMode, this._isErasing = true, this.blendMode(l.REMOVE), this._cachedFillStyle = this.curFillColor.slice(), this.curFillColor = [1, 1, 1, e4 / 255], this._cachedStrokeStyle = this.curStrokeColor.slice(), this.curStrokeColor = [1, 1, 1, t3 / 255]);
        } }, { key: "noErase", value: function() {
          this._isErasing && (this.curFillColor = this._cachedFillStyle.slice(), this.curStrokeColor = this._cachedStrokeStyle.slice(), this.curBlendMode = this.preEraseBlend, this.blendMode(this.preEraseBlend), this._isErasing = false, this._applyBlendMode());
        } }, { key: "drawTarget", value: function() {
          return this.activeFramebuffers[this.activeFramebuffers.length - 1] || this;
        } }, { key: "beginClip", value: function() {
          var e4 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, e4 = (p(b(s3.prototype), "beginClip", this).call(this, e4), this.drawTarget()._isClipApplied = true, this.GL);
          e4.clearStencil(0), e4.clear(e4.STENCIL_BUFFER_BIT), e4.enable(e4.STENCIL_TEST), this._stencilTestOn = true, e4.stencilFunc(e4.ALWAYS, 1, 255), e4.stencilOp(e4.KEEP, e4.KEEP, e4.REPLACE), e4.disable(e4.DEPTH_TEST), this._pInst.push(), this._pInst.resetShader(), this._doFill && this._pInst.fill(0, 0), this._doStroke && this._pInst.stroke(0, 0);
        } }, { key: "endClip", value: function() {
          this._pInst.pop();
          var e4 = this.GL;
          e4.stencilOp(e4.KEEP, e4.KEEP, e4.KEEP), e4.stencilFunc(this._clipInvert ? e4.EQUAL : e4.NOTEQUAL, 0, 255), e4.enable(e4.DEPTH_TEST), this._clipDepths.push(this._pushPopDepth), p(b(s3.prototype), "endClip", this).call(this);
        } }, { key: "_clearClip", value: function() {
          this.GL.clearStencil(1), this.GL.clear(this.GL.STENCIL_BUFFER_BIT), 0 < this._clipDepths.length && this._clipDepths.pop(), this.drawTarget()._isClipApplied = false;
        } }, { key: "strokeWeight", value: function(e4) {
          this.curStrokeWeight !== e4 && (this.pointSize = e4, this.curStrokeWeight = e4);
        } }, { key: "_getPixel", value: function(e4, t3) {
          var r2 = this.GL;
          return C(r2, null, e4, t3, r2.RGBA, r2.UNSIGNED_BYTE, this._pInst.height * this._pInst.pixelDensity());
        } }, { key: "loadPixels", value: function() {
          var e4, t3, r2 = this._pixelsState;
          true !== this._pInst._glAttributes.preserveDrawingBuffer ? console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.") : (e4 = this._pInst._pixelDensity, t3 = this.GL, r2._setProperty("pixels", O(r2.pixels, t3, null, 0, 0, this.width * e4, this.height * e4, t3.RGBA, t3.UNSIGNED_BYTE, this.height * e4)));
        } }, { key: "updatePixels", value: function() {
          var e4 = this._getTempFramebuffer();
          e4.pixels = this._pixelsState.pixels, e4.updatePixels(), this._pInst.push(), this._pInst.resetMatrix(), this._pInst.clear(), this._pInst.imageMode(l.CENTER), this._pInst.image(e4, 0, 0), this._pInst.pop(), this.GL.clearDepth(1), this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
        } }, { key: "_getTempFramebuffer", value: function() {
          return this._tempFramebuffer || (this._tempFramebuffer = this._pInst.createFramebuffer({ format: l.UNSIGNED_BYTE, useDepth: this._pInst._glAttributes.depth, depthFormat: l.UNSIGNED_INT, antialias: this._pInst._glAttributes.antialias })), this._tempFramebuffer;
        } }, { key: "geometryInHash", value: function(e4) {
          return void 0 !== this.retainedMode.geometry[e4];
        } }, { key: "viewport", value: function(e4, t3) {
          this._viewport = [0, 0, e4, t3], this.GL.viewport(0, 0, e4, t3);
        } }, { key: "resize", value: function(t3, r2) {
          g.default.Renderer.prototype.resize.call(this, t3, r2), this._origViewport = { width: this.GL.drawingBufferWidth, height: this.GL.drawingBufferHeight }, this.viewport(this._origViewport.width, this._origViewport.height), this._curCamera._resize();
          var t3 = this._pixelsState, e4 = (void 0 !== t3.pixels && t3._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4)), true), r2 = false, t3 = void 0;
          try {
            for (var o3, n3 = this.framebuffers[Symbol.iterator](); !(e4 = (o3 = n3.next()).done); e4 = true) o3.value._canvasSizeChanged();
          } catch (e5) {
            r2 = true, t3 = e5;
          } finally {
            try {
              e4 || null == n3.return || n3.return();
            } finally {
              if (r2) throw t3;
            }
          }
        } }, { key: "clear", value: function() {
          var e4 = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, t3 = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, r2 = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, o3 = (arguments.length <= 3 ? void 0 : arguments[3]) || 0, n3 = this.activeFramebuffer();
          n3 && n3.format === l.UNSIGNED_BYTE && !n3.antialias && 0 === o3 && (o3 = 1e-10), this.GL.clearColor(e4 * o3, t3 * o3, r2 * o3, o3), this.GL.clearDepth(1), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
        } }, { key: "clearDepth", value: function() {
          this.GL.clearDepth(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1), this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
        } }, { key: "applyMatrix", value: function(e4, t3, r2, o3, n3, s4) {
          16 === arguments.length ? g.default.Matrix.prototype.apply.apply(this.uModelMatrix, arguments) : this.uModelMatrix.apply([e4, t3, 0, 0, r2, o3, 0, 0, 0, 0, 1, 0, n3, s4, 0, 1]);
        } }, { key: "translate", value: function(e4, t3, r2) {
          return e4 instanceof g.default.Vector && (r2 = e4.z, t3 = e4.y, e4 = e4.x), this.uModelMatrix.translate([e4, t3, r2]), this;
        } }, { key: "scale", value: function(e4, t3, r2) {
          return this.uModelMatrix.scale(e4, t3, r2), this;
        } }, { key: "rotate", value: function(e4, t3) {
          return void 0 === t3 ? this.rotateZ(e4) : (g.default.Matrix.prototype.rotate.apply(this.uModelMatrix, arguments), this);
        } }, { key: "rotateX", value: function(e4) {
          return this.rotate(e4, 1, 0, 0), this;
        } }, { key: "rotateY", value: function(e4) {
          return this.rotate(e4, 0, 1, 0), this;
        } }, { key: "rotateZ", value: function(e4) {
          return this.rotate(e4, 0, 0, 1), this;
        } }, { key: "push", value: function() {
          var e4 = g.default.Renderer.prototype.push.apply(this), t3 = e4.properties;
          return t3.uModelMatrix = this.uModelMatrix.copy(), t3.uViewMatrix = this.uViewMatrix.copy(), t3.uPMatrix = this.uPMatrix.copy(), t3._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), t3.ambientLightColors = this.ambientLightColors.slice(), t3.specularColors = this.specularColors.slice(), t3.directionalLightDirections = this.directionalLightDirections.slice(), t3.directionalLightDiffuseColors = this.directionalLightDiffuseColors.slice(), t3.directionalLightSpecularColors = this.directionalLightSpecularColors.slice(), t3.pointLightPositions = this.pointLightPositions.slice(), t3.pointLightDiffuseColors = this.pointLightDiffuseColors.slice(), t3.pointLightSpecularColors = this.pointLightSpecularColors.slice(), t3.spotLightPositions = this.spotLightPositions.slice(), t3.spotLightDirections = this.spotLightDirections.slice(), t3.spotLightDiffuseColors = this.spotLightDiffuseColors.slice(), t3.spotLightSpecularColors = this.spotLightSpecularColors.slice(), t3.spotLightAngle = this.spotLightAngle.slice(), t3.spotLightConc = this.spotLightConc.slice(), t3.userFillShader = this.userFillShader, t3.userStrokeShader = this.userStrokeShader, t3.userPointShader = this.userPointShader, t3.pointSize = this.pointSize, t3.curStrokeWeight = this.curStrokeWeight, t3.curStrokeColor = this.curStrokeColor, t3.curFillColor = this.curFillColor, t3.curAmbientColor = this.curAmbientColor, t3.curSpecularColor = this.curSpecularColor, t3.curEmissiveColor = this.curEmissiveColor, t3._hasSetAmbient = this._hasSetAmbient, t3._useSpecularMaterial = this._useSpecularMaterial, t3._useEmissiveMaterial = this._useEmissiveMaterial, t3._useShininess = this._useShininess, t3._useMetalness = this._useMetalness, t3.constantAttenuation = this.constantAttenuation, t3.linearAttenuation = this.linearAttenuation, t3.quadraticAttenuation = this.quadraticAttenuation, t3._enableLighting = this._enableLighting, t3._useNormalMaterial = this._useNormalMaterial, t3._tex = this._tex, t3.drawMode = this.drawMode, t3._currentNormal = this._currentNormal, t3.curBlendMode = this.curBlendMode, t3.activeImageLight = this.activeImageLight, t3.textureMode = this.textureMode, e4;
        } }, { key: "pop", value: function() {
          var e4;
          0 < this._clipDepths.length && this._pushPopDepth === this._clipDepths[this._clipDepths.length - 1] && this._clearClip();
          for (var t3 = arguments.length, r2 = new Array(t3), o3 = 0; o3 < t3; o3++) r2[o3] = arguments[o3];
          (e4 = p(b(s3.prototype), "pop", this)).call.apply(e4, [this].concat(r2)), this._applyStencilTestIfClipping();
        } }, { key: "_applyStencilTestIfClipping", value: function() {
          var e4 = this.drawTarget();
          e4._isClipApplied !== this._stencilTestOn && (e4._isClipApplied ? (this.GL.enable(this.GL.STENCIL_TEST), this._stencilTestOn = true) : (this.GL.disable(this.GL.STENCIL_TEST), this._stencilTestOn = false));
        } }, { key: "resetMatrix", value: function() {
          return this.uModelMatrix.reset(), this.uViewMatrix.set(this._curCamera.cameraMatrix), this;
        } }, { key: "_getImmediateStrokeShader", value: function() {
          var e4 = this.userStrokeShader;
          return e4 && e4.isStrokeShader() ? e4 : this._getLineShader();
        } }, { key: "_getRetainedStrokeShader", value: function() {
          return this._getImmediateStrokeShader();
        } }, { key: "_getSphereMapping", value: function(e4) {
          return this.sphereMapping || (this.sphereMapping = this._pInst.createFilterShader(M)), this.uNMatrix.inverseTranspose(this.uViewMatrix), this.uNMatrix.invert3x3(this.uNMatrix), this.sphereMapping.setUniform("uFovY", this._curCamera.cameraFOV), this.sphereMapping.setUniform("uAspect", this._curCamera.aspectRatio), this.sphereMapping.setUniform("uNewNormalMatrix", this.uNMatrix.mat3), this.sphereMapping.setUniform("uSampler", e4), this.sphereMapping;
        } }, { key: "_getImmediateFillShader", value: function() {
          var e4 = this.userFillShader;
          if (this._useNormalMaterial && (!e4 || !e4.isNormalShader())) return this._getNormalShader();
          if (this._enableLighting) {
            if (!e4 || !e4.isLightShader()) return this._getLightShader();
          } else if (this._tex) {
            if (!e4 || !e4.isTextureShader()) return this._getLightShader();
          } else if (!e4) return this._getImmediateModeShader();
          return e4;
        } }, { key: "_getRetainedFillShader", value: function() {
          if (this._useNormalMaterial) return this._getNormalShader();
          var e4 = this.userFillShader;
          if (this._enableLighting) {
            if (!e4 || !e4.isLightShader()) return this._getLightShader();
          } else if (this._tex) {
            if (!e4 || !e4.isTextureShader()) return this._getLightShader();
          } else if (!e4) return this._getColorShader();
          return e4;
        } }, { key: "_getImmediatePointShader", value: function() {
          var e4 = this.userPointShader;
          return e4 && e4.isPointShader() ? e4 : this._getPointShader();
        } }, { key: "_getRetainedLineShader", value: function() {
          return this._getImmediateLineShader();
        } }, { key: "baseMaterialShader", value: function() {
          if (this._pInst._glAttributes.perPixelLighting) return this._getLightShader();
          throw new Error("The material shader does not support hooks without perPixelLighting. Try turning it back on.");
        } }, { key: "_getLightShader", value: function() {
          return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "highp") + E.phongVert, this._webGL2CompatibilityPrefix("frag", "highp") + E.phongFrag, { vertex: { "void beforeVertex": "() {}", "vec3 getLocalPosition": "(vec3 position) { return position; }", "vec3 getWorldPosition": "(vec3 position) { return position; }", "vec3 getLocalNormal": "(vec3 normal) { return normal; }", "vec3 getWorldNormal": "(vec3 normal) { return normal; }", "vec2 getUV": "(vec2 uv) { return uv; }", "vec4 getVertexColor": "(vec4 color) { return color; }", "void afterVertex": "() {}" }, fragment: { "void beforeFragment": "() {}", "Inputs getPixelInputs": "(Inputs inputs) { return inputs; }", "vec4 combineColors": "(ColorComponents components) {\n                vec4 color = vec4(0.);\n                color.rgb += components.diffuse * components.baseColor;\n                color.rgb += components.ambient * components.ambientColor;\n                color.rgb += components.specular * components.specularColor;\n                color.rgb += components.emissive;\n                color.a = components.opacity;\n                return color;\n              }", "vec4 getFinalColor": "(vec4 color) { return color; }", "void afterFragment": "() {}" } }) : this._defaultLightShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "highp") + E.lightVert, this._webGL2CompatibilityPrefix("frag", "highp") + E.lightTextureFrag)), this._defaultLightShader;
        } }, { key: "_getImmediateModeShader", value: function() {
          return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + E.immediateVert, this._webGL2CompatibilityPrefix("frag", "mediump") + E.vertexColorFrag)), this._defaultImmediateModeShader;
        } }, { key: "baseNormalShader", value: function() {
          return this._getNormalShader();
        } }, { key: "_getNormalShader", value: function() {
          return this._defaultNormalShader || (this._defaultNormalShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + E.normalVert, this._webGL2CompatibilityPrefix("frag", "mediump") + E.normalFrag, { vertex: { "void beforeVertex": "() {}", "vec3 getLocalPosition": "(vec3 position) { return position; }", "vec3 getWorldPosition": "(vec3 position) { return position; }", "vec3 getLocalNormal": "(vec3 normal) { return normal; }", "vec3 getWorldNormal": "(vec3 normal) { return normal; }", "vec2 getUV": "(vec2 uv) { return uv; }", "vec4 getVertexColor": "(vec4 color) { return color; }", "void afterVertex": "() {}" }, fragment: { "void beforeFragment": "() {}", "vec4 getFinalColor": "(vec4 color) { return color; }", "void afterFragment": "() {}" } })), this._defaultNormalShader;
        } }, { key: "baseColorShader", value: function() {
          return this._getColorShader();
        } }, { key: "_getColorShader", value: function() {
          return this._defaultColorShader || (this._defaultColorShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + E.normalVert, this._webGL2CompatibilityPrefix("frag", "mediump") + E.basicFrag, { vertex: { "void beforeVertex": "() {}", "vec3 getLocalPosition": "(vec3 position) { return position; }", "vec3 getWorldPosition": "(vec3 position) { return position; }", "vec3 getLocalNormal": "(vec3 normal) { return normal; }", "vec3 getWorldNormal": "(vec3 normal) { return normal; }", "vec2 getUV": "(vec2 uv) { return uv; }", "vec4 getVertexColor": "(vec4 color) { return color; }", "void afterVertex": "() {}" }, fragment: { "void beforeFragment": "() {}", "vec4 getFinalColor": "(vec4 color) { return color; }", "void afterFragment": "() {}" } })), this._defaultColorShader;
        } }, { key: "pointShader", value: function() {
          return this._getPointShader();
        } }, { key: "_getPointShader", value: function() {
          return this._defaultPointShader || (this._defaultPointShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + E.pointVert, this._webGL2CompatibilityPrefix("frag", "mediump") + E.pointFrag, { vertex: { "void beforeVertex": "() {}", "vec3 getLocalPosition": "(vec3 position) { return position; }", "vec3 getWorldPosition": "(vec3 position) { return position; }", "float getPointSize": "(float size) { return size; }", "void afterVertex": "() {}" }, fragment: { "void beforeFragment": "() {}", "vec4 getFinalColor": "(vec4 color) { return color; }", "bool shouldDiscard": "(bool outside) { return outside; }", "void afterFragment": "() {}" } })), this._defaultPointShader;
        } }, { key: "baseStrokeShader", value: function() {
          return this._getLineShader();
        } }, { key: "_getLineShader", value: function() {
          return this._defaultLineShader || (this._defaultLineShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + E.lineVert, this._webGL2CompatibilityPrefix("frag", "mediump") + E.lineFrag, { vertex: { "void beforeVertex": "() {}", "vec3 getLocalPosition": "(vec3 position) { return position; }", "vec3 getWorldPosition": "(vec3 position) { return position; }", "float getStrokeWeight": "(float weight) { return weight; }", "vec2 getLineCenter": "(vec2 center) { return center; }", "vec2 getLinePosition": "(vec2 position) { return position; }", "vec4 getVertexColor": "(vec4 color) { return color; }", "void afterVertex": "() {}" }, fragment: { "void beforeFragment": "() {}", "Inputs getPixelInputs": "(Inputs inputs) { return inputs; }", "vec4 getFinalColor": "(vec4 color) { return color; }", "bool shouldDiscard": "(bool outside) { return outside; }", "void afterFragment": "() {}" } })), this._defaultLineShader;
        } }, { key: "_getFontShader", value: function() {
          return this._defaultFontShader || (this.webglVersion === l.WEBGL && this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "highp") + E.fontVert, this._webGL2CompatibilityPrefix("frag", "highp") + E.fontFrag)), this._defaultFontShader;
        } }, { key: "_webGL2CompatibilityPrefix", value: function(e4, t3) {
          var r2 = "";
          return this.webglVersion === l.WEBGL2 && (r2 += "#version 300 es\n#define WEBGL2\n"), "vert" === e4 ? r2 += "#define VERTEX_SHADER\n" : "frag" === e4 && (r2 += "#define FRAGMENT_SHADER\n"), t3 && (r2 += "precision ".concat(t3, " float;\n")), r2;
        } }, { key: "_getEmptyTexture", value: function() {
          var e4;
          return this._emptyTexture || ((e4 = new g.default.Image(1, 1)).set(0, 0, 255), this._emptyTexture = new g.default.Texture(this, e4)), this._emptyTexture;
        } }, { key: "getTexture", value: function(e4) {
          e4 instanceof g.default.Framebuffer && (e4 = e4.color);
          var t3 = this.textures.get(e4);
          return t3 || (t3 = new g.default.Texture(this, e4), this.textures.set(e4, t3), t3);
        } }, { key: "getDiffusedTexture", value: function(e4) {
          var t3, r2, o3 = this;
          return null != this.diffusedTextures.get(e4) ? this.diffusedTextures.get(e4) : (t3 = Math.floor(e4.height / e4.width * 200), r2 = this._pInst.createFramebuffer({ width: 200, height: t3, density: 1 }), this.diffusedShader || (this.diffusedShader = this._pInst.createShader(E.imageLightVert, E.imageLightDiffusedFrag)), r2.draw(function() {
            o3._pInst.shader(o3.diffusedShader), o3.diffusedShader.setUniform("environmentMap", e4), o3._pInst.noStroke(), o3._pInst.rectMode(l.CENTER), o3._pInst.noLights(), o3._pInst.rect(0, 0, 200, t3);
          }), this.diffusedTextures.set(e4, r2), r2);
        } }, { key: "getSpecularTexture", value: function(r2) {
          var o3 = this;
          if (null != this.specularTextures.get(r2)) return this.specularTextures.get(r2);
          for (var e4, n3 = [], s4 = this._pInst.createFramebuffer({ width: 512, height: 512, density: 1 }), i2 = Math.log(512) / Math.log(2), t3 = (this.specularShader || (this.specularShader = this._pInst.createShader(E.imageLightVert, E.imageLightSpecularFrag)), 512); 1 <= t3; t3 /= 2) !function(e5) {
            s4.resize(e5, e5);
            var t4 = 1 - Math.log(e5) / Math.log(2) / i2;
            s4.draw(function() {
              o3._pInst.shader(o3.specularShader), o3._pInst.clear(), o3.specularShader.setUniform("environmentMap", r2), o3.specularShader.setUniform("roughness", t4), o3._pInst.noStroke(), o3._pInst.noLights(), o3._pInst.plane(e5, e5);
            }), n3.push(s4.get().drawingContext.getImageData(0, 0, e5, e5));
          }(t3);
          return s4.remove(), e4 = new c.MipmapTexture(this, n3, {}), this.specularTextures.set(r2, e4), e4;
        } }, { key: "activeFramebuffer", value: function() {
          return this.activeFramebuffers[this.activeFramebuffers.length - 1] || null;
        } }, { key: "createFramebuffer", value: function(e4) {
          return new g.default.Framebuffer(this, e4);
        } }, { key: "_setStrokeUniforms", value: function(e4) {
          e4.bindShader(), e4.setUniform("uUseLineColor", this._useLineColor), e4.setUniform("uMaterialColor", this.curStrokeColor), e4.setUniform("uStrokeWeight", this.curStrokeWeight), e4.setUniform("uStrokeCap", w[this.curStrokeCap]), e4.setUniform("uStrokeJoin", S[this.curStrokeJoin]);
        } }, { key: "_setFillUniforms", value: function(e4) {
          var r2 = this, t3 = (e4.bindShader(), this.mixedSpecularColor = h(this.curSpecularColor), 0 < this._useMetalness && (this.mixedSpecularColor = this.mixedSpecularColor.map(function(e5, t4) {
            return r2.curFillColor[t4] * r2._useMetalness + e5 * (1 - r2._useMetalness);
          })), e4.setUniform("uUseVertexColor", this._useVertexColor), e4.setUniform("uMaterialColor", this.curFillColor), e4.setUniform("isTexture", !!this._tex), this._tex && e4.setUniform("uSampler", this._tex), e4.setUniform("uTint", this._tint), e4.setUniform("uHasSetAmbient", this._hasSetAmbient), e4.setUniform("uAmbientMatColor", this.curAmbientColor), e4.setUniform("uSpecularMatColor", this.mixedSpecularColor), e4.setUniform("uEmissiveMatColor", this.curEmissiveColor), e4.setUniform("uSpecular", this._useSpecularMaterial), e4.setUniform("uEmissive", this._useEmissiveMaterial), e4.setUniform("uShininess", this._useShininess), e4.setUniform("uMetallic", this._useMetalness), this._setImageLightUniforms(e4), e4.setUniform("uUseLighting", this._enableLighting), this.pointLightDiffuseColors.length / 3), t3 = (e4.setUniform("uPointLightCount", t3), e4.setUniform("uPointLightLocation", this.pointLightPositions), e4.setUniform("uPointLightDiffuseColors", this.pointLightDiffuseColors), e4.setUniform("uPointLightSpecularColors", this.pointLightSpecularColors), this.directionalLightDiffuseColors.length / 3), t3 = (e4.setUniform("uDirectionalLightCount", t3), e4.setUniform("uLightingDirection", this.directionalLightDirections), e4.setUniform("uDirectionalDiffuseColors", this.directionalLightDiffuseColors), e4.setUniform("uDirectionalSpecularColors", this.directionalLightSpecularColors), this.ambientLightColors.length / 3), t3 = (this.mixedAmbientLight = h(this.ambientLightColors), 0 < this._useMetalness && (this.mixedAmbientLight = this.mixedAmbientLight.map(function(e5) {
            e5 -= r2._useMetalness;
            return Math.max(0, e5);
          })), e4.setUniform("uAmbientLightCount", t3), e4.setUniform("uAmbientColor", this.mixedAmbientLight), this.spotLightDiffuseColors.length / 3);
          e4.setUniform("uSpotLightCount", t3), e4.setUniform("uSpotLightAngle", this.spotLightAngle), e4.setUniform("uSpotLightConc", this.spotLightConc), e4.setUniform("uSpotLightDiffuseColors", this.spotLightDiffuseColors), e4.setUniform("uSpotLightSpecularColors", this.spotLightSpecularColors), e4.setUniform("uSpotLightLocation", this.spotLightPositions), e4.setUniform("uSpotLightDirection", this.spotLightDirections), e4.setUniform("uConstantAttenuation", this.constantAttenuation), e4.setUniform("uLinearAttenuation", this.linearAttenuation), e4.setUniform("uQuadraticAttenuation", this.quadraticAttenuation), e4.bindTextures();
        } }, { key: "_setImageLightUniforms", value: function(e4) {
          var t3;
          e4.setUniform("uUseImageLight", null != this.activeImageLight), this.activeImageLight && (t3 = this.getDiffusedTexture(this.activeImageLight), e4.setUniform("environmentMapDiffused", t3), t3 = this.getSpecularTexture(this.activeImageLight), e4.setUniform("environmentMapSpecular", t3));
        } }, { key: "_setPointUniforms", value: function(e4) {
          e4.bindShader(), e4.setUniform("uMaterialColor", this.curStrokeColor), e4.setUniform("uPointSize", this.pointSize * this._pInst._pixelDensity);
        } }, { key: "_bindBuffer", value: function(e4, t3, r2, o3, n3) {
          t3 = t3 || this.GL.ARRAY_BUFFER, this.GL.bindBuffer(t3, e4), void 0 !== r2 && ((e4 = r2) instanceof g.default.DataArray ? e4 = r2.dataArray() : e4 instanceof (o3 || Float32Array) || (e4 = new (o3 || Float32Array)(e4)), this.GL.bufferData(t3, e4, n3 || this.GL.STATIC_DRAW));
        } }, { key: "_arraysEqual", value: function(e4, r2) {
          return e4.length === r2.length && e4.every(function(e5, t3) {
            return e5 === r2[t3];
          });
        } }, { key: "_isTypedArray", value: function(t3) {
          return [Float32Array, Float64Array, Int16Array, Uint16Array, Uint32Array].some(function(e4) {
            return t3 instanceof e4;
          });
        } }, { key: "_flatten", value: function(e4) {
          return e4.flat();
        } }, { key: "_vToNArray", value: function(e4) {
          return e4.flatMap(function(e5) {
            return [e5.x, e5.y, e5.z];
          });
        } }, { key: "_bezierCoefficients", value: function(e4) {
          var t3 = e4 * e4, r2 = 1 - e4, o3 = r2 * r2;
          return [o3 * r2, 3 * o3 * e4, 3 * r2 * t3, t3 * e4];
        } }, { key: "_quadraticCoefficients", value: function(e4) {
          var t3 = 1 - e4;
          return [t3 * t3, 2 * t3 * e4, e4 * e4];
        } }, { key: "_bezierToCatmull", value: function(e4) {
          return [e4[1], e4[1] + (e4[2] - e4[0]) / this._curveTightness, e4[2] - (e4[3] - e4[1]) / this._curveTightness, e4[2]];
        } }, { key: "_initTessy", value: function() {
          var e4 = new u.default.GluTesselator();
          return e4.gluTessCallback(u.default.gluEnum.GLU_TESS_VERTEX_DATA, function(e5, t3) {
            var r2 = true, o3 = false, n3 = void 0;
            try {
              for (var s4, i2 = e5[Symbol.iterator](); !(r2 = (s4 = i2.next()).done); r2 = true) {
                var a3 = s4.value;
                t3.push(a3);
              }
            } catch (e6) {
              o3 = true, n3 = e6;
            } finally {
              try {
                r2 || null == i2.return || i2.return();
              } finally {
                if (o3) throw n3;
              }
            }
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_BEGIN, function(e5) {
            e5 !== u.default.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: ".concat(e5));
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_ERROR, function(e5) {
            console.log("error callback"), console.log("error number: ".concat(e5));
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_COMBINE, function(e5, t3, r2) {
            for (var o3 = new Array(g.default.RendererGL.prototype.tessyVertexSize).fill(0), n3 = 0; n3 < r2.length; n3++) for (var s4 = 0; s4 < o3.length; s4++) 0 !== r2[n3] && t3[n3] && (o3[s4] += t3[n3][s4] * r2[n3]);
            return o3;
          }), e4.gluTessCallback(u.default.gluEnum.GLU_TESS_EDGE_FLAG, function(e5) {
          }), e4.gluTessProperty(u.default.gluEnum.GLU_TESS_WINDING_RULE, u.default.windingRule.GLU_TESS_WINDING_NONZERO), e4;
        } }, { key: "_triangulate", value: function(e4) {
          var t3 = e4[0] ? e4[0][2] : void 0, r2 = true, o3 = true, n3 = false, s4 = void 0;
          try {
            for (var i2, a3 = e4[Symbol.iterator](); !(o3 = (i2 = a3.next()).done); o3 = true) for (var l2 = i2.value, u2 = 0; u2 < l2.length; u2 += g.default.RendererGL.prototype.tessyVertexSize) if (l2[u2 + 2] !== t3) {
              r2 = false;
              break;
            }
          } catch (e5) {
            n3 = true, s4 = e5;
          } finally {
            try {
              o3 || null == a3.return || a3.return();
            } finally {
              if (n3) throw s4;
            }
          }
          r2 ? this._tessy.gluTessNormal(0, 0, 1) : this._tessy.gluTessNormal(0, 0, 0);
          var n3 = [], c2 = (this._tessy.gluTessBeginPolygon(n3), true), s4 = false, d2 = void 0;
          try {
            for (var h2, f2 = e4[Symbol.iterator](); !(c2 = (h2 = f2.next()).done); c2 = true) {
              var p2 = h2.value;
              this._tessy.gluTessBeginContour();
              for (var m2 = 0; m2 < p2.length; m2 += g.default.RendererGL.prototype.tessyVertexSize) {
                var y2 = p2.slice(m2, m2 + g.default.RendererGL.prototype.tessyVertexSize);
                this._tessy.gluTessVertex(y2, y2);
              }
              this._tessy.gluTessEndContour();
            }
          } catch (e5) {
            s4 = true, d2 = e5;
          } finally {
            try {
              c2 || null == f2.return || f2.return();
            } finally {
              if (s4) throw d2;
            }
          }
          return this._tessy.gluTessEndPolygon(), n3;
        } }]) && f(t2.prototype, e3), s3;
      }(g.default.Renderer), g.default.prototype._assert3d = function(e3) {
        if (!this._renderer.isP3D) throw new Error("".concat(e3, "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."));
      }, g.default.RendererGL.prototype.tessyVertexSize = 12;
      e2 = g.default.RendererGL;
      r.default = e2;
    }, { "../core/constants": 272, "../core/main": 283, "../core/p5.Renderer": 286, "./GeometryBuilder": 327, "./p5.Camera": 332, "./p5.Framebuffer": 334, "./p5.Matrix": 336, "./p5.Shader": 342, "./p5.Texture": 343, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.copy-within": 154, "core-js/modules/es.array.every": 155, "core-js/modules/es.array.fill": 156, "core-js/modules/es.array.flat": 160, "core-js/modules/es.array.flat-map": 159, "core-js/modules/es.array.from": 162, "core-js/modules/es.array.includes": 163, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.map": 168, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.some": 170, "core-js/modules/es.array.unscopables.flat": 173, "core-js/modules/es.array.unscopables.flat-map": 172, "core-js/modules/es.map": 175, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.reflect.get": 193, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.set": 197, "core-js/modules/es.string.includes": 199, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.float32-array": 219, "core-js/modules/es.typed-array.float64-array": 220, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.int16-array": 224, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint16-array": 240, "core-js/modules/es.typed-array.uint32-array": 241, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246, libtess: 255, path: 258 }], 342: [function(e2, t, r) {
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.concat"), e2("core-js/modules/es.array.index-of"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.array.slice"), e2("core-js/modules/es.array.some"), e2("core-js/modules/es.function.name"), e2("core-js/modules/es.object.assign"), e2("core-js/modules/es.object.keys"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r, "__esModule", { value: true }), r.default = void 0;
      var a2 = (e2 = e2("../core/main")) && e2.__esModule ? e2 : { default: e2 };
      function u(e3, t2) {
        return function(e4) {
          if (Array.isArray(e4)) return e4;
        }(e3) || function(e4, t3) {
          if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4)) {
            var r2 = [], o3 = true, n = false, s2 = void 0;
            try {
              for (var i, a3 = e4[Symbol.iterator](); !(o3 = (i = a3.next()).done) && (r2.push(i.value), !t3 || r2.length !== t3); o3 = true) ;
            } catch (e5) {
              n = true, s2 = e5;
            } finally {
              try {
                o3 || null == a3.return || a3.return();
              } finally {
                if (n) throw s2;
              }
            }
            return r2;
          }
        }(e3, t2) || function() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }();
      }
      function o(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      a2.default.Shader = function() {
        function i(e4, t3, r2) {
          var o3 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : {}, n = this, s2 = i;
          if (!(n instanceof s2)) throw new TypeError("Cannot call a class as a function");
          this._renderer = e4, this._vertSrc = t3, this._fragSrc = r2, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = false, this.attributes = {}, this._loadedUniforms = false, this.uniforms = {}, this._bound = false, this.samplers = [], this.hooks = { uniforms: o3.uniforms || {}, declarations: o3.declarations, helpers: o3.helpers || {}, vertex: o3.vertex || {}, fragment: o3.fragment || {}, modified: { vertex: o3.modified && o3.modified.vertex || {}, fragment: o3.modified && o3.modified.fragment || {} } };
        }
        var e3, t2;
        return e3 = i, (t2 = [{ key: "shaderSrc", value: function(e4, t3) {
          var r2, o3, n, s2, i2, e4 = u(e4.split("void main"), 2), a3 = e4[0], e4 = e4[1], l = "";
          for (r2 in this.hooks.uniforms) l += "uniform ".concat(r2, ";\n");
          for (o3 in this.hooks.declarations && (l += this.hooks.declarations + "\n"), this.hooks[t3].declarations && (l += this.hooks[t3].declarations + "\n"), this.hooks.helpers) l += "".concat(o3).concat(this.hooks.helpers[o3], "\n");
          for (n in this.hooks[t3]) "declarations" !== n && (s2 = (i2 = u(n.split(" "), 2))[0], i2 = i2[1], this.hooks.modified[t3][n] && (l += "#define AUGMENTED_HOOK_" + i2 + "\n"), l += s2 + " HOOK_" + i2 + this.hooks[t3][n] + "\n");
          return a3 + l + "void main" + e4;
        } }, { key: "version", value: function() {
          var e4 = /#version (.+)$/.exec(this.vertSrc());
          return e4 ? e4[1] : "100 es";
        } }, { key: "vertSrc", value: function() {
          return this.shaderSrc(this._vertSrc, "vertex");
        } }, { key: "fragSrc", value: function() {
          return this.shaderSrc(this._fragSrc, "fragment");
        } }, { key: "inspectHooks", value: function() {
          for (var e4 in console.log("==== Vertex shader hooks: ===="), this.hooks.vertex) console.log((this.hooks.modified.vertex[e4] ? "[MODIFIED] " : "") + e4 + this.hooks.vertex[e4]);
          for (var t3 in console.log(""), console.log("==== Fragment shader hooks: ===="), this.hooks.fragment) console.log((this.hooks.modified.fragment[t3] ? "[MODIFIED] " : "") + t3 + this.hooks.fragment[t3]);
          for (var r2 in console.log(""), console.log("==== Helper functions: ===="), this.hooks.helpers) console.log(r2 + this.hooks.helpers[r2]);
        } }, { key: "modify", value: function(e4) {
          a2.default._validateParameters("p5.Shader.modify", arguments);
          var t3, r2 = { vertex: {}, fragment: {}, helpers: {} };
          for (t3 in e4) "declarations" !== t3 && "uniforms" !== t3 && ("vertexDeclarations" === t3 ? r2.vertex.declarations = (r2.vertex.declarations || "") + "\n" + e4[t3] : "fragmentDeclarations" === t3 ? r2.fragment.declarations = (r2.fragment.declarations || "") + "\n" + e4[t3] : this.hooks.vertex[t3] ? r2.vertex[t3] = e4[t3] : this.hooks.fragment[t3] ? r2.fragment[t3] = e4[t3] : r2.helpers[t3] = e4[t3]);
          var o3, n, s2 = Object.assign({}, this.hooks.modified.vertex), i2 = Object.assign({}, this.hooks.modified.fragment);
          for (o3 in r2.vertex || {}) "declarations" !== o3 && (s2[o3] = true);
          for (n in r2.fragment || {}) "declarations" !== n && (i2[n] = true);
          return new a2.default.Shader(this._renderer, this._vertSrc, this._fragSrc, { declarations: (this.hooks.declarations || "") + "\n" + (e4.declarations || ""), uniforms: Object.assign({}, this.hooks.uniforms, e4.uniforms || {}), fragment: Object.assign({}, this.hooks.fragment, r2.fragment || {}), vertex: Object.assign({}, this.hooks.vertex, r2.vertex || {}), helpers: Object.assign({}, this.hooks.helpers, r2.helpers || {}), modified: { vertex: s2, fragment: i2 } });
        } }, { key: "init", value: function() {
          if (0 === this._glProgram) {
            var e4, t3 = this._renderer.GL;
            if (this._vertShader = t3.createShader(t3.VERTEX_SHADER), t3.shaderSource(this._vertShader, this.vertSrc()), t3.compileShader(this._vertShader), !t3.getShaderParameter(this._vertShader, t3.COMPILE_STATUS)) return e4 = t3.getShaderInfoLog(this._vertShader), console.error(e4), null;
            if (this._fragShader = t3.createShader(t3.FRAGMENT_SHADER), t3.shaderSource(this._fragShader, this.fragSrc()), t3.compileShader(this._fragShader), !t3.getShaderParameter(this._fragShader, t3.COMPILE_STATUS)) return e4 = t3.getShaderInfoLog(this._fragShader), console.error(e4), null;
            this._glProgram = t3.createProgram(), t3.attachShader(this._glProgram, this._vertShader), t3.attachShader(this._glProgram, this._fragShader), t3.linkProgram(this._glProgram), t3.getProgramParameter(this._glProgram, t3.LINK_STATUS) || a2.default._friendlyError("Snap! Error linking shader program: ".concat(t3.getProgramInfoLog(this._glProgram))), this._loadAttributes(), this._loadUniforms();
          }
          return this;
        } }, { key: "setDefaultUniforms", value: function() {
          for (var e4 in this.hooks.uniforms) {
            var t3 = u(e4.split(" "), 2)[1], e4 = this.hooks.uniforms[e4], r2 = void 0;
            null != (r2 = e4 instanceof Function ? e4() : e4) && this.setUniform(t3, r2);
          }
        } }, { key: "copyToContext", value: function(e4) {
          var t3 = new a2.default.Shader(e4._renderer, this._vertSrc, this._fragSrc);
          return t3.ensureCompiledOnContext(e4), t3;
        } }, { key: "ensureCompiledOnContext", value: function(e4) {
          if (0 !== this._glProgram && this._renderer !== e4._renderer) throw new Error("The shader being run is attached to a different context. Do you need to copy it to this context first with .copyToContext()?");
          0 === this._glProgram && (this._renderer = e4._renderer, this.init());
        } }, { key: "_loadAttributes", value: function() {
          if (!this._loadedAttributes) {
            this.attributes = {};
            for (var e4 = this._renderer.GL, t3 = e4.getProgramParameter(this._glProgram, e4.ACTIVE_ATTRIBUTES), r2 = 0; r2 < t3; ++r2) {
              var o3 = e4.getActiveAttrib(this._glProgram, r2), n = o3.name, s2 = e4.getAttribLocation(this._glProgram, n), i2 = {};
              i2.name = n, i2.location = s2, i2.index = r2, i2.type = o3.type, i2.size = o3.size, this.attributes[n] = i2;
            }
            this._loadedAttributes = true;
          }
        } }, { key: "_loadUniforms", value: function() {
          if (!this._loadedUniforms) {
            for (var e4 = this._renderer.GL, t3 = e4.getProgramParameter(this._glProgram, e4.ACTIVE_UNIFORMS), r2 = 0, o3 = 0; o3 < t3; ++o3) {
              var n = e4.getActiveUniform(this._glProgram, o3), s2 = {}, i2 = (s2.location = e4.getUniformLocation(this._glProgram, n.name), s2.size = n.size, n.name);
              1 < n.size && (i2 = i2.substring(0, i2.indexOf("[0]"))), s2.name = i2, s2.type = n.type, s2._cachedData = void 0, s2.type === e4.SAMPLER_2D && (s2.samplerIndex = r2, r2++, this.samplers.push(s2)), s2.isArray = 1 < n.size || s2.type === e4.FLOAT_MAT3 || s2.type === e4.FLOAT_MAT4 || s2.type === e4.FLOAT_VEC2 || s2.type === e4.FLOAT_VEC3 || s2.type === e4.FLOAT_VEC4 || s2.type === e4.INT_VEC2 || s2.type === e4.INT_VEC4 || s2.type === e4.INT_VEC3, this.uniforms[i2] = s2;
            }
            this._loadedUniforms = true;
          }
        } }, { key: "compile", value: function() {
        } }, { key: "bindShader", value: function() {
          this.init(), this._bound || (this.useProgram(), this._bound = true, this._setMatrixUniforms(), this.setUniform("uViewport", this._renderer._viewport));
        } }, { key: "unbindShader", value: function() {
          return this._bound && (this.unbindTextures(), this._bound = false), this;
        } }, { key: "bindTextures", value: function() {
          var e4 = this._renderer.GL, t3 = true, r2 = false, o3 = void 0;
          try {
            for (var n, s2 = this.samplers[Symbol.iterator](); !(t3 = (n = s2.next()).done); t3 = true) {
              var i2 = n.value, a3 = i2.texture;
              void 0 === a3 && (a3 = this._renderer._getEmptyTexture()), e4.activeTexture(e4.TEXTURE0 + i2.samplerIndex), a3.bindTexture(), a3.update(), e4.uniform1i(i2.location, i2.samplerIndex);
            }
          } catch (e5) {
            r2 = true, o3 = e5;
          } finally {
            try {
              t3 || null == s2.return || s2.return();
            } finally {
              if (r2) throw o3;
            }
          }
        } }, { key: "updateTextures", value: function() {
          var e4 = true, t3 = false, r2 = void 0;
          try {
            for (var o3, n = this.samplers[Symbol.iterator](); !(e4 = (o3 = n.next()).done); e4 = true) {
              var s2 = o3.value.texture;
              s2 && s2.update();
            }
          } catch (e5) {
            t3 = true, r2 = e5;
          } finally {
            try {
              e4 || null == n.return || n.return();
            } finally {
              if (t3) throw r2;
            }
          }
        } }, { key: "unbindTextures", value: function() {
          var e4 = true, t3 = false, r2 = void 0;
          try {
            for (var o3, n = this.samplers[Symbol.iterator](); !(e4 = (o3 = n.next()).done); e4 = true) {
              var s2 = o3.value;
              this.setUniform(s2.name, this._renderer._getEmptyTexture());
            }
          } catch (e5) {
            t3 = true, r2 = e5;
          } finally {
            try {
              e4 || null == n.return || n.return();
            } finally {
              if (t3) throw r2;
            }
          }
        } }, { key: "_setMatrixUniforms", value: function() {
          var e4 = this._renderer.uModelMatrix, t3 = this._renderer.uViewMatrix, r2 = this._renderer.uPMatrix, o3 = e4.copy().mult(t3), n = (this._renderer.uMVMatrix = o3).copy();
          n.mult(r2), this.isStrokeShader() && this.setUniform("uPerspective", this._renderer._curCamera.useLinePerspective ? 1 : 0), this.setUniform("uViewMatrix", t3.mat4), this.setUniform("uProjectionMatrix", r2.mat4), this.setUniform("uModelMatrix", e4.mat4), this.setUniform("uModelViewMatrix", o3.mat4), this.setUniform("uModelViewProjectionMatrix", n.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3)), this.uniforms.uCameraRotation && (this._renderer.curMatrix.inverseTranspose(this._renderer.uViewMatrix), this.setUniform("uCameraRotation", this._renderer.curMatrix.mat3));
        } }, { key: "useProgram", value: function() {
          var e4 = this._renderer.GL;
          return this._renderer._curShader !== this && (e4.useProgram(this._glProgram), this._renderer._curShader = this), this;
        } }, { key: "setUniform", value: function(e4, t3) {
          var r2 = this.uniforms[e4];
          if (r2) {
            var o3 = this._renderer.GL;
            if (r2.isArray) {
              if (r2._cachedData && this._renderer._arraysEqual(r2._cachedData, t3)) return;
              r2._cachedData = t3.slice(0);
            } else {
              if (r2._cachedData && r2._cachedData === t3) return;
              Array.isArray(t3) ? r2._cachedData = t3.slice(0) : r2._cachedData = t3;
            }
            var n = r2.location;
            switch (this.useProgram(), r2.type) {
              case o3.BOOL:
                true === t3 ? o3.uniform1i(n, 1) : o3.uniform1i(n, 0);
                break;
              case o3.INT:
                1 < r2.size ? t3.length && o3.uniform1iv(n, t3) : o3.uniform1i(n, t3);
                break;
              case o3.FLOAT:
                1 < r2.size ? t3.length && o3.uniform1fv(n, t3) : o3.uniform1f(n, t3);
                break;
              case o3.FLOAT_MAT3:
                o3.uniformMatrix3fv(n, false, t3);
                break;
              case o3.FLOAT_MAT4:
                o3.uniformMatrix4fv(n, false, t3);
                break;
              case o3.FLOAT_VEC2:
                1 < r2.size ? t3.length && o3.uniform2fv(n, t3) : o3.uniform2f(n, t3[0], t3[1]);
                break;
              case o3.FLOAT_VEC3:
                1 < r2.size ? t3.length && o3.uniform3fv(n, t3) : o3.uniform3f(n, t3[0], t3[1], t3[2]);
                break;
              case o3.FLOAT_VEC4:
                1 < r2.size ? t3.length && o3.uniform4fv(n, t3) : o3.uniform4f(n, t3[0], t3[1], t3[2], t3[3]);
                break;
              case o3.INT_VEC2:
                1 < r2.size ? t3.length && o3.uniform2iv(n, t3) : o3.uniform2i(n, t3[0], t3[1]);
                break;
              case o3.INT_VEC3:
                1 < r2.size ? t3.length && o3.uniform3iv(n, t3) : o3.uniform3i(n, t3[0], t3[1], t3[2]);
                break;
              case o3.INT_VEC4:
                1 < r2.size ? t3.length && o3.uniform4iv(n, t3) : o3.uniform4i(n, t3[0], t3[1], t3[2], t3[3]);
                break;
              case o3.SAMPLER_2D:
                if ("number" == typeof t3) {
                  if (t3 < o3.TEXTURE0 || t3 > o3.TEXTURE31 || t3 !== Math.ceil(t3)) return console.log("🌸 p5.js says: You're trying to use a number as the data for a texture.Please use a texture."), this;
                  o3.activeTexture(t3), o3.uniform1i(n, t3);
                } else o3.activeTexture(o3.TEXTURE0 + r2.samplerIndex), r2.texture = t3 instanceof a2.default.Texture ? t3 : this._renderer.getTexture(t3), o3.uniform1i(n, r2.samplerIndex), r2.texture.src.gifProperties && r2.texture.src._animateGif(this._renderer._pInst);
                break;
              case o3.SAMPLER_CUBE:
              case o3.SAMPLER_3D:
              case o3.SAMPLER_2D_SHADOW:
              case o3.SAMPLER_2D_ARRAY:
              case o3.SAMPLER_2D_ARRAY_SHADOW:
              case o3.SAMPLER_CUBE_SHADOW:
              case o3.INT_SAMPLER_2D:
              case o3.INT_SAMPLER_3D:
              case o3.INT_SAMPLER_CUBE:
              case o3.INT_SAMPLER_2D_ARRAY:
              case o3.UNSIGNED_INT_SAMPLER_2D:
              case o3.UNSIGNED_INT_SAMPLER_3D:
              case o3.UNSIGNED_INT_SAMPLER_CUBE:
              case o3.UNSIGNED_INT_SAMPLER_2D_ARRAY:
                "number" == typeof t3 && (t3 < o3.TEXTURE0 || t3 > o3.TEXTURE31 || t3 !== Math.ceil(t3) ? console.log("🌸 p5.js says: You're trying to use a number as the data for a texture.Please use a texture.") : (o3.activeTexture(t3), o3.uniform1i(n, t3)));
            }
            return this;
          }
        } }, { key: "isLightShader", value: function() {
          return [this.attributes.aNormal, this.uniforms.uUseLighting, this.uniforms.uAmbientLightCount, this.uniforms.uDirectionalLightCount, this.uniforms.uPointLightCount, this.uniforms.uAmbientColor, this.uniforms.uDirectionalDiffuseColors, this.uniforms.uDirectionalSpecularColors, this.uniforms.uPointLightLocation, this.uniforms.uPointLightDiffuseColors, this.uniforms.uPointLightSpecularColors, this.uniforms.uLightingDirection, this.uniforms.uSpecular].some(function(e4) {
            return void 0 !== e4;
          });
        } }, { key: "isNormalShader", value: function() {
          return void 0 !== this.attributes.aNormal;
        } }, { key: "isTextureShader", value: function() {
          return 0 < this.samplers.length;
        } }, { key: "isColorShader", value: function() {
          return void 0 !== this.attributes.aVertexColor || void 0 !== this.uniforms.uMaterialColor;
        } }, { key: "isTexLightShader", value: function() {
          return this.isLightShader() && this.isTextureShader();
        } }, { key: "isStrokeShader", value: function() {
          return void 0 !== this.uniforms.uStrokeWeight;
        } }, { key: "enableAttrib", value: function(e4, t3, r2, o3, n, s2) {
          var i2;
          return e4 && -1 !== (e4 = e4.location) && (i2 = this._renderer.GL, this._renderer.registerEnabled.has(e4) || (i2.enableVertexAttribArray(e4), this._renderer.registerEnabled.add(e4)), this._renderer.GL.vertexAttribPointer(e4, t3, r2 || i2.FLOAT, o3 || false, n || 0, s2 || 0)), this;
        } }, { key: "disableRemainingAttributes", value: function() {
          var r2 = this, e4 = true, t3 = false, o3 = void 0;
          try {
            for (var n, s2 = this._renderer.registerEnabled.values()[Symbol.iterator](); !(e4 = (n = s2.next()).done); e4 = true) !function() {
              var t4 = n.value;
              Object.keys(r2.attributes).some(function(e5) {
                return r2.attributes[e5].location === t4;
              }) || (r2._renderer.GL.disableVertexAttribArray(t4), r2._renderer.registerEnabled.delete(t4));
            }();
          } catch (e5) {
            t3 = true, o3 = e5;
          } finally {
            try {
              e4 || null == s2.return || s2.return();
            } finally {
              if (t3) throw o3;
            }
          }
        } }]) && o(e3.prototype, t2), i;
      }();
      e2 = a2.default.Shader;
      r.default = e2;
    }, { "../core/main": 283, "core-js/modules/es.array.concat": 153, "core-js/modules/es.array.index-of": 164, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.array.slice": 169, "core-js/modules/es.array.some": 170, "core-js/modules/es.function.name": 174, "core-js/modules/es.object.assign": 183, "core-js/modules/es.object.keys": 189, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.split": 206, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/web.dom-collections.iterator": 246 }], 343: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.get-prototype-of"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.reflect.construct"), e2("core-js/modules/es.regexp.to-string"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.typed-array.uint8-array"), e2("core-js/modules/es.typed-array.copy-within"), e2("core-js/modules/es.typed-array.every"), e2("core-js/modules/es.typed-array.fill"), e2("core-js/modules/es.typed-array.filter"), e2("core-js/modules/es.typed-array.find"), e2("core-js/modules/es.typed-array.find-index"), e2("core-js/modules/es.typed-array.for-each"), e2("core-js/modules/es.typed-array.includes"), e2("core-js/modules/es.typed-array.index-of"), e2("core-js/modules/es.typed-array.iterator"), e2("core-js/modules/es.typed-array.join"), e2("core-js/modules/es.typed-array.last-index-of"), e2("core-js/modules/es.typed-array.map"), e2("core-js/modules/es.typed-array.reduce"), e2("core-js/modules/es.typed-array.reduce-right"), e2("core-js/modules/es.typed-array.reverse"), e2("core-js/modules/es.typed-array.set"), e2("core-js/modules/es.typed-array.slice"), e2("core-js/modules/es.typed-array.some"), e2("core-js/modules/es.typed-array.sort"), e2("core-js/modules/es.typed-array.subarray"), e2("core-js/modules/es.typed-array.to-locale-string"), e2("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r, "__esModule", { value: true }), r.checkWebGLCapabilities = m, r.default = r.MipmapTexture = void 0;
      var s2 = (p = e2("../core/main")) && p.__esModule ? p : { default: p }, a2 = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = l();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function l() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), l = function() {
          return e3;
        }, e3);
      }
      function u(e3, t2) {
        return (u = Object.setPrototypeOf || function(e4, t3) {
          return e4.__proto__ = t3, e4;
        })(e3, t2);
      }
      function c(r2) {
        return function() {
          var e3, t2 = n(r2), t2 = (e3 = function() {
            if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
              if ("function" == typeof Proxy) return 1;
              try {
                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                })), 1;
              } catch (e4) {
              }
            }
          }() ? (e3 = n(this).constructor, Reflect.construct(t2, arguments, e3)) : t2.apply(this, arguments), this);
          if (!e3 || "object" !== i(e3) && "function" != typeof e3) {
            if (void 0 !== t2) return t2;
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          }
          return e3;
        };
      }
      function n(e3) {
        return (n = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
          return e4.__proto__ || Object.getPrototypeOf(e4);
        })(e3);
      }
      function d(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      }
      function h(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function f(e3, t2, r2) {
        t2 && h(e3.prototype, t2);
      }
      s2.default.Texture = function() {
        function n2(e3, t2, r2) {
          d(this, n2), this._renderer = e3;
          var o3 = this._renderer.GL, r2 = (r2 = r2 || {}, this.src = t2, this.glTex = void 0, this.glTarget = o3.TEXTURE_2D, this.glFormat = r2.format || o3.RGBA, this.mipmaps = false, this.glMinFilter = r2.minFilter || o3.LINEAR, this.glMagFilter = r2.magFilter || o3.LINEAR, this.glWrapS = r2.wrapS || o3.CLAMP_TO_EDGE, this.glWrapT = r2.wrapT || o3.CLAMP_TO_EDGE, this.glDataType = r2.dataType || o3.UNSIGNED_BYTE, m(e3)), e3 = (this.glFormat !== o3.HALF_FLOAT || r2.halfFloat || (console.log("This device does not support dataType HALF_FLOAT. Falling back to FLOAT."), this.glDataType = o3.FLOAT), this.glFormat !== o3.HALF_FLOAT || this.glMinFilter !== o3.LINEAR && this.glMagFilter !== o3.LINEAR || r2.halfFloatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o3.LINEAR && (this.glMinFilter = o3.NEAREST), this.glMagFilter === o3.LINEAR && (this.glMagFilter = o3.NEAREST)), this.glFormat !== o3.FLOAT || r2.float || (console.log("This device does not support dataType FLOAT. Falling back to UNSIGNED_BYTE."), this.glDataType = o3.UNSIGNED_BYTE), this.glFormat !== o3.FLOAT || this.glMinFilter !== o3.LINEAR && this.glMagFilter !== o3.LINEAR || r2.floatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o3.LINEAR && (this.glMinFilter = o3.NEAREST), this.glMagFilter === o3.LINEAR && (this.glMagFilter = o3.NEAREST)), this.isSrcMediaElement = void 0 !== s2.default.MediaElement && t2 instanceof s2.default.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = void 0 !== s2.default.Element && t2 instanceof s2.default.Element && !(t2 instanceof s2.default.Graphics) && !(t2 instanceof s2.default.Renderer), this.isSrcP5Image = t2 instanceof s2.default.Image, this.isSrcP5Graphics = t2 instanceof s2.default.Graphics, this.isSrcP5Renderer = t2 instanceof s2.default.Renderer, this.isImageData = "undefined" != typeof ImageData && t2 instanceof ImageData, this.isFramebufferTexture = t2 instanceof s2.default.FramebufferTexture, this._getTextureDataFromSource());
          return this.width = e3.width, this.height = e3.height, this.init(e3), this;
        }
        return f(n2, [{ key: "_getTextureDataFromSource", value: function() {
          var e3;
          return this.isFramebufferTexture ? e3 = this.src.rawTexture() : this.isSrcP5Image ? e3 = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcP5Renderer || this.isSrcHTMLElement ? (this.src._ensureCanvas && this.src._ensureCanvas(), e3 = this.src.canvas || this.src.elt) : this.isImageData && (e3 = this.src), e3;
        } }, { key: "init", value: function(e3) {
          var t2, r2 = this._renderer.GL;
          this.isFramebufferTexture || (this.glTex = r2.createTexture()), this.glWrapS = this._renderer.textureWrapX, this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), this.bindTexture(), r2.texParameteri(r2.TEXTURE_2D, r2.TEXTURE_MAG_FILTER, this.glMagFilter), r2.texParameteri(r2.TEXTURE_2D, r2.TEXTURE_MIN_FILTER, this.glMinFilter), this.isFramebufferTexture || (0 === this.width || 0 === this.height || this.isSrcMediaElement && !this.src.loadedmetadata ? (t2 = new Uint8Array([1, 1, 1, 1]), r2.texImage2D(this.glTarget, 0, r2.RGBA, 1, 1, 0, this.glFormat, this.glDataType, t2)) : r2.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e3));
        } }, { key: "update", value: function() {
          var e3, t2, r2, o3 = this.src;
          return 0 !== o3.width && 0 !== o3.height && (!this.isFramebufferTexture && (e3 = this._getTextureDataFromSource(), t2 = false, r2 = this._renderer.GL, e3.width !== this.width || e3.height !== this.height ? (t2 = true, this.width = e3.width || o3.width, this.height = e3.height || o3.height, this.isSrcP5Image ? o3.setModified(false) : (this.isSrcMediaElement || this.isSrcHTMLElement) && o3.setModified(true)) : this.isSrcP5Image ? o3.isModified() && o3.setModified(!(t2 = true)) : this.isSrcMediaElement ? o3.isModified() ? o3.setModified(!(t2 = true)) : o3.loadedmetadata && this._videoPrevUpdateTime !== o3.time() && (this._videoPrevUpdateTime = o3.time(), t2 = true) : this.isImageData ? o3._dirty && (t2 = !(o3._dirty = false)) : t2 = true, t2 && (this.bindTexture(), r2.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e3)), t2));
        } }, { key: "bindTexture", value: function() {
          return this._renderer.GL.bindTexture(this.glTarget, this.getTexture()), this;
        } }, { key: "unbindTexture", value: function() {
          this._renderer.GL.bindTexture(this.glTarget, null);
        } }, { key: "getTexture", value: function() {
          return this.isFramebufferTexture ? this.src.rawTexture() : this.glTex;
        } }, { key: "setInterpolation", value: function(e3, t2) {
          var r2 = this._renderer.GL;
          this.glMinFilter = this.glFilter(e3), this.glMagFilter = this.glFilter(t2), this.bindTexture(), r2.texParameteri(r2.TEXTURE_2D, r2.TEXTURE_MIN_FILTER, this.glMinFilter), r2.texParameteri(r2.TEXTURE_2D, r2.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
        } }, { key: "glFilter", value: function(e3) {
          var t2 = this._renderer.GL;
          return e3 === a2.NEAREST ? t2.NEAREST : t2.LINEAR;
        } }, { key: "setWrapMode", value: function(e3, t2) {
          function r2(e4) {
            return 0 == (e4 & e4 - 1);
          }
          var o3 = this._renderer.GL, n3 = this._getTextureDataFromSource(), n3 = n3.naturalWidth && n3.naturalHeight ? (s3 = n3.naturalWidth, n3.naturalHeight) : (s3 = this.width, this.height), s3 = r2(s3), n3 = r2(n3);
          e3 === a2.REPEAT ? this._renderer.webglVersion === a2.WEBGL2 || s3 && n3 ? this.glWrapS = o3.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o3.CLAMP_TO_EDGE) : e3 === a2.MIRROR ? this._renderer.webglVersion === a2.WEBGL2 || s3 && n3 ? this.glWrapS = o3.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o3.CLAMP_TO_EDGE) : this.glWrapS = o3.CLAMP_TO_EDGE, t2 === a2.REPEAT ? this._renderer.webglVersion === a2.WEBGL2 || s3 && n3 ? this.glWrapT = o3.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o3.CLAMP_TO_EDGE) : t2 === a2.MIRROR ? this._renderer.webglVersion === a2.WEBGL2 || s3 && n3 ? this.glWrapT = o3.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o3.CLAMP_TO_EDGE) : this.glWrapT = o3.CLAMP_TO_EDGE, this.bindTexture(), o3.texParameteri(o3.TEXTURE_2D, o3.TEXTURE_WRAP_S, this.glWrapS), o3.texParameteri(o3.TEXTURE_2D, o3.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
        } }]), n2;
      }();
      var p = function(e3) {
        var t2 = n2;
        if ("function" != typeof e3 && null !== e3) throw new TypeError("Super expression must either be null or a function");
        t2.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t2, writable: true, configurable: true } }), e3 && u(t2, e3);
        var o3 = c(n2);
        function n2(e4, t3, r2) {
          d(this, n2);
          t3 = (e4 = o3.call(this, e4, t3, r2))._renderer.GL;
          return e4.glMinFilter === t3.LINEAR && (e4.glMinFilter = t3.LINEAR_MIPMAP_LINEAR), e4;
        }
        return f(n2, [{ key: "glFilter", value: function(e4) {
          return this._renderer.GL.LINEAR_MIPMAP_LINEAR;
        } }, { key: "_getTextureDataFromSource", value: function() {
          return this.src;
        } }, { key: "init", value: function(e4) {
          var t3 = this._renderer.GL;
          this.glTex = t3.createTexture(), this.bindTexture();
          for (var r2 = 0; r2 < e4.length; r2++) t3.texImage2D(this.glTarget, r2, this.glFormat, this.glFormat, this.glDataType, e4[r2]);
          this.glMinFilter = t3.LINEAR_MIPMAP_LINEAR, t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_MAG_FILTER, this.glMagFilter), t3.texParameteri(t3.TEXTURE_2D, t3.TEXTURE_MIN_FILTER, this.glMinFilter), this.unbindTexture();
        } }, { key: "update", value: function() {
        } }]), n2;
      }(s2.default.Texture);
      function m(e3) {
        var t2 = e3.GL, e3 = e3.webglVersion, r2 = e3 === a2.WEBGL2 ? t2.getExtension("EXT_color_buffer_float") && t2.getExtension("EXT_float_blend") : t2.getExtension("OES_texture_float"), o3 = r2 && t2.getExtension("OES_texture_float_linear"), e3 = e3 === a2.WEBGL2 ? t2.getExtension("EXT_color_buffer_float") : t2.getExtension("OES_texture_half_float");
        return { float: r2, floatLinear: o3, halfFloat: e3, halfFloatLinear: e3 && t2.getExtension("OES_texture_half_float_linear") };
      }
      r.MipmapTexture = p;
      e2 = s2.default.Texture;
      r.default = e2;
    }, { "../core/constants": 272, "../core/main": 283, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.get-prototype-of": 188, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.reflect.construct": 192, "core-js/modules/es.regexp.to-string": 196, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.typed-array.copy-within": 213, "core-js/modules/es.typed-array.every": 214, "core-js/modules/es.typed-array.fill": 215, "core-js/modules/es.typed-array.filter": 216, "core-js/modules/es.typed-array.find": 218, "core-js/modules/es.typed-array.find-index": 217, "core-js/modules/es.typed-array.for-each": 221, "core-js/modules/es.typed-array.includes": 222, "core-js/modules/es.typed-array.index-of": 223, "core-js/modules/es.typed-array.iterator": 226, "core-js/modules/es.typed-array.join": 227, "core-js/modules/es.typed-array.last-index-of": 228, "core-js/modules/es.typed-array.map": 229, "core-js/modules/es.typed-array.reduce": 231, "core-js/modules/es.typed-array.reduce-right": 230, "core-js/modules/es.typed-array.reverse": 232, "core-js/modules/es.typed-array.set": 233, "core-js/modules/es.typed-array.slice": 234, "core-js/modules/es.typed-array.some": 235, "core-js/modules/es.typed-array.sort": 236, "core-js/modules/es.typed-array.subarray": 237, "core-js/modules/es.typed-array.to-locale-string": 238, "core-js/modules/es.typed-array.to-string": 239, "core-js/modules/es.typed-array.uint8-array": 242, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }], 344: [function(e2, t, r) {
      function o(e3) {
        return (o = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
          return typeof e4;
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
        })(e3);
      }
      function i(e3) {
        return (i = "function" == typeof Symbol && "symbol" === o(Symbol.iterator) ? function(e4) {
          return o(e4);
        } : function(e4) {
          return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : o(e4);
        })(e3);
      }
      e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.get-own-property-descriptor"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/es.weak-map"), e2("core-js/modules/web.dom-collections.iterator"), e2("core-js/modules/es.symbol"), e2("core-js/modules/es.symbol.description"), e2("core-js/modules/es.symbol.iterator"), e2("core-js/modules/es.array.iterator"), e2("core-js/modules/es.object.to-string"), e2("core-js/modules/es.regexp.exec"), e2("core-js/modules/es.string.iterator"), e2("core-js/modules/es.string.split"), e2("core-js/modules/es.string.sub"), e2("core-js/modules/web.dom-collections.iterator");
      var n, B = (n = e2("../core/main")) && n.__esModule ? n : { default: n }, E = function(e3) {
        if (e3 && e3.__esModule) return e3;
        if (null === e3 || "object" !== i(e3) && "function" != typeof e3) return { default: e3 };
        var t2 = a2();
        if (t2 && t2.has(e3)) return t2.get(e3);
        var r2, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (r2 in e3) {
          var s3;
          Object.prototype.hasOwnProperty.call(e3, r2) && ((s3 = n2 ? Object.getOwnPropertyDescriptor(e3, r2) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r2, s3) : o3[r2] = e3[r2]);
        }
        o3.default = e3, t2 && t2.set(e3, o3);
        return o3;
      }(e2("../core/constants"));
      function a2() {
        var e3;
        return "function" != typeof WeakMap ? null : (e3 = /* @__PURE__ */ new WeakMap(), a2 = function() {
          return e3;
        }, e3);
      }
      function G(e3, t2) {
        if (!(e3 instanceof t2)) throw new TypeError("Cannot call a class as a function");
      }
      function s2(e3, t2) {
        for (var r2 = 0; r2 < t2.length; r2++) {
          var o3 = t2[r2];
          o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
        }
      }
      function V(e3, t2, r2) {
        t2 && s2(e3.prototype, t2);
      }
      e2("./p5.Shader"), e2("./p5.RendererGL.Retained"), B.default.RendererGL.prototype._applyTextProperties = function() {
        this._setProperty("_textAscent", null), this._setProperty("_textDescent", null);
      }, B.default.RendererGL.prototype.textWidth = function(e3) {
        return this._isOpenType() ? this._textFont._textWidth(e3, this._textSize) : 0;
      };
      var l = function() {
        function r2(e3, t2) {
          G(this, r2), this.width = e3, this.height = t2, this.infos = [];
        }
        return V(r2, [{ key: "findImage", value: function(e3) {
          var t2, r3, o3 = this.width * this.height;
          if (o3 < e3) throw new Error("font is too complex to render in 3D");
          for (var n2 = this.infos.length - 1; 0 <= n2; --n2) {
            var s3 = this.infos[n2];
            if (s3.index + e3 < o3) {
              r3 = (t2 = s3).imageData;
              break;
            }
          }
          if (!t2) {
            try {
              r3 = new ImageData(this.width, this.height);
            } catch (e4) {
              var i2 = document.getElementsByTagName("canvas")[0], a3 = !i2, l2 = (i2 || ((i2 = document.createElement("canvas")).style.display = "none", document.body.appendChild(i2)), i2.getContext("2d"));
              l2 && (r3 = l2.createImageData(this.width, this.height)), a3 && document.body.removeChild(i2);
            }
            this.infos.push(t2 = { index: 0, imageData: r3 });
          }
          l2 = t2.index;
          return t2.index += e3, r3._dirty = true, { imageData: r3, index: l2 };
        } }]), r2;
      }();
      function z(e3, t2, r2, o3, n2) {
        var s3 = e3.imageData.data, e3 = 4 * e3.index++;
        s3[e3++] = t2, s3[e3++] = r2, s3[e3++] = o3, s3[+e3] = n2;
      }
      var H = Math.sqrt(3), M = function() {
        function t2(e3) {
          G(this, t2), this.font = e3, this.strokeImageInfos = new l(64, 64), this.colDimImageInfos = new l(64, 64), this.rowDimImageInfos = new l(64, 64), this.colCellImageInfos = new l(64, 64), this.rowCellImageInfos = new l(64, 64), this.glyphInfos = {};
        }
        return V(t2, [{ key: "getGlyphInfo", value: function(e3) {
          var t3 = this.glyphInfos[e3.index];
          if (!t3) {
            var r2 = e3.getBoundingBox(), o3 = r2.x1, n2 = r2.y1, s3 = r2.x2 - o3, i2 = r2.y2 - n2, a3 = e3.path.commands;
            if (0 == s3 || 0 == i2 || !a3.length) return this.glyphInfos[e3.index] = {};
            for (var u = [], c = [], d = [], l2 = 8; 0 <= l2; --l2) d.push([]);
            for (l2 = 8; 0 <= l2; --l2) c.push([]);
            var h, f, p, m, D = function() {
              function n3(e4, t4, r3, o4) {
                G(this, n3), this.p0 = e4, this.c0 = t4, this.c1 = r3, this.p1 = o4;
              }
              return V(n3, [{ key: "toQuadratic", value: function() {
                return { x: this.p0.x, y: this.p0.y, x1: this.p1.x, y1: this.p1.y, cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4, cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4 };
              } }, { key: "quadError", value: function() {
                return B.default.Vector.sub(B.default.Vector.sub(this.p1, this.p0), B.default.Vector.mult(B.default.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
              } }, { key: "split", value: function(e4) {
                var t4 = B.default.Vector.lerp(this.p0, this.c0, e4), r3 = B.default.Vector.lerp(this.c0, this.c1, e4), o4 = B.default.Vector.lerp(t4, r3, e4), r3 = (this.c1 = B.default.Vector.lerp(this.c1, this.p1, e4), this.c0 = B.default.Vector.lerp(r3, this.c1, e4), B.default.Vector.lerp(o4, this.c0, e4)), e4 = new n3(this.p0, t4, o4, r3);
                return this.p0 = r3, e4;
              } }, { key: "splitInflections", value: function() {
                var e4 = B.default.Vector.sub(this.c0, this.p0), t4 = B.default.Vector.sub(B.default.Vector.sub(this.c1, this.c0), e4), r3 = B.default.Vector.sub(B.default.Vector.sub(B.default.Vector.sub(this.p1, this.c1), e4), B.default.Vector.mult(t4, 2)), o4 = [], n4 = t4.x * r3.y - t4.y * r3.x;
                return 0 !== n4 && 0 <= (e4 = (r3 = e4.x * r3.y - e4.y * r3.x) * r3 - 4 * n4 * (e4.x * t4.y - e4.y * t4.x)) && (n4 < 0 && (n4 = -n4, r3 = -r3, 0), e4 = (-r3 + (t4 = Math.sqrt(e4))) / (2 * n4), 0 < (r3 = (-r3 - t4) / (2 * n4)) && r3 < 1 && (o4.push(this.split(r3)), e4 = 1 - (1 - e4) / (1 - r3)), 0 < e4 && e4 < 1 && o4.push(this.split(e4))), o4.push(this), o4;
              } }]), n3;
            }(), y = true, g = false, v = void 0;
            try {
              for (var b, _ = a3[Symbol.iterator](); !(y = (b = _.next()).done); y = true) {
                var j = b.value, x2 = (j.x - o3) / s3, w = (j.y - n2) / i2;
                if (!U(h, f, x2, w)) {
                  switch (j.type) {
                    case "M":
                      p = x2, m = w;
                      break;
                    case "L":
                      I(h, f, x2, w);
                      break;
                    case "Q":
                      var S = (j.x1 - o3) / s3, T = (j.y1 - n2) / i2;
                      L([h, x2, S], [f, w, T], { x: h, y: f, cx: S, cy: T });
                      break;
                    case "Z":
                      U(h, f, p, m) ? u.push({ x: h, y: f }) : (I(h, f, p, m), u.push({ x: p, y: m }));
                      break;
                    case "C":
                      for (var E2 = function(e4, t4, r3, o4, n3, s4, i3, a4) {
                        var e4 = new D(new B.default.Vector(e4, t4), new B.default.Vector(r3, o4), new B.default.Vector(n3, s4), new B.default.Vector(i3, a4)).splitInflections(), l3 = [], u2 = 30 / H, c2 = true, t4 = false, r3 = void 0;
                        try {
                          for (var d2, h2 = e4[Symbol.iterator](); !(c2 = (d2 = h2.next()).done); c2 = true) {
                            for (var f2 = d2.value, p2 = [], m2 = void 0; !(0.125 <= (m2 = u2 / f2.quadError())); ) {
                              var y2 = Math.pow(m2, 1 / 3), g2 = f2.split(y2), v2 = f2.split(1 - y2 / (1 - y2));
                              l3.push(g2), p2.push(f2), f2 = v2;
                            }
                            m2 < 1 && l3.push(f2.split(0.5)), l3.push(f2), Array.prototype.push.apply(l3, p2.reverse());
                          }
                        } catch (e5) {
                          t4 = true, r3 = e5;
                        } finally {
                          try {
                            c2 || null == h2.return || h2.return();
                          } finally {
                            if (t4) throw r3;
                          }
                        }
                        return l3;
                      }(h, f, (j.x1 - o3) / s3, (j.y1 - n2) / i2, (j.x2 - o3) / s3, (j.y2 - n2) / i2, x2, w), M2 = 0; M2 < E2.length; M2++) {
                        var k = E2[M2].toQuadratic();
                        L([k.x, k.x1, k.cx], [k.y, k.y1, k.cy], k);
                      }
                      break;
                    default:
                      throw new Error("unknown command type: ".concat(j.type));
                  }
                  h = x2, f = w;
                }
              }
            } catch (e4) {
              g = true, v = e4;
            } finally {
              try {
                y || null == _.return || _.return();
              } finally {
                if (g) throw v;
              }
            }
            for (var O = u.length, C = this.strokeImageInfos.findImage(O), F = C.index, A = 0; A < O; ++A) {
              var P = u[A];
              z(C, R(P.x), R(P.y), R(P.cx), R(P.cy));
            }
            (t3 = this.glyphInfos[e3.index] = { glyph: e3, uGlyphRect: [r2.x1, -r2.y1, r2.x2, -r2.y2], strokeImageInfo: C, strokes: u, colInfo: N(d, this.colDimImageInfos, this.colCellImageInfos), rowInfo: N(c, this.rowDimImageInfos, this.rowCellImageInfos) }).uGridOffset = [t3.colInfo.dimOffset, t3.rowInfo.dimOffset];
          }
          return t3;
          function L(e4, t4, r3) {
            var o4 = u.length;
            function n3(e5, t5, r4) {
              for (var o5 = e5.length; 0 < o5--; ) {
                var n4 = e5[o5];
                n4 < t5 && (t5 = n4), r4 < n4 && (r4 = n4);
              }
              return { min: t5, max: r4 };
            }
            u.push(r3);
            for (var r3 = n3(e4, 1, 0), e4 = Math.max(Math.floor(9 * r3.min - 0.5), 0), s4 = Math.min(Math.ceil(9 * r3.max + 0.5), 9), i3 = e4; i3 < s4; ++i3) d[i3].push(o4);
            for (var r3 = n3(t4, 1, 0), e4 = Math.max(Math.floor(9 * r3.min - 0.5), 0), a4 = Math.min(Math.ceil(9 * r3.max + 0.5), 9), l3 = e4; l3 < a4; ++l3) c[l3].push(o4);
          }
          function R(e4) {
            return (e4 = (r3 = 255) * e4) < (t4 = 0) ? t4 : r3 < e4 ? r3 : e4;
            var t4, r3;
          }
          function I(e4, t4, r3, o4) {
            L([e4, r3], [t4, o4], { x: e4, y: t4, cx: (e4 + r3) / 2, cy: (t4 + o4) / 2 });
          }
          function U(e4, t4, r3, o4) {
            return Math.abs(r3 - e4) < 1e-5 && Math.abs(o4 - t4) < 1e-5;
          }
          function N(e4, t4, r3) {
            for (var o4 = e4.length, n3 = t4.findImage(o4), t4 = n3.index, s4 = 0, i3 = 0; i3 < o4; ++i3) s4 += e4[i3].length;
            for (var a4 = r3.findImage(s4), l3 = 0; l3 < o4; ++l3) {
              var u2 = e4[l3], c2 = u2.length, d2 = a4.index;
              z(n3, d2 >> 7, 127 & d2, c2 >> 7, 127 & c2);
              for (var h2 = 0; h2 < c2; ++h2) {
                var f2 = u2[h2] + F;
                z(a4, f2 >> 7, 127 & f2, 0, 0);
              }
            }
            return { cellImageInfo: a4, dimOffset: t4, dimImageInfo: n3 };
          }
        } }]), t2;
      }();
      B.default.RendererGL.prototype._renderText = function(e3, t2, r2, o3, n2) {
        if (this._textFont && "string" != typeof this._textFont) {
          if (!(n2 <= o3) && this._doFill) {
            if (this._isOpenType()) {
              e3.push();
              var n2 = this._doStroke, s3 = this.drawMode, i2 = (this._doStroke = false, this.drawMode = E.TEXTURE, this._textFont.font), a3 = (a3 = this._textFont._fontInfo) || (this._textFont._fontInfo = new M(i2)), r2 = this._textFont._handleAlignment(this, t2, r2, o3), o3 = this._textSize / i2.unitsPerEm, l2 = (this.translate(r2.x, r2.y, 0), this.scale(o3, o3, 1), this.GL), r2 = !this._defaultFontShader, u = this._getFontShader(), c = (u.init(), u.bindShader(), r2 && (u.setUniform("uGridImageSize", [64, 64]), u.setUniform("uCellsImageSize", [64, 64]), u.setUniform("uStrokeImageSize", [64, 64]), u.setUniform("uGridSize", [9, 9])), this._applyColorBlend(this.curFillColor), this.retainedMode.geometry.glyph), d = (c || ((o3 = this._textGeom = new B.default.Geometry(1, 1, function() {
                for (var e4 = 0; e4 <= 1; e4++) for (var t3 = 0; t3 <= 1; t3++) this.vertices.push(new B.default.Vector(t3, e4, 0)), this.uvs.push(t3, e4);
              })).computeFaces().computeNormals(), c = this.createBuffers("glyph", o3)), true), r2 = false, o3 = void 0;
              try {
                for (var h, f = this.retainedMode.buffers.text[Symbol.iterator](); !(d = (h = f.next()).done); d = true) h.value._prepareBuffer(c, u);
              } catch (e4) {
                r2 = true, o3 = e4;
              } finally {
                try {
                  d || null == f.return || f.return();
                } finally {
                  if (r2) throw o3;
                }
              }
              this._bindBuffer(c.indexBuffer, l2.ELEMENT_ARRAY_BUFFER), u.setUniform("uMaterialColor", this.curFillColor), l2.pixelStorei(l2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
              try {
                var p = 0, m = null, y = i2.stringToGlyphs(t2), g = true, v = false, b = void 0;
                try {
                  for (var _, j = y[Symbol.iterator](); !(g = (_ = j.next()).done); g = true) {
                    var x2, w, S = _.value, T = (m && (p += i2.getKerningValue(m, S)), a3.getGlyphInfo(S));
                    T.uGlyphRect && (x2 = T.rowInfo, w = T.colInfo, u.setUniform("uSamplerStrokes", T.strokeImageInfo.imageData), u.setUniform("uSamplerRowStrokes", x2.cellImageInfo.imageData), u.setUniform("uSamplerRows", x2.dimImageInfo.imageData), u.setUniform("uSamplerColStrokes", w.cellImageInfo.imageData), u.setUniform("uSamplerCols", w.dimImageInfo.imageData), u.setUniform("uGridOffset", T.uGridOffset), u.setUniform("uGlyphRect", T.uGlyphRect), u.setUniform("uGlyphOffset", p), u.bindTextures(), l2.drawElements(l2.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0)), p += S.advanceWidth, m = S;
                  }
                } catch (e4) {
                  v = true, b = e4;
                } finally {
                  try {
                    g || null == j.return || j.return();
                  } finally {
                    if (v) throw b;
                  }
                }
              } finally {
                u.unbindShader(), this._doStroke = n2, this.drawMode = s3, l2.pixelStorei(l2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true), e3.pop();
              }
            } else console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported");
            return e3;
          }
        } else console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");
      };
    }, { "../core/constants": 272, "../core/main": 283, "./p5.RendererGL.Retained": 340, "./p5.Shader": 342, "core-js/modules/es.array.iterator": 165, "core-js/modules/es.object.get-own-property-descriptor": 186, "core-js/modules/es.object.to-string": 190, "core-js/modules/es.regexp.exec": 195, "core-js/modules/es.string.iterator": 200, "core-js/modules/es.string.split": 206, "core-js/modules/es.string.sub": 208, "core-js/modules/es.symbol": 212, "core-js/modules/es.symbol.description": 210, "core-js/modules/es.symbol.iterator": 211, "core-js/modules/es.weak-map": 244, "core-js/modules/web.dom-collections.iterator": 246 }] }, {}, [267])(267);
  });
})(p5_min);
var p5_minExports = p5_min.exports;
const p5 = /* @__PURE__ */ getDefaultExportFromCjs(p5_minExports);
class P5Element extends Component {
  constructor(id, state, emit) {
    super(id);
    this.local = state.components[id] = {};
    this.state = state;
    this.emit = emit;
  }
  load(element) {
    const p = this.sketch();
    this.state.p5 = p;
    p.chooState = this.state;
    const polling = () => {
      if (p.canvas === void 0) {
        console.log("canvas not found, retrying");
        setInterval(polling, 1e3);
      } else {
        element.appendChild(p.canvas);
        p.parentElement = element;
      }
    };
    polling();
  }
  sketch() {
    const s = (p) => {
      p.setup = () => {
        p.createCanvas(window.innerWidth, window.innerHeight);
      };
      p.draw = () => {
        p.clear();
        p.fill("crimson");
        p.text("test", 50, 50);
      };
    };
    return new p5(s);
  }
  update(center) {
    return false;
  }
  createElement({ width = window.innerWidth, height = window.innerHeight } = {}) {
    return html$1`
      <div class="relative z-0 w-screen h-screen">
      </div>
    `;
  }
}
class DrawerElement extends P5Element {
  constructor(id, state, emit) {
    super(id, state, emit);
  }
  sketch() {
    const pointsData = [
      { x: 0, y: -0.2, parent: -1 },
      // head
      { x: -0.3, y: -0.1, parent: -1 },
      // left shoulder (from screen view)
      { x: -0.2, y: -0.4, parent: 1 },
      { x: 0.2, y: -0.1, parent: -1 },
      // right shoulder
      { x: 0.4, y: -0.4, parent: 3 },
      { x: 0.3, y: 0.1, parent: -1 },
      // right thigh
      { x: 0.4, y: 0.2, parent: 5 },
      { x: -0.1, y: 0.2, parent: -1 },
      // left thigh
      { x: 0, y: 0.4, parent: 7 }
    ];
    const initialPoints = [];
    const points = [];
    const stems = [3, 5, 7, 1, 0];
    const parent = pointsData.map((e2) => e2.parent);
    let captured = -1;
    let centroid;
    let centroidLast;
    let hIndex = 0;
    const s = (p) => {
      p.setup = () => {
        p.createCanvas(window.innerWidth, window.innerHeight);
        p.pixelDensity(1);
        const sc = 0.3;
        initialPoints.push(...pointsData.map((pt) => p.createVector(pt.x * sc, pt.y * sc)));
        points.push(...pointsData.map((pt) => p.createVector(pt.x * sc, pt.y * sc)));
      };
      p.draw = () => {
        p.clear();
        const T = p.millis() * 1e-3;
        p.curveTightness(0);
        const R = Math.min(p.width, p.height);
        p.translate(p.width / 2, p.height / 2);
        for (let i = 0; i < points.length; i++) {
          const nv = p5.Vector.fromAngle((p.noise(T * 0.3, i * 0.1) - 0.5) * Math.PI * 2);
          nv.setMag((p.noise(i * 0.1, T * 0.3) - 0.5) * 1e-3);
          initialPoints[i].add(nv);
          const m = 0.45;
          if (initialPoints[i].x > m) initialPoints[i].x = m;
          if (initialPoints[i].x < -m) initialPoints[i].x = -m;
          if (initialPoints[i].y > m) initialPoints[i].y = m;
          if (initialPoints[i].y < -m) initialPoints[i].y = -m;
          const v = p5.Vector.sub(points[i], initialPoints[i]);
          v.limit(8e-4);
          points[i].sub(v);
        }
        centroid = stems.reduce((acc, cur) => p5.Vector.add(acc, points[cur]), p.createVector(0, 0));
        centroid.div(stems.length);
        p.chooState.centroid = { x: centroid.x, y: centroid.y };
        p.push();
        {
          const gradient2 = p.drawingContext.createRadialGradient(
            centroid.x * R,
            centroid.y * R,
            R * 0.1,
            points[0].x * R,
            points[0].y * R,
            R
          );
          gradient2.addColorStop(0, `hsl(${hIndex * 40 % 360}deg, 100%, 50%, 0.9)`);
          gradient2.addColorStop(1, `hsl(${(hIndex * 40 + 90) % 360}deg, 100%, 50%, 0.2)`);
          p.drawingContext.fillStyle = gradient2;
          p.stroke(0);
          p.strokeWeight(2);
          p.beginShape();
          let first;
          let second;
          let third;
          for (const idx of stems) {
            const pt = points[idx];
            const childIdx = parent.findIndex((e2) => e2 == idx);
            const childP = points[childIdx];
            const v = p5.Vector.sub(pt, centroid);
            const vv = v.copy();
            vv.normalize();
            let vc;
            if (childP !== void 0) {
              vc = p5.Vector.sub(childP, v);
              vc.normalize();
              const a0 = vv.heading();
              const a1 = vc.heading();
              vv.rotate((a1 - a0) / 2);
              vc.rotate(-Math.PI / 2);
            }
            const thickness = 0.02;
            vv.rotate(-Math.PI / 2);
            p.curveVertex(
              (pt.x + vv.x * thickness) * R,
              (pt.y + vv.y * thickness) * R
            );
            if (first === void 0) {
              first = p.createVector(
                (pt.x + vv.x * thickness) * R,
                (pt.y + vv.y * thickness) * R
              );
            }
            vv.rotate(Math.PI / 2);
            if (childP !== void 0) {
              p.curveVertex(
                (childP.x + vc.x * thickness) * R,
                (childP.y + vc.y * thickness) * R
              );
              if (second === void 0) {
                second = p.createVector(
                  (childP.x + vc.x * thickness) * R,
                  (childP.y + vc.y * thickness) * R
                );
              }
              vc.rotate(Math.PI / 2);
              p.curveVertex(
                (childP.x + vc.x * thickness) * R,
                (childP.y + vc.y * thickness) * R
              );
              if (third === void 0) {
                third = p.createVector(
                  (childP.x + vc.x * thickness) * R,
                  (childP.y + vc.y * thickness) * R
                );
              }
              vc.rotate(Math.PI / 2);
              p.curveVertex(
                (childP.x + vc.x * thickness) * R,
                (childP.y + vc.y * thickness) * R
              );
            } else {
              p.curveVertex(
                (pt.x + vv.x * thickness) * R,
                (pt.y + vv.y * thickness) * R
              );
            }
            vv.rotate(Math.PI / 2);
            p.curveVertex(
              (pt.x + vv.x * thickness) * R,
              (pt.y + vv.y * thickness) * R
            );
          }
          p.curveVertex(first.x, first.y);
          p.curveVertex(second.x, second.y);
          p.curveVertex(third.x, third.y);
          p.endShape();
        }
        p.pop();
        for (const pt of points) {
          p.noStroke();
          const x2 = pt.x * R;
          const y = pt.y * R;
          p.circle(x2, y, R * 0.02);
        }
        p.push();
        {
          p.noStroke();
          const x2 = centroid.x * R;
          const y = centroid.y * R;
          p.translate(x2, y);
          const r = R * 0.07 * p.map(Math.sin(T * Math.PI * 2 * 0.1), -1, 1, 0.5, 1);
          p.fill(0, 200);
          p.circle(R * 1e-3, R * 1e-3, r * 1.002);
          p.fill("red");
          p.circle(0, 0, r);
        }
        p.pop();
        let _ii = Math.floor(p.map(centroid.x, -0.5, 0.5, 0, 3, true));
        let _jj = Math.floor(p.map(centroid.y, -0.5, 0.5, 0, 3, true));
        let ii = _ii + _jj * 3;
        if (hIndex !== ii) {
          hIndex = ii;
          this.emit("set asset", hIndex);
        }
      };
      p.windowResized = () => {
        p.resizeCanvas(p.parentElement.clientWidth, p.parentElement.clientHeight);
      };
      function pressed() {
        const R = Math.min(p.width, p.height);
        const m = p.createVector((p.mouseX - p.width / 2) / R, (p.mouseY - p.height / 2) / R);
        if (centroid !== void 0 && centroid.dist(m) * R < 30) {
          captured = points.length;
          centroidLast = m;
          return;
        }
        for (let i = 0; i < points.length; i++) {
          if (points[i].dist(m) * R < 30) {
            captured = i;
            points[i].set(m.x, m.y);
            break;
          }
        }
      }
      p.mousePressed = () => {
        pressed();
      };
      p.touchStarted = () => {
        pressed();
      };
      function moved() {
        const R = Math.min(p.width, p.height);
        const m = p.createVector((p.mouseX - p.width / 2) / R, (p.mouseY - p.height / 2) / R);
        if (captured == points.length) {
          for (let i = 0; i < points.length; i++) {
            points[i].add(p5.Vector.sub(m, centroidLast));
          }
          centroidLast = m;
        } else if (captured >= 0) {
          points[captured].set(m.x, m.y);
        }
      }
      p.mouseDragged = () => {
        moved();
      };
      p.touchMoved = () => {
        moved();
      };
      function released() {
        captured = -1;
      }
      p.mouseReleased = () => {
        released();
      };
    };
    return new p5(s);
  }
}
function main(state, emit) {
  return html$1`
    <div class="absolute left-0 top-0 w-screen h-screen">
      <div class="absolute left-0 top-0 z-[-2] w-screen h-screen">
        ${state.cache(Map$1, "my-hydra").render(state, emit)}
      </div>
      <div class="absolute left-0 top-0 z-[-1] w-screen h-screen">
        ${state.cache(DrawerElement, "my-draw").render(state, emit)}
      </div>
      <button class="absolute left-2 top-2 text-xl" onclick=${question}>ℹ️</button>
      <div class="w-full flex flex-col items-center text-center justify-end h-screen">
        <div class="text-4xl font-bold bg-white/80 mb-24 uppercase">
          ${state.cache(TextTweenElement, "my-text").render(state, emit)}
        </div>
      </div>
      <div class="absolute left-0 top-0 z-10 border-2 border-black bg-white m-2 p-2 ${state.showModal ? "" : "hidden"}">
        <button class="text-xl" onclick=${hideModal}>❎</button>
        <div class="font-bold">Rubber Band Tensions</div>
        <div>Drag the blobby body to explore tensions :)</div>
        <div class="font-bold">Content by:</div>
        <div><a href="https://annabrynskov.com/" target="_blank">Anna Brynskov</a></div>
        <div><a href="https://joanachicau.com/" target="_blank">Joana Chicau</a></div>
        <div>Sophie Grimme</div>
        <div><a href="https://naotohieda.com" target="_blank">Naoto Hieda</a></div>
        <div class="font-bold">Web version by:</div>
        <div><a href="https://naotohieda.com" target="_blank">Naoto Hieda</a></div>
        <div class="font-bold">Made at:</div>
        <div><a href="https://bodypoliticschi.wordpress.com/" target="_blank">Body Politics Workshop 2025</a></div>
      </div>
    </div>
  `;
  function question(e2) {
    e2.preventDefault();
    state.showModal = !state.showModal;
    emit("render");
  }
  function hideModal(e2) {
    if (state.showModal) {
      state.showModal = false;
      emit("render");
    }
  }
}
const app = choo$1({ hash: true });
app.use(machine);
app.route("/*", notFound);
function notFound() {
  return html$1`
    <div>
      <a href="/">
        404 with love ❤ back to top!
      </a>
    </div>
  `;
}
app.route("/", main);
app.mount("#choomount");
